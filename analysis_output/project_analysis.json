{
  "project_name": "",
  "project_path": ".",
  "analysis_date": "2025-10-20T10:12:04.277304",
  "analysis_status": "completed",
  "file_structure": {
    "all_files": [
      {
        "path": ".dockerignore",
        "size": 715,
        "extension": "",
        "modified": "2025-10-20T02:15:36.195084"
      },
      {
        "path": ".mcp.json",
        "size": 3117,
        "extension": ".json",
        "modified": "2025-10-20T08:09:46.031599"
      },
      {
        "path": "app.py",
        "size": 15611,
        "extension": ".py",
        "modified": "2025-10-20T10:06:04.781011"
      },
      {
        "path": "CLAUDE.md",
        "size": 17725,
        "extension": ".md",
        "modified": "2025-10-20T08:07:23.011708"
      },
      {
        "path": "docker-compose.dev.yml",
        "size": 2061,
        "extension": ".yml",
        "modified": "2025-10-20T02:23:39.538042"
      },
      {
        "path": "docker-compose.yml",
        "size": 4622,
        "extension": ".yml",
        "modified": "2025-10-20T09:29:07.717843"
      },
      {
        "path": "Dockerfile",
        "size": 3363,
        "extension": "",
        "modified": "2025-10-20T09:28:28.699342"
      },
      {
        "path": "FINAL_SUMMARY.md",
        "size": 16128,
        "extension": ".md",
        "modified": "2025-10-20T09:01:34.010228"
      },
      {
        "path": "Makefile",
        "size": 3158,
        "extension": "",
        "modified": "2025-10-20T02:15:36.198065"
      },
      {
        "path": "MODERNE_UI_ANLEITUNG.md",
        "size": 5031,
        "extension": ".md",
        "modified": "2025-10-20T09:15:54.359228"
      },
      {
        "path": "package.json",
        "size": 522,
        "extension": ".json",
        "modified": "2025-10-20T09:26:59.916139"
      },
      {
        "path": "PRODUCTION_READY.md",
        "size": 10218,
        "extension": ".md",
        "modified": "2025-10-20T09:30:44.251041"
      },
      {
        "path": "PROGRESS_REPORT.md",
        "size": 8282,
        "extension": ".md",
        "modified": "2025-10-20T08:46:10.056210"
      },
      {
        "path": "pytest.ini",
        "size": 524,
        "extension": ".ini",
        "modified": "2025-10-20T02:15:36.196592"
      },
      {
        "path": "QUICK_START.md",
        "size": 4321,
        "extension": ".md",
        "modified": "2025-10-20T09:42:42.341318"
      },
      {
        "path": "README.md",
        "size": 11500,
        "extension": ".md",
        "modified": "2025-10-20T03:15:49.375580"
      },
      {
        "path": "requirements.txt",
        "size": 608,
        "extension": ".txt",
        "modified": "2025-10-20T03:15:49.358772"
      },
      {
        "path": "SESSION_SUMMARY.md",
        "size": 9179,
        "extension": ".md",
        "modified": "2025-10-20T08:50:28.702102"
      },
      {
        "path": "start.sh",
        "size": 856,
        "extension": ".sh",
        "modified": "2025-10-20T03:15:49.373969"
      },
      {
        "path": "start_local.bat",
        "size": 564,
        "extension": ".bat",
        "modified": "2025-10-20T05:32:54.190184"
      },
      {
        "path": "start_modern_ui.bat",
        "size": 828,
        "extension": ".bat",
        "modified": "2025-10-20T09:23:47.766279"
      },
      {
        "path": "start_production.bat",
        "size": 3984,
        "extension": ".bat",
        "modified": "2025-10-20T09:29:31.979930"
      },
      {
        "path": "stop.bat",
        "size": 1697,
        "extension": ".bat",
        "modified": "2025-10-20T09:29:45.625463"
      },
      {
        "path": "streamlit_app_modern.py",
        "size": 14301,
        "extension": ".py",
        "modified": "2025-10-20T10:10:36.031200"
      },
      {
        "path": "SYSTEM_RECOVERY_SUCCESS.md",
        "size": 12142,
        "extension": ".md",
        "modified": "2025-10-20T09:35:03.405339"
      },
      {
        "path": "UI_FEATURES_GUIDE.md",
        "size": 6433,
        "extension": ".md",
        "modified": "2025-10-20T09:38:14.819799"
      },
      {
        "path": "UI_MODERNIZATION_COMPLETE.md",
        "size": 9577,
        "extension": ".md",
        "modified": "2025-10-20T09:10:51.269443"
      },
      {
        "path": "ui_modernization_plan.md",
        "size": 2553,
        "extension": ".md",
        "modified": "2025-10-20T09:06:05.633422"
      },
      {
        "path": "view_logs.bat",
        "size": 1262,
        "extension": ".bat",
        "modified": "2025-10-20T07:32:39.738702"
      },
      {
        "path": "ZUGRIFF.md",
        "size": 2941,
        "extension": ".md",
        "modified": "2025-10-20T09:18:01.138280"
      },
      {
        "path": ".claude\\settings.local.json",
        "size": 16874,
        "extension": ".json",
        "modified": "2025-10-20T08:12:18.901386"
      },
      {
        "path": ".claude\\agents\\ai-engineer.md",
        "size": 1267,
        "extension": ".md",
        "modified": "2025-10-20T08:09:17.396125"
      },
      {
        "path": ".claude\\agents\\api-documenter.md",
        "size": 1113,
        "extension": ".md",
        "modified": "2025-10-20T08:09:17.694230"
      },
      {
        "path": ".claude\\agents\\architect-review.md",
        "size": 3414,
        "extension": ".md",
        "modified": "2025-10-20T08:09:16.650657"
      },
      {
        "path": ".claude\\agents\\backend-architect.md",
        "size": 1236,
        "extension": ".md",
        "modified": "2025-10-20T08:09:15.614372"
      },
      {
        "path": ".claude\\agents\\code-reviewer.md",
        "size": 883,
        "extension": ".md",
        "modified": "2025-10-20T08:09:15.467719"
      },
      {
        "path": ".claude\\agents\\debugger.md",
        "size": 872,
        "extension": ".md",
        "modified": "2025-10-20T08:09:16.026531"
      },
      {
        "path": ".claude\\agents\\deployment-engineer.md",
        "size": 1256,
        "extension": ".md",
        "modified": "2025-10-20T08:09:17.548515"
      },
      {
        "path": ".claude\\agents\\devops-engineer.md",
        "size": 23660,
        "extension": ".md",
        "modified": "2025-10-20T08:09:17.848984"
      },
      {
        "path": ".claude\\agents\\frontend-developer.md",
        "size": 1318,
        "extension": ".md",
        "modified": "2025-10-20T08:09:15.314054"
      },
      {
        "path": ".claude\\agents\\fullstack-developer.md",
        "size": 32301,
        "extension": ".md",
        "modified": "2025-10-20T08:09:17.248971"
      },
      {
        "path": ".claude\\agents\\javascript-pro.md",
        "size": 1239,
        "extension": ".md",
        "modified": "2025-10-20T08:09:16.181902"
      },
      {
        "path": ".claude\\agents\\mcp-expert.md",
        "size": 6893,
        "extension": ".md",
        "modified": "2025-10-20T08:09:16.322883"
      },
      {
        "path": ".claude\\agents\\mobile-developer.md",
        "size": 1155,
        "extension": ".md",
        "modified": "2025-10-20T08:09:16.478864"
      },
      {
        "path": ".claude\\agents\\prompt-engineer.md",
        "size": 3147,
        "extension": ".md",
        "modified": "2025-10-20T08:09:15.893784"
      },
      {
        "path": ".claude\\agents\\python-pro.md",
        "size": 1334,
        "extension": ".md",
        "modified": "2025-10-20T08:09:17.099994"
      },
      {
        "path": ".claude\\agents\\task-decomposition-expert.md",
        "size": 5136,
        "extension": ".md",
        "modified": "2025-10-20T08:09:16.940879"
      },
      {
        "path": ".claude\\agents\\test-engineer.md",
        "size": 26242,
        "extension": ".md",
        "modified": "2025-10-20T08:09:16.797681"
      },
      {
        "path": ".claude\\agents\\ui-ux-designer.md",
        "size": 1226,
        "extension": ".md",
        "modified": "2025-10-20T08:09:15.750974"
      },
      {
        "path": ".claude\\commands\\add-changelog.md",
        "size": 2256,
        "extension": ".md",
        "modified": "2025-10-20T08:09:45.446789"
      },
      {
        "path": ".claude\\commands\\all-tools.md",
        "size": 1064,
        "extension": ".md",
        "modified": "2025-10-20T08:09:45.546517"
      },
      {
        "path": ".claude\\commands\\architecture-review.md",
        "size": 2463,
        "extension": ".md",
        "modified": "2025-10-20T08:09:45.527586"
      },
      {
        "path": ".claude\\commands\\code-review.md",
        "size": 2565,
        "extension": ".md",
        "modified": "2025-10-20T08:09:45.425595"
      },
      {
        "path": ".claude\\commands\\commit.md",
        "size": 7916,
        "extension": ".md",
        "modified": "2025-10-20T08:09:45.565185"
      },
      {
        "path": ".claude\\commands\\create-architecture-documentation.md",
        "size": 4435,
        "extension": ".md",
        "modified": "2025-10-20T08:09:45.357276"
      },
      {
        "path": ".claude\\commands\\create-pr.md",
        "size": 795,
        "extension": ".md",
        "modified": "2025-10-20T08:09:45.629464"
      },
      {
        "path": ".claude\\commands\\create-prd.md",
        "size": 1521,
        "extension": ".md",
        "modified": "2025-10-20T08:09:45.508023"
      },
      {
        "path": ".claude\\commands\\explain-code.md",
        "size": 6671,
        "extension": ".md",
        "modified": "2025-10-20T08:09:45.648309"
      },
      {
        "path": ".claude\\commands\\generate-tests.md",
        "size": 2689,
        "extension": ".md",
        "modified": "2025-10-20T08:09:45.607677"
      },
      {
        "path": ".claude\\commands\\refactor-code.md",
        "size": 4411,
        "extension": ".md",
        "modified": "2025-10-20T08:09:45.403979"
      },
      {
        "path": ".claude\\commands\\todo.md",
        "size": 3082,
        "extension": ".md",
        "modified": "2025-10-20T08:09:45.465062"
      },
      {
        "path": ".claude\\commands\\ultra-think.md",
        "size": 4817,
        "extension": ".md",
        "modified": "2025-10-20T08:09:45.380301"
      },
      {
        "path": ".claude\\commands\\update-docs.md",
        "size": 4449,
        "extension": ".md",
        "modified": "2025-10-20T08:09:45.585470"
      },
      {
        "path": ".claude\\commands\\workflow-orchestrator.md",
        "size": 13556,
        "extension": ".md",
        "modified": "2025-10-20T08:09:45.485442"
      },
      {
        "path": ".claude\\scripts\\context-monitor.py",
        "size": 8483,
        "extension": ".py",
        "modified": "2025-10-20T08:09:46.097226"
      },
      {
        "path": ".claude\\skills\\algorithmic-art\\LICENSE.txt",
        "size": 11357,
        "extension": ".txt",
        "modified": "2025-10-20T08:12:58.136944"
      },
      {
        "path": ".claude\\skills\\algorithmic-art\\SKILL.md",
        "size": 19769,
        "extension": ".md",
        "modified": "2025-10-20T08:12:58.136944"
      },
      {
        "path": ".claude\\skills\\algorithmic-art\\templates\\generator_template.js",
        "size": 7826,
        "extension": ".js",
        "modified": "2025-10-20T08:12:58.137942"
      },
      {
        "path": ".claude\\skills\\algorithmic-art\\templates\\viewer.html",
        "size": 20844,
        "extension": ".html",
        "modified": "2025-10-20T08:12:58.138945"
      },
      {
        "path": ".claude\\skills\\brand-guidelines\\LICENSE.txt",
        "size": 11357,
        "extension": ".txt",
        "modified": "2025-10-20T08:13:02.913799"
      },
      {
        "path": ".claude\\skills\\brand-guidelines\\SKILL.md",
        "size": 2235,
        "extension": ".md",
        "modified": "2025-10-20T08:13:02.914799"
      },
      {
        "path": ".claude\\skills\\canvas-design\\LICENSE.txt",
        "size": 11357,
        "extension": ".txt",
        "modified": "2025-10-20T08:12:48.287621"
      },
      {
        "path": ".claude\\skills\\canvas-design\\SKILL.md",
        "size": 11939,
        "extension": ".md",
        "modified": "2025-10-20T08:12:48.289126"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\ArsenalSC-OFL.txt",
        "size": 4373,
        "extension": ".txt",
        "modified": "2025-10-20T08:12:48.289813"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\ArsenalSC-Regular.ttf",
        "size": 205716,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.290903"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\BigShoulders-Bold.ttf",
        "size": 127635,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.290903"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\BigShoulders-OFL.txt",
        "size": 4397,
        "extension": ".txt",
        "modified": "2025-10-20T08:12:48.292116"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\BigShoulders-Regular.ttf",
        "size": 126696,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.293148"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\Boldonse-OFL.txt",
        "size": 4390,
        "extension": ".txt",
        "modified": "2025-10-20T08:12:48.293148"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\Boldonse-Regular.ttf",
        "size": 96366,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.293148"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\BricolageGrotesque-Bold.ttf",
        "size": 130621,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.294528"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\BricolageGrotesque-OFL.txt",
        "size": 4403,
        "extension": ".txt",
        "modified": "2025-10-20T08:12:48.295600"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\BricolageGrotesque-Regular.ttf",
        "size": 130260,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.296657"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\CrimsonPro-Bold.ttf",
        "size": 138784,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.297666"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\CrimsonPro-Italic.ttf",
        "size": 140948,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.297666"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\CrimsonPro-OFL.txt",
        "size": 4394,
        "extension": ".txt",
        "modified": "2025-10-20T08:12:48.297666"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\CrimsonPro-Regular.ttf",
        "size": 137513,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.299391"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\DMMono-OFL.txt",
        "size": 4392,
        "extension": ".txt",
        "modified": "2025-10-20T08:12:48.300437"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\DMMono-Regular.ttf",
        "size": 60187,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.300437"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\EricaOne-OFL.txt",
        "size": 4410,
        "extension": ".txt",
        "modified": "2025-10-20T08:12:48.301386"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\EricaOne-Regular.ttf",
        "size": 32951,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.302420"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\GeistMono-Bold.ttf",
        "size": 98610,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.302949"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\GeistMono-OFL.txt",
        "size": 4388,
        "extension": ".txt",
        "modified": "2025-10-20T08:12:48.302949"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\GeistMono-Regular.ttf",
        "size": 98588,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.304374"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\Gloock-OFL.txt",
        "size": 4381,
        "extension": ".txt",
        "modified": "2025-10-20T08:12:48.304374"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\Gloock-Regular.ttf",
        "size": 120962,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.305763"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\IBMPlexMono-Bold.ttf",
        "size": 175075,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.306838"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\IBMPlexMono-OFL.txt",
        "size": 4363,
        "extension": ".txt",
        "modified": "2025-10-20T08:12:48.308266"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\IBMPlexMono-Regular.ttf",
        "size": 172381,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.308266"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\IBMPlexSerif-Bold.ttf",
        "size": 216775,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.309773"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\IBMPlexSerif-BoldItalic.ttf",
        "size": 229993,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.310780"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\IBMPlexSerif-Italic.ttf",
        "size": 230883,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.311777"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\IBMPlexSerif-Regular.ttf",
        "size": 215873,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.312963"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\InstrumentSans-Bold.ttf",
        "size": 107867,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.312963"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\InstrumentSans-BoldItalic.ttf",
        "size": 111214,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.314844"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\InstrumentSans-Italic.ttf",
        "size": 110463,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.315870"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\InstrumentSans-OFL.txt",
        "size": 4403,
        "extension": ".txt",
        "modified": "2025-10-20T08:12:48.316405"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\InstrumentSans-Regular.ttf",
        "size": 107550,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.316405"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\InstrumentSerif-Italic.ttf",
        "size": 91256,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.317746"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\InstrumentSerif-Regular.ttf",
        "size": 91120,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.317746"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\Italiana-OFL.txt",
        "size": 4394,
        "extension": ".txt",
        "modified": "2025-10-20T08:12:48.319193"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\Italiana-Regular.ttf",
        "size": 38223,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.320193"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\JetBrainsMono-Bold.ttf",
        "size": 144938,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.320193"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\JetBrainsMono-OFL.txt",
        "size": 4399,
        "extension": ".txt",
        "modified": "2025-10-20T08:12:48.321471"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\JetBrainsMono-Regular.ttf",
        "size": 144762,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.322015"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\Jura-Light.ttf",
        "size": 202108,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.323032"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\Jura-Medium.ttf",
        "size": 202127,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.325361"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\Jura-OFL.txt",
        "size": 4380,
        "extension": ".txt",
        "modified": "2025-10-20T08:12:48.325361"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\Lora-Bold.ttf",
        "size": 183078,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.328369"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\Lora-BoldItalic.ttf",
        "size": 187302,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.329212"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\Lora-Italic.ttf",
        "size": 187950,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.329731"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\Lora-OFL.txt",
        "size": 4423,
        "extension": ".txt",
        "modified": "2025-10-20T08:12:48.330313"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\Lora-Regular.ttf",
        "size": 180398,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.330884"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\NationalPark-Bold.ttf",
        "size": 98348,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.332097"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\NationalPark-OFL.txt",
        "size": 4399,
        "extension": ".txt",
        "modified": "2025-10-20T08:12:48.333097"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\NationalPark-Regular.ttf",
        "size": 95482,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.333097"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\NothingYouCouldDo-OFL.txt",
        "size": 4363,
        "extension": ".txt",
        "modified": "2025-10-20T08:12:48.334335"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\NothingYouCouldDo-Regular.ttf",
        "size": 36179,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.334335"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\Outfit-Bold.ttf",
        "size": 83196,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.335677"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\Outfit-OFL.txt",
        "size": 4389,
        "extension": ".txt",
        "modified": "2025-10-20T08:12:48.336679"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\Outfit-Regular.ttf",
        "size": 82044,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.336679"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\PixelifySans-Medium.ttf",
        "size": 69792,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.338023"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\PixelifySans-OFL.txt",
        "size": 4395,
        "extension": ".txt",
        "modified": "2025-10-20T08:12:48.339116"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\PoiretOne-OFL.txt",
        "size": 4366,
        "extension": ".txt",
        "modified": "2025-10-20T08:12:48.339116"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\PoiretOne-Regular.ttf",
        "size": 63246,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.340620"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\RedHatMono-Bold.ttf",
        "size": 42585,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.340620"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\RedHatMono-OFL.txt",
        "size": 4394,
        "extension": ".txt",
        "modified": "2025-10-20T08:12:48.341814"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\RedHatMono-Regular.ttf",
        "size": 42441,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.342561"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\Silkscreen-OFL.txt",
        "size": 4394,
        "extension": ".txt",
        "modified": "2025-10-20T08:12:48.343064"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\Silkscreen-Regular.ttf",
        "size": 37969,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.343584"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\SmoochSans-Medium.ttf",
        "size": 73873,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.344635"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\SmoochSans-OFL.txt",
        "size": 4396,
        "extension": ".txt",
        "modified": "2025-10-20T08:12:48.345153"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\Tektur-Medium.ttf",
        "size": 102216,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.345671"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\Tektur-OFL.txt",
        "size": 4385,
        "extension": ".txt",
        "modified": "2025-10-20T08:12:48.346189"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\Tektur-Regular.ttf",
        "size": 100910,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.347228"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\WorkSans-Bold.ttf",
        "size": 284127,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.348266"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\WorkSans-BoldItalic.ttf",
        "size": 267516,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.349308"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\WorkSans-Italic.ttf",
        "size": 260172,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.349823"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\WorkSans-OFL.txt",
        "size": 4397,
        "extension": ".txt",
        "modified": "2025-10-20T08:12:48.350343"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\WorkSans-Regular.ttf",
        "size": 274773,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.351386"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\YoungSerif-OFL.txt",
        "size": 4398,
        "extension": ".txt",
        "modified": "2025-10-20T08:12:48.352506"
      },
      {
        "path": ".claude\\skills\\canvas-design\\canvas-fonts\\YoungSerif-Regular.ttf",
        "size": 127614,
        "extension": ".ttf",
        "modified": "2025-10-20T08:12:48.353041"
      },
      {
        "path": ".claude\\skills\\docx\\docx-js.md",
        "size": 16509,
        "extension": ".md",
        "modified": "2025-10-20T08:13:14.809577"
      },
      {
        "path": ".claude\\skills\\docx\\LICENSE.txt",
        "size": 1467,
        "extension": ".txt",
        "modified": "2025-10-20T08:13:14.808293"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml.md",
        "size": 23572,
        "extension": ".md",
        "modified": "2025-10-20T08:13:14.809577"
      },
      {
        "path": ".claude\\skills\\docx\\SKILL.md",
        "size": 10150,
        "extension": ".md",
        "modified": "2025-10-20T08:13:14.808293"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ecma\\fouth-edition\\opc-contentTypes.xsd",
        "size": 1960,
        "extension": ".xsd",
        "modified": "2025-10-20T08:13:14.827955"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ecma\\fouth-edition\\opc-coreProperties.xsd",
        "size": 2512,
        "extension": ".xsd",
        "modified": "2025-10-20T08:13:14.828955"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ecma\\fouth-edition\\opc-digSig.xsd",
        "size": 2856,
        "extension": ".xsd",
        "modified": "2025-10-20T08:13:14.829953"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ecma\\fouth-edition\\opc-relationships.xsd",
        "size": 1341,
        "extension": ".xsd",
        "modified": "2025-10-20T08:13:14.829953"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\dml-chart.xsd",
        "size": 74984,
        "extension": ".xsd",
        "modified": "2025-10-20T08:13:14.810713"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\dml-chartDrawing.xsd",
        "size": 6956,
        "extension": ".xsd",
        "modified": "2025-10-20T08:13:14.811716"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\dml-diagram.xsd",
        "size": 51302,
        "extension": ".xsd",
        "modified": "2025-10-20T08:13:14.812814"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\dml-lockedCanvas.xsd",
        "size": 624,
        "extension": ".xsd",
        "modified": "2025-10-20T08:13:14.812814"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\dml-main.xsd",
        "size": 152039,
        "extension": ".xsd",
        "modified": "2025-10-20T08:13:14.813819"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\dml-picture.xsd",
        "size": 1231,
        "extension": ".xsd",
        "modified": "2025-10-20T08:13:14.814824"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\dml-spreadsheetDrawing.xsd",
        "size": 8862,
        "extension": ".xsd",
        "modified": "2025-10-20T08:13:14.814824"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\dml-wordprocessingDrawing.xsd",
        "size": 14795,
        "extension": ".xsd",
        "modified": "2025-10-20T08:13:14.815823"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\pml.xsd",
        "size": 83612,
        "extension": ".xsd",
        "modified": "2025-10-20T08:13:14.815823"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\shared-additionalCharacteristics.xsd",
        "size": 1269,
        "extension": ".xsd",
        "modified": "2025-10-20T08:13:14.816823"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\shared-bibliography.xsd",
        "size": 7328,
        "extension": ".xsd",
        "modified": "2025-10-20T08:13:14.817331"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\shared-commonSimpleTypes.xsd",
        "size": 6382,
        "extension": ".xsd",
        "modified": "2025-10-20T08:13:14.818331"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\shared-customXmlDataProperties.xsd",
        "size": 1248,
        "extension": ".xsd",
        "modified": "2025-10-20T08:13:14.818331"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\shared-customXmlSchemaProperties.xsd",
        "size": 880,
        "extension": ".xsd",
        "modified": "2025-10-20T08:13:14.819471"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\shared-documentPropertiesCustom.xsd",
        "size": 2608,
        "extension": ".xsd",
        "modified": "2025-10-20T08:13:14.819471"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\shared-documentPropertiesExtended.xsd",
        "size": 3507,
        "extension": ".xsd",
        "modified": "2025-10-20T08:13:14.820472"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\shared-documentPropertiesVariantTypes.xsd",
        "size": 7507,
        "extension": ".xsd",
        "modified": "2025-10-20T08:13:14.821470"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\shared-math.xsd",
        "size": 23313,
        "extension": ".xsd",
        "modified": "2025-10-20T08:13:14.821470"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\shared-relationshipReference.xsd",
        "size": 1367,
        "extension": ".xsd",
        "modified": "2025-10-20T08:13:14.822864"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\sml.xsd",
        "size": 242277,
        "extension": ".xsd",
        "modified": "2025-10-20T08:13:14.823864"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\vml-main.xsd",
        "size": 26148,
        "extension": ".xsd",
        "modified": "2025-10-20T08:13:14.823864"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\vml-officeDrawing.xsd",
        "size": 25279,
        "extension": ".xsd",
        "modified": "2025-10-20T08:13:14.825297"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\vml-presentationDrawing.xsd",
        "size": 535,
        "extension": ".xsd",
        "modified": "2025-10-20T08:13:14.825297"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\vml-spreadsheetDrawing.xsd",
        "size": 5712,
        "extension": ".xsd",
        "modified": "2025-10-20T08:13:14.826423"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\vml-wordprocessingDrawing.xsd",
        "size": 4010,
        "extension": ".xsd",
        "modified": "2025-10-20T08:13:14.826423"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\wml.xsd",
        "size": 171367,
        "extension": ".xsd",
        "modified": "2025-10-20T08:13:14.826927"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\xml.xsd",
        "size": 4646,
        "extension": ".xsd",
        "modified": "2025-10-20T08:13:14.827955"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\mce\\mc.xsd",
        "size": 3127,
        "extension": ".xsd",
        "modified": "2025-10-20T08:13:14.831053"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\microsoft\\wml-2010.xsd",
        "size": 26549,
        "extension": ".xsd",
        "modified": "2025-10-20T08:13:14.831557"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\microsoft\\wml-2012.xsd",
        "size": 3745,
        "extension": ".xsd",
        "modified": "2025-10-20T08:13:14.831557"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\microsoft\\wml-2018.xsd",
        "size": 901,
        "extension": ".xsd",
        "modified": "2025-10-20T08:13:14.832569"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\microsoft\\wml-cex-2018.xsd",
        "size": 1778,
        "extension": ".xsd",
        "modified": "2025-10-20T08:13:14.833157"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\microsoft\\wml-cid-2016.xsd",
        "size": 1002,
        "extension": ".xsd",
        "modified": "2025-10-20T08:13:14.833157"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\microsoft\\wml-sdtdatahash-2020.xsd",
        "size": 600,
        "extension": ".xsd",
        "modified": "2025-10-20T08:13:14.834341"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\microsoft\\wml-symex-2015.xsd",
        "size": 745,
        "extension": ".xsd",
        "modified": "2025-10-20T08:13:14.835400"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\scripts\\pack.py",
        "size": 5596,
        "extension": ".py",
        "modified": "2025-10-20T08:13:14.835400"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\scripts\\unpack.py",
        "size": 1037,
        "extension": ".py",
        "modified": "2025-10-20T08:13:14.837002"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\scripts\\validate.py",
        "size": 1959,
        "extension": ".py",
        "modified": "2025-10-20T08:13:14.838125"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\scripts\\validation\\base.py",
        "size": 39892,
        "extension": ".py",
        "modified": "2025-10-20T08:13:14.839503"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\scripts\\validation\\docx.py",
        "size": 9996,
        "extension": ".py",
        "modified": "2025-10-20T08:13:14.839503"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\scripts\\validation\\pptx.py",
        "size": 12327,
        "extension": ".py",
        "modified": "2025-10-20T08:13:14.840557"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\scripts\\validation\\redlining.py",
        "size": 11179,
        "extension": ".py",
        "modified": "2025-10-20T08:13:14.841642"
      },
      {
        "path": ".claude\\skills\\docx\\ooxml\\scripts\\validation\\__init__.py",
        "size": 336,
        "extension": ".py",
        "modified": "2025-10-20T08:13:14.838125"
      },
      {
        "path": ".claude\\skills\\docx\\scripts\\document.py",
        "size": 50409,
        "extension": ".py",
        "modified": "2025-10-20T08:13:14.842696"
      },
      {
        "path": ".claude\\skills\\docx\\scripts\\utilities.py",
        "size": 13694,
        "extension": ".py",
        "modified": "2025-10-20T08:13:14.846209"
      },
      {
        "path": ".claude\\skills\\docx\\scripts\\__init__.py",
        "size": 65,
        "extension": ".py",
        "modified": "2025-10-20T08:13:14.841642"
      },
      {
        "path": ".claude\\skills\\docx\\scripts\\templates\\comments.xml",
        "size": 2635,
        "extension": ".xml",
        "modified": "2025-10-20T08:13:14.844039"
      },
      {
        "path": ".claude\\skills\\docx\\scripts\\templates\\commentsExtended.xml",
        "size": 2643,
        "extension": ".xml",
        "modified": "2025-10-20T08:13:14.844039"
      },
      {
        "path": ".claude\\skills\\docx\\scripts\\templates\\commentsExtensible.xml",
        "size": 2739,
        "extension": ".xml",
        "modified": "2025-10-20T08:13:14.845040"
      },
      {
        "path": ".claude\\skills\\docx\\scripts\\templates\\commentsIds.xml",
        "size": 2651,
        "extension": ".xml",
        "modified": "2025-10-20T08:13:14.845040"
      },
      {
        "path": ".claude\\skills\\docx\\scripts\\templates\\people.xml",
        "size": 147,
        "extension": ".xml",
        "modified": "2025-10-20T08:13:14.845040"
      },
      {
        "path": ".claude\\skills\\git-commit-helper\\SKILL.md",
        "size": 4372,
        "extension": ".md",
        "modified": "2025-10-20T08:13:00.948941"
      },
      {
        "path": ".claude\\skills\\pdf-anthropic\\forms.md",
        "size": 9438,
        "extension": ".md",
        "modified": "2025-10-20T08:13:17.094543"
      },
      {
        "path": ".claude\\skills\\pdf-anthropic\\LICENSE.txt",
        "size": 1467,
        "extension": ".txt",
        "modified": "2025-10-20T08:13:17.094543"
      },
      {
        "path": ".claude\\skills\\pdf-anthropic\\reference.md",
        "size": 16692,
        "extension": ".md",
        "modified": "2025-10-20T08:13:17.096228"
      },
      {
        "path": ".claude\\skills\\pdf-anthropic\\SKILL.md",
        "size": 7068,
        "extension": ".md",
        "modified": "2025-10-20T08:13:17.094543"
      },
      {
        "path": ".claude\\skills\\pdf-anthropic\\scripts\\check_bounding_boxes.py",
        "size": 3139,
        "extension": ".py",
        "modified": "2025-10-20T08:13:17.097231"
      },
      {
        "path": ".claude\\skills\\pdf-anthropic\\scripts\\check_bounding_boxes_test.py",
        "size": 8818,
        "extension": ".py",
        "modified": "2025-10-20T08:13:17.097231"
      },
      {
        "path": ".claude\\skills\\pdf-anthropic\\scripts\\check_fillable_fields.py",
        "size": 362,
        "extension": ".py",
        "modified": "2025-10-20T08:13:17.098278"
      },
      {
        "path": ".claude\\skills\\pdf-anthropic\\scripts\\convert_pdf_to_images.py",
        "size": 1123,
        "extension": ".py",
        "modified": "2025-10-20T08:13:17.099288"
      },
      {
        "path": ".claude\\skills\\pdf-anthropic\\scripts\\create_validation_image.py",
        "size": 1603,
        "extension": ".py",
        "modified": "2025-10-20T08:13:17.100285"
      },
      {
        "path": ".claude\\skills\\pdf-anthropic\\scripts\\extract_form_field_info.py",
        "size": 6127,
        "extension": ".py",
        "modified": "2025-10-20T08:13:17.100849"
      },
      {
        "path": ".claude\\skills\\pdf-anthropic\\scripts\\fill_fillable_fields.py",
        "size": 4863,
        "extension": ".py",
        "modified": "2025-10-20T08:13:17.100849"
      },
      {
        "path": ".claude\\skills\\pdf-anthropic\\scripts\\fill_pdf_form_with_annotations.py",
        "size": 3596,
        "extension": ".py",
        "modified": "2025-10-20T08:13:17.102282"
      },
      {
        "path": ".claude\\skills\\skill-creator\\LICENSE.txt",
        "size": 11357,
        "extension": ".txt",
        "modified": "2025-10-20T08:13:18.290239"
      },
      {
        "path": ".claude\\skills\\skill-creator\\SKILL.md",
        "size": 11547,
        "extension": ".md",
        "modified": "2025-10-20T08:13:18.290919"
      },
      {
        "path": ".claude\\skills\\skill-creator\\scripts\\init_skill.py",
        "size": 10863,
        "extension": ".py",
        "modified": "2025-10-20T08:13:18.291921"
      },
      {
        "path": ".claude\\skills\\skill-creator\\scripts\\package_skill.py",
        "size": 3247,
        "extension": ".py",
        "modified": "2025-10-20T08:13:18.291921"
      },
      {
        "path": ".claude\\skills\\skill-creator\\scripts\\quick_validate.py",
        "size": 2165,
        "extension": ".py",
        "modified": "2025-10-20T08:13:18.293150"
      },
      {
        "path": ".claude\\skills\\slack-gif-creator\\LICENSE.txt",
        "size": 11357,
        "extension": ".txt",
        "modified": "2025-10-20T08:12:55.907934"
      },
      {
        "path": ".claude\\skills\\slack-gif-creator\\requirements.txt",
        "size": 66,
        "extension": ".txt",
        "modified": "2025-10-20T08:12:55.914444"
      },
      {
        "path": ".claude\\skills\\slack-gif-creator\\SKILL.md",
        "size": 17142,
        "extension": ".md",
        "modified": "2025-10-20T08:12:55.907934"
      },
      {
        "path": ".claude\\skills\\slack-gif-creator\\core\\color_palettes.py",
        "size": 8724,
        "extension": ".py",
        "modified": "2025-10-20T08:12:55.907934"
      },
      {
        "path": ".claude\\skills\\slack-gif-creator\\core\\easing.py",
        "size": 6289,
        "extension": ".py",
        "modified": "2025-10-20T08:12:55.909440"
      },
      {
        "path": ".claude\\skills\\slack-gif-creator\\core\\frame_composer.py",
        "size": 14468,
        "extension": ".py",
        "modified": "2025-10-20T08:12:55.910445"
      },
      {
        "path": ".claude\\skills\\slack-gif-creator\\core\\typography.py",
        "size": 10761,
        "extension": ".py",
        "modified": "2025-10-20T08:12:55.912448"
      },
      {
        "path": ".claude\\skills\\slack-gif-creator\\core\\validators.py",
        "size": 8225,
        "extension": ".py",
        "modified": "2025-10-20T08:12:55.913445"
      },
      {
        "path": ".claude\\skills\\slack-gif-creator\\core\\visual_effects.py",
        "size": 14862,
        "extension": ".py",
        "modified": "2025-10-20T08:12:55.913445"
      },
      {
        "path": ".claude\\skills\\slack-gif-creator\\templates\\bounce.py",
        "size": 3055,
        "extension": ".py",
        "modified": "2025-10-20T08:12:55.914444"
      },
      {
        "path": ".claude\\skills\\slack-gif-creator\\templates\\explode.py",
        "size": 11259,
        "extension": ".py",
        "modified": "2025-10-20T08:12:55.915445"
      },
      {
        "path": ".claude\\skills\\slack-gif-creator\\templates\\fade.py",
        "size": 10143,
        "extension": ".py",
        "modified": "2025-10-20T08:12:55.915445"
      },
      {
        "path": ".claude\\skills\\slack-gif-creator\\templates\\flip.py",
        "size": 9458,
        "extension": ".py",
        "modified": "2025-10-20T08:12:55.916501"
      },
      {
        "path": ".claude\\skills\\slack-gif-creator\\templates\\kaleidoscope.py",
        "size": 6349,
        "extension": ".py",
        "modified": "2025-10-20T08:12:55.917500"
      },
      {
        "path": ".claude\\skills\\slack-gif-creator\\templates\\morph.py",
        "size": 11241,
        "extension": ".py",
        "modified": "2025-10-20T08:12:55.917500"
      },
      {
        "path": ".claude\\skills\\slack-gif-creator\\templates\\move.py",
        "size": 9395,
        "extension": ".py",
        "modified": "2025-10-20T08:12:55.918501"
      },
      {
        "path": ".claude\\skills\\slack-gif-creator\\templates\\pulse.py",
        "size": 8638,
        "extension": ".py",
        "modified": "2025-10-20T08:12:55.918501"
      },
      {
        "path": ".claude\\skills\\slack-gif-creator\\templates\\shake.py",
        "size": 3737,
        "extension": ".py",
        "modified": "2025-10-20T08:12:55.920012"
      },
      {
        "path": ".claude\\skills\\slack-gif-creator\\templates\\slide.py",
        "size": 9367,
        "extension": ".py",
        "modified": "2025-10-20T08:12:55.920012"
      },
      {
        "path": ".claude\\skills\\slack-gif-creator\\templates\\spin.py",
        "size": 9096,
        "extension": ".py",
        "modified": "2025-10-20T08:12:55.921016"
      },
      {
        "path": ".claude\\skills\\slack-gif-creator\\templates\\wiggle.py",
        "size": 10060,
        "extension": ".py",
        "modified": "2025-10-20T08:12:55.921016"
      },
      {
        "path": ".claude\\skills\\slack-gif-creator\\templates\\zoom.py",
        "size": 10111,
        "extension": ".py",
        "modified": "2025-10-20T08:12:55.922016"
      },
      {
        "path": ".claude\\skills\\theme-factory\\LICENSE.txt",
        "size": 11357,
        "extension": ".txt",
        "modified": "2025-10-20T08:13:00.595473"
      },
      {
        "path": ".claude\\skills\\theme-factory\\SKILL.md",
        "size": 3124,
        "extension": ".md",
        "modified": "2025-10-20T08:13:00.596479"
      },
      {
        "path": ".claude\\skills\\theme-factory\\theme-showcase.pdf",
        "size": 209098,
        "extension": ".pdf",
        "modified": "2025-10-20T08:13:00.597479"
      },
      {
        "path": ".claude\\skills\\theme-factory\\themes\\arctic-frost.md",
        "size": 544,
        "extension": ".md",
        "modified": "2025-10-20T08:13:00.597479"
      },
      {
        "path": ".claude\\skills\\theme-factory\\themes\\botanical-garden.md",
        "size": 519,
        "extension": ".md",
        "modified": "2025-10-20T08:13:00.598480"
      },
      {
        "path": ".claude\\skills\\theme-factory\\themes\\desert-rose.md",
        "size": 496,
        "extension": ".md",
        "modified": "2025-10-20T08:13:00.599487"
      },
      {
        "path": ".claude\\skills\\theme-factory\\themes\\forest-canopy.md",
        "size": 506,
        "extension": ".md",
        "modified": "2025-10-20T08:13:00.599487"
      },
      {
        "path": ".claude\\skills\\theme-factory\\themes\\golden-hour.md",
        "size": 528,
        "extension": ".md",
        "modified": "2025-10-20T08:13:00.599487"
      },
      {
        "path": ".claude\\skills\\theme-factory\\themes\\midnight-galaxy.md",
        "size": 513,
        "extension": ".md",
        "modified": "2025-10-20T08:13:00.600893"
      },
      {
        "path": ".claude\\skills\\theme-factory\\themes\\modern-minimalist.md",
        "size": 549,
        "extension": ".md",
        "modified": "2025-10-20T08:13:00.600893"
      },
      {
        "path": ".claude\\skills\\theme-factory\\themes\\ocean-depths.md",
        "size": 555,
        "extension": ".md",
        "modified": "2025-10-20T08:13:00.601903"
      },
      {
        "path": ".claude\\skills\\theme-factory\\themes\\sunset-boulevard.md",
        "size": 558,
        "extension": ".md",
        "modified": "2025-10-20T08:13:00.601903"
      },
      {
        "path": ".claude\\skills\\theme-factory\\themes\\tech-innovation.md",
        "size": 547,
        "extension": ".md",
        "modified": "2025-10-20T08:13:00.603094"
      },
      {
        "path": ".claude\\skills\\webapp-testing\\LICENSE.txt",
        "size": 11357,
        "extension": ".txt",
        "modified": "2025-10-20T08:13:02.402149"
      },
      {
        "path": ".claude\\skills\\webapp-testing\\SKILL.md",
        "size": 3913,
        "extension": ".md",
        "modified": "2025-10-20T08:13:02.402149"
      },
      {
        "path": ".claude\\skills\\webapp-testing\\examples\\console_logging.py",
        "size": 1027,
        "extension": ".py",
        "modified": "2025-10-20T08:13:02.403516"
      },
      {
        "path": ".claude\\skills\\webapp-testing\\examples\\element_discovery.py",
        "size": 1463,
        "extension": ".py",
        "modified": "2025-10-20T08:13:02.403516"
      },
      {
        "path": ".claude\\skills\\webapp-testing\\examples\\static_html_automation.py",
        "size": 953,
        "extension": ".py",
        "modified": "2025-10-20T08:13:02.404688"
      },
      {
        "path": ".claude\\skills\\webapp-testing\\scripts\\with_server.py",
        "size": 3693,
        "extension": ".py",
        "modified": "2025-10-20T08:13:02.405714"
      },
      {
        "path": ".streamlit\\config.toml",
        "size": 335,
        "extension": ".toml",
        "modified": "2025-10-20T03:15:49.373425"
      },
      {
        "path": "agents\\example_agent.py",
        "size": 8487,
        "extension": ".py",
        "modified": "2025-10-20T05:53:10.678853"
      },
      {
        "path": "agents\\project_manager_agent.py",
        "size": 23433,
        "extension": ".py",
        "modified": "2025-10-20T03:15:49.372907"
      },
      {
        "path": "agents\\__init__.py",
        "size": 5281,
        "extension": ".py",
        "modified": "2025-10-20T08:37:46.893346"
      },
      {
        "path": "analysis_output\\project_analysis.json",
        "size": 2977773,
        "extension": ".json",
        "modified": "2025-10-20T09:50:57.133342"
      },
      {
        "path": "analysis_output\\PROJECT_ANALYSIS.md",
        "size": 13627,
        "extension": ".md",
        "modified": "2025-10-20T09:50:57.133342"
      },
      {
        "path": "analyzers\\api_analyzer.py",
        "size": 33679,
        "extension": ".py",
        "modified": "2025-10-20T03:15:49.370317"
      },
      {
        "path": "analyzers\\ast_analyzer.py",
        "size": 21049,
        "extension": ".py",
        "modified": "2025-10-20T07:45:03.766732"
      },
      {
        "path": "analyzers\\database_analyzer.py",
        "size": 29649,
        "extension": ".py",
        "modified": "2025-10-20T03:15:49.369787"
      },
      {
        "path": "analyzers\\dependency_analyzer.py",
        "size": 26672,
        "extension": ".py",
        "modified": "2025-10-20T03:15:49.368733"
      },
      {
        "path": "analyzers\\framework_detector.py",
        "size": 24736,
        "extension": ".py",
        "modified": "2025-10-20T03:15:49.368195"
      },
      {
        "path": "analyzers\\language_detector.py",
        "size": 13432,
        "extension": ".py",
        "modified": "2025-10-20T03:15:49.368195"
      },
      {
        "path": "analyzers\\project_analyzer.py",
        "size": 45108,
        "extension": ".py",
        "modified": "2025-10-20T07:23:01.920050"
      },
      {
        "path": "analyzers\\__init__.py",
        "size": 525,
        "extension": ".py",
        "modified": "2025-10-20T03:15:49.367140"
      },
      {
        "path": "commands\\__init__.py",
        "size": 13133,
        "extension": ".py",
        "modified": "2025-10-20T02:15:36.194086"
      },
      {
        "path": "docs\\ARCHITECTURE.md",
        "size": 22701,
        "extension": ".md",
        "modified": "2025-10-20T08:57:05.766927"
      },
      {
        "path": "etc\\jupyter\\nbconfig\\notebook.d\\pydeck.json",
        "size": 68,
        "extension": ".json",
        "modified": "2025-10-20T04:36:36.854365"
      },
      {
        "path": "generators\\agent_generator.py",
        "size": 15946,
        "extension": ".py",
        "modified": "2025-10-20T06:08:04.950839"
      },
      {
        "path": "generators\\skill_generator.py",
        "size": 13529,
        "extension": ".py",
        "modified": "2025-10-20T04:07:10.353259"
      },
      {
        "path": "generators\\skill_templates.py",
        "size": 13873,
        "extension": ".py",
        "modified": "2025-10-20T04:07:10.353259"
      },
      {
        "path": "generators\\workflow_generator.py",
        "size": 43324,
        "extension": ".py",
        "modified": "2025-10-20T03:41:57.901877"
      },
      {
        "path": "generators\\__init__.py",
        "size": 24,
        "extension": ".py",
        "modified": "2025-10-20T03:36:57.088096"
      },
      {
        "path": "hooks\\__init__.py",
        "size": 14098,
        "extension": ".py",
        "modified": "2025-10-20T02:15:36.194086"
      },
      {
        "path": "llm\\api_models.py",
        "size": 21212,
        "extension": ".py",
        "modified": "2025-10-20T03:15:49.371370"
      },
      {
        "path": "llm\\claude_flow_integration.py",
        "size": 17208,
        "extension": ".py",
        "modified": "2025-10-20T09:27:33.683969"
      },
      {
        "path": "llm\\local_models.py",
        "size": 19231,
        "extension": ".py",
        "modified": "2025-10-20T03:15:49.371370"
      },
      {
        "path": "llm\\model_manager.py",
        "size": 10803,
        "extension": ".py",
        "modified": "2025-10-20T03:15:49.371370"
      },
      {
        "path": "llm\\prompt_templates.py",
        "size": 18476,
        "extension": ".py",
        "modified": "2025-10-20T04:13:18.592291"
      },
      {
        "path": "llm\\__init__.py",
        "size": 352,
        "extension": ".py",
        "modified": "2025-10-20T03:15:49.370317"
      },
      {
        "path": "mcps\\__init__.py",
        "size": 28729,
        "extension": ".py",
        "modified": "2025-10-20T02:15:36.194086"
      },
      {
        "path": "monitoring\\prometheus.yml",
        "size": 592,
        "extension": ".yml",
        "modified": "2025-10-20T02:15:36.198065"
      },
      {
        "path": "optimization\\optimization_engine.py",
        "size": 13958,
        "extension": ".py",
        "modified": "2025-10-20T10:06:04.781011"
      },
      {
        "path": "optimization\\__init__.py",
        "size": 24,
        "extension": ".py",
        "modified": "2025-10-20T04:28:23.646439"
      },
      {
        "path": "orchestrator\\agent_orchestrator.py",
        "size": 13185,
        "extension": ".py",
        "modified": "2025-10-20T04:07:10.353259"
      },
      {
        "path": "orchestrator\\workflow_orchestrator.py",
        "size": 3548,
        "extension": ".py",
        "modified": "2025-10-20T07:28:24.462090"
      },
      {
        "path": "orchestrator\\__init__.py",
        "size": 24,
        "extension": ".py",
        "modified": "2025-10-20T04:27:00.832035"
      },
      {
        "path": "output\\artifact_generator.py",
        "size": 7704,
        "extension": ".py",
        "modified": "2025-10-20T04:28:18.693105"
      },
      {
        "path": "output\\report_generator.py",
        "size": 8020,
        "extension": ".py",
        "modified": "2025-10-20T04:27:52.544631"
      },
      {
        "path": "output\\__init__.py",
        "size": 18,
        "extension": ".py",
        "modified": "2025-10-20T04:27:18.910420"
      },
      {
        "path": "plugins\\__init__.py",
        "size": 20431,
        "extension": ".py",
        "modified": "2025-10-20T02:15:36.194086"
      },
      {
        "path": "routes\\agent_routes.py",
        "size": 3983,
        "extension": ".py",
        "modified": "2025-10-20T10:06:04.781011"
      },
      {
        "path": "routes\\analysis_routes.py",
        "size": 5599,
        "extension": ".py",
        "modified": "2025-10-20T10:06:04.779115"
      },
      {
        "path": "routes\\claude_flow_routes.py",
        "size": 14003,
        "extension": ".py",
        "modified": "2025-10-20T09:28:56.155441"
      },
      {
        "path": "routes\\model_routes.py",
        "size": 2269,
        "extension": ".py",
        "modified": "2025-10-20T08:41:08.419358"
      },
      {
        "path": "routes\\workflow_routes.py",
        "size": 4220,
        "extension": ".py",
        "modified": "2025-10-20T08:41:02.379220"
      },
      {
        "path": "routes\\__init__.py",
        "size": 60,
        "extension": ".py",
        "modified": "2025-10-20T08:37:46.894385"
      },
      {
        "path": "Scripts\\dotenv.exe",
        "size": 108344,
        "extension": ".exe",
        "modified": "2025-10-20T04:22:38.044128"
      },
      {
        "path": "Scripts\\f2py.exe",
        "size": 108348,
        "extension": ".exe",
        "modified": "2025-10-20T04:36:33.421739"
      },
      {
        "path": "Scripts\\fastapi.exe",
        "size": 108342,
        "extension": ".exe",
        "modified": "2025-10-20T04:22:41.563041"
      },
      {
        "path": "Scripts\\jsonschema.exe",
        "size": 108345,
        "extension": ".exe",
        "modified": "2025-10-20T04:36:54.911863"
      },
      {
        "path": "Scripts\\normalizer.exe",
        "size": 108365,
        "extension": ".exe",
        "modified": "2025-10-20T04:36:35.395940"
      },
      {
        "path": "Scripts\\numpy-config.exe",
        "size": 108348,
        "extension": ".exe",
        "modified": "2025-10-20T04:36:33.422744"
      },
      {
        "path": "Scripts\\pip3.13.exe",
        "size": 108353,
        "extension": ".exe",
        "modified": "2025-10-20T04:21:14.481328"
      },
      {
        "path": "Scripts\\pip3.exe",
        "size": 108353,
        "extension": ".exe",
        "modified": "2025-10-20T04:21:14.481328"
      },
      {
        "path": "Scripts\\streamlit.cmd",
        "size": 676,
        "extension": ".cmd",
        "modified": "2025-10-20T04:36:56.205589"
      },
      {
        "path": "Scripts\\streamlit.exe",
        "size": 108348,
        "extension": ".exe",
        "modified": "2025-10-20T04:36:59.712721"
      },
      {
        "path": "Scripts\\uvicorn.exe",
        "size": 108343,
        "extension": ".exe",
        "modified": "2025-10-20T04:22:39.573951"
      },
      {
        "path": "Scripts\\watchmedo.exe",
        "size": 108349,
        "extension": ".exe",
        "modified": "2025-10-20T04:36:21.475886"
      },
      {
        "path": "services\\agent_service.py",
        "size": 4067,
        "extension": ".py",
        "modified": "2025-10-20T08:41:33.903764"
      },
      {
        "path": "services\\project_service.py",
        "size": 2170,
        "extension": ".py",
        "modified": "2025-10-20T08:41:24.178657"
      },
      {
        "path": "services\\__init__.py",
        "size": 64,
        "extension": ".py",
        "modified": "2025-10-20T08:37:46.894385"
      },
      {
        "path": "settings\\__init__.py",
        "size": 15921,
        "extension": ".py",
        "modified": "2025-10-20T04:11:15.721836"
      },
      {
        "path": "share\\jupyter\\nbextensions\\pydeck\\extensionRequires.js",
        "size": 304,
        "extension": ".js",
        "modified": "2025-10-20T04:36:36.855870"
      },
      {
        "path": "share\\jupyter\\nbextensions\\pydeck\\index.js",
        "size": 2594815,
        "extension": ".js",
        "modified": "2025-10-20T04:36:36.863020"
      },
      {
        "path": "skills\\__init__.py",
        "size": 11181,
        "extension": ".py",
        "modified": "2025-10-20T06:43:08.668805"
      },
      {
        "path": "test-project\\app.py",
        "size": 417,
        "extension": ".py",
        "modified": "2025-10-20T04:08:09.369265"
      },
      {
        "path": "test-project\\requirements.txt",
        "size": 60,
        "extension": ".txt",
        "modified": "2025-10-20T04:08:12.568024"
      },
      {
        "path": "tests\\test_agents.py",
        "size": 15135,
        "extension": ".py",
        "modified": "2025-10-20T08:37:46.893346"
      },
      {
        "path": "tests\\test_analyzers.py",
        "size": 11181,
        "extension": ".py",
        "modified": "2025-10-20T09:11:17.531667"
      },
      {
        "path": "tests\\test_app.py",
        "size": 5779,
        "extension": ".py",
        "modified": "2025-10-20T08:50:28.702102"
      },
      {
        "path": "tests\\test_routes.py",
        "size": 8340,
        "extension": ".py",
        "modified": "2025-10-20T08:54:27.004354"
      },
      {
        "path": "tests\\test_settings.py",
        "size": 17318,
        "extension": ".py",
        "modified": "2025-10-20T08:52:02.091077"
      },
      {
        "path": "tests\\test_skills.py",
        "size": 15754,
        "extension": ".py",
        "modified": "2025-10-20T08:51:41.884161"
      },
      {
        "path": "tests\\test_workflows.py",
        "size": 9626,
        "extension": ".py",
        "modified": "2025-10-20T09:12:42.868421"
      },
      {
        "path": "tests\\__init__.py",
        "size": 1088,
        "extension": ".py",
        "modified": "2025-10-20T02:15:36.195084"
      },
      {
        "path": "ui\\modern_styles.py",
        "size": 13887,
        "extension": ".py",
        "modified": "2025-10-20T09:07:05.455163"
      },
      {
        "path": "ui\\modern_ui_manager.py",
        "size": 9920,
        "extension": ".py",
        "modified": "2025-10-20T09:08:35.471837"
      },
      {
        "path": "ui\\__init__.py",
        "size": 481,
        "extension": ".py",
        "modified": "2025-10-20T09:32:22.488979"
      },
      {
        "path": "ui\\components\\agent_monitor.py",
        "size": 17115,
        "extension": ".py",
        "modified": "2025-10-20T03:15:49.367140"
      },
      {
        "path": "ui\\components\\analysis_dashboard.py",
        "size": 12888,
        "extension": ".py",
        "modified": "2025-10-20T03:15:49.360324"
      },
      {
        "path": "ui\\components\\chat_interface.py",
        "size": 12744,
        "extension": ".py",
        "modified": "2025-10-20T06:43:08.668805"
      },
      {
        "path": "ui\\components\\modern_project_selector.py",
        "size": 8493,
        "extension": ".py",
        "modified": "2025-10-20T05:33:29.930298"
      },
      {
        "path": "ui\\components\\optimization_view.py",
        "size": 16752,
        "extension": ".py",
        "modified": "2025-10-20T03:15:49.366091"
      },
      {
        "path": "ui\\components\\progress_monitor.py",
        "size": 11244,
        "extension": ".py",
        "modified": "2025-10-20T06:59:44.279724"
      },
      {
        "path": "ui\\components\\settings_panel.py",
        "size": 15367,
        "extension": ".py",
        "modified": "2025-10-20T05:40:23.643203"
      },
      {
        "path": "ui\\components\\status_widget.py",
        "size": 2210,
        "extension": ".py",
        "modified": "2025-10-20T04:58:36.314082"
      },
      {
        "path": "ui\\components\\__init__.py",
        "size": 404,
        "extension": ".py",
        "modified": "2025-10-20T09:32:40.219756"
      },
      {
        "path": "ui\\pages\\dashboard_page.py",
        "size": 10319,
        "extension": ".py",
        "modified": "2025-10-20T09:09:14.945678"
      },
      {
        "path": "ui\\pages\\__init__.py",
        "size": 40,
        "extension": ".py",
        "modified": "2025-10-20T09:08:41.444251"
      },
      {
        "path": "workflows\\base_workflow.py",
        "size": 4480,
        "extension": ".py",
        "modified": "2025-10-20T06:57:53.499096"
      },
      {
        "path": "workflows\\project_analysis_workflow.py",
        "size": 7035,
        "extension": ".py",
        "modified": "2025-10-20T06:58:46.860023"
      },
      {
        "path": "workflows\\simple_analysis_workflow.py",
        "size": 2356,
        "extension": ".py",
        "modified": "2025-10-20T07:28:24.462090"
      },
      {
        "path": "workflows\\__init__.py",
        "size": 21,
        "extension": ".py",
        "modified": "2025-10-20T04:26:29.527853"
      }
    ],
    "directories": [
      ".benchmarks",
      ".claude",
      ".streamlit",
      ".swarm",
      "agents",
      "analysis_output",
      "analyzers",
      "commands",
      "docs",
      "etc",
      "generators",
      "hooks",
      "llm",
      "mcps",
      "monitoring",
      "optimization",
      "orchestrator",
      "output",
      "plugins",
      "routes",
      "Scripts",
      "services",
      "settings",
      "share",
      "skills",
      "test-project",
      "tests",
      "ui",
      "workflows",
      ".claude\\agents",
      ".claude\\commands",
      ".claude\\scripts",
      ".claude\\skills",
      ".claude\\skills\\algorithmic-art",
      ".claude\\skills\\brand-guidelines",
      ".claude\\skills\\canvas-design",
      ".claude\\skills\\docx",
      ".claude\\skills\\git-commit-helper",
      ".claude\\skills\\pdf-anthropic",
      ".claude\\skills\\skill-creator",
      ".claude\\skills\\slack-gif-creator",
      ".claude\\skills\\theme-factory",
      ".claude\\skills\\webapp-testing",
      ".claude\\skills\\algorithmic-art\\templates",
      ".claude\\skills\\canvas-design\\canvas-fonts",
      ".claude\\skills\\docx\\ooxml",
      ".claude\\skills\\docx\\scripts",
      ".claude\\skills\\docx\\ooxml\\schemas",
      ".claude\\skills\\docx\\ooxml\\scripts",
      ".claude\\skills\\docx\\ooxml\\schemas\\ecma",
      ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016",
      ".claude\\skills\\docx\\ooxml\\schemas\\mce",
      ".claude\\skills\\docx\\ooxml\\schemas\\microsoft",
      ".claude\\skills\\docx\\ooxml\\schemas\\ecma\\fouth-edition",
      ".claude\\skills\\docx\\ooxml\\scripts\\validation",
      ".claude\\skills\\docx\\scripts\\templates",
      ".claude\\skills\\pdf-anthropic\\scripts",
      ".claude\\skills\\skill-creator\\scripts",
      ".claude\\skills\\slack-gif-creator\\core",
      ".claude\\skills\\slack-gif-creator\\templates",
      ".claude\\skills\\theme-factory\\themes",
      ".claude\\skills\\webapp-testing\\examples",
      ".claude\\skills\\webapp-testing\\scripts",
      "etc\\jupyter",
      "etc\\jupyter\\nbconfig",
      "etc\\jupyter\\nbconfig\\notebook.d",
      "output\\artifacts",
      "share\\jupyter",
      "share\\jupyter\\nbextensions",
      "share\\jupyter\\nbextensions\\pydeck",
      "ui\\components",
      "ui\\pages"
    ],
    "file_types": {
      "": 3,
      ".json": 5,
      ".py": 120,
      ".md": 72,
      ".yml": 3,
      ".ini": 1,
      ".txt": 38,
      ".sh": 1,
      ".bat": 5,
      ".js": 3,
      ".html": 1,
      ".ttf": 53,
      ".xsd": 39,
      ".xml": 5,
      ".pdf": 1,
      ".toml": 1,
      ".exe": 11,
      ".cmd": 1
    },
    "ignored_files": [
      ".gitignore",
      ".pytest_cache",
      ".vscode",
      "config.env",
      "Lib",
      "__pycache__",
      ".claude\\skills\\artifacts-builder",
      ".claude\\skills\\artifacts-builder\\LICENSE.txt",
      ".claude\\skills\\artifacts-builder\\scripts",
      ".claude\\skills\\artifacts-builder\\SKILL.md",
      ".claude\\skills\\artifacts-builder\\scripts\\bundle-artifact.sh",
      ".claude\\skills\\artifacts-builder\\scripts\\init-artifact.sh",
      ".claude\\skills\\artifacts-builder\\scripts\\shadcn-components.tar.gz",
      ".claude\\skills\\canvas-design\\canvas-fonts\\LibreBaskerville-OFL.txt",
      ".claude\\skills\\canvas-design\\canvas-fonts\\LibreBaskerville-Regular.ttf",
      ".claude\\skills\\slack-gif-creator\\core\\gif_builder.py",
      ".pytest_cache\\.gitignore",
      ".pytest_cache\\CACHEDIR.TAG",
      ".pytest_cache\\README.md",
      ".pytest_cache\\v",
      ".pytest_cache\\v\\cache",
      ".pytest_cache\\v\\cache\\lastfailed",
      ".pytest_cache\\v\\cache\\nodeids",
      ".pytest_cache\\v\\cache\\stepwise",
      ".vscode\\settings.json",
      "agents\\__pycache__",
      "agents\\__pycache__\\example_agent.cpython-311.pyc",
      "agents\\__pycache__\\project_manager_agent.cpython-311.pyc",
      "agents\\__pycache__\\__init__.cpython-311.pyc",
      "analyzers\\__pycache__",
      "analyzers\\__pycache__\\api_analyzer.cpython-311.pyc",
      "analyzers\\__pycache__\\ast_analyzer.cpython-311.pyc",
      "analyzers\\__pycache__\\database_analyzer.cpython-311.pyc",
      "analyzers\\__pycache__\\dependency_analyzer.cpython-311.pyc",
      "analyzers\\__pycache__\\framework_detector.cpython-311.pyc",
      "analyzers\\__pycache__\\language_detector.cpython-311.pyc",
      "analyzers\\__pycache__\\project_analyzer.cpython-311.pyc",
      "analyzers\\__pycache__\\__init__.cpython-311.pyc",
      "generators\\__pycache__",
      "generators\\__pycache__\\agent_generator.cpython-311.pyc",
      "generators\\__pycache__\\skill_generator.cpython-311.pyc",
      "generators\\__pycache__\\skill_templates.cpython-311.pyc",
      "generators\\__pycache__\\workflow_generator.cpython-311.pyc",
      "generators\\__pycache__\\__init__.cpython-311.pyc",
      "Lib\\site-packages",
      "Lib\\site-packages\\.DS_Store",
      "Lib\\site-packages\\aiohappyeyeballs",
      "Lib\\site-packages\\aiohappyeyeballs-2.6.1.dist-info",
      "Lib\\site-packages\\aiohttp",
      "Lib\\site-packages\\aiohttp-3.13.1.dist-info",
      "Lib\\site-packages\\aiosignal",
      "Lib\\site-packages\\aiosignal-1.4.0.dist-info",
      "Lib\\site-packages\\altair",
      "Lib\\site-packages\\altair-5.5.0.dist-info",
      "Lib\\site-packages\\annotated_types",
      "Lib\\site-packages\\annotated_types-0.7.0.dist-info",
      "Lib\\site-packages\\anyio",
      "Lib\\site-packages\\anyio-4.11.0.dist-info",
      "Lib\\site-packages\\attr",
      "Lib\\site-packages\\attrs",
      "Lib\\site-packages\\attrs-25.4.0.dist-info",
      "Lib\\site-packages\\blinker",
      "Lib\\site-packages\\blinker-1.9.0.dist-info",
      "Lib\\site-packages\\cachetools",
      "Lib\\site-packages\\cachetools-6.2.1.dist-info",
      "Lib\\site-packages\\certifi",
      "Lib\\site-packages\\certifi-2025.10.5.dist-info",
      "Lib\\site-packages\\charset_normalizer",
      "Lib\\site-packages\\charset_normalizer-3.4.4.dist-info",
      "Lib\\site-packages\\click",
      "Lib\\site-packages\\click-8.3.0.dist-info",
      "Lib\\site-packages\\colorama",
      "Lib\\site-packages\\colorama-0.4.6.dist-info",
      "Lib\\site-packages\\dateutil",
      "Lib\\site-packages\\dotenv",
      "Lib\\site-packages\\fastapi",
      "Lib\\site-packages\\fastapi-0.119.0.dist-info",
      "Lib\\site-packages\\frozenlist",
      "Lib\\site-packages\\frozenlist-1.8.0.dist-info",
      "Lib\\site-packages\\git",
      "Lib\\site-packages\\gitdb",
      "Lib\\site-packages\\gitdb-4.0.12.dist-info",
      "Lib\\site-packages\\gitpython-3.1.45.dist-info",
      "Lib\\site-packages\\google",
      "Lib\\site-packages\\h11",
      "Lib\\site-packages\\h11-0.16.0.dist-info",
      "Lib\\site-packages\\idna",
      "Lib\\site-packages\\idna-3.11.dist-info",
      "Lib\\site-packages\\jinja2",
      "Lib\\site-packages\\jinja2-3.1.6.dist-info",
      "Lib\\site-packages\\jsonschema",
      "Lib\\site-packages\\jsonschema-4.25.1.dist-info",
      "Lib\\site-packages\\jsonschema_specifications",
      "Lib\\site-packages\\jsonschema_specifications-2025.9.1.dist-info",
      "Lib\\site-packages\\markupsafe",
      "Lib\\site-packages\\markupsafe-3.0.3.dist-info",
      "Lib\\site-packages\\multidict",
      "Lib\\site-packages\\multidict-6.7.0.dist-info",
      "Lib\\site-packages\\narwhals",
      "Lib\\site-packages\\narwhals-2.8.0.dist-info",
      "Lib\\site-packages\\numpy",
      "Lib\\site-packages\\numpy-2.3.4.dist-info",
      "Lib\\site-packages\\numpy.libs",
      "Lib\\site-packages\\packaging",
      "Lib\\site-packages\\packaging-25.0.dist-info",
      "Lib\\site-packages\\pandas",
      "Lib\\site-packages\\pandas-2.3.3.dist-info",
      "Lib\\site-packages\\pandas.libs",
      "Lib\\site-packages\\PIL",
      "Lib\\site-packages\\pillow-11.3.0.dist-info",
      "Lib\\site-packages\\pip",
      "Lib\\site-packages\\pip-25.2.dist-info",
      "Lib\\site-packages\\propcache",
      "Lib\\site-packages\\propcache-0.4.1.dist-info",
      "Lib\\site-packages\\protobuf-6.33.0.dist-info",
      "Lib\\site-packages\\pyarrow",
      "Lib\\site-packages\\pyarrow-21.0.0.dist-info",
      "Lib\\site-packages\\pyarrow.libs",
      "Lib\\site-packages\\pydantic",
      "Lib\\site-packages\\pydantic-2.12.3.dist-info",
      "Lib\\site-packages\\pydantic_core",
      "Lib\\site-packages\\pydantic_core-2.41.4.dist-info",
      "Lib\\site-packages\\pydeck",
      "Lib\\site-packages\\pydeck-0.9.1.dist-info",
      "Lib\\site-packages\\python_dateutil-2.9.0.post0.dist-info",
      "Lib\\site-packages\\python_dotenv-1.1.1.dist-info",
      "Lib\\site-packages\\pytz",
      "Lib\\site-packages\\pytz-2025.2.dist-info",
      "Lib\\site-packages\\referencing",
      "Lib\\site-packages\\referencing-0.37.0.dist-info",
      "Lib\\site-packages\\requests",
      "Lib\\site-packages\\requests-2.32.5.dist-info",
      "Lib\\site-packages\\rpds",
      "Lib\\site-packages\\rpds_py-0.27.1.dist-info",
      "Lib\\site-packages\\six-1.17.0.dist-info",
      "Lib\\site-packages\\six.py",
      "Lib\\site-packages\\smmap",
      "Lib\\site-packages\\smmap-5.0.2.dist-info",
      "Lib\\site-packages\\sniffio",
      "Lib\\site-packages\\sniffio-1.3.1.dist-info",
      "Lib\\site-packages\\starlette",
      "Lib\\site-packages\\starlette-0.48.0.dist-info",
      "Lib\\site-packages\\streamlit",
      "Lib\\site-packages\\streamlit-1.50.0.dist-info",
      "Lib\\site-packages\\tenacity",
      "Lib\\site-packages\\tenacity-9.1.2.dist-info",
      "Lib\\site-packages\\toml",
      "Lib\\site-packages\\toml-0.10.2.dist-info",
      "Lib\\site-packages\\tornado",
      "Lib\\site-packages\\tornado-6.5.2.dist-info",
      "Lib\\site-packages\\typing_extensions-4.15.0.dist-info",
      "Lib\\site-packages\\typing_extensions.py",
      "Lib\\site-packages\\typing_inspection",
      "Lib\\site-packages\\typing_inspection-0.4.2.dist-info",
      "Lib\\site-packages\\tzdata",
      "Lib\\site-packages\\tzdata-2025.2.dist-info",
      "Lib\\site-packages\\urllib3",
      "Lib\\site-packages\\urllib3-2.5.0.dist-info",
      "Lib\\site-packages\\uvicorn",
      "Lib\\site-packages\\uvicorn-0.38.0.dist-info",
      "Lib\\site-packages\\watchdog",
      "Lib\\site-packages\\watchdog-6.0.0.dist-info",
      "Lib\\site-packages\\yarl",
      "Lib\\site-packages\\yarl-1.22.0.dist-info",
      "Lib\\site-packages\\aiohappyeyeballs\\impl.py",
      "Lib\\site-packages\\aiohappyeyeballs\\py.typed",
      "Lib\\site-packages\\aiohappyeyeballs\\types.py",
      "Lib\\site-packages\\aiohappyeyeballs\\utils.py",
      "Lib\\site-packages\\aiohappyeyeballs\\_staggered.py",
      "Lib\\site-packages\\aiohappyeyeballs\\__init__.py",
      "Lib\\site-packages\\aiohappyeyeballs-2.6.1.dist-info\\INSTALLER",
      "Lib\\site-packages\\aiohappyeyeballs-2.6.1.dist-info\\LICENSE",
      "Lib\\site-packages\\aiohappyeyeballs-2.6.1.dist-info\\METADATA",
      "Lib\\site-packages\\aiohappyeyeballs-2.6.1.dist-info\\RECORD",
      "Lib\\site-packages\\aiohappyeyeballs-2.6.1.dist-info\\WHEEL",
      "Lib\\site-packages\\aiohttp\\.hash",
      "Lib\\site-packages\\aiohttp\\abc.py",
      "Lib\\site-packages\\aiohttp\\base_protocol.py",
      "Lib\\site-packages\\aiohttp\\client.py",
      "Lib\\site-packages\\aiohttp\\client_exceptions.py",
      "Lib\\site-packages\\aiohttp\\client_middlewares.py",
      "Lib\\site-packages\\aiohttp\\client_middleware_digest_auth.py",
      "Lib\\site-packages\\aiohttp\\client_proto.py",
      "Lib\\site-packages\\aiohttp\\client_reqrep.py",
      "Lib\\site-packages\\aiohttp\\client_ws.py",
      "Lib\\site-packages\\aiohttp\\compression_utils.py",
      "Lib\\site-packages\\aiohttp\\connector.py",
      "Lib\\site-packages\\aiohttp\\cookiejar.py",
      "Lib\\site-packages\\aiohttp\\formdata.py",
      "Lib\\site-packages\\aiohttp\\hdrs.py",
      "Lib\\site-packages\\aiohttp\\helpers.py",
      "Lib\\site-packages\\aiohttp\\http.py",
      "Lib\\site-packages\\aiohttp\\http_exceptions.py",
      "Lib\\site-packages\\aiohttp\\http_parser.py",
      "Lib\\site-packages\\aiohttp\\http_websocket.py",
      "Lib\\site-packages\\aiohttp\\http_writer.py",
      "Lib\\site-packages\\aiohttp\\log.py",
      "Lib\\site-packages\\aiohttp\\multipart.py",
      "Lib\\site-packages\\aiohttp\\payload.py",
      "Lib\\site-packages\\aiohttp\\payload_streamer.py",
      "Lib\\site-packages\\aiohttp\\py.typed",
      "Lib\\site-packages\\aiohttp\\pytest_plugin.py",
      "Lib\\site-packages\\aiohttp\\resolver.py",
      "Lib\\site-packages\\aiohttp\\streams.py",
      "Lib\\site-packages\\aiohttp\\tcp_helpers.py",
      "Lib\\site-packages\\aiohttp\\test_utils.py",
      "Lib\\site-packages\\aiohttp\\tracing.py",
      "Lib\\site-packages\\aiohttp\\typedefs.py",
      "Lib\\site-packages\\aiohttp\\web.py",
      "Lib\\site-packages\\aiohttp\\web_app.py",
      "Lib\\site-packages\\aiohttp\\web_exceptions.py",
      "Lib\\site-packages\\aiohttp\\web_fileresponse.py",
      "Lib\\site-packages\\aiohttp\\web_log.py",
      "Lib\\site-packages\\aiohttp\\web_middlewares.py",
      "Lib\\site-packages\\aiohttp\\web_protocol.py",
      "Lib\\site-packages\\aiohttp\\web_request.py",
      "Lib\\site-packages\\aiohttp\\web_response.py",
      "Lib\\site-packages\\aiohttp\\web_routedef.py",
      "Lib\\site-packages\\aiohttp\\web_runner.py",
      "Lib\\site-packages\\aiohttp\\web_server.py",
      "Lib\\site-packages\\aiohttp\\web_urldispatcher.py",
      "Lib\\site-packages\\aiohttp\\web_ws.py",
      "Lib\\site-packages\\aiohttp\\worker.py",
      "Lib\\site-packages\\aiohttp\\_cookie_helpers.py",
      "Lib\\site-packages\\aiohttp\\_cparser.pxd",
      "Lib\\site-packages\\aiohttp\\_find_header.pxd",
      "Lib\\site-packages\\aiohttp\\_headers.pxi",
      "Lib\\site-packages\\aiohttp\\_http_parser.cp313-win_amd64.pyd",
      "Lib\\site-packages\\aiohttp\\_http_parser.pyx",
      "Lib\\site-packages\\aiohttp\\_http_writer.cp313-win_amd64.pyd",
      "Lib\\site-packages\\aiohttp\\_http_writer.pyx",
      "Lib\\site-packages\\aiohttp\\_websocket",
      "Lib\\site-packages\\aiohttp\\__init__.py",
      "Lib\\site-packages\\aiohttp\\.hash\\hdrs.py.hash",
      "Lib\\site-packages\\aiohttp\\.hash\\_cparser.pxd.hash",
      "Lib\\site-packages\\aiohttp\\.hash\\_find_header.pxd.hash",
      "Lib\\site-packages\\aiohttp\\.hash\\_http_parser.pyx.hash",
      "Lib\\site-packages\\aiohttp\\.hash\\_http_writer.pyx.hash",
      "Lib\\site-packages\\aiohttp\\_websocket\\.hash",
      "Lib\\site-packages\\aiohttp\\_websocket\\helpers.py",
      "Lib\\site-packages\\aiohttp\\_websocket\\mask.cp313-win_amd64.pyd",
      "Lib\\site-packages\\aiohttp\\_websocket\\mask.pxd",
      "Lib\\site-packages\\aiohttp\\_websocket\\mask.pyx",
      "Lib\\site-packages\\aiohttp\\_websocket\\models.py",
      "Lib\\site-packages\\aiohttp\\_websocket\\reader.py",
      "Lib\\site-packages\\aiohttp\\_websocket\\reader_c.cp313-win_amd64.pyd",
      "Lib\\site-packages\\aiohttp\\_websocket\\reader_c.pxd",
      "Lib\\site-packages\\aiohttp\\_websocket\\reader_c.py",
      "Lib\\site-packages\\aiohttp\\_websocket\\reader_py.py",
      "Lib\\site-packages\\aiohttp\\_websocket\\writer.py",
      "Lib\\site-packages\\aiohttp\\_websocket\\__init__.py",
      "Lib\\site-packages\\aiohttp\\_websocket\\.hash\\mask.pxd.hash",
      "Lib\\site-packages\\aiohttp\\_websocket\\.hash\\mask.pyx.hash",
      "Lib\\site-packages\\aiohttp\\_websocket\\.hash\\reader_c.pxd.hash",
      "Lib\\site-packages\\aiohttp-3.13.1.dist-info\\INSTALLER",
      "Lib\\site-packages\\aiohttp-3.13.1.dist-info\\licenses",
      "Lib\\site-packages\\aiohttp-3.13.1.dist-info\\METADATA",
      "Lib\\site-packages\\aiohttp-3.13.1.dist-info\\RECORD",
      "Lib\\site-packages\\aiohttp-3.13.1.dist-info\\REQUESTED",
      "Lib\\site-packages\\aiohttp-3.13.1.dist-info\\top_level.txt",
      "Lib\\site-packages\\aiohttp-3.13.1.dist-info\\WHEEL",
      "Lib\\site-packages\\aiohttp-3.13.1.dist-info\\licenses\\LICENSE.txt",
      "Lib\\site-packages\\aiohttp-3.13.1.dist-info\\licenses\\vendor",
      "Lib\\site-packages\\aiohttp-3.13.1.dist-info\\licenses\\vendor\\llhttp",
      "Lib\\site-packages\\aiohttp-3.13.1.dist-info\\licenses\\vendor\\llhttp\\LICENSE",
      "Lib\\site-packages\\aiosignal\\py.typed",
      "Lib\\site-packages\\aiosignal\\__init__.py",
      "Lib\\site-packages\\aiosignal-1.4.0.dist-info\\INSTALLER",
      "Lib\\site-packages\\aiosignal-1.4.0.dist-info\\licenses",
      "Lib\\site-packages\\aiosignal-1.4.0.dist-info\\METADATA",
      "Lib\\site-packages\\aiosignal-1.4.0.dist-info\\RECORD",
      "Lib\\site-packages\\aiosignal-1.4.0.dist-info\\top_level.txt",
      "Lib\\site-packages\\aiosignal-1.4.0.dist-info\\WHEEL",
      "Lib\\site-packages\\aiosignal-1.4.0.dist-info\\licenses\\LICENSE",
      "Lib\\site-packages\\altair\\expr",
      "Lib\\site-packages\\altair\\jupyter",
      "Lib\\site-packages\\altair\\py.typed",
      "Lib\\site-packages\\altair\\theme.py",
      "Lib\\site-packages\\altair\\typing",
      "Lib\\site-packages\\altair\\utils",
      "Lib\\site-packages\\altair\\vegalite",
      "Lib\\site-packages\\altair\\_magics.py",
      "Lib\\site-packages\\altair\\__init__.py",
      "Lib\\site-packages\\altair\\expr\\consts.py",
      "Lib\\site-packages\\altair\\expr\\core.py",
      "Lib\\site-packages\\altair\\expr\\funcs.py",
      "Lib\\site-packages\\altair\\expr\\__init__.py",
      "Lib\\site-packages\\altair\\jupyter\\js",
      "Lib\\site-packages\\altair\\jupyter\\jupyter_chart.py",
      "Lib\\site-packages\\altair\\jupyter\\__init__.py",
      "Lib\\site-packages\\altair\\jupyter\\js\\index.js",
      "Lib\\site-packages\\altair\\jupyter\\js\\README.md",
      "Lib\\site-packages\\altair\\typing\\__init__.py",
      "Lib\\site-packages\\altair\\utils\\compiler.py",
      "Lib\\site-packages\\altair\\utils\\core.py",
      "Lib\\site-packages\\altair\\utils\\data.py",
      "Lib\\site-packages\\altair\\utils\\deprecation.py",
      "Lib\\site-packages\\altair\\utils\\display.py",
      "Lib\\site-packages\\altair\\utils\\execeval.py",
      "Lib\\site-packages\\altair\\utils\\html.py",
      "Lib\\site-packages\\altair\\utils\\mimebundle.py",
      "Lib\\site-packages\\altair\\utils\\plugin_registry.py",
      "Lib\\site-packages\\altair\\utils\\save.py",
      "Lib\\site-packages\\altair\\utils\\schemapi.py",
      "Lib\\site-packages\\altair\\utils\\selection.py",
      "Lib\\site-packages\\altair\\utils\\server.py",
      "Lib\\site-packages\\altair\\utils\\_dfi_types.py",
      "Lib\\site-packages\\altair\\utils\\_importers.py",
      "Lib\\site-packages\\altair\\utils\\_show.py",
      "Lib\\site-packages\\altair\\utils\\_transformed_data.py",
      "Lib\\site-packages\\altair\\utils\\_vegafusion_data.py",
      "Lib\\site-packages\\altair\\utils\\__init__.py",
      "Lib\\site-packages\\altair\\vegalite\\api.py",
      "Lib\\site-packages\\altair\\vegalite\\data.py",
      "Lib\\site-packages\\altair\\vegalite\\display.py",
      "Lib\\site-packages\\altair\\vegalite\\schema.py",
      "Lib\\site-packages\\altair\\vegalite\\v5",
      "Lib\\site-packages\\altair\\vegalite\\__init__.py",
      "Lib\\site-packages\\altair\\vegalite\\v5\\api.py",
      "Lib\\site-packages\\altair\\vegalite\\v5\\compiler.py",
      "Lib\\site-packages\\altair\\vegalite\\v5\\data.py",
      "Lib\\site-packages\\altair\\vegalite\\v5\\display.py",
      "Lib\\site-packages\\altair\\vegalite\\v5\\schema",
      "Lib\\site-packages\\altair\\vegalite\\v5\\theme.py",
      "Lib\\site-packages\\altair\\vegalite\\v5\\__init__.py",
      "Lib\\site-packages\\altair\\vegalite\\v5\\schema\\channels.py",
      "Lib\\site-packages\\altair\\vegalite\\v5\\schema\\core.py",
      "Lib\\site-packages\\altair\\vegalite\\v5\\schema\\mixins.py",
      "Lib\\site-packages\\altair\\vegalite\\v5\\schema\\vega-lite-schema.json",
      "Lib\\site-packages\\altair\\vegalite\\v5\\schema\\vega-themes.json",
      "Lib\\site-packages\\altair\\vegalite\\v5\\schema\\_config.py",
      "Lib\\site-packages\\altair\\vegalite\\v5\\schema\\_typing.py",
      "Lib\\site-packages\\altair\\vegalite\\v5\\schema\\__init__.py",
      "Lib\\site-packages\\altair-5.5.0.dist-info\\INSTALLER",
      "Lib\\site-packages\\altair-5.5.0.dist-info\\licenses",
      "Lib\\site-packages\\altair-5.5.0.dist-info\\METADATA",
      "Lib\\site-packages\\altair-5.5.0.dist-info\\RECORD",
      "Lib\\site-packages\\altair-5.5.0.dist-info\\WHEEL",
      "Lib\\site-packages\\altair-5.5.0.dist-info\\licenses\\LICENSE",
      "Lib\\site-packages\\annotated_types\\py.typed",
      "Lib\\site-packages\\annotated_types\\test_cases.py",
      "Lib\\site-packages\\annotated_types\\__init__.py",
      "Lib\\site-packages\\annotated_types-0.7.0.dist-info\\INSTALLER",
      "Lib\\site-packages\\annotated_types-0.7.0.dist-info\\licenses",
      "Lib\\site-packages\\annotated_types-0.7.0.dist-info\\METADATA",
      "Lib\\site-packages\\annotated_types-0.7.0.dist-info\\RECORD",
      "Lib\\site-packages\\annotated_types-0.7.0.dist-info\\WHEEL",
      "Lib\\site-packages\\annotated_types-0.7.0.dist-info\\licenses\\LICENSE",
      "Lib\\site-packages\\anyio\\abc",
      "Lib\\site-packages\\anyio\\from_thread.py",
      "Lib\\site-packages\\anyio\\lowlevel.py",
      "Lib\\site-packages\\anyio\\py.typed",
      "Lib\\site-packages\\anyio\\pytest_plugin.py",
      "Lib\\site-packages\\anyio\\streams",
      "Lib\\site-packages\\anyio\\to_interpreter.py",
      "Lib\\site-packages\\anyio\\to_process.py",
      "Lib\\site-packages\\anyio\\to_thread.py",
      "Lib\\site-packages\\anyio\\_backends",
      "Lib\\site-packages\\anyio\\_core",
      "Lib\\site-packages\\anyio\\__init__.py",
      "Lib\\site-packages\\anyio\\abc\\_eventloop.py",
      "Lib\\site-packages\\anyio\\abc\\_resources.py",
      "Lib\\site-packages\\anyio\\abc\\_sockets.py",
      "Lib\\site-packages\\anyio\\abc\\_streams.py",
      "Lib\\site-packages\\anyio\\abc\\_subprocesses.py",
      "Lib\\site-packages\\anyio\\abc\\_tasks.py",
      "Lib\\site-packages\\anyio\\abc\\_testing.py",
      "Lib\\site-packages\\anyio\\abc\\__init__.py",
      "Lib\\site-packages\\anyio\\streams\\buffered.py",
      "Lib\\site-packages\\anyio\\streams\\file.py",
      "Lib\\site-packages\\anyio\\streams\\memory.py",
      "Lib\\site-packages\\anyio\\streams\\stapled.py",
      "Lib\\site-packages\\anyio\\streams\\text.py",
      "Lib\\site-packages\\anyio\\streams\\tls.py",
      "Lib\\site-packages\\anyio\\streams\\__init__.py",
      "Lib\\site-packages\\anyio\\_backends\\_asyncio.py",
      "Lib\\site-packages\\anyio\\_backends\\_trio.py",
      "Lib\\site-packages\\anyio\\_backends\\__init__.py",
      "Lib\\site-packages\\anyio\\_core\\_asyncio_selector_thread.py",
      "Lib\\site-packages\\anyio\\_core\\_contextmanagers.py",
      "Lib\\site-packages\\anyio\\_core\\_eventloop.py",
      "Lib\\site-packages\\anyio\\_core\\_exceptions.py",
      "Lib\\site-packages\\anyio\\_core\\_fileio.py",
      "Lib\\site-packages\\anyio\\_core\\_resources.py",
      "Lib\\site-packages\\anyio\\_core\\_signals.py",
      "Lib\\site-packages\\anyio\\_core\\_sockets.py",
      "Lib\\site-packages\\anyio\\_core\\_streams.py",
      "Lib\\site-packages\\anyio\\_core\\_subprocesses.py",
      "Lib\\site-packages\\anyio\\_core\\_synchronization.py",
      "Lib\\site-packages\\anyio\\_core\\_tasks.py",
      "Lib\\site-packages\\anyio\\_core\\_tempfile.py",
      "Lib\\site-packages\\anyio\\_core\\_testing.py",
      "Lib\\site-packages\\anyio\\_core\\_typedattr.py",
      "Lib\\site-packages\\anyio\\_core\\__init__.py",
      "Lib\\site-packages\\anyio-4.11.0.dist-info\\entry_points.txt",
      "Lib\\site-packages\\anyio-4.11.0.dist-info\\INSTALLER",
      "Lib\\site-packages\\anyio-4.11.0.dist-info\\licenses",
      "Lib\\site-packages\\anyio-4.11.0.dist-info\\METADATA",
      "Lib\\site-packages\\anyio-4.11.0.dist-info\\RECORD",
      "Lib\\site-packages\\anyio-4.11.0.dist-info\\top_level.txt",
      "Lib\\site-packages\\anyio-4.11.0.dist-info\\WHEEL",
      "Lib\\site-packages\\anyio-4.11.0.dist-info\\licenses\\LICENSE",
      "Lib\\site-packages\\attr\\converters.py",
      "Lib\\site-packages\\attr\\converters.pyi",
      "Lib\\site-packages\\attr\\exceptions.py",
      "Lib\\site-packages\\attr\\exceptions.pyi",
      "Lib\\site-packages\\attr\\filters.py",
      "Lib\\site-packages\\attr\\filters.pyi",
      "Lib\\site-packages\\attr\\py.typed",
      "Lib\\site-packages\\attr\\setters.py",
      "Lib\\site-packages\\attr\\setters.pyi",
      "Lib\\site-packages\\attr\\validators.py",
      "Lib\\site-packages\\attr\\validators.pyi",
      "Lib\\site-packages\\attr\\_cmp.py",
      "Lib\\site-packages\\attr\\_cmp.pyi",
      "Lib\\site-packages\\attr\\_compat.py",
      "Lib\\site-packages\\attr\\_config.py",
      "Lib\\site-packages\\attr\\_funcs.py",
      "Lib\\site-packages\\attr\\_make.py",
      "Lib\\site-packages\\attr\\_next_gen.py",
      "Lib\\site-packages\\attr\\_typing_compat.pyi",
      "Lib\\site-packages\\attr\\_version_info.py",
      "Lib\\site-packages\\attr\\_version_info.pyi",
      "Lib\\site-packages\\attr\\__init__.py",
      "Lib\\site-packages\\attr\\__init__.pyi",
      "Lib\\site-packages\\attrs\\converters.py",
      "Lib\\site-packages\\attrs\\exceptions.py",
      "Lib\\site-packages\\attrs\\filters.py",
      "Lib\\site-packages\\attrs\\py.typed",
      "Lib\\site-packages\\attrs\\setters.py",
      "Lib\\site-packages\\attrs\\validators.py",
      "Lib\\site-packages\\attrs\\__init__.py",
      "Lib\\site-packages\\attrs\\__init__.pyi",
      "Lib\\site-packages\\attrs-25.4.0.dist-info\\INSTALLER",
      "Lib\\site-packages\\attrs-25.4.0.dist-info\\licenses",
      "Lib\\site-packages\\attrs-25.4.0.dist-info\\METADATA",
      "Lib\\site-packages\\attrs-25.4.0.dist-info\\RECORD",
      "Lib\\site-packages\\attrs-25.4.0.dist-info\\WHEEL",
      "Lib\\site-packages\\attrs-25.4.0.dist-info\\licenses\\LICENSE",
      "Lib\\site-packages\\blinker\\base.py",
      "Lib\\site-packages\\blinker\\py.typed",
      "Lib\\site-packages\\blinker\\_utilities.py",
      "Lib\\site-packages\\blinker\\__init__.py",
      "Lib\\site-packages\\blinker-1.9.0.dist-info\\INSTALLER",
      "Lib\\site-packages\\blinker-1.9.0.dist-info\\LICENSE.txt",
      "Lib\\site-packages\\blinker-1.9.0.dist-info\\METADATA",
      "Lib\\site-packages\\blinker-1.9.0.dist-info\\RECORD",
      "Lib\\site-packages\\blinker-1.9.0.dist-info\\WHEEL",
      "Lib\\site-packages\\cachetools\\func.py",
      "Lib\\site-packages\\cachetools\\keys.py",
      "Lib\\site-packages\\cachetools\\_cached.py",
      "Lib\\site-packages\\cachetools\\_cachedmethod.py",
      "Lib\\site-packages\\cachetools\\__init__.py",
      "Lib\\site-packages\\cachetools-6.2.1.dist-info\\INSTALLER",
      "Lib\\site-packages\\cachetools-6.2.1.dist-info\\licenses",
      "Lib\\site-packages\\cachetools-6.2.1.dist-info\\METADATA",
      "Lib\\site-packages\\cachetools-6.2.1.dist-info\\RECORD",
      "Lib\\site-packages\\cachetools-6.2.1.dist-info\\top_level.txt",
      "Lib\\site-packages\\cachetools-6.2.1.dist-info\\WHEEL",
      "Lib\\site-packages\\cachetools-6.2.1.dist-info\\licenses\\LICENSE",
      "Lib\\site-packages\\certifi\\cacert.pem",
      "Lib\\site-packages\\certifi\\core.py",
      "Lib\\site-packages\\certifi\\py.typed",
      "Lib\\site-packages\\certifi\\__init__.py",
      "Lib\\site-packages\\certifi\\__main__.py",
      "Lib\\site-packages\\certifi-2025.10.5.dist-info\\INSTALLER",
      "Lib\\site-packages\\certifi-2025.10.5.dist-info\\licenses",
      "Lib\\site-packages\\certifi-2025.10.5.dist-info\\METADATA",
      "Lib\\site-packages\\certifi-2025.10.5.dist-info\\RECORD",
      "Lib\\site-packages\\certifi-2025.10.5.dist-info\\top_level.txt",
      "Lib\\site-packages\\certifi-2025.10.5.dist-info\\WHEEL",
      "Lib\\site-packages\\certifi-2025.10.5.dist-info\\licenses\\LICENSE",
      "Lib\\site-packages\\charset_normalizer\\api.py",
      "Lib\\site-packages\\charset_normalizer\\cd.py",
      "Lib\\site-packages\\charset_normalizer\\cli",
      "Lib\\site-packages\\charset_normalizer\\constant.py",
      "Lib\\site-packages\\charset_normalizer\\legacy.py",
      "Lib\\site-packages\\charset_normalizer\\md.cp313-win_amd64.pyd",
      "Lib\\site-packages\\charset_normalizer\\md.py",
      "Lib\\site-packages\\charset_normalizer\\md__mypyc.cp313-win_amd64.pyd",
      "Lib\\site-packages\\charset_normalizer\\models.py",
      "Lib\\site-packages\\charset_normalizer\\py.typed",
      "Lib\\site-packages\\charset_normalizer\\utils.py",
      "Lib\\site-packages\\charset_normalizer\\version.py",
      "Lib\\site-packages\\charset_normalizer\\__init__.py",
      "Lib\\site-packages\\charset_normalizer\\__main__.py",
      "Lib\\site-packages\\charset_normalizer\\cli\\__init__.py",
      "Lib\\site-packages\\charset_normalizer\\cli\\__main__.py",
      "Lib\\site-packages\\charset_normalizer-3.4.4.dist-info\\entry_points.txt",
      "Lib\\site-packages\\charset_normalizer-3.4.4.dist-info\\INSTALLER",
      "Lib\\site-packages\\charset_normalizer-3.4.4.dist-info\\licenses",
      "Lib\\site-packages\\charset_normalizer-3.4.4.dist-info\\METADATA",
      "Lib\\site-packages\\charset_normalizer-3.4.4.dist-info\\RECORD",
      "Lib\\site-packages\\charset_normalizer-3.4.4.dist-info\\top_level.txt",
      "Lib\\site-packages\\charset_normalizer-3.4.4.dist-info\\WHEEL",
      "Lib\\site-packages\\charset_normalizer-3.4.4.dist-info\\licenses\\LICENSE",
      "Lib\\site-packages\\click\\core.py",
      "Lib\\site-packages\\click\\decorators.py",
      "Lib\\site-packages\\click\\exceptions.py",
      "Lib\\site-packages\\click\\formatting.py",
      "Lib\\site-packages\\click\\globals.py",
      "Lib\\site-packages\\click\\parser.py",
      "Lib\\site-packages\\click\\py.typed",
      "Lib\\site-packages\\click\\shell_completion.py",
      "Lib\\site-packages\\click\\termui.py",
      "Lib\\site-packages\\click\\testing.py",
      "Lib\\site-packages\\click\\types.py",
      "Lib\\site-packages\\click\\utils.py",
      "Lib\\site-packages\\click\\_compat.py",
      "Lib\\site-packages\\click\\_termui_impl.py",
      "Lib\\site-packages\\click\\_textwrap.py",
      "Lib\\site-packages\\click\\_utils.py",
      "Lib\\site-packages\\click\\_winconsole.py",
      "Lib\\site-packages\\click\\__init__.py",
      "Lib\\site-packages\\click-8.3.0.dist-info\\INSTALLER",
      "Lib\\site-packages\\click-8.3.0.dist-info\\licenses",
      "Lib\\site-packages\\click-8.3.0.dist-info\\METADATA",
      "Lib\\site-packages\\click-8.3.0.dist-info\\RECORD",
      "Lib\\site-packages\\click-8.3.0.dist-info\\WHEEL",
      "Lib\\site-packages\\click-8.3.0.dist-info\\licenses\\LICENSE.txt",
      "Lib\\site-packages\\colorama\\ansi.py",
      "Lib\\site-packages\\colorama\\ansitowin32.py",
      "Lib\\site-packages\\colorama\\initialise.py",
      "Lib\\site-packages\\colorama\\tests",
      "Lib\\site-packages\\colorama\\win32.py",
      "Lib\\site-packages\\colorama\\winterm.py",
      "Lib\\site-packages\\colorama\\__init__.py",
      "Lib\\site-packages\\colorama\\tests\\ansitowin32_test.py",
      "Lib\\site-packages\\colorama\\tests\\ansi_test.py",
      "Lib\\site-packages\\colorama\\tests\\initialise_test.py",
      "Lib\\site-packages\\colorama\\tests\\isatty_test.py",
      "Lib\\site-packages\\colorama\\tests\\utils.py",
      "Lib\\site-packages\\colorama\\tests\\winterm_test.py",
      "Lib\\site-packages\\colorama\\tests\\__init__.py",
      "Lib\\site-packages\\colorama-0.4.6.dist-info\\INSTALLER",
      "Lib\\site-packages\\colorama-0.4.6.dist-info\\licenses",
      "Lib\\site-packages\\colorama-0.4.6.dist-info\\METADATA",
      "Lib\\site-packages\\colorama-0.4.6.dist-info\\RECORD",
      "Lib\\site-packages\\colorama-0.4.6.dist-info\\WHEEL",
      "Lib\\site-packages\\colorama-0.4.6.dist-info\\licenses\\LICENSE.txt",
      "Lib\\site-packages\\dateutil\\easter.py",
      "Lib\\site-packages\\dateutil\\parser",
      "Lib\\site-packages\\dateutil\\relativedelta.py",
      "Lib\\site-packages\\dateutil\\rrule.py",
      "Lib\\site-packages\\dateutil\\tz",
      "Lib\\site-packages\\dateutil\\tzwin.py",
      "Lib\\site-packages\\dateutil\\utils.py",
      "Lib\\site-packages\\dateutil\\zoneinfo",
      "Lib\\site-packages\\dateutil\\_common.py",
      "Lib\\site-packages\\dateutil\\_version.py",
      "Lib\\site-packages\\dateutil\\__init__.py",
      "Lib\\site-packages\\dateutil\\parser\\isoparser.py",
      "Lib\\site-packages\\dateutil\\parser\\_parser.py",
      "Lib\\site-packages\\dateutil\\parser\\__init__.py",
      "Lib\\site-packages\\dateutil\\tz\\tz.py",
      "Lib\\site-packages\\dateutil\\tz\\win.py",
      "Lib\\site-packages\\dateutil\\tz\\_common.py",
      "Lib\\site-packages\\dateutil\\tz\\_factories.py",
      "Lib\\site-packages\\dateutil\\tz\\__init__.py",
      "Lib\\site-packages\\dateutil\\zoneinfo\\dateutil-zoneinfo.tar.gz",
      "Lib\\site-packages\\dateutil\\zoneinfo\\rebuild.py",
      "Lib\\site-packages\\dateutil\\zoneinfo\\__init__.py",
      "Lib\\site-packages\\dotenv\\cli.py",
      "Lib\\site-packages\\dotenv\\ipython.py",
      "Lib\\site-packages\\dotenv\\main.py",
      "Lib\\site-packages\\dotenv\\parser.py",
      "Lib\\site-packages\\dotenv\\py.typed",
      "Lib\\site-packages\\dotenv\\variables.py",
      "Lib\\site-packages\\dotenv\\version.py",
      "Lib\\site-packages\\dotenv\\__init__.py",
      "Lib\\site-packages\\dotenv\\__main__.py",
      "Lib\\site-packages\\fastapi\\applications.py",
      "Lib\\site-packages\\fastapi\\background.py",
      "Lib\\site-packages\\fastapi\\cli.py",
      "Lib\\site-packages\\fastapi\\concurrency.py",
      "Lib\\site-packages\\fastapi\\datastructures.py",
      "Lib\\site-packages\\fastapi\\dependencies",
      "Lib\\site-packages\\fastapi\\encoders.py",
      "Lib\\site-packages\\fastapi\\exceptions.py",
      "Lib\\site-packages\\fastapi\\exception_handlers.py",
      "Lib\\site-packages\\fastapi\\logger.py",
      "Lib\\site-packages\\fastapi\\middleware",
      "Lib\\site-packages\\fastapi\\openapi",
      "Lib\\site-packages\\fastapi\\params.py",
      "Lib\\site-packages\\fastapi\\param_functions.py",
      "Lib\\site-packages\\fastapi\\py.typed",
      "Lib\\site-packages\\fastapi\\requests.py",
      "Lib\\site-packages\\fastapi\\responses.py",
      "Lib\\site-packages\\fastapi\\routing.py",
      "Lib\\site-packages\\fastapi\\security",
      "Lib\\site-packages\\fastapi\\staticfiles.py",
      "Lib\\site-packages\\fastapi\\templating.py",
      "Lib\\site-packages\\fastapi\\temp_pydantic_v1_params.py",
      "Lib\\site-packages\\fastapi\\testclient.py",
      "Lib\\site-packages\\fastapi\\types.py",
      "Lib\\site-packages\\fastapi\\utils.py",
      "Lib\\site-packages\\fastapi\\websockets.py",
      "Lib\\site-packages\\fastapi\\_compat",
      "Lib\\site-packages\\fastapi\\__init__.py",
      "Lib\\site-packages\\fastapi\\__main__.py",
      "Lib\\site-packages\\fastapi\\dependencies\\models.py",
      "Lib\\site-packages\\fastapi\\dependencies\\utils.py",
      "Lib\\site-packages\\fastapi\\dependencies\\__init__.py",
      "Lib\\site-packages\\fastapi\\middleware\\asyncexitstack.py",
      "Lib\\site-packages\\fastapi\\middleware\\cors.py",
      "Lib\\site-packages\\fastapi\\middleware\\gzip.py",
      "Lib\\site-packages\\fastapi\\middleware\\httpsredirect.py",
      "Lib\\site-packages\\fastapi\\middleware\\trustedhost.py",
      "Lib\\site-packages\\fastapi\\middleware\\wsgi.py",
      "Lib\\site-packages\\fastapi\\middleware\\__init__.py",
      "Lib\\site-packages\\fastapi\\openapi\\constants.py",
      "Lib\\site-packages\\fastapi\\openapi\\docs.py",
      "Lib\\site-packages\\fastapi\\openapi\\models.py",
      "Lib\\site-packages\\fastapi\\openapi\\utils.py",
      "Lib\\site-packages\\fastapi\\openapi\\__init__.py",
      "Lib\\site-packages\\fastapi\\security\\api_key.py",
      "Lib\\site-packages\\fastapi\\security\\base.py",
      "Lib\\site-packages\\fastapi\\security\\http.py",
      "Lib\\site-packages\\fastapi\\security\\oauth2.py",
      "Lib\\site-packages\\fastapi\\security\\open_id_connect_url.py",
      "Lib\\site-packages\\fastapi\\security\\utils.py",
      "Lib\\site-packages\\fastapi\\security\\__init__.py",
      "Lib\\site-packages\\fastapi\\_compat\\main.py",
      "Lib\\site-packages\\fastapi\\_compat\\model_field.py",
      "Lib\\site-packages\\fastapi\\_compat\\shared.py",
      "Lib\\site-packages\\fastapi\\_compat\\v1.py",
      "Lib\\site-packages\\fastapi\\_compat\\v2.py",
      "Lib\\site-packages\\fastapi\\_compat\\__init__.py",
      "Lib\\site-packages\\fastapi-0.119.0.dist-info\\entry_points.txt",
      "Lib\\site-packages\\fastapi-0.119.0.dist-info\\INSTALLER",
      "Lib\\site-packages\\fastapi-0.119.0.dist-info\\licenses",
      "Lib\\site-packages\\fastapi-0.119.0.dist-info\\METADATA",
      "Lib\\site-packages\\fastapi-0.119.0.dist-info\\RECORD",
      "Lib\\site-packages\\fastapi-0.119.0.dist-info\\REQUESTED",
      "Lib\\site-packages\\fastapi-0.119.0.dist-info\\WHEEL",
      "Lib\\site-packages\\fastapi-0.119.0.dist-info\\licenses\\LICENSE",
      "Lib\\site-packages\\frozenlist\\py.typed",
      "Lib\\site-packages\\frozenlist\\_frozenlist.cp313-win_amd64.pyd",
      "Lib\\site-packages\\frozenlist\\_frozenlist.pyx",
      "Lib\\site-packages\\frozenlist\\__init__.py",
      "Lib\\site-packages\\frozenlist\\__init__.pyi",
      "Lib\\site-packages\\frozenlist-1.8.0.dist-info\\INSTALLER",
      "Lib\\site-packages\\frozenlist-1.8.0.dist-info\\licenses",
      "Lib\\site-packages\\frozenlist-1.8.0.dist-info\\METADATA",
      "Lib\\site-packages\\frozenlist-1.8.0.dist-info\\RECORD",
      "Lib\\site-packages\\frozenlist-1.8.0.dist-info\\top_level.txt",
      "Lib\\site-packages\\frozenlist-1.8.0.dist-info\\WHEEL",
      "Lib\\site-packages\\frozenlist-1.8.0.dist-info\\licenses\\LICENSE",
      "Lib\\site-packages\\git\\cmd.py",
      "Lib\\site-packages\\git\\compat.py",
      "Lib\\site-packages\\git\\config.py",
      "Lib\\site-packages\\git\\db.py",
      "Lib\\site-packages\\git\\diff.py",
      "Lib\\site-packages\\git\\exc.py",
      "Lib\\site-packages\\git\\index",
      "Lib\\site-packages\\git\\objects",
      "Lib\\site-packages\\git\\py.typed",
      "Lib\\site-packages\\git\\refs",
      "Lib\\site-packages\\git\\remote.py",
      "Lib\\site-packages\\git\\repo",
      "Lib\\site-packages\\git\\types.py",
      "Lib\\site-packages\\git\\util.py",
      "Lib\\site-packages\\git\\__init__.py",
      "Lib\\site-packages\\git\\index\\base.py",
      "Lib\\site-packages\\git\\index\\fun.py",
      "Lib\\site-packages\\git\\index\\typ.py",
      "Lib\\site-packages\\git\\index\\util.py",
      "Lib\\site-packages\\git\\index\\__init__.py",
      "Lib\\site-packages\\git\\objects\\base.py",
      "Lib\\site-packages\\git\\objects\\blob.py",
      "Lib\\site-packages\\git\\objects\\commit.py",
      "Lib\\site-packages\\git\\objects\\fun.py",
      "Lib\\site-packages\\git\\objects\\submodule",
      "Lib\\site-packages\\git\\objects\\tag.py",
      "Lib\\site-packages\\git\\objects\\tree.py",
      "Lib\\site-packages\\git\\objects\\util.py",
      "Lib\\site-packages\\git\\objects\\__init__.py",
      "Lib\\site-packages\\git\\objects\\submodule\\base.py",
      "Lib\\site-packages\\git\\objects\\submodule\\root.py",
      "Lib\\site-packages\\git\\objects\\submodule\\util.py",
      "Lib\\site-packages\\git\\objects\\submodule\\__init__.py",
      "Lib\\site-packages\\git\\refs\\head.py",
      "Lib\\site-packages\\git\\refs\\log.py",
      "Lib\\site-packages\\git\\refs\\reference.py",
      "Lib\\site-packages\\git\\refs\\remote.py",
      "Lib\\site-packages\\git\\refs\\symbolic.py",
      "Lib\\site-packages\\git\\refs\\tag.py",
      "Lib\\site-packages\\git\\refs\\__init__.py",
      "Lib\\site-packages\\git\\repo\\base.py",
      "Lib\\site-packages\\git\\repo\\fun.py",
      "Lib\\site-packages\\git\\repo\\__init__.py",
      "Lib\\site-packages\\gitdb\\base.py",
      "Lib\\site-packages\\gitdb\\const.py",
      "Lib\\site-packages\\gitdb\\db",
      "Lib\\site-packages\\gitdb\\exc.py",
      "Lib\\site-packages\\gitdb\\fun.py",
      "Lib\\site-packages\\gitdb\\pack.py",
      "Lib\\site-packages\\gitdb\\stream.py",
      "Lib\\site-packages\\gitdb\\test",
      "Lib\\site-packages\\gitdb\\typ.py",
      "Lib\\site-packages\\gitdb\\util.py",
      "Lib\\site-packages\\gitdb\\utils",
      "Lib\\site-packages\\gitdb\\__init__.py",
      "Lib\\site-packages\\gitdb\\db\\base.py",
      "Lib\\site-packages\\gitdb\\db\\git.py",
      "Lib\\site-packages\\gitdb\\db\\loose.py",
      "Lib\\site-packages\\gitdb\\db\\mem.py",
      "Lib\\site-packages\\gitdb\\db\\pack.py",
      "Lib\\site-packages\\gitdb\\db\\ref.py",
      "Lib\\site-packages\\gitdb\\db\\__init__.py",
      "Lib\\site-packages\\gitdb\\test\\lib.py",
      "Lib\\site-packages\\gitdb\\test\\test_base.py",
      "Lib\\site-packages\\gitdb\\test\\test_example.py",
      "Lib\\site-packages\\gitdb\\test\\test_pack.py",
      "Lib\\site-packages\\gitdb\\test\\test_stream.py",
      "Lib\\site-packages\\gitdb\\test\\test_util.py",
      "Lib\\site-packages\\gitdb\\test\\__init__.py",
      "Lib\\site-packages\\gitdb\\utils\\encoding.py",
      "Lib\\site-packages\\gitdb\\utils\\__init__.py",
      "Lib\\site-packages\\gitdb-4.0.12.dist-info\\AUTHORS",
      "Lib\\site-packages\\gitdb-4.0.12.dist-info\\INSTALLER",
      "Lib\\site-packages\\gitdb-4.0.12.dist-info\\LICENSE",
      "Lib\\site-packages\\gitdb-4.0.12.dist-info\\METADATA",
      "Lib\\site-packages\\gitdb-4.0.12.dist-info\\RECORD",
      "Lib\\site-packages\\gitdb-4.0.12.dist-info\\top_level.txt",
      "Lib\\site-packages\\gitdb-4.0.12.dist-info\\WHEEL",
      "Lib\\site-packages\\gitpython-3.1.45.dist-info\\INSTALLER",
      "Lib\\site-packages\\gitpython-3.1.45.dist-info\\licenses",
      "Lib\\site-packages\\gitpython-3.1.45.dist-info\\METADATA",
      "Lib\\site-packages\\gitpython-3.1.45.dist-info\\RECORD",
      "Lib\\site-packages\\gitpython-3.1.45.dist-info\\top_level.txt",
      "Lib\\site-packages\\gitpython-3.1.45.dist-info\\WHEEL",
      "Lib\\site-packages\\gitpython-3.1.45.dist-info\\licenses\\AUTHORS",
      "Lib\\site-packages\\gitpython-3.1.45.dist-info\\licenses\\LICENSE",
      "Lib\\site-packages\\google\\protobuf",
      "Lib\\site-packages\\google\\_upb",
      "Lib\\site-packages\\google\\protobuf\\any.py",
      "Lib\\site-packages\\google\\protobuf\\any_pb2.py",
      "Lib\\site-packages\\google\\protobuf\\api_pb2.py",
      "Lib\\site-packages\\google\\protobuf\\compiler",
      "Lib\\site-packages\\google\\protobuf\\descriptor.py",
      "Lib\\site-packages\\google\\protobuf\\descriptor_database.py",
      "Lib\\site-packages\\google\\protobuf\\descriptor_pb2.py",
      "Lib\\site-packages\\google\\protobuf\\descriptor_pool.py",
      "Lib\\site-packages\\google\\protobuf\\duration.py",
      "Lib\\site-packages\\google\\protobuf\\duration_pb2.py",
      "Lib\\site-packages\\google\\protobuf\\empty_pb2.py",
      "Lib\\site-packages\\google\\protobuf\\field_mask_pb2.py",
      "Lib\\site-packages\\google\\protobuf\\internal",
      "Lib\\site-packages\\google\\protobuf\\json_format.py",
      "Lib\\site-packages\\google\\protobuf\\message.py",
      "Lib\\site-packages\\google\\protobuf\\message_factory.py",
      "Lib\\site-packages\\google\\protobuf\\proto.py",
      "Lib\\site-packages\\google\\protobuf\\proto_builder.py",
      "Lib\\site-packages\\google\\protobuf\\proto_json.py",
      "Lib\\site-packages\\google\\protobuf\\proto_text.py",
      "Lib\\site-packages\\google\\protobuf\\pyext",
      "Lib\\site-packages\\google\\protobuf\\reflection.py",
      "Lib\\site-packages\\google\\protobuf\\runtime_version.py",
      "Lib\\site-packages\\google\\protobuf\\service_reflection.py",
      "Lib\\site-packages\\google\\protobuf\\source_context_pb2.py",
      "Lib\\site-packages\\google\\protobuf\\struct_pb2.py",
      "Lib\\site-packages\\google\\protobuf\\symbol_database.py",
      "Lib\\site-packages\\google\\protobuf\\testdata",
      "Lib\\site-packages\\google\\protobuf\\text_encoding.py",
      "Lib\\site-packages\\google\\protobuf\\text_format.py",
      "Lib\\site-packages\\google\\protobuf\\timestamp.py",
      "Lib\\site-packages\\google\\protobuf\\timestamp_pb2.py",
      "Lib\\site-packages\\google\\protobuf\\type_pb2.py",
      "Lib\\site-packages\\google\\protobuf\\unknown_fields.py",
      "Lib\\site-packages\\google\\protobuf\\util",
      "Lib\\site-packages\\google\\protobuf\\wrappers_pb2.py",
      "Lib\\site-packages\\google\\protobuf\\__init__.py",
      "Lib\\site-packages\\google\\protobuf\\compiler\\plugin_pb2.py",
      "Lib\\site-packages\\google\\protobuf\\compiler\\__init__.py",
      "Lib\\site-packages\\google\\protobuf\\internal\\api_implementation.py",
      "Lib\\site-packages\\google\\protobuf\\internal\\builder.py",
      "Lib\\site-packages\\google\\protobuf\\internal\\containers.py",
      "Lib\\site-packages\\google\\protobuf\\internal\\decoder.py",
      "Lib\\site-packages\\google\\protobuf\\internal\\encoder.py",
      "Lib\\site-packages\\google\\protobuf\\internal\\enum_type_wrapper.py",
      "Lib\\site-packages\\google\\protobuf\\internal\\extension_dict.py",
      "Lib\\site-packages\\google\\protobuf\\internal\\field_mask.py",
      "Lib\\site-packages\\google\\protobuf\\internal\\message_listener.py",
      "Lib\\site-packages\\google\\protobuf\\internal\\python_edition_defaults.py",
      "Lib\\site-packages\\google\\protobuf\\internal\\python_message.py",
      "Lib\\site-packages\\google\\protobuf\\internal\\testing_refleaks.py",
      "Lib\\site-packages\\google\\protobuf\\internal\\type_checkers.py",
      "Lib\\site-packages\\google\\protobuf\\internal\\well_known_types.py",
      "Lib\\site-packages\\google\\protobuf\\internal\\wire_format.py",
      "Lib\\site-packages\\google\\protobuf\\internal\\__init__.py",
      "Lib\\site-packages\\google\\protobuf\\pyext\\cpp_message.py",
      "Lib\\site-packages\\google\\protobuf\\pyext\\__init__.py",
      "Lib\\site-packages\\google\\protobuf\\testdata\\__init__.py",
      "Lib\\site-packages\\google\\protobuf\\util\\__init__.py",
      "Lib\\site-packages\\google\\_upb\\_message.pyd",
      "Lib\\site-packages\\h11\\py.typed",
      "Lib\\site-packages\\h11\\_abnf.py",
      "Lib\\site-packages\\h11\\_connection.py",
      "Lib\\site-packages\\h11\\_events.py",
      "Lib\\site-packages\\h11\\_headers.py",
      "Lib\\site-packages\\h11\\_readers.py",
      "Lib\\site-packages\\h11\\_receivebuffer.py",
      "Lib\\site-packages\\h11\\_state.py",
      "Lib\\site-packages\\h11\\_util.py",
      "Lib\\site-packages\\h11\\_version.py",
      "Lib\\site-packages\\h11\\_writers.py",
      "Lib\\site-packages\\h11\\__init__.py",
      "Lib\\site-packages\\h11-0.16.0.dist-info\\INSTALLER",
      "Lib\\site-packages\\h11-0.16.0.dist-info\\licenses",
      "Lib\\site-packages\\h11-0.16.0.dist-info\\METADATA",
      "Lib\\site-packages\\h11-0.16.0.dist-info\\RECORD",
      "Lib\\site-packages\\h11-0.16.0.dist-info\\top_level.txt",
      "Lib\\site-packages\\h11-0.16.0.dist-info\\WHEEL",
      "Lib\\site-packages\\h11-0.16.0.dist-info\\licenses\\LICENSE.txt",
      "Lib\\site-packages\\idna\\codec.py",
      "Lib\\site-packages\\idna\\compat.py",
      "Lib\\site-packages\\idna\\core.py",
      "Lib\\site-packages\\idna\\idnadata.py",
      "Lib\\site-packages\\idna\\intranges.py",
      "Lib\\site-packages\\idna\\package_data.py",
      "Lib\\site-packages\\idna\\py.typed",
      "Lib\\site-packages\\idna\\uts46data.py",
      "Lib\\site-packages\\idna\\__init__.py",
      "Lib\\site-packages\\idna-3.11.dist-info\\INSTALLER",
      "Lib\\site-packages\\idna-3.11.dist-info\\licenses",
      "Lib\\site-packages\\idna-3.11.dist-info\\METADATA",
      "Lib\\site-packages\\idna-3.11.dist-info\\RECORD",
      "Lib\\site-packages\\idna-3.11.dist-info\\WHEEL",
      "Lib\\site-packages\\idna-3.11.dist-info\\licenses\\LICENSE.md",
      "Lib\\site-packages\\jinja2\\async_utils.py",
      "Lib\\site-packages\\jinja2\\bccache.py",
      "Lib\\site-packages\\jinja2\\compiler.py",
      "Lib\\site-packages\\jinja2\\constants.py",
      "Lib\\site-packages\\jinja2\\debug.py",
      "Lib\\site-packages\\jinja2\\defaults.py",
      "Lib\\site-packages\\jinja2\\environment.py",
      "Lib\\site-packages\\jinja2\\exceptions.py",
      "Lib\\site-packages\\jinja2\\ext.py",
      "Lib\\site-packages\\jinja2\\filters.py",
      "Lib\\site-packages\\jinja2\\idtracking.py",
      "Lib\\site-packages\\jinja2\\lexer.py",
      "Lib\\site-packages\\jinja2\\loaders.py",
      "Lib\\site-packages\\jinja2\\meta.py",
      "Lib\\site-packages\\jinja2\\nativetypes.py",
      "Lib\\site-packages\\jinja2\\nodes.py",
      "Lib\\site-packages\\jinja2\\optimizer.py",
      "Lib\\site-packages\\jinja2\\parser.py",
      "Lib\\site-packages\\jinja2\\py.typed",
      "Lib\\site-packages\\jinja2\\runtime.py",
      "Lib\\site-packages\\jinja2\\sandbox.py",
      "Lib\\site-packages\\jinja2\\tests.py",
      "Lib\\site-packages\\jinja2\\utils.py",
      "Lib\\site-packages\\jinja2\\visitor.py",
      "Lib\\site-packages\\jinja2\\_identifier.py",
      "Lib\\site-packages\\jinja2\\__init__.py",
      "Lib\\site-packages\\jinja2-3.1.6.dist-info\\entry_points.txt",
      "Lib\\site-packages\\jinja2-3.1.6.dist-info\\INSTALLER",
      "Lib\\site-packages\\jinja2-3.1.6.dist-info\\licenses",
      "Lib\\site-packages\\jinja2-3.1.6.dist-info\\METADATA",
      "Lib\\site-packages\\jinja2-3.1.6.dist-info\\RECORD",
      "Lib\\site-packages\\jinja2-3.1.6.dist-info\\WHEEL",
      "Lib\\site-packages\\jinja2-3.1.6.dist-info\\licenses\\LICENSE.txt",
      "Lib\\site-packages\\jsonschema\\benchmarks",
      "Lib\\site-packages\\jsonschema\\cli.py",
      "Lib\\site-packages\\jsonschema\\exceptions.py",
      "Lib\\site-packages\\jsonschema\\protocols.py",
      "Lib\\site-packages\\jsonschema\\tests",
      "Lib\\site-packages\\jsonschema\\validators.py",
      "Lib\\site-packages\\jsonschema\\_format.py",
      "Lib\\site-packages\\jsonschema\\_keywords.py",
      "Lib\\site-packages\\jsonschema\\_legacy_keywords.py",
      "Lib\\site-packages\\jsonschema\\_types.py",
      "Lib\\site-packages\\jsonschema\\_typing.py",
      "Lib\\site-packages\\jsonschema\\_utils.py",
      "Lib\\site-packages\\jsonschema\\__init__.py",
      "Lib\\site-packages\\jsonschema\\__main__.py",
      "Lib\\site-packages\\jsonschema\\benchmarks\\const_vs_enum.py",
      "Lib\\site-packages\\jsonschema\\benchmarks\\contains.py",
      "Lib\\site-packages\\jsonschema\\benchmarks\\issue232",
      "Lib\\site-packages\\jsonschema\\benchmarks\\issue232.py",
      "Lib\\site-packages\\jsonschema\\benchmarks\\json_schema_test_suite.py",
      "Lib\\site-packages\\jsonschema\\benchmarks\\nested_schemas.py",
      "Lib\\site-packages\\jsonschema\\benchmarks\\subcomponents.py",
      "Lib\\site-packages\\jsonschema\\benchmarks\\unused_registry.py",
      "Lib\\site-packages\\jsonschema\\benchmarks\\useless_applicator_schemas.py",
      "Lib\\site-packages\\jsonschema\\benchmarks\\useless_keywords.py",
      "Lib\\site-packages\\jsonschema\\benchmarks\\validator_creation.py",
      "Lib\\site-packages\\jsonschema\\benchmarks\\__init__.py",
      "Lib\\site-packages\\jsonschema\\benchmarks\\issue232\\issue.json",
      "Lib\\site-packages\\jsonschema\\tests\\fuzz_validate.py",
      "Lib\\site-packages\\jsonschema\\tests\\test_cli.py",
      "Lib\\site-packages\\jsonschema\\tests\\test_deprecations.py",
      "Lib\\site-packages\\jsonschema\\tests\\test_exceptions.py",
      "Lib\\site-packages\\jsonschema\\tests\\test_format.py",
      "Lib\\site-packages\\jsonschema\\tests\\test_jsonschema_test_suite.py",
      "Lib\\site-packages\\jsonschema\\tests\\test_types.py",
      "Lib\\site-packages\\jsonschema\\tests\\test_utils.py",
      "Lib\\site-packages\\jsonschema\\tests\\test_validators.py",
      "Lib\\site-packages\\jsonschema\\tests\\typing",
      "Lib\\site-packages\\jsonschema\\tests\\_suite.py",
      "Lib\\site-packages\\jsonschema\\tests\\__init__.py",
      "Lib\\site-packages\\jsonschema\\tests\\typing\\test_all_concrete_validators_match_protocol.py",
      "Lib\\site-packages\\jsonschema\\tests\\typing\\__init__.py",
      "Lib\\site-packages\\jsonschema-4.25.1.dist-info\\entry_points.txt",
      "Lib\\site-packages\\jsonschema-4.25.1.dist-info\\INSTALLER",
      "Lib\\site-packages\\jsonschema-4.25.1.dist-info\\licenses",
      "Lib\\site-packages\\jsonschema-4.25.1.dist-info\\METADATA",
      "Lib\\site-packages\\jsonschema-4.25.1.dist-info\\RECORD",
      "Lib\\site-packages\\jsonschema-4.25.1.dist-info\\WHEEL",
      "Lib\\site-packages\\jsonschema-4.25.1.dist-info\\licenses\\COPYING",
      "Lib\\site-packages\\jsonschema_specifications\\schemas",
      "Lib\\site-packages\\jsonschema_specifications\\tests",
      "Lib\\site-packages\\jsonschema_specifications\\_core.py",
      "Lib\\site-packages\\jsonschema_specifications\\__init__.py",
      "Lib\\site-packages\\jsonschema_specifications\\schemas\\draft201909",
      "Lib\\site-packages\\jsonschema_specifications\\schemas\\draft202012",
      "Lib\\site-packages\\jsonschema_specifications\\schemas\\draft3",
      "Lib\\site-packages\\jsonschema_specifications\\schemas\\draft4",
      "Lib\\site-packages\\jsonschema_specifications\\schemas\\draft6",
      "Lib\\site-packages\\jsonschema_specifications\\schemas\\draft7",
      "Lib\\site-packages\\jsonschema_specifications\\schemas\\draft201909\\metaschema.json",
      "Lib\\site-packages\\jsonschema_specifications\\schemas\\draft201909\\vocabularies",
      "Lib\\site-packages\\jsonschema_specifications\\schemas\\draft201909\\vocabularies\\applicator",
      "Lib\\site-packages\\jsonschema_specifications\\schemas\\draft201909\\vocabularies\\content",
      "Lib\\site-packages\\jsonschema_specifications\\schemas\\draft201909\\vocabularies\\core",
      "Lib\\site-packages\\jsonschema_specifications\\schemas\\draft201909\\vocabularies\\format",
      "Lib\\site-packages\\jsonschema_specifications\\schemas\\draft201909\\vocabularies\\meta-data",
      "Lib\\site-packages\\jsonschema_specifications\\schemas\\draft201909\\vocabularies\\validation",
      "Lib\\site-packages\\jsonschema_specifications\\schemas\\draft202012\\metaschema.json",
      "Lib\\site-packages\\jsonschema_specifications\\schemas\\draft202012\\vocabularies",
      "Lib\\site-packages\\jsonschema_specifications\\schemas\\draft202012\\vocabularies\\applicator",
      "Lib\\site-packages\\jsonschema_specifications\\schemas\\draft202012\\vocabularies\\content",
      "Lib\\site-packages\\jsonschema_specifications\\schemas\\draft202012\\vocabularies\\core",
      "Lib\\site-packages\\jsonschema_specifications\\schemas\\draft202012\\vocabularies\\format-annotation",
      "Lib\\site-packages\\jsonschema_specifications\\schemas\\draft202012\\vocabularies\\format-assertion",
      "Lib\\site-packages\\jsonschema_specifications\\schemas\\draft202012\\vocabularies\\meta-data",
      "Lib\\site-packages\\jsonschema_specifications\\schemas\\draft202012\\vocabularies\\unevaluated",
      "Lib\\site-packages\\jsonschema_specifications\\schemas\\draft202012\\vocabularies\\validation",
      "Lib\\site-packages\\jsonschema_specifications\\schemas\\draft3\\metaschema.json",
      "Lib\\site-packages\\jsonschema_specifications\\schemas\\draft4\\metaschema.json",
      "Lib\\site-packages\\jsonschema_specifications\\schemas\\draft6\\metaschema.json",
      "Lib\\site-packages\\jsonschema_specifications\\schemas\\draft7\\metaschema.json",
      "Lib\\site-packages\\jsonschema_specifications\\tests\\test_jsonschema_specifications.py",
      "Lib\\site-packages\\jsonschema_specifications\\tests\\__init__.py",
      "Lib\\site-packages\\jsonschema_specifications-2025.9.1.dist-info\\INSTALLER",
      "Lib\\site-packages\\jsonschema_specifications-2025.9.1.dist-info\\licenses",
      "Lib\\site-packages\\jsonschema_specifications-2025.9.1.dist-info\\METADATA",
      "Lib\\site-packages\\jsonschema_specifications-2025.9.1.dist-info\\RECORD",
      "Lib\\site-packages\\jsonschema_specifications-2025.9.1.dist-info\\WHEEL",
      "Lib\\site-packages\\jsonschema_specifications-2025.9.1.dist-info\\licenses\\COPYING",
      "Lib\\site-packages\\markupsafe\\py.typed",
      "Lib\\site-packages\\markupsafe\\_native.py",
      "Lib\\site-packages\\markupsafe\\_speedups.c",
      "Lib\\site-packages\\markupsafe\\_speedups.cp313-win_amd64.pyd",
      "Lib\\site-packages\\markupsafe\\_speedups.pyi",
      "Lib\\site-packages\\markupsafe\\__init__.py",
      "Lib\\site-packages\\markupsafe-3.0.3.dist-info\\INSTALLER",
      "Lib\\site-packages\\markupsafe-3.0.3.dist-info\\licenses",
      "Lib\\site-packages\\markupsafe-3.0.3.dist-info\\METADATA",
      "Lib\\site-packages\\markupsafe-3.0.3.dist-info\\RECORD",
      "Lib\\site-packages\\markupsafe-3.0.3.dist-info\\top_level.txt",
      "Lib\\site-packages\\markupsafe-3.0.3.dist-info\\WHEEL",
      "Lib\\site-packages\\markupsafe-3.0.3.dist-info\\licenses\\LICENSE.txt",
      "Lib\\site-packages\\multidict\\py.typed",
      "Lib\\site-packages\\multidict\\_abc.py",
      "Lib\\site-packages\\multidict\\_compat.py",
      "Lib\\site-packages\\multidict\\_multidict.cp313-win_amd64.pyd",
      "Lib\\site-packages\\multidict\\_multidict_py.py",
      "Lib\\site-packages\\multidict\\__init__.py",
      "Lib\\site-packages\\multidict-6.7.0.dist-info\\INSTALLER",
      "Lib\\site-packages\\multidict-6.7.0.dist-info\\licenses",
      "Lib\\site-packages\\multidict-6.7.0.dist-info\\METADATA",
      "Lib\\site-packages\\multidict-6.7.0.dist-info\\RECORD",
      "Lib\\site-packages\\multidict-6.7.0.dist-info\\top_level.txt",
      "Lib\\site-packages\\multidict-6.7.0.dist-info\\WHEEL",
      "Lib\\site-packages\\multidict-6.7.0.dist-info\\licenses\\LICENSE",
      "Lib\\site-packages\\narwhals\\dataframe.py",
      "Lib\\site-packages\\narwhals\\dependencies.py",
      "Lib\\site-packages\\narwhals\\dtypes.py",
      "Lib\\site-packages\\narwhals\\exceptions.py",
      "Lib\\site-packages\\narwhals\\expr.py",
      "Lib\\site-packages\\narwhals\\expr_cat.py",
      "Lib\\site-packages\\narwhals\\expr_dt.py",
      "Lib\\site-packages\\narwhals\\expr_list.py",
      "Lib\\site-packages\\narwhals\\expr_name.py",
      "Lib\\site-packages\\narwhals\\expr_str.py",
      "Lib\\site-packages\\narwhals\\expr_struct.py",
      "Lib\\site-packages\\narwhals\\functions.py",
      "Lib\\site-packages\\narwhals\\group_by.py",
      "Lib\\site-packages\\narwhals\\py.typed",
      "Lib\\site-packages\\narwhals\\schema.py",
      "Lib\\site-packages\\narwhals\\selectors.py",
      "Lib\\site-packages\\narwhals\\series.py",
      "Lib\\site-packages\\narwhals\\series_cat.py",
      "Lib\\site-packages\\narwhals\\series_dt.py",
      "Lib\\site-packages\\narwhals\\series_list.py",
      "Lib\\site-packages\\narwhals\\series_str.py",
      "Lib\\site-packages\\narwhals\\series_struct.py",
      "Lib\\site-packages\\narwhals\\stable",
      "Lib\\site-packages\\narwhals\\this.py",
      "Lib\\site-packages\\narwhals\\translate.py",
      "Lib\\site-packages\\narwhals\\typing.py",
      "Lib\\site-packages\\narwhals\\utils.py",
      "Lib\\site-packages\\narwhals\\_arrow",
      "Lib\\site-packages\\narwhals\\_compliant",
      "Lib\\site-packages\\narwhals\\_constants.py",
      "Lib\\site-packages\\narwhals\\_dask",
      "Lib\\site-packages\\narwhals\\_duckdb",
      "Lib\\site-packages\\narwhals\\_duration.py",
      "Lib\\site-packages\\narwhals\\_enum.py",
      "Lib\\site-packages\\narwhals\\_exceptions.py",
      "Lib\\site-packages\\narwhals\\_expression_parsing.py",
      "Lib\\site-packages\\narwhals\\_ibis",
      "Lib\\site-packages\\narwhals\\_interchange",
      "Lib\\site-packages\\narwhals\\_namespace.py",
      "Lib\\site-packages\\narwhals\\_pandas_like",
      "Lib\\site-packages\\narwhals\\_polars",
      "Lib\\site-packages\\narwhals\\_spark_like",
      "Lib\\site-packages\\narwhals\\_sql",
      "Lib\\site-packages\\narwhals\\_translate.py",
      "Lib\\site-packages\\narwhals\\_typing.py",
      "Lib\\site-packages\\narwhals\\_typing_compat.py",
      "Lib\\site-packages\\narwhals\\_utils.py",
      "Lib\\site-packages\\narwhals\\__init__.py",
      "Lib\\site-packages\\narwhals\\stable\\v1",
      "Lib\\site-packages\\narwhals\\stable\\v2",
      "Lib\\site-packages\\narwhals\\stable\\__init__.py",
      "Lib\\site-packages\\narwhals\\stable\\v1\\dependencies.py",
      "Lib\\site-packages\\narwhals\\stable\\v1\\dtypes.py",
      "Lib\\site-packages\\narwhals\\stable\\v1\\selectors.py",
      "Lib\\site-packages\\narwhals\\stable\\v1\\typing.py",
      "Lib\\site-packages\\narwhals\\stable\\v1\\_dtypes.py",
      "Lib\\site-packages\\narwhals\\stable\\v1\\_namespace.py",
      "Lib\\site-packages\\narwhals\\stable\\v1\\__init__.py",
      "Lib\\site-packages\\narwhals\\stable\\v2\\dependencies.py",
      "Lib\\site-packages\\narwhals\\stable\\v2\\dtypes.py",
      "Lib\\site-packages\\narwhals\\stable\\v2\\selectors.py",
      "Lib\\site-packages\\narwhals\\stable\\v2\\typing.py",
      "Lib\\site-packages\\narwhals\\stable\\v2\\_namespace.py",
      "Lib\\site-packages\\narwhals\\stable\\v2\\__init__.py",
      "Lib\\site-packages\\narwhals\\_arrow\\dataframe.py",
      "Lib\\site-packages\\narwhals\\_arrow\\expr.py",
      "Lib\\site-packages\\narwhals\\_arrow\\group_by.py",
      "Lib\\site-packages\\narwhals\\_arrow\\namespace.py",
      "Lib\\site-packages\\narwhals\\_arrow\\selectors.py",
      "Lib\\site-packages\\narwhals\\_arrow\\series.py",
      "Lib\\site-packages\\narwhals\\_arrow\\series_cat.py",
      "Lib\\site-packages\\narwhals\\_arrow\\series_dt.py",
      "Lib\\site-packages\\narwhals\\_arrow\\series_list.py",
      "Lib\\site-packages\\narwhals\\_arrow\\series_str.py",
      "Lib\\site-packages\\narwhals\\_arrow\\series_struct.py",
      "Lib\\site-packages\\narwhals\\_arrow\\typing.py",
      "Lib\\site-packages\\narwhals\\_arrow\\utils.py",
      "Lib\\site-packages\\narwhals\\_arrow\\__init__.py",
      "Lib\\site-packages\\narwhals\\_compliant\\any_namespace.py",
      "Lib\\site-packages\\narwhals\\_compliant\\column.py",
      "Lib\\site-packages\\narwhals\\_compliant\\dataframe.py",
      "Lib\\site-packages\\narwhals\\_compliant\\expr.py",
      "Lib\\site-packages\\narwhals\\_compliant\\group_by.py",
      "Lib\\site-packages\\narwhals\\_compliant\\namespace.py",
      "Lib\\site-packages\\narwhals\\_compliant\\selectors.py",
      "Lib\\site-packages\\narwhals\\_compliant\\series.py",
      "Lib\\site-packages\\narwhals\\_compliant\\typing.py",
      "Lib\\site-packages\\narwhals\\_compliant\\when_then.py",
      "Lib\\site-packages\\narwhals\\_compliant\\window.py",
      "Lib\\site-packages\\narwhals\\_compliant\\__init__.py",
      "Lib\\site-packages\\narwhals\\_dask\\dataframe.py",
      "Lib\\site-packages\\narwhals\\_dask\\expr.py",
      "Lib\\site-packages\\narwhals\\_dask\\expr_dt.py",
      "Lib\\site-packages\\narwhals\\_dask\\expr_str.py",
      "Lib\\site-packages\\narwhals\\_dask\\group_by.py",
      "Lib\\site-packages\\narwhals\\_dask\\namespace.py",
      "Lib\\site-packages\\narwhals\\_dask\\selectors.py",
      "Lib\\site-packages\\narwhals\\_dask\\utils.py",
      "Lib\\site-packages\\narwhals\\_dask\\__init__.py",
      "Lib\\site-packages\\narwhals\\_duckdb\\dataframe.py",
      "Lib\\site-packages\\narwhals\\_duckdb\\expr.py",
      "Lib\\site-packages\\narwhals\\_duckdb\\expr_dt.py",
      "Lib\\site-packages\\narwhals\\_duckdb\\expr_list.py",
      "Lib\\site-packages\\narwhals\\_duckdb\\expr_str.py",
      "Lib\\site-packages\\narwhals\\_duckdb\\expr_struct.py",
      "Lib\\site-packages\\narwhals\\_duckdb\\group_by.py",
      "Lib\\site-packages\\narwhals\\_duckdb\\namespace.py",
      "Lib\\site-packages\\narwhals\\_duckdb\\selectors.py",
      "Lib\\site-packages\\narwhals\\_duckdb\\series.py",
      "Lib\\site-packages\\narwhals\\_duckdb\\typing.py",
      "Lib\\site-packages\\narwhals\\_duckdb\\utils.py",
      "Lib\\site-packages\\narwhals\\_duckdb\\__init__.py",
      "Lib\\site-packages\\narwhals\\_ibis\\dataframe.py",
      "Lib\\site-packages\\narwhals\\_ibis\\expr.py",
      "Lib\\site-packages\\narwhals\\_ibis\\expr_dt.py",
      "Lib\\site-packages\\narwhals\\_ibis\\expr_list.py",
      "Lib\\site-packages\\narwhals\\_ibis\\expr_str.py",
      "Lib\\site-packages\\narwhals\\_ibis\\expr_struct.py",
      "Lib\\site-packages\\narwhals\\_ibis\\group_by.py",
      "Lib\\site-packages\\narwhals\\_ibis\\namespace.py",
      "Lib\\site-packages\\narwhals\\_ibis\\selectors.py",
      "Lib\\site-packages\\narwhals\\_ibis\\series.py",
      "Lib\\site-packages\\narwhals\\_ibis\\utils.py",
      "Lib\\site-packages\\narwhals\\_ibis\\__init__.py",
      "Lib\\site-packages\\narwhals\\_interchange\\dataframe.py",
      "Lib\\site-packages\\narwhals\\_interchange\\series.py",
      "Lib\\site-packages\\narwhals\\_interchange\\__init__.py",
      "Lib\\site-packages\\narwhals\\_pandas_like\\dataframe.py",
      "Lib\\site-packages\\narwhals\\_pandas_like\\expr.py",
      "Lib\\site-packages\\narwhals\\_pandas_like\\group_by.py",
      "Lib\\site-packages\\narwhals\\_pandas_like\\namespace.py",
      "Lib\\site-packages\\narwhals\\_pandas_like\\selectors.py",
      "Lib\\site-packages\\narwhals\\_pandas_like\\series.py",
      "Lib\\site-packages\\narwhals\\_pandas_like\\series_cat.py",
      "Lib\\site-packages\\narwhals\\_pandas_like\\series_dt.py",
      "Lib\\site-packages\\narwhals\\_pandas_like\\series_list.py",
      "Lib\\site-packages\\narwhals\\_pandas_like\\series_str.py",
      "Lib\\site-packages\\narwhals\\_pandas_like\\series_struct.py",
      "Lib\\site-packages\\narwhals\\_pandas_like\\typing.py",
      "Lib\\site-packages\\narwhals\\_pandas_like\\utils.py",
      "Lib\\site-packages\\narwhals\\_pandas_like\\__init__.py",
      "Lib\\site-packages\\narwhals\\_polars\\dataframe.py",
      "Lib\\site-packages\\narwhals\\_polars\\expr.py",
      "Lib\\site-packages\\narwhals\\_polars\\group_by.py",
      "Lib\\site-packages\\narwhals\\_polars\\namespace.py",
      "Lib\\site-packages\\narwhals\\_polars\\series.py",
      "Lib\\site-packages\\narwhals\\_polars\\typing.py",
      "Lib\\site-packages\\narwhals\\_polars\\utils.py",
      "Lib\\site-packages\\narwhals\\_polars\\__init__.py",
      "Lib\\site-packages\\narwhals\\_spark_like\\dataframe.py",
      "Lib\\site-packages\\narwhals\\_spark_like\\expr.py",
      "Lib\\site-packages\\narwhals\\_spark_like\\expr_dt.py",
      "Lib\\site-packages\\narwhals\\_spark_like\\expr_list.py",
      "Lib\\site-packages\\narwhals\\_spark_like\\expr_str.py",
      "Lib\\site-packages\\narwhals\\_spark_like\\expr_struct.py",
      "Lib\\site-packages\\narwhals\\_spark_like\\group_by.py",
      "Lib\\site-packages\\narwhals\\_spark_like\\namespace.py",
      "Lib\\site-packages\\narwhals\\_spark_like\\selectors.py",
      "Lib\\site-packages\\narwhals\\_spark_like\\utils.py",
      "Lib\\site-packages\\narwhals\\_spark_like\\__init__.py",
      "Lib\\site-packages\\narwhals\\_sql\\dataframe.py",
      "Lib\\site-packages\\narwhals\\_sql\\expr.py",
      "Lib\\site-packages\\narwhals\\_sql\\expr_dt.py",
      "Lib\\site-packages\\narwhals\\_sql\\expr_str.py",
      "Lib\\site-packages\\narwhals\\_sql\\group_by.py",
      "Lib\\site-packages\\narwhals\\_sql\\namespace.py",
      "Lib\\site-packages\\narwhals\\_sql\\typing.py",
      "Lib\\site-packages\\narwhals\\_sql\\when_then.py",
      "Lib\\site-packages\\narwhals\\_sql\\__init__.py",
      "Lib\\site-packages\\narwhals-2.8.0.dist-info\\INSTALLER",
      "Lib\\site-packages\\narwhals-2.8.0.dist-info\\licenses",
      "Lib\\site-packages\\narwhals-2.8.0.dist-info\\METADATA",
      "Lib\\site-packages\\narwhals-2.8.0.dist-info\\RECORD",
      "Lib\\site-packages\\narwhals-2.8.0.dist-info\\WHEEL",
      "Lib\\site-packages\\narwhals-2.8.0.dist-info\\licenses\\LICENSE.md",
      "Lib\\site-packages\\numpy\\char",
      "Lib\\site-packages\\numpy\\conftest.py",
      "Lib\\site-packages\\numpy\\core",
      "Lib\\site-packages\\numpy\\ctypeslib",
      "Lib\\site-packages\\numpy\\doc",
      "Lib\\site-packages\\numpy\\dtypes.py",
      "Lib\\site-packages\\numpy\\dtypes.pyi",
      "Lib\\site-packages\\numpy\\exceptions.py",
      "Lib\\site-packages\\numpy\\exceptions.pyi",
      "Lib\\site-packages\\numpy\\f2py",
      "Lib\\site-packages\\numpy\\fft",
      "Lib\\site-packages\\numpy\\lib",
      "Lib\\site-packages\\numpy\\linalg",
      "Lib\\site-packages\\numpy\\ma",
      "Lib\\site-packages\\numpy\\matlib.py",
      "Lib\\site-packages\\numpy\\matlib.pyi",
      "Lib\\site-packages\\numpy\\matrixlib",
      "Lib\\site-packages\\numpy\\polynomial",
      "Lib\\site-packages\\numpy\\py.typed",
      "Lib\\site-packages\\numpy\\random",
      "Lib\\site-packages\\numpy\\rec",
      "Lib\\site-packages\\numpy\\strings",
      "Lib\\site-packages\\numpy\\testing",
      "Lib\\site-packages\\numpy\\tests",
      "Lib\\site-packages\\numpy\\typing",
      "Lib\\site-packages\\numpy\\version.py",
      "Lib\\site-packages\\numpy\\version.pyi",
      "Lib\\site-packages\\numpy\\_array_api_info.py",
      "Lib\\site-packages\\numpy\\_array_api_info.pyi",
      "Lib\\site-packages\\numpy\\_configtool.py",
      "Lib\\site-packages\\numpy\\_configtool.pyi",
      "Lib\\site-packages\\numpy\\_core",
      "Lib\\site-packages\\numpy\\_distributor_init.py",
      "Lib\\site-packages\\numpy\\_distributor_init.pyi",
      "Lib\\site-packages\\numpy\\_expired_attrs_2_0.py",
      "Lib\\site-packages\\numpy\\_expired_attrs_2_0.pyi",
      "Lib\\site-packages\\numpy\\_globals.py",
      "Lib\\site-packages\\numpy\\_globals.pyi",
      "Lib\\site-packages\\numpy\\_pyinstaller",
      "Lib\\site-packages\\numpy\\_pytesttester.py",
      "Lib\\site-packages\\numpy\\_pytesttester.pyi",
      "Lib\\site-packages\\numpy\\_typing",
      "Lib\\site-packages\\numpy\\_utils",
      "Lib\\site-packages\\numpy\\__config__.py",
      "Lib\\site-packages\\numpy\\__config__.pyi",
      "Lib\\site-packages\\numpy\\__init__.cython-30.pxd",
      "Lib\\site-packages\\numpy\\__init__.pxd",
      "Lib\\site-packages\\numpy\\__init__.py",
      "Lib\\site-packages\\numpy\\__init__.pyi",
      "Lib\\site-packages\\numpy\\char\\__init__.py",
      "Lib\\site-packages\\numpy\\char\\__init__.pyi",
      "Lib\\site-packages\\numpy\\core\\arrayprint.py",
      "Lib\\site-packages\\numpy\\core\\defchararray.py",
      "Lib\\site-packages\\numpy\\core\\einsumfunc.py",
      "Lib\\site-packages\\numpy\\core\\fromnumeric.py",
      "Lib\\site-packages\\numpy\\core\\function_base.py",
      "Lib\\site-packages\\numpy\\core\\getlimits.py",
      "Lib\\site-packages\\numpy\\core\\multiarray.py",
      "Lib\\site-packages\\numpy\\core\\numeric.py",
      "Lib\\site-packages\\numpy\\core\\numerictypes.py",
      "Lib\\site-packages\\numpy\\core\\overrides.py",
      "Lib\\site-packages\\numpy\\core\\overrides.pyi",
      "Lib\\site-packages\\numpy\\core\\records.py",
      "Lib\\site-packages\\numpy\\core\\shape_base.py",
      "Lib\\site-packages\\numpy\\core\\umath.py",
      "Lib\\site-packages\\numpy\\core\\_dtype.py",
      "Lib\\site-packages\\numpy\\core\\_dtype.pyi",
      "Lib\\site-packages\\numpy\\core\\_dtype_ctypes.py",
      "Lib\\site-packages\\numpy\\core\\_dtype_ctypes.pyi",
      "Lib\\site-packages\\numpy\\core\\_internal.py",
      "Lib\\site-packages\\numpy\\core\\_multiarray_umath.py",
      "Lib\\site-packages\\numpy\\core\\_utils.py",
      "Lib\\site-packages\\numpy\\core\\__init__.py",
      "Lib\\site-packages\\numpy\\core\\__init__.pyi",
      "Lib\\site-packages\\numpy\\ctypeslib\\_ctypeslib.py",
      "Lib\\site-packages\\numpy\\ctypeslib\\_ctypeslib.pyi",
      "Lib\\site-packages\\numpy\\ctypeslib\\__init__.py",
      "Lib\\site-packages\\numpy\\ctypeslib\\__init__.pyi",
      "Lib\\site-packages\\numpy\\doc\\ufuncs.py",
      "Lib\\site-packages\\numpy\\f2py\\auxfuncs.py",
      "Lib\\site-packages\\numpy\\f2py\\auxfuncs.pyi",
      "Lib\\site-packages\\numpy\\f2py\\capi_maps.py",
      "Lib\\site-packages\\numpy\\f2py\\capi_maps.pyi",
      "Lib\\site-packages\\numpy\\f2py\\cb_rules.py",
      "Lib\\site-packages\\numpy\\f2py\\cb_rules.pyi",
      "Lib\\site-packages\\numpy\\f2py\\cfuncs.py",
      "Lib\\site-packages\\numpy\\f2py\\cfuncs.pyi",
      "Lib\\site-packages\\numpy\\f2py\\common_rules.py",
      "Lib\\site-packages\\numpy\\f2py\\common_rules.pyi",
      "Lib\\site-packages\\numpy\\f2py\\crackfortran.py",
      "Lib\\site-packages\\numpy\\f2py\\crackfortran.pyi",
      "Lib\\site-packages\\numpy\\f2py\\diagnose.py",
      "Lib\\site-packages\\numpy\\f2py\\diagnose.pyi",
      "Lib\\site-packages\\numpy\\f2py\\f2py2e.py",
      "Lib\\site-packages\\numpy\\f2py\\f2py2e.pyi",
      "Lib\\site-packages\\numpy\\f2py\\f90mod_rules.py",
      "Lib\\site-packages\\numpy\\f2py\\f90mod_rules.pyi",
      "Lib\\site-packages\\numpy\\f2py\\func2subr.py",
      "Lib\\site-packages\\numpy\\f2py\\func2subr.pyi",
      "Lib\\site-packages\\numpy\\f2py\\rules.py",
      "Lib\\site-packages\\numpy\\f2py\\rules.pyi",
      "Lib\\site-packages\\numpy\\f2py\\setup.cfg",
      "Lib\\site-packages\\numpy\\f2py\\src",
      "Lib\\site-packages\\numpy\\f2py\\symbolic.py",
      "Lib\\site-packages\\numpy\\f2py\\symbolic.pyi",
      "Lib\\site-packages\\numpy\\f2py\\tests",
      "Lib\\site-packages\\numpy\\f2py\\use_rules.py",
      "Lib\\site-packages\\numpy\\f2py\\use_rules.pyi",
      "Lib\\site-packages\\numpy\\f2py\\_backends",
      "Lib\\site-packages\\numpy\\f2py\\_isocbind.py",
      "Lib\\site-packages\\numpy\\f2py\\_isocbind.pyi",
      "Lib\\site-packages\\numpy\\f2py\\_src_pyf.py",
      "Lib\\site-packages\\numpy\\f2py\\_src_pyf.pyi",
      "Lib\\site-packages\\numpy\\f2py\\__init__.py",
      "Lib\\site-packages\\numpy\\f2py\\__init__.pyi",
      "Lib\\site-packages\\numpy\\f2py\\__main__.py",
      "Lib\\site-packages\\numpy\\f2py\\__version__.py",
      "Lib\\site-packages\\numpy\\f2py\\__version__.pyi",
      "Lib\\site-packages\\numpy\\f2py\\src\\fortranobject.c",
      "Lib\\site-packages\\numpy\\f2py\\src\\fortranobject.h",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src",
      "Lib\\site-packages\\numpy\\f2py\\tests\\test_abstract_interface.py",
      "Lib\\site-packages\\numpy\\f2py\\tests\\test_array_from_pyobj.py",
      "Lib\\site-packages\\numpy\\f2py\\tests\\test_assumed_shape.py",
      "Lib\\site-packages\\numpy\\f2py\\tests\\test_block_docstring.py",
      "Lib\\site-packages\\numpy\\f2py\\tests\\test_callback.py",
      "Lib\\site-packages\\numpy\\f2py\\tests\\test_character.py",
      "Lib\\site-packages\\numpy\\f2py\\tests\\test_common.py",
      "Lib\\site-packages\\numpy\\f2py\\tests\\test_crackfortran.py",
      "Lib\\site-packages\\numpy\\f2py\\tests\\test_data.py",
      "Lib\\site-packages\\numpy\\f2py\\tests\\test_docs.py",
      "Lib\\site-packages\\numpy\\f2py\\tests\\test_f2cmap.py",
      "Lib\\site-packages\\numpy\\f2py\\tests\\test_f2py2e.py",
      "Lib\\site-packages\\numpy\\f2py\\tests\\test_isoc.py",
      "Lib\\site-packages\\numpy\\f2py\\tests\\test_kind.py",
      "Lib\\site-packages\\numpy\\f2py\\tests\\test_mixed.py",
      "Lib\\site-packages\\numpy\\f2py\\tests\\test_modules.py",
      "Lib\\site-packages\\numpy\\f2py\\tests\\test_parameter.py",
      "Lib\\site-packages\\numpy\\f2py\\tests\\test_pyf_src.py",
      "Lib\\site-packages\\numpy\\f2py\\tests\\test_quoted_character.py",
      "Lib\\site-packages\\numpy\\f2py\\tests\\test_regression.py",
      "Lib\\site-packages\\numpy\\f2py\\tests\\test_return_character.py",
      "Lib\\site-packages\\numpy\\f2py\\tests\\test_return_complex.py",
      "Lib\\site-packages\\numpy\\f2py\\tests\\test_return_integer.py",
      "Lib\\site-packages\\numpy\\f2py\\tests\\test_return_logical.py",
      "Lib\\site-packages\\numpy\\f2py\\tests\\test_return_real.py",
      "Lib\\site-packages\\numpy\\f2py\\tests\\test_routines.py",
      "Lib\\site-packages\\numpy\\f2py\\tests\\test_semicolon_split.py",
      "Lib\\site-packages\\numpy\\f2py\\tests\\test_size.py",
      "Lib\\site-packages\\numpy\\f2py\\tests\\test_string.py",
      "Lib\\site-packages\\numpy\\f2py\\tests\\test_symbolic.py",
      "Lib\\site-packages\\numpy\\f2py\\tests\\test_value_attrspec.py",
      "Lib\\site-packages\\numpy\\f2py\\tests\\util.py",
      "Lib\\site-packages\\numpy\\f2py\\tests\\__init__.py",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\abstract_interface",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\array_from_pyobj",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\assumed_shape",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\block_docstring",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\callback",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\cli",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\common",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\crackfortran",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\f2cmap",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\isocintrin",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\kind",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\mixed",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\modules",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\negative_bounds",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\parameter",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\quoted_character",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\regression",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\return_character",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\return_complex",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\return_integer",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\return_logical",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\return_real",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\routines",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\size",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\string",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\value_attrspec",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\abstract_interface\\foo.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\abstract_interface\\gh18403_mod.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\array_from_pyobj\\wrapmodule.c",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\assumed_shape\\.f2py_f2cmap",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\assumed_shape\\foo_free.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\assumed_shape\\foo_mod.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\assumed_shape\\foo_use.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\assumed_shape\\precision.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\block_docstring\\foo.f",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\callback\\foo.f",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\callback\\gh17797.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\callback\\gh18335.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\callback\\gh25211.f",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\callback\\gh25211.pyf",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\callback\\gh26681.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\cli\\gh_22819.pyf",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\cli\\hi77.f",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\cli\\hiworld.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\common\\block.f",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\common\\gh19161.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\crackfortran\\accesstype.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\crackfortran\\common_with_division.f",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\crackfortran\\data_common.f",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\crackfortran\\data_multiplier.f",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\crackfortran\\data_stmts.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\crackfortran\\data_with_comments.f",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\crackfortran\\foo_deps.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\crackfortran\\gh15035.f",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\crackfortran\\gh17859.f",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\crackfortran\\gh22648.pyf",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\crackfortran\\gh23533.f",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\crackfortran\\gh23598.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\crackfortran\\gh23598Warn.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\crackfortran\\gh23879.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\crackfortran\\gh27697.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\crackfortran\\gh2848.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\crackfortran\\operators.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\crackfortran\\privatemod.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\crackfortran\\publicmod.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\crackfortran\\pubprivmod.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\crackfortran\\unicode_comment.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\f2cmap\\.f2py_f2cmap",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\f2cmap\\isoFortranEnvMap.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\isocintrin\\isoCtests.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\kind\\foo.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\mixed\\foo.f",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\mixed\\foo_fixed.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\mixed\\foo_free.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\modules\\gh25337",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\modules\\gh26920",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\modules\\module_data_docstring.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\modules\\use_modules.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\modules\\gh25337\\data.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\modules\\gh25337\\use_data.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\modules\\gh26920\\two_mods_with_no_public_entities.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\modules\\gh26920\\two_mods_with_one_public_routine.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\negative_bounds\\issue_20853.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\parameter\\constant_array.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\parameter\\constant_both.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\parameter\\constant_compound.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\parameter\\constant_integer.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\parameter\\constant_non_compound.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\parameter\\constant_real.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\quoted_character\\foo.f",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\regression\\AB.inc",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\regression\\assignOnlyModule.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\regression\\datonly.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\regression\\f77comments.f",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\regression\\f77fixedform.f95",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\regression\\f90continuation.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\regression\\incfile.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\regression\\inout.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\regression\\lower_f2py_fortran.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\regression\\mod_derived_types.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\return_character\\foo77.f",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\return_character\\foo90.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\return_complex\\foo77.f",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\return_complex\\foo90.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\return_integer\\foo77.f",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\return_integer\\foo90.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\return_logical\\foo77.f",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\return_logical\\foo90.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\return_real\\foo77.f",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\return_real\\foo90.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\routines\\funcfortranname.f",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\routines\\funcfortranname.pyf",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\routines\\subrout.f",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\routines\\subrout.pyf",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\size\\foo.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\string\\char.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\string\\fixed_string.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\string\\gh24008.f",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\string\\gh24662.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\string\\gh25286.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\string\\gh25286.pyf",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\string\\gh25286_bc.pyf",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\string\\scalar_string.f90",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\string\\string.f",
      "Lib\\site-packages\\numpy\\f2py\\tests\\src\\value_attrspec\\gh21665.f90",
      "Lib\\site-packages\\numpy\\f2py\\_backends\\meson.build.template",
      "Lib\\site-packages\\numpy\\f2py\\_backends\\_backend.py",
      "Lib\\site-packages\\numpy\\f2py\\_backends\\_backend.pyi",
      "Lib\\site-packages\\numpy\\f2py\\_backends\\_distutils.py",
      "Lib\\site-packages\\numpy\\f2py\\_backends\\_distutils.pyi",
      "Lib\\site-packages\\numpy\\f2py\\_backends\\_meson.py",
      "Lib\\site-packages\\numpy\\f2py\\_backends\\_meson.pyi",
      "Lib\\site-packages\\numpy\\f2py\\_backends\\__init__.py",
      "Lib\\site-packages\\numpy\\f2py\\_backends\\__init__.pyi",
      "Lib\\site-packages\\numpy\\fft\\helper.py",
      "Lib\\site-packages\\numpy\\fft\\helper.pyi",
      "Lib\\site-packages\\numpy\\fft\\tests",
      "Lib\\site-packages\\numpy\\fft\\_helper.py",
      "Lib\\site-packages\\numpy\\fft\\_helper.pyi",
      "Lib\\site-packages\\numpy\\fft\\_pocketfft.py",
      "Lib\\site-packages\\numpy\\fft\\_pocketfft.pyi",
      "Lib\\site-packages\\numpy\\fft\\_pocketfft_umath.cp313-win_amd64.lib",
      "Lib\\site-packages\\numpy\\fft\\_pocketfft_umath.cp313-win_amd64.pyd",
      "Lib\\site-packages\\numpy\\fft\\__init__.py",
      "Lib\\site-packages\\numpy\\fft\\__init__.pyi",
      "Lib\\site-packages\\numpy\\fft\\tests\\test_helper.py",
      "Lib\\site-packages\\numpy\\fft\\tests\\test_pocketfft.py",
      "Lib\\site-packages\\numpy\\fft\\tests\\__init__.py",
      "Lib\\site-packages\\numpy\\lib\\array_utils.py",
      "Lib\\site-packages\\numpy\\lib\\array_utils.pyi",
      "Lib\\site-packages\\numpy\\lib\\format.py",
      "Lib\\site-packages\\numpy\\lib\\format.pyi",
      "Lib\\site-packages\\numpy\\lib\\introspect.py",
      "Lib\\site-packages\\numpy\\lib\\introspect.pyi",
      "Lib\\site-packages\\numpy\\lib\\mixins.py",
      "Lib\\site-packages\\numpy\\lib\\mixins.pyi",
      "Lib\\site-packages\\numpy\\lib\\npyio.py",
      "Lib\\site-packages\\numpy\\lib\\npyio.pyi",
      "Lib\\site-packages\\numpy\\lib\\recfunctions.py",
      "Lib\\site-packages\\numpy\\lib\\recfunctions.pyi",
      "Lib\\site-packages\\numpy\\lib\\scimath.py",
      "Lib\\site-packages\\numpy\\lib\\scimath.pyi",
      "Lib\\site-packages\\numpy\\lib\\stride_tricks.py",
      "Lib\\site-packages\\numpy\\lib\\stride_tricks.pyi",
      "Lib\\site-packages\\numpy\\lib\\tests",
      "Lib\\site-packages\\numpy\\lib\\user_array.py",
      "Lib\\site-packages\\numpy\\lib\\user_array.pyi",
      "Lib\\site-packages\\numpy\\lib\\_arraypad_impl.py",
      "Lib\\site-packages\\numpy\\lib\\_arraypad_impl.pyi",
      "Lib\\site-packages\\numpy\\lib\\_arraysetops_impl.py",
      "Lib\\site-packages\\numpy\\lib\\_arraysetops_impl.pyi",
      "Lib\\site-packages\\numpy\\lib\\_arrayterator_impl.py",
      "Lib\\site-packages\\numpy\\lib\\_arrayterator_impl.pyi",
      "Lib\\site-packages\\numpy\\lib\\_array_utils_impl.py",
      "Lib\\site-packages\\numpy\\lib\\_array_utils_impl.pyi",
      "Lib\\site-packages\\numpy\\lib\\_datasource.py",
      "Lib\\site-packages\\numpy\\lib\\_datasource.pyi",
      "Lib\\site-packages\\numpy\\lib\\_format_impl.py",
      "Lib\\site-packages\\numpy\\lib\\_format_impl.pyi",
      "Lib\\site-packages\\numpy\\lib\\_function_base_impl.py",
      "Lib\\site-packages\\numpy\\lib\\_function_base_impl.pyi",
      "Lib\\site-packages\\numpy\\lib\\_histograms_impl.py",
      "Lib\\site-packages\\numpy\\lib\\_histograms_impl.pyi",
      "Lib\\site-packages\\numpy\\lib\\_index_tricks_impl.py",
      "Lib\\site-packages\\numpy\\lib\\_index_tricks_impl.pyi",
      "Lib\\site-packages\\numpy\\lib\\_iotools.py",
      "Lib\\site-packages\\numpy\\lib\\_iotools.pyi",
      "Lib\\site-packages\\numpy\\lib\\_nanfunctions_impl.py",
      "Lib\\site-packages\\numpy\\lib\\_nanfunctions_impl.pyi",
      "Lib\\site-packages\\numpy\\lib\\_npyio_impl.py",
      "Lib\\site-packages\\numpy\\lib\\_npyio_impl.pyi",
      "Lib\\site-packages\\numpy\\lib\\_polynomial_impl.py",
      "Lib\\site-packages\\numpy\\lib\\_polynomial_impl.pyi",
      "Lib\\site-packages\\numpy\\lib\\_scimath_impl.py",
      "Lib\\site-packages\\numpy\\lib\\_scimath_impl.pyi",
      "Lib\\site-packages\\numpy\\lib\\_shape_base_impl.py",
      "Lib\\site-packages\\numpy\\lib\\_shape_base_impl.pyi",
      "Lib\\site-packages\\numpy\\lib\\_stride_tricks_impl.py",
      "Lib\\site-packages\\numpy\\lib\\_stride_tricks_impl.pyi",
      "Lib\\site-packages\\numpy\\lib\\_twodim_base_impl.py",
      "Lib\\site-packages\\numpy\\lib\\_twodim_base_impl.pyi",
      "Lib\\site-packages\\numpy\\lib\\_type_check_impl.py",
      "Lib\\site-packages\\numpy\\lib\\_type_check_impl.pyi",
      "Lib\\site-packages\\numpy\\lib\\_ufunclike_impl.py",
      "Lib\\site-packages\\numpy\\lib\\_ufunclike_impl.pyi",
      "Lib\\site-packages\\numpy\\lib\\_user_array_impl.py",
      "Lib\\site-packages\\numpy\\lib\\_user_array_impl.pyi",
      "Lib\\site-packages\\numpy\\lib\\_utils_impl.py",
      "Lib\\site-packages\\numpy\\lib\\_utils_impl.pyi",
      "Lib\\site-packages\\numpy\\lib\\_version.py",
      "Lib\\site-packages\\numpy\\lib\\_version.pyi",
      "Lib\\site-packages\\numpy\\lib\\__init__.py",
      "Lib\\site-packages\\numpy\\lib\\__init__.pyi",
      "Lib\\site-packages\\numpy\\lib\\tests\\data",
      "Lib\\site-packages\\numpy\\lib\\tests\\test_arraypad.py",
      "Lib\\site-packages\\numpy\\lib\\tests\\test_arraysetops.py",
      "Lib\\site-packages\\numpy\\lib\\tests\\test_arrayterator.py",
      "Lib\\site-packages\\numpy\\lib\\tests\\test_array_utils.py",
      "Lib\\site-packages\\numpy\\lib\\tests\\test_format.py",
      "Lib\\site-packages\\numpy\\lib\\tests\\test_function_base.py",
      "Lib\\site-packages\\numpy\\lib\\tests\\test_histograms.py",
      "Lib\\site-packages\\numpy\\lib\\tests\\test_index_tricks.py",
      "Lib\\site-packages\\numpy\\lib\\tests\\test_io.py",
      "Lib\\site-packages\\numpy\\lib\\tests\\test_loadtxt.py",
      "Lib\\site-packages\\numpy\\lib\\tests\\test_mixins.py",
      "Lib\\site-packages\\numpy\\lib\\tests\\test_nanfunctions.py",
      "Lib\\site-packages\\numpy\\lib\\tests\\test_packbits.py",
      "Lib\\site-packages\\numpy\\lib\\tests\\test_polynomial.py",
      "Lib\\site-packages\\numpy\\lib\\tests\\test_recfunctions.py",
      "Lib\\site-packages\\numpy\\lib\\tests\\test_regression.py",
      "Lib\\site-packages\\numpy\\lib\\tests\\test_shape_base.py",
      "Lib\\site-packages\\numpy\\lib\\tests\\test_stride_tricks.py",
      "Lib\\site-packages\\numpy\\lib\\tests\\test_twodim_base.py",
      "Lib\\site-packages\\numpy\\lib\\tests\\test_type_check.py",
      "Lib\\site-packages\\numpy\\lib\\tests\\test_ufunclike.py",
      "Lib\\site-packages\\numpy\\lib\\tests\\test_utils.py",
      "Lib\\site-packages\\numpy\\lib\\tests\\test__datasource.py",
      "Lib\\site-packages\\numpy\\lib\\tests\\test__iotools.py",
      "Lib\\site-packages\\numpy\\lib\\tests\\test__version.py",
      "Lib\\site-packages\\numpy\\lib\\tests\\__init__.py",
      "Lib\\site-packages\\numpy\\lib\\tests\\data\\py2-np0-objarr.npy",
      "Lib\\site-packages\\numpy\\lib\\tests\\data\\py2-objarr.npy",
      "Lib\\site-packages\\numpy\\lib\\tests\\data\\py2-objarr.npz",
      "Lib\\site-packages\\numpy\\lib\\tests\\data\\py3-objarr.npy",
      "Lib\\site-packages\\numpy\\lib\\tests\\data\\py3-objarr.npz",
      "Lib\\site-packages\\numpy\\lib\\tests\\data\\python3.npy",
      "Lib\\site-packages\\numpy\\lib\\tests\\data\\win64python2.npy",
      "Lib\\site-packages\\numpy\\linalg\\lapack_lite.cp313-win_amd64.lib",
      "Lib\\site-packages\\numpy\\linalg\\lapack_lite.cp313-win_amd64.pyd",
      "Lib\\site-packages\\numpy\\linalg\\lapack_lite.pyi",
      "Lib\\site-packages\\numpy\\linalg\\linalg.py",
      "Lib\\site-packages\\numpy\\linalg\\linalg.pyi",
      "Lib\\site-packages\\numpy\\linalg\\tests",
      "Lib\\site-packages\\numpy\\linalg\\_linalg.py",
      "Lib\\site-packages\\numpy\\linalg\\_linalg.pyi",
      "Lib\\site-packages\\numpy\\linalg\\_umath_linalg.cp313-win_amd64.lib",
      "Lib\\site-packages\\numpy\\linalg\\_umath_linalg.cp313-win_amd64.pyd",
      "Lib\\site-packages\\numpy\\linalg\\_umath_linalg.pyi",
      "Lib\\site-packages\\numpy\\linalg\\__init__.py",
      "Lib\\site-packages\\numpy\\linalg\\__init__.pyi",
      "Lib\\site-packages\\numpy\\linalg\\tests\\test_deprecations.py",
      "Lib\\site-packages\\numpy\\linalg\\tests\\test_linalg.py",
      "Lib\\site-packages\\numpy\\linalg\\tests\\test_regression.py",
      "Lib\\site-packages\\numpy\\linalg\\tests\\__init__.py",
      "Lib\\site-packages\\numpy\\ma\\API_CHANGES.txt",
      "Lib\\site-packages\\numpy\\ma\\core.py",
      "Lib\\site-packages\\numpy\\ma\\core.pyi",
      "Lib\\site-packages\\numpy\\ma\\extras.py",
      "Lib\\site-packages\\numpy\\ma\\extras.pyi",
      "Lib\\site-packages\\numpy\\ma\\LICENSE",
      "Lib\\site-packages\\numpy\\ma\\mrecords.py",
      "Lib\\site-packages\\numpy\\ma\\mrecords.pyi",
      "Lib\\site-packages\\numpy\\ma\\README.rst",
      "Lib\\site-packages\\numpy\\ma\\tests",
      "Lib\\site-packages\\numpy\\ma\\testutils.py",
      "Lib\\site-packages\\numpy\\ma\\__init__.py",
      "Lib\\site-packages\\numpy\\ma\\__init__.pyi",
      "Lib\\site-packages\\numpy\\ma\\tests\\test_arrayobject.py",
      "Lib\\site-packages\\numpy\\ma\\tests\\test_core.py",
      "Lib\\site-packages\\numpy\\ma\\tests\\test_deprecations.py",
      "Lib\\site-packages\\numpy\\ma\\tests\\test_extras.py",
      "Lib\\site-packages\\numpy\\ma\\tests\\test_mrecords.py",
      "Lib\\site-packages\\numpy\\ma\\tests\\test_old_ma.py",
      "Lib\\site-packages\\numpy\\ma\\tests\\test_regression.py",
      "Lib\\site-packages\\numpy\\ma\\tests\\test_subclassing.py",
      "Lib\\site-packages\\numpy\\ma\\tests\\__init__.py",
      "Lib\\site-packages\\numpy\\matrixlib\\defmatrix.py",
      "Lib\\site-packages\\numpy\\matrixlib\\defmatrix.pyi",
      "Lib\\site-packages\\numpy\\matrixlib\\tests",
      "Lib\\site-packages\\numpy\\matrixlib\\__init__.py",
      "Lib\\site-packages\\numpy\\matrixlib\\__init__.pyi",
      "Lib\\site-packages\\numpy\\matrixlib\\tests\\test_defmatrix.py",
      "Lib\\site-packages\\numpy\\matrixlib\\tests\\test_interaction.py",
      "Lib\\site-packages\\numpy\\matrixlib\\tests\\test_masked_matrix.py",
      "Lib\\site-packages\\numpy\\matrixlib\\tests\\test_matrix_linalg.py",
      "Lib\\site-packages\\numpy\\matrixlib\\tests\\test_multiarray.py",
      "Lib\\site-packages\\numpy\\matrixlib\\tests\\test_numeric.py",
      "Lib\\site-packages\\numpy\\matrixlib\\tests\\test_regression.py",
      "Lib\\site-packages\\numpy\\matrixlib\\tests\\__init__.py",
      "Lib\\site-packages\\numpy\\polynomial\\chebyshev.py",
      "Lib\\site-packages\\numpy\\polynomial\\chebyshev.pyi",
      "Lib\\site-packages\\numpy\\polynomial\\hermite.py",
      "Lib\\site-packages\\numpy\\polynomial\\hermite.pyi",
      "Lib\\site-packages\\numpy\\polynomial\\hermite_e.py",
      "Lib\\site-packages\\numpy\\polynomial\\hermite_e.pyi",
      "Lib\\site-packages\\numpy\\polynomial\\laguerre.py",
      "Lib\\site-packages\\numpy\\polynomial\\laguerre.pyi",
      "Lib\\site-packages\\numpy\\polynomial\\legendre.py",
      "Lib\\site-packages\\numpy\\polynomial\\legendre.pyi",
      "Lib\\site-packages\\numpy\\polynomial\\polynomial.py",
      "Lib\\site-packages\\numpy\\polynomial\\polynomial.pyi",
      "Lib\\site-packages\\numpy\\polynomial\\polyutils.py",
      "Lib\\site-packages\\numpy\\polynomial\\polyutils.pyi",
      "Lib\\site-packages\\numpy\\polynomial\\tests",
      "Lib\\site-packages\\numpy\\polynomial\\_polybase.py",
      "Lib\\site-packages\\numpy\\polynomial\\_polybase.pyi",
      "Lib\\site-packages\\numpy\\polynomial\\_polytypes.pyi",
      "Lib\\site-packages\\numpy\\polynomial\\__init__.py",
      "Lib\\site-packages\\numpy\\polynomial\\__init__.pyi",
      "Lib\\site-packages\\numpy\\polynomial\\tests\\test_chebyshev.py",
      "Lib\\site-packages\\numpy\\polynomial\\tests\\test_classes.py",
      "Lib\\site-packages\\numpy\\polynomial\\tests\\test_hermite.py",
      "Lib\\site-packages\\numpy\\polynomial\\tests\\test_hermite_e.py",
      "Lib\\site-packages\\numpy\\polynomial\\tests\\test_laguerre.py",
      "Lib\\site-packages\\numpy\\polynomial\\tests\\test_legendre.py",
      "Lib\\site-packages\\numpy\\polynomial\\tests\\test_polynomial.py",
      "Lib\\site-packages\\numpy\\polynomial\\tests\\test_polyutils.py",
      "Lib\\site-packages\\numpy\\polynomial\\tests\\test_printing.py",
      "Lib\\site-packages\\numpy\\polynomial\\tests\\test_symbol.py",
      "Lib\\site-packages\\numpy\\polynomial\\tests\\__init__.py",
      "Lib\\site-packages\\numpy\\random\\bit_generator.cp313-win_amd64.lib",
      "Lib\\site-packages\\numpy\\random\\bit_generator.cp313-win_amd64.pyd",
      "Lib\\site-packages\\numpy\\random\\bit_generator.pxd",
      "Lib\\site-packages\\numpy\\random\\bit_generator.pyi",
      "Lib\\site-packages\\numpy\\random\\c_distributions.pxd",
      "Lib\\site-packages\\numpy\\random\\lib",
      "Lib\\site-packages\\numpy\\random\\LICENSE.md",
      "Lib\\site-packages\\numpy\\random\\mtrand.cp313-win_amd64.lib",
      "Lib\\site-packages\\numpy\\random\\mtrand.cp313-win_amd64.pyd",
      "Lib\\site-packages\\numpy\\random\\mtrand.pyi",
      "Lib\\site-packages\\numpy\\random\\tests",
      "Lib\\site-packages\\numpy\\random\\_bounded_integers.cp313-win_amd64.lib",
      "Lib\\site-packages\\numpy\\random\\_bounded_integers.cp313-win_amd64.pyd",
      "Lib\\site-packages\\numpy\\random\\_bounded_integers.pxd",
      "Lib\\site-packages\\numpy\\random\\_bounded_integers.pyi",
      "Lib\\site-packages\\numpy\\random\\_common.cp313-win_amd64.lib",
      "Lib\\site-packages\\numpy\\random\\_common.cp313-win_amd64.pyd",
      "Lib\\site-packages\\numpy\\random\\_common.pxd",
      "Lib\\site-packages\\numpy\\random\\_common.pyi",
      "Lib\\site-packages\\numpy\\random\\_examples",
      "Lib\\site-packages\\numpy\\random\\_generator.cp313-win_amd64.lib",
      "Lib\\site-packages\\numpy\\random\\_generator.cp313-win_amd64.pyd",
      "Lib\\site-packages\\numpy\\random\\_generator.pyi",
      "Lib\\site-packages\\numpy\\random\\_mt19937.cp313-win_amd64.lib",
      "Lib\\site-packages\\numpy\\random\\_mt19937.cp313-win_amd64.pyd",
      "Lib\\site-packages\\numpy\\random\\_mt19937.pyi",
      "Lib\\site-packages\\numpy\\random\\_pcg64.cp313-win_amd64.lib",
      "Lib\\site-packages\\numpy\\random\\_pcg64.cp313-win_amd64.pyd",
      "Lib\\site-packages\\numpy\\random\\_pcg64.pyi",
      "Lib\\site-packages\\numpy\\random\\_philox.cp313-win_amd64.lib",
      "Lib\\site-packages\\numpy\\random\\_philox.cp313-win_amd64.pyd",
      "Lib\\site-packages\\numpy\\random\\_philox.pyi",
      "Lib\\site-packages\\numpy\\random\\_pickle.py",
      "Lib\\site-packages\\numpy\\random\\_pickle.pyi",
      "Lib\\site-packages\\numpy\\random\\_sfc64.cp313-win_amd64.lib",
      "Lib\\site-packages\\numpy\\random\\_sfc64.cp313-win_amd64.pyd",
      "Lib\\site-packages\\numpy\\random\\_sfc64.pyi",
      "Lib\\site-packages\\numpy\\random\\__init__.pxd",
      "Lib\\site-packages\\numpy\\random\\__init__.py",
      "Lib\\site-packages\\numpy\\random\\__init__.pyi",
      "Lib\\site-packages\\numpy\\random\\lib\\npyrandom.lib",
      "Lib\\site-packages\\numpy\\random\\tests\\data",
      "Lib\\site-packages\\numpy\\random\\tests\\test_direct.py",
      "Lib\\site-packages\\numpy\\random\\tests\\test_extending.py",
      "Lib\\site-packages\\numpy\\random\\tests\\test_generator_mt19937.py",
      "Lib\\site-packages\\numpy\\random\\tests\\test_generator_mt19937_regressions.py",
      "Lib\\site-packages\\numpy\\random\\tests\\test_random.py",
      "Lib\\site-packages\\numpy\\random\\tests\\test_randomstate.py",
      "Lib\\site-packages\\numpy\\random\\tests\\test_randomstate_regression.py",
      "Lib\\site-packages\\numpy\\random\\tests\\test_regression.py",
      "Lib\\site-packages\\numpy\\random\\tests\\test_seed_sequence.py",
      "Lib\\site-packages\\numpy\\random\\tests\\test_smoke.py",
      "Lib\\site-packages\\numpy\\random\\tests\\__init__.py",
      "Lib\\site-packages\\numpy\\random\\tests\\data\\generator_pcg64_np121.pkl.gz",
      "Lib\\site-packages\\numpy\\random\\tests\\data\\generator_pcg64_np126.pkl.gz",
      "Lib\\site-packages\\numpy\\random\\tests\\data\\mt19937-testset-1.csv",
      "Lib\\site-packages\\numpy\\random\\tests\\data\\mt19937-testset-2.csv",
      "Lib\\site-packages\\numpy\\random\\tests\\data\\pcg64-testset-1.csv",
      "Lib\\site-packages\\numpy\\random\\tests\\data\\pcg64-testset-2.csv",
      "Lib\\site-packages\\numpy\\random\\tests\\data\\pcg64dxsm-testset-1.csv",
      "Lib\\site-packages\\numpy\\random\\tests\\data\\pcg64dxsm-testset-2.csv",
      "Lib\\site-packages\\numpy\\random\\tests\\data\\philox-testset-1.csv",
      "Lib\\site-packages\\numpy\\random\\tests\\data\\philox-testset-2.csv",
      "Lib\\site-packages\\numpy\\random\\tests\\data\\sfc64-testset-1.csv",
      "Lib\\site-packages\\numpy\\random\\tests\\data\\sfc64-testset-2.csv",
      "Lib\\site-packages\\numpy\\random\\tests\\data\\sfc64_np126.pkl.gz",
      "Lib\\site-packages\\numpy\\random\\tests\\data\\__init__.py",
      "Lib\\site-packages\\numpy\\random\\_examples\\cffi",
      "Lib\\site-packages\\numpy\\random\\_examples\\cython",
      "Lib\\site-packages\\numpy\\random\\_examples\\numba",
      "Lib\\site-packages\\numpy\\random\\_examples\\cffi\\extending.py",
      "Lib\\site-packages\\numpy\\random\\_examples\\cffi\\parse.py",
      "Lib\\site-packages\\numpy\\random\\_examples\\cython\\extending.pyx",
      "Lib\\site-packages\\numpy\\random\\_examples\\cython\\extending_distributions.pyx",
      "Lib\\site-packages\\numpy\\random\\_examples\\cython\\meson.build",
      "Lib\\site-packages\\numpy\\random\\_examples\\numba\\extending.py",
      "Lib\\site-packages\\numpy\\random\\_examples\\numba\\extending_distributions.py",
      "Lib\\site-packages\\numpy\\rec\\__init__.py",
      "Lib\\site-packages\\numpy\\rec\\__init__.pyi",
      "Lib\\site-packages\\numpy\\strings\\__init__.py",
      "Lib\\site-packages\\numpy\\strings\\__init__.pyi",
      "Lib\\site-packages\\numpy\\testing\\overrides.py",
      "Lib\\site-packages\\numpy\\testing\\overrides.pyi",
      "Lib\\site-packages\\numpy\\testing\\print_coercion_tables.py",
      "Lib\\site-packages\\numpy\\testing\\print_coercion_tables.pyi",
      "Lib\\site-packages\\numpy\\testing\\tests",
      "Lib\\site-packages\\numpy\\testing\\_private",
      "Lib\\site-packages\\numpy\\testing\\__init__.py",
      "Lib\\site-packages\\numpy\\testing\\__init__.pyi",
      "Lib\\site-packages\\numpy\\testing\\tests\\test_utils.py",
      "Lib\\site-packages\\numpy\\testing\\tests\\__init__.py",
      "Lib\\site-packages\\numpy\\testing\\_private\\extbuild.py",
      "Lib\\site-packages\\numpy\\testing\\_private\\extbuild.pyi",
      "Lib\\site-packages\\numpy\\testing\\_private\\utils.py",
      "Lib\\site-packages\\numpy\\testing\\_private\\utils.pyi",
      "Lib\\site-packages\\numpy\\testing\\_private\\__init__.py",
      "Lib\\site-packages\\numpy\\testing\\_private\\__init__.pyi",
      "Lib\\site-packages\\numpy\\tests\\test_configtool.py",
      "Lib\\site-packages\\numpy\\tests\\test_ctypeslib.py",
      "Lib\\site-packages\\numpy\\tests\\test_lazyloading.py",
      "Lib\\site-packages\\numpy\\tests\\test_matlib.py",
      "Lib\\site-packages\\numpy\\tests\\test_numpy_config.py",
      "Lib\\site-packages\\numpy\\tests\\test_numpy_version.py",
      "Lib\\site-packages\\numpy\\tests\\test_public_api.py",
      "Lib\\site-packages\\numpy\\tests\\test_reloading.py",
      "Lib\\site-packages\\numpy\\tests\\test_scripts.py",
      "Lib\\site-packages\\numpy\\tests\\test_warnings.py",
      "Lib\\site-packages\\numpy\\tests\\test__all__.py",
      "Lib\\site-packages\\numpy\\tests\\__init__.py",
      "Lib\\site-packages\\numpy\\typing\\mypy_plugin.py",
      "Lib\\site-packages\\numpy\\typing\\tests",
      "Lib\\site-packages\\numpy\\typing\\__init__.py",
      "Lib\\site-packages\\numpy\\typing\\tests\\data",
      "Lib\\site-packages\\numpy\\typing\\tests\\test_isfile.py",
      "Lib\\site-packages\\numpy\\typing\\tests\\test_runtime.py",
      "Lib\\site-packages\\numpy\\typing\\tests\\test_typing.py",
      "Lib\\site-packages\\numpy\\typing\\tests\\__init__.py",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\misc",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\mypy.ini",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\pass",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\arithmetic.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\arrayprint.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\arrayterator.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\array_constructors.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\array_like.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\array_pad.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\bitwise_ops.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\char.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\chararray.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\comparisons.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\constants.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\datasource.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\dtype.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\einsumfunc.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\flatiter.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\fromnumeric.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\histograms.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\index_tricks.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\lib_function_base.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\lib_polynomial.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\lib_utils.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\lib_version.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\linalg.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\ma.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\memmap.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\modules.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\multiarray.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\ndarray.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\ndarray_misc.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\nditer.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\nested_sequence.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\npyio.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\numerictypes.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\random.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\rec.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\scalars.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\shape.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\shape_base.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\stride_tricks.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\strings.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\testing.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\twodim_base.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\type_check.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\ufunclike.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\ufuncs.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\ufunc_config.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\fail\\warnings_and_errors.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\misc\\extended_precision.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\pass\\arithmetic.py",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\pass\\arrayprint.py",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\pass\\arrayterator.py",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\pass\\array_constructors.py",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\pass\\array_like.py",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\pass\\bitwise_ops.py",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\pass\\comparisons.py",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\pass\\dtype.py",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\pass\\einsumfunc.py",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\pass\\flatiter.py",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\pass\\fromnumeric.py",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\pass\\index_tricks.py",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\pass\\lib_user_array.py",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\pass\\lib_utils.py",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\pass\\lib_version.py",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\pass\\literal.py",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\pass\\ma.py",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\pass\\mod.py",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\pass\\modules.py",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\pass\\multiarray.py",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\pass\\ndarray_conversion.py",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\pass\\ndarray_misc.py",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\pass\\ndarray_shape_manipulation.py",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\pass\\nditer.py",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\pass\\numeric.py",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\pass\\numerictypes.py",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\pass\\random.py",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\pass\\recfunctions.py",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\pass\\scalars.py",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\pass\\shape.py",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\pass\\simple.py",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\pass\\simple_py3.py",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\pass\\ufunclike.py",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\pass\\ufuncs.py",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\pass\\ufunc_config.py",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\pass\\warnings_and_errors.py",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\arithmetic.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\arraypad.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\arrayprint.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\arraysetops.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\arrayterator.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\array_api_info.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\array_constructors.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\bitwise_ops.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\char.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\chararray.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\comparisons.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\constants.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\ctypeslib.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\datasource.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\dtype.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\einsumfunc.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\emath.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\fft.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\flatiter.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\fromnumeric.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\getlimits.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\histograms.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\index_tricks.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\lib_function_base.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\lib_polynomial.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\lib_utils.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\lib_version.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\linalg.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\ma.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\matrix.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\memmap.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\mod.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\modules.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\multiarray.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\nbit_base_example.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\ndarray_assignability.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\ndarray_conversion.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\ndarray_misc.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\ndarray_shape_manipulation.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\nditer.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\nested_sequence.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\npyio.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\numeric.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\numerictypes.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\polynomial_polybase.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\polynomial_polyutils.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\polynomial_series.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\random.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\rec.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\scalars.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\shape.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\shape_base.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\stride_tricks.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\strings.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\testing.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\twodim_base.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\type_check.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\ufunclike.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\ufuncs.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\ufunc_config.pyi",
      "Lib\\site-packages\\numpy\\typing\\tests\\data\\reveal\\warnings_and_errors.pyi",
      "Lib\\site-packages\\numpy\\_core\\arrayprint.py",
      "Lib\\site-packages\\numpy\\_core\\arrayprint.pyi",
      "Lib\\site-packages\\numpy\\_core\\cversions.py",
      "Lib\\site-packages\\numpy\\_core\\defchararray.py",
      "Lib\\site-packages\\numpy\\_core\\defchararray.pyi",
      "Lib\\site-packages\\numpy\\_core\\einsumfunc.py",
      "Lib\\site-packages\\numpy\\_core\\einsumfunc.pyi",
      "Lib\\site-packages\\numpy\\_core\\fromnumeric.py",
      "Lib\\site-packages\\numpy\\_core\\fromnumeric.pyi",
      "Lib\\site-packages\\numpy\\_core\\function_base.py",
      "Lib\\site-packages\\numpy\\_core\\function_base.pyi",
      "Lib\\site-packages\\numpy\\_core\\getlimits.py",
      "Lib\\site-packages\\numpy\\_core\\getlimits.pyi",
      "Lib\\site-packages\\numpy\\_core\\include",
      "Lib\\site-packages\\numpy\\_core\\lib",
      "Lib\\site-packages\\numpy\\_core\\memmap.py",
      "Lib\\site-packages\\numpy\\_core\\memmap.pyi",
      "Lib\\site-packages\\numpy\\_core\\multiarray.py",
      "Lib\\site-packages\\numpy\\_core\\multiarray.pyi",
      "Lib\\site-packages\\numpy\\_core\\numeric.py",
      "Lib\\site-packages\\numpy\\_core\\numeric.pyi",
      "Lib\\site-packages\\numpy\\_core\\numerictypes.py",
      "Lib\\site-packages\\numpy\\_core\\numerictypes.pyi",
      "Lib\\site-packages\\numpy\\_core\\overrides.py",
      "Lib\\site-packages\\numpy\\_core\\overrides.pyi",
      "Lib\\site-packages\\numpy\\_core\\printoptions.py",
      "Lib\\site-packages\\numpy\\_core\\printoptions.pyi",
      "Lib\\site-packages\\numpy\\_core\\records.py",
      "Lib\\site-packages\\numpy\\_core\\records.pyi",
      "Lib\\site-packages\\numpy\\_core\\shape_base.py",
      "Lib\\site-packages\\numpy\\_core\\shape_base.pyi",
      "Lib\\site-packages\\numpy\\_core\\strings.py",
      "Lib\\site-packages\\numpy\\_core\\strings.pyi",
      "Lib\\site-packages\\numpy\\_core\\tests",
      "Lib\\site-packages\\numpy\\_core\\umath.py",
      "Lib\\site-packages\\numpy\\_core\\umath.pyi",
      "Lib\\site-packages\\numpy\\_core\\_add_newdocs.py",
      "Lib\\site-packages\\numpy\\_core\\_add_newdocs.pyi",
      "Lib\\site-packages\\numpy\\_core\\_add_newdocs_scalars.py",
      "Lib\\site-packages\\numpy\\_core\\_add_newdocs_scalars.pyi",
      "Lib\\site-packages\\numpy\\_core\\_asarray.py",
      "Lib\\site-packages\\numpy\\_core\\_asarray.pyi",
      "Lib\\site-packages\\numpy\\_core\\_dtype.py",
      "Lib\\site-packages\\numpy\\_core\\_dtype.pyi",
      "Lib\\site-packages\\numpy\\_core\\_dtype_ctypes.py",
      "Lib\\site-packages\\numpy\\_core\\_dtype_ctypes.pyi",
      "Lib\\site-packages\\numpy\\_core\\_exceptions.py",
      "Lib\\site-packages\\numpy\\_core\\_exceptions.pyi",
      "Lib\\site-packages\\numpy\\_core\\_internal.py",
      "Lib\\site-packages\\numpy\\_core\\_internal.pyi",
      "Lib\\site-packages\\numpy\\_core\\_machar.py",
      "Lib\\site-packages\\numpy\\_core\\_machar.pyi",
      "Lib\\site-packages\\numpy\\_core\\_methods.py",
      "Lib\\site-packages\\numpy\\_core\\_methods.pyi",
      "Lib\\site-packages\\numpy\\_core\\_multiarray_tests.cp313-win_amd64.lib",
      "Lib\\site-packages\\numpy\\_core\\_multiarray_tests.cp313-win_amd64.pyd",
      "Lib\\site-packages\\numpy\\_core\\_multiarray_umath.cp313-win_amd64.lib",
      "Lib\\site-packages\\numpy\\_core\\_multiarray_umath.cp313-win_amd64.pyd",
      "Lib\\site-packages\\numpy\\_core\\_operand_flag_tests.cp313-win_amd64.lib",
      "Lib\\site-packages\\numpy\\_core\\_operand_flag_tests.cp313-win_amd64.pyd",
      "Lib\\site-packages\\numpy\\_core\\_rational_tests.cp313-win_amd64.lib",
      "Lib\\site-packages\\numpy\\_core\\_rational_tests.cp313-win_amd64.pyd",
      "Lib\\site-packages\\numpy\\_core\\_simd.cp313-win_amd64.lib",
      "Lib\\site-packages\\numpy\\_core\\_simd.cp313-win_amd64.pyd",
      "Lib\\site-packages\\numpy\\_core\\_simd.pyi",
      "Lib\\site-packages\\numpy\\_core\\_string_helpers.py",
      "Lib\\site-packages\\numpy\\_core\\_string_helpers.pyi",
      "Lib\\site-packages\\numpy\\_core\\_struct_ufunc_tests.cp313-win_amd64.lib",
      "Lib\\site-packages\\numpy\\_core\\_struct_ufunc_tests.cp313-win_amd64.pyd",
      "Lib\\site-packages\\numpy\\_core\\_type_aliases.py",
      "Lib\\site-packages\\numpy\\_core\\_type_aliases.pyi",
      "Lib\\site-packages\\numpy\\_core\\_ufunc_config.py",
      "Lib\\site-packages\\numpy\\_core\\_ufunc_config.pyi",
      "Lib\\site-packages\\numpy\\_core\\_umath_tests.cp313-win_amd64.lib",
      "Lib\\site-packages\\numpy\\_core\\_umath_tests.cp313-win_amd64.pyd",
      "Lib\\site-packages\\numpy\\_core\\__init__.py",
      "Lib\\site-packages\\numpy\\_core\\__init__.pyi",
      "Lib\\site-packages\\numpy\\_core\\include\\numpy",
      "Lib\\site-packages\\numpy\\_core\\include\\numpy\\arrayobject.h",
      "Lib\\site-packages\\numpy\\_core\\include\\numpy\\arrayscalars.h",
      "Lib\\site-packages\\numpy\\_core\\include\\numpy\\dtype_api.h",
      "Lib\\site-packages\\numpy\\_core\\include\\numpy\\halffloat.h",
      "Lib\\site-packages\\numpy\\_core\\include\\numpy\\ndarrayobject.h",
      "Lib\\site-packages\\numpy\\_core\\include\\numpy\\ndarraytypes.h",
      "Lib\\site-packages\\numpy\\_core\\include\\numpy\\npy_2_compat.h",
      "Lib\\site-packages\\numpy\\_core\\include\\numpy\\npy_2_complexcompat.h",
      "Lib\\site-packages\\numpy\\_core\\include\\numpy\\npy_3kcompat.h",
      "Lib\\site-packages\\numpy\\_core\\include\\numpy\\npy_common.h",
      "Lib\\site-packages\\numpy\\_core\\include\\numpy\\npy_cpu.h",
      "Lib\\site-packages\\numpy\\_core\\include\\numpy\\npy_endian.h",
      "Lib\\site-packages\\numpy\\_core\\include\\numpy\\npy_math.h",
      "Lib\\site-packages\\numpy\\_core\\include\\numpy\\npy_no_deprecated_api.h",
      "Lib\\site-packages\\numpy\\_core\\include\\numpy\\npy_os.h",
      "Lib\\site-packages\\numpy\\_core\\include\\numpy\\numpyconfig.h",
      "Lib\\site-packages\\numpy\\_core\\include\\numpy\\random",
      "Lib\\site-packages\\numpy\\_core\\include\\numpy\\ufuncobject.h",
      "Lib\\site-packages\\numpy\\_core\\include\\numpy\\utils.h",
      "Lib\\site-packages\\numpy\\_core\\include\\numpy\\_neighborhood_iterator_imp.h",
      "Lib\\site-packages\\numpy\\_core\\include\\numpy\\_numpyconfig.h",
      "Lib\\site-packages\\numpy\\_core\\include\\numpy\\_public_dtype_api_table.h",
      "Lib\\site-packages\\numpy\\_core\\include\\numpy\\__multiarray_api.c",
      "Lib\\site-packages\\numpy\\_core\\include\\numpy\\__multiarray_api.h",
      "Lib\\site-packages\\numpy\\_core\\include\\numpy\\__ufunc_api.c",
      "Lib\\site-packages\\numpy\\_core\\include\\numpy\\__ufunc_api.h",
      "Lib\\site-packages\\numpy\\_core\\include\\numpy\\random\\bitgen.h",
      "Lib\\site-packages\\numpy\\_core\\include\\numpy\\random\\distributions.h",
      "Lib\\site-packages\\numpy\\_core\\include\\numpy\\random\\libdivide.h",
      "Lib\\site-packages\\numpy\\_core\\include\\numpy\\random\\LICENSE.txt",
      "Lib\\site-packages\\numpy\\_core\\lib\\npy-pkg-config",
      "Lib\\site-packages\\numpy\\_core\\lib\\npymath.lib",
      "Lib\\site-packages\\numpy\\_core\\lib\\pkgconfig",
      "Lib\\site-packages\\numpy\\_core\\lib\\npy-pkg-config\\mlib.ini",
      "Lib\\site-packages\\numpy\\_core\\lib\\npy-pkg-config\\npymath.ini",
      "Lib\\site-packages\\numpy\\_core\\lib\\pkgconfig\\numpy.pc",
      "Lib\\site-packages\\numpy\\_core\\tests\\data",
      "Lib\\site-packages\\numpy\\_core\\tests\\examples",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_abc.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_api.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_argparse.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_arraymethod.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_arrayobject.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_arrayprint.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_array_api_info.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_array_coercion.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_array_interface.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_casting_floatingpoint_errors.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_casting_unittests.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_conversion_utils.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_cpu_dispatcher.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_cpu_features.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_custom_dtypes.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_cython.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_datetime.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_defchararray.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_deprecations.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_dlpack.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_dtype.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_einsum.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_errstate.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_extint128.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_function_base.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_getlimits.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_half.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_hashtable.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_indexerrors.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_indexing.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_item_selection.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_limited_api.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_longdouble.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_machar.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_memmap.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_mem_overlap.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_mem_policy.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_multiarray.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_multithreading.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_nditer.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_nep50_promotions.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_numeric.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_numerictypes.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_overrides.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_print.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_protocols.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_records.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_regression.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_scalarbuffer.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_scalarinherit.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_scalarmath.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_scalarprint.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_scalar_ctors.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_scalar_methods.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_shape_base.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_simd.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_simd_module.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_stringdtype.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_strings.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_ufunc.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_umath.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_umath_accuracy.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_umath_complex.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test_unicode.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\test__exceptions.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\_locales.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\_natype.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\data\\astype_copy.pkl",
      "Lib\\site-packages\\numpy\\_core\\tests\\data\\generate_umath_validation_data.cpp",
      "Lib\\site-packages\\numpy\\_core\\tests\\data\\recarray_from_file.fits",
      "Lib\\site-packages\\numpy\\_core\\tests\\data\\umath-validation-set-arccos.csv",
      "Lib\\site-packages\\numpy\\_core\\tests\\data\\umath-validation-set-arccosh.csv",
      "Lib\\site-packages\\numpy\\_core\\tests\\data\\umath-validation-set-arcsin.csv",
      "Lib\\site-packages\\numpy\\_core\\tests\\data\\umath-validation-set-arcsinh.csv",
      "Lib\\site-packages\\numpy\\_core\\tests\\data\\umath-validation-set-arctan.csv",
      "Lib\\site-packages\\numpy\\_core\\tests\\data\\umath-validation-set-arctanh.csv",
      "Lib\\site-packages\\numpy\\_core\\tests\\data\\umath-validation-set-cbrt.csv",
      "Lib\\site-packages\\numpy\\_core\\tests\\data\\umath-validation-set-cos.csv",
      "Lib\\site-packages\\numpy\\_core\\tests\\data\\umath-validation-set-cosh.csv",
      "Lib\\site-packages\\numpy\\_core\\tests\\data\\umath-validation-set-exp.csv",
      "Lib\\site-packages\\numpy\\_core\\tests\\data\\umath-validation-set-exp2.csv",
      "Lib\\site-packages\\numpy\\_core\\tests\\data\\umath-validation-set-expm1.csv",
      "Lib\\site-packages\\numpy\\_core\\tests\\data\\umath-validation-set-log.csv",
      "Lib\\site-packages\\numpy\\_core\\tests\\data\\umath-validation-set-log10.csv",
      "Lib\\site-packages\\numpy\\_core\\tests\\data\\umath-validation-set-log1p.csv",
      "Lib\\site-packages\\numpy\\_core\\tests\\data\\umath-validation-set-log2.csv",
      "Lib\\site-packages\\numpy\\_core\\tests\\data\\umath-validation-set-README.txt",
      "Lib\\site-packages\\numpy\\_core\\tests\\data\\umath-validation-set-sin.csv",
      "Lib\\site-packages\\numpy\\_core\\tests\\data\\umath-validation-set-sinh.csv",
      "Lib\\site-packages\\numpy\\_core\\tests\\data\\umath-validation-set-tan.csv",
      "Lib\\site-packages\\numpy\\_core\\tests\\data\\umath-validation-set-tanh.csv",
      "Lib\\site-packages\\numpy\\_core\\tests\\examples\\cython",
      "Lib\\site-packages\\numpy\\_core\\tests\\examples\\limited_api",
      "Lib\\site-packages\\numpy\\_core\\tests\\examples\\cython\\checks.pyx",
      "Lib\\site-packages\\numpy\\_core\\tests\\examples\\cython\\meson.build",
      "Lib\\site-packages\\numpy\\_core\\tests\\examples\\cython\\setup.py",
      "Lib\\site-packages\\numpy\\_core\\tests\\examples\\limited_api\\limited_api1.c",
      "Lib\\site-packages\\numpy\\_core\\tests\\examples\\limited_api\\limited_api2.pyx",
      "Lib\\site-packages\\numpy\\_core\\tests\\examples\\limited_api\\limited_api_latest.c",
      "Lib\\site-packages\\numpy\\_core\\tests\\examples\\limited_api\\meson.build",
      "Lib\\site-packages\\numpy\\_core\\tests\\examples\\limited_api\\setup.py",
      "Lib\\site-packages\\numpy\\_pyinstaller\\hook-numpy.py",
      "Lib\\site-packages\\numpy\\_pyinstaller\\hook-numpy.pyi",
      "Lib\\site-packages\\numpy\\_pyinstaller\\tests",
      "Lib\\site-packages\\numpy\\_pyinstaller\\__init__.py",
      "Lib\\site-packages\\numpy\\_pyinstaller\\__init__.pyi",
      "Lib\\site-packages\\numpy\\_pyinstaller\\tests\\pyinstaller-smoke.py",
      "Lib\\site-packages\\numpy\\_pyinstaller\\tests\\test_pyinstaller.py",
      "Lib\\site-packages\\numpy\\_pyinstaller\\tests\\__init__.py",
      "Lib\\site-packages\\numpy\\_typing\\_add_docstring.py",
      "Lib\\site-packages\\numpy\\_typing\\_array_like.py",
      "Lib\\site-packages\\numpy\\_typing\\_char_codes.py",
      "Lib\\site-packages\\numpy\\_typing\\_dtype_like.py",
      "Lib\\site-packages\\numpy\\_typing\\_extended_precision.py",
      "Lib\\site-packages\\numpy\\_typing\\_nbit.py",
      "Lib\\site-packages\\numpy\\_typing\\_nbit_base.py",
      "Lib\\site-packages\\numpy\\_typing\\_nbit_base.pyi",
      "Lib\\site-packages\\numpy\\_typing\\_nested_sequence.py",
      "Lib\\site-packages\\numpy\\_typing\\_scalars.py",
      "Lib\\site-packages\\numpy\\_typing\\_shape.py",
      "Lib\\site-packages\\numpy\\_typing\\_ufunc.py",
      "Lib\\site-packages\\numpy\\_typing\\_ufunc.pyi",
      "Lib\\site-packages\\numpy\\_typing\\__init__.py",
      "Lib\\site-packages\\numpy\\_utils\\_convertions.py",
      "Lib\\site-packages\\numpy\\_utils\\_convertions.pyi",
      "Lib\\site-packages\\numpy\\_utils\\_inspect.py",
      "Lib\\site-packages\\numpy\\_utils\\_inspect.pyi",
      "Lib\\site-packages\\numpy\\_utils\\_pep440.py",
      "Lib\\site-packages\\numpy\\_utils\\_pep440.pyi",
      "Lib\\site-packages\\numpy\\_utils\\__init__.py",
      "Lib\\site-packages\\numpy\\_utils\\__init__.pyi",
      "Lib\\site-packages\\numpy-2.3.4.dist-info\\DELVEWHEEL",
      "Lib\\site-packages\\numpy-2.3.4.dist-info\\entry_points.txt",
      "Lib\\site-packages\\numpy-2.3.4.dist-info\\INSTALLER",
      "Lib\\site-packages\\numpy-2.3.4.dist-info\\LICENSE.txt",
      "Lib\\site-packages\\numpy-2.3.4.dist-info\\METADATA",
      "Lib\\site-packages\\numpy-2.3.4.dist-info\\RECORD",
      "Lib\\site-packages\\numpy-2.3.4.dist-info\\WHEEL",
      "Lib\\site-packages\\numpy.libs\\libscipy_openblas64_-860d95b1c38e637ce4509f5fa24fbf2a.dll",
      "Lib\\site-packages\\numpy.libs\\msvcp140-a4c2229bdc2a2a630acdc095b4d86008.dll",
      "Lib\\site-packages\\packaging\\licenses",
      "Lib\\site-packages\\packaging\\markers.py",
      "Lib\\site-packages\\packaging\\metadata.py",
      "Lib\\site-packages\\packaging\\py.typed",
      "Lib\\site-packages\\packaging\\requirements.py",
      "Lib\\site-packages\\packaging\\specifiers.py",
      "Lib\\site-packages\\packaging\\tags.py",
      "Lib\\site-packages\\packaging\\utils.py",
      "Lib\\site-packages\\packaging\\version.py",
      "Lib\\site-packages\\packaging\\_elffile.py",
      "Lib\\site-packages\\packaging\\_manylinux.py",
      "Lib\\site-packages\\packaging\\_musllinux.py",
      "Lib\\site-packages\\packaging\\_parser.py",
      "Lib\\site-packages\\packaging\\_structures.py",
      "Lib\\site-packages\\packaging\\_tokenizer.py",
      "Lib\\site-packages\\packaging\\__init__.py",
      "Lib\\site-packages\\packaging\\licenses\\_spdx.py",
      "Lib\\site-packages\\packaging\\licenses\\__init__.py",
      "Lib\\site-packages\\packaging-25.0.dist-info\\INSTALLER",
      "Lib\\site-packages\\packaging-25.0.dist-info\\licenses",
      "Lib\\site-packages\\packaging-25.0.dist-info\\METADATA",
      "Lib\\site-packages\\packaging-25.0.dist-info\\RECORD",
      "Lib\\site-packages\\packaging-25.0.dist-info\\WHEEL",
      "Lib\\site-packages\\packaging-25.0.dist-info\\licenses\\LICENSE",
      "Lib\\site-packages\\packaging-25.0.dist-info\\licenses\\LICENSE.APACHE",
      "Lib\\site-packages\\packaging-25.0.dist-info\\licenses\\LICENSE.BSD",
      "Lib\\site-packages\\pandas\\api",
      "Lib\\site-packages\\pandas\\arrays",
      "Lib\\site-packages\\pandas\\compat",
      "Lib\\site-packages\\pandas\\conftest.py",
      "Lib\\site-packages\\pandas\\core",
      "Lib\\site-packages\\pandas\\errors",
      "Lib\\site-packages\\pandas\\io",
      "Lib\\site-packages\\pandas\\plotting",
      "Lib\\site-packages\\pandas\\pyproject.toml",
      "Lib\\site-packages\\pandas\\testing.py",
      "Lib\\site-packages\\pandas\\tests",
      "Lib\\site-packages\\pandas\\tseries",
      "Lib\\site-packages\\pandas\\util",
      "Lib\\site-packages\\pandas\\_config",
      "Lib\\site-packages\\pandas\\_libs",
      "Lib\\site-packages\\pandas\\_testing",
      "Lib\\site-packages\\pandas\\_typing.py",
      "Lib\\site-packages\\pandas\\_version.py",
      "Lib\\site-packages\\pandas\\_version_meson.py",
      "Lib\\site-packages\\pandas\\__init__.py",
      "Lib\\site-packages\\pandas\\api\\extensions",
      "Lib\\site-packages\\pandas\\api\\indexers",
      "Lib\\site-packages\\pandas\\api\\interchange",
      "Lib\\site-packages\\pandas\\api\\types",
      "Lib\\site-packages\\pandas\\api\\typing",
      "Lib\\site-packages\\pandas\\api\\__init__.py",
      "Lib\\site-packages\\pandas\\api\\extensions\\__init__.py",
      "Lib\\site-packages\\pandas\\api\\indexers\\__init__.py",
      "Lib\\site-packages\\pandas\\api\\interchange\\__init__.py",
      "Lib\\site-packages\\pandas\\api\\types\\__init__.py",
      "Lib\\site-packages\\pandas\\api\\typing\\__init__.py",
      "Lib\\site-packages\\pandas\\arrays\\__init__.py",
      "Lib\\site-packages\\pandas\\compat\\compressors.py",
      "Lib\\site-packages\\pandas\\compat\\numpy",
      "Lib\\site-packages\\pandas\\compat\\pickle_compat.py",
      "Lib\\site-packages\\pandas\\compat\\pyarrow.py",
      "Lib\\site-packages\\pandas\\compat\\_constants.py",
      "Lib\\site-packages\\pandas\\compat\\_optional.py",
      "Lib\\site-packages\\pandas\\compat\\__init__.py",
      "Lib\\site-packages\\pandas\\compat\\numpy\\function.py",
      "Lib\\site-packages\\pandas\\compat\\numpy\\__init__.py",
      "Lib\\site-packages\\pandas\\core\\accessor.py",
      "Lib\\site-packages\\pandas\\core\\algorithms.py",
      "Lib\\site-packages\\pandas\\core\\api.py",
      "Lib\\site-packages\\pandas\\core\\apply.py",
      "Lib\\site-packages\\pandas\\core\\arraylike.py",
      "Lib\\site-packages\\pandas\\core\\arrays",
      "Lib\\site-packages\\pandas\\core\\array_algos",
      "Lib\\site-packages\\pandas\\core\\base.py",
      "Lib\\site-packages\\pandas\\core\\common.py",
      "Lib\\site-packages\\pandas\\core\\computation",
      "Lib\\site-packages\\pandas\\core\\config_init.py",
      "Lib\\site-packages\\pandas\\core\\construction.py",
      "Lib\\site-packages\\pandas\\core\\dtypes",
      "Lib\\site-packages\\pandas\\core\\flags.py",
      "Lib\\site-packages\\pandas\\core\\frame.py",
      "Lib\\site-packages\\pandas\\core\\generic.py",
      "Lib\\site-packages\\pandas\\core\\groupby",
      "Lib\\site-packages\\pandas\\core\\indexers",
      "Lib\\site-packages\\pandas\\core\\indexes",
      "Lib\\site-packages\\pandas\\core\\indexing.py",
      "Lib\\site-packages\\pandas\\core\\interchange",
      "Lib\\site-packages\\pandas\\core\\internals",
      "Lib\\site-packages\\pandas\\core\\methods",
      "Lib\\site-packages\\pandas\\core\\missing.py",
      "Lib\\site-packages\\pandas\\core\\nanops.py",
      "Lib\\site-packages\\pandas\\core\\ops",
      "Lib\\site-packages\\pandas\\core\\resample.py",
      "Lib\\site-packages\\pandas\\core\\reshape",
      "Lib\\site-packages\\pandas\\core\\roperator.py",
      "Lib\\site-packages\\pandas\\core\\sample.py",
      "Lib\\site-packages\\pandas\\core\\series.py",
      "Lib\\site-packages\\pandas\\core\\shared_docs.py",
      "Lib\\site-packages\\pandas\\core\\sorting.py",
      "Lib\\site-packages\\pandas\\core\\sparse",
      "Lib\\site-packages\\pandas\\core\\strings",
      "Lib\\site-packages\\pandas\\core\\tools",
      "Lib\\site-packages\\pandas\\core\\util",
      "Lib\\site-packages\\pandas\\core\\window",
      "Lib\\site-packages\\pandas\\core\\_numba",
      "Lib\\site-packages\\pandas\\core\\__init__.py",
      "Lib\\site-packages\\pandas\\core\\arrays\\arrow",
      "Lib\\site-packages\\pandas\\core\\arrays\\base.py",
      "Lib\\site-packages\\pandas\\core\\arrays\\boolean.py",
      "Lib\\site-packages\\pandas\\core\\arrays\\categorical.py",
      "Lib\\site-packages\\pandas\\core\\arrays\\datetimelike.py",
      "Lib\\site-packages\\pandas\\core\\arrays\\datetimes.py",
      "Lib\\site-packages\\pandas\\core\\arrays\\floating.py",
      "Lib\\site-packages\\pandas\\core\\arrays\\integer.py",
      "Lib\\site-packages\\pandas\\core\\arrays\\interval.py",
      "Lib\\site-packages\\pandas\\core\\arrays\\masked.py",
      "Lib\\site-packages\\pandas\\core\\arrays\\numeric.py",
      "Lib\\site-packages\\pandas\\core\\arrays\\numpy_.py",
      "Lib\\site-packages\\pandas\\core\\arrays\\period.py",
      "Lib\\site-packages\\pandas\\core\\arrays\\sparse",
      "Lib\\site-packages\\pandas\\core\\arrays\\string_.py",
      "Lib\\site-packages\\pandas\\core\\arrays\\string_arrow.py",
      "Lib\\site-packages\\pandas\\core\\arrays\\timedeltas.py",
      "Lib\\site-packages\\pandas\\core\\arrays\\_arrow_string_mixins.py",
      "Lib\\site-packages\\pandas\\core\\arrays\\_mixins.py",
      "Lib\\site-packages\\pandas\\core\\arrays\\_ranges.py",
      "Lib\\site-packages\\pandas\\core\\arrays\\_utils.py",
      "Lib\\site-packages\\pandas\\core\\arrays\\__init__.py",
      "Lib\\site-packages\\pandas\\core\\arrays\\arrow\\accessors.py",
      "Lib\\site-packages\\pandas\\core\\arrays\\arrow\\array.py",
      "Lib\\site-packages\\pandas\\core\\arrays\\arrow\\extension_types.py",
      "Lib\\site-packages\\pandas\\core\\arrays\\arrow\\_arrow_utils.py",
      "Lib\\site-packages\\pandas\\core\\arrays\\arrow\\__init__.py",
      "Lib\\site-packages\\pandas\\core\\arrays\\sparse\\accessor.py",
      "Lib\\site-packages\\pandas\\core\\arrays\\sparse\\array.py",
      "Lib\\site-packages\\pandas\\core\\arrays\\sparse\\scipy_sparse.py",
      "Lib\\site-packages\\pandas\\core\\arrays\\sparse\\__init__.py",
      "Lib\\site-packages\\pandas\\core\\array_algos\\datetimelike_accumulations.py",
      "Lib\\site-packages\\pandas\\core\\array_algos\\masked_accumulations.py",
      "Lib\\site-packages\\pandas\\core\\array_algos\\masked_reductions.py",
      "Lib\\site-packages\\pandas\\core\\array_algos\\putmask.py",
      "Lib\\site-packages\\pandas\\core\\array_algos\\quantile.py",
      "Lib\\site-packages\\pandas\\core\\array_algos\\replace.py",
      "Lib\\site-packages\\pandas\\core\\array_algos\\take.py",
      "Lib\\site-packages\\pandas\\core\\array_algos\\transforms.py",
      "Lib\\site-packages\\pandas\\core\\array_algos\\__init__.py",
      "Lib\\site-packages\\pandas\\core\\computation\\align.py",
      "Lib\\site-packages\\pandas\\core\\computation\\api.py",
      "Lib\\site-packages\\pandas\\core\\computation\\check.py",
      "Lib\\site-packages\\pandas\\core\\computation\\common.py",
      "Lib\\site-packages\\pandas\\core\\computation\\engines.py",
      "Lib\\site-packages\\pandas\\core\\computation\\eval.py",
      "Lib\\site-packages\\pandas\\core\\computation\\expr.py",
      "Lib\\site-packages\\pandas\\core\\computation\\expressions.py",
      "Lib\\site-packages\\pandas\\core\\computation\\ops.py",
      "Lib\\site-packages\\pandas\\core\\computation\\parsing.py",
      "Lib\\site-packages\\pandas\\core\\computation\\pytables.py",
      "Lib\\site-packages\\pandas\\core\\computation\\scope.py",
      "Lib\\site-packages\\pandas\\core\\computation\\__init__.py",
      "Lib\\site-packages\\pandas\\core\\dtypes\\api.py",
      "Lib\\site-packages\\pandas\\core\\dtypes\\astype.py",
      "Lib\\site-packages\\pandas\\core\\dtypes\\base.py",
      "Lib\\site-packages\\pandas\\core\\dtypes\\cast.py",
      "Lib\\site-packages\\pandas\\core\\dtypes\\common.py",
      "Lib\\site-packages\\pandas\\core\\dtypes\\concat.py",
      "Lib\\site-packages\\pandas\\core\\dtypes\\dtypes.py",
      "Lib\\site-packages\\pandas\\core\\dtypes\\generic.py",
      "Lib\\site-packages\\pandas\\core\\dtypes\\inference.py",
      "Lib\\site-packages\\pandas\\core\\dtypes\\missing.py",
      "Lib\\site-packages\\pandas\\core\\dtypes\\__init__.py",
      "Lib\\site-packages\\pandas\\core\\groupby\\base.py",
      "Lib\\site-packages\\pandas\\core\\groupby\\categorical.py",
      "Lib\\site-packages\\pandas\\core\\groupby\\generic.py",
      "Lib\\site-packages\\pandas\\core\\groupby\\groupby.py",
      "Lib\\site-packages\\pandas\\core\\groupby\\grouper.py",
      "Lib\\site-packages\\pandas\\core\\groupby\\indexing.py",
      "Lib\\site-packages\\pandas\\core\\groupby\\numba_.py",
      "Lib\\site-packages\\pandas\\core\\groupby\\ops.py",
      "Lib\\site-packages\\pandas\\core\\groupby\\__init__.py",
      "Lib\\site-packages\\pandas\\core\\indexers\\objects.py",
      "Lib\\site-packages\\pandas\\core\\indexers\\utils.py",
      "Lib\\site-packages\\pandas\\core\\indexers\\__init__.py",
      "Lib\\site-packages\\pandas\\core\\indexes\\accessors.py",
      "Lib\\site-packages\\pandas\\core\\indexes\\api.py",
      "Lib\\site-packages\\pandas\\core\\indexes\\base.py",
      "Lib\\site-packages\\pandas\\core\\indexes\\category.py",
      "Lib\\site-packages\\pandas\\core\\indexes\\datetimelike.py",
      "Lib\\site-packages\\pandas\\core\\indexes\\datetimes.py",
      "Lib\\site-packages\\pandas\\core\\indexes\\extension.py",
      "Lib\\site-packages\\pandas\\core\\indexes\\frozen.py",
      "Lib\\site-packages\\pandas\\core\\indexes\\interval.py",
      "Lib\\site-packages\\pandas\\core\\indexes\\multi.py",
      "Lib\\site-packages\\pandas\\core\\indexes\\period.py",
      "Lib\\site-packages\\pandas\\core\\indexes\\range.py",
      "Lib\\site-packages\\pandas\\core\\indexes\\timedeltas.py",
      "Lib\\site-packages\\pandas\\core\\indexes\\__init__.py",
      "Lib\\site-packages\\pandas\\core\\interchange\\buffer.py",
      "Lib\\site-packages\\pandas\\core\\interchange\\column.py",
      "Lib\\site-packages\\pandas\\core\\interchange\\dataframe.py",
      "Lib\\site-packages\\pandas\\core\\interchange\\dataframe_protocol.py",
      "Lib\\site-packages\\pandas\\core\\interchange\\from_dataframe.py",
      "Lib\\site-packages\\pandas\\core\\interchange\\utils.py",
      "Lib\\site-packages\\pandas\\core\\interchange\\__init__.py",
      "Lib\\site-packages\\pandas\\core\\internals\\api.py",
      "Lib\\site-packages\\pandas\\core\\internals\\array_manager.py",
      "Lib\\site-packages\\pandas\\core\\internals\\base.py",
      "Lib\\site-packages\\pandas\\core\\internals\\blocks.py",
      "Lib\\site-packages\\pandas\\core\\internals\\concat.py",
      "Lib\\site-packages\\pandas\\core\\internals\\construction.py",
      "Lib\\site-packages\\pandas\\core\\internals\\managers.py",
      "Lib\\site-packages\\pandas\\core\\internals\\ops.py",
      "Lib\\site-packages\\pandas\\core\\internals\\__init__.py",
      "Lib\\site-packages\\pandas\\core\\methods\\describe.py",
      "Lib\\site-packages\\pandas\\core\\methods\\selectn.py",
      "Lib\\site-packages\\pandas\\core\\methods\\to_dict.py",
      "Lib\\site-packages\\pandas\\core\\methods\\__init__.py",
      "Lib\\site-packages\\pandas\\core\\ops\\array_ops.py",
      "Lib\\site-packages\\pandas\\core\\ops\\common.py",
      "Lib\\site-packages\\pandas\\core\\ops\\dispatch.py",
      "Lib\\site-packages\\pandas\\core\\ops\\docstrings.py",
      "Lib\\site-packages\\pandas\\core\\ops\\invalid.py",
      "Lib\\site-packages\\pandas\\core\\ops\\mask_ops.py",
      "Lib\\site-packages\\pandas\\core\\ops\\missing.py",
      "Lib\\site-packages\\pandas\\core\\ops\\__init__.py",
      "Lib\\site-packages\\pandas\\core\\reshape\\api.py",
      "Lib\\site-packages\\pandas\\core\\reshape\\concat.py",
      "Lib\\site-packages\\pandas\\core\\reshape\\encoding.py",
      "Lib\\site-packages\\pandas\\core\\reshape\\melt.py",
      "Lib\\site-packages\\pandas\\core\\reshape\\merge.py",
      "Lib\\site-packages\\pandas\\core\\reshape\\pivot.py",
      "Lib\\site-packages\\pandas\\core\\reshape\\reshape.py",
      "Lib\\site-packages\\pandas\\core\\reshape\\tile.py",
      "Lib\\site-packages\\pandas\\core\\reshape\\util.py",
      "Lib\\site-packages\\pandas\\core\\reshape\\__init__.py",
      "Lib\\site-packages\\pandas\\core\\sparse\\api.py",
      "Lib\\site-packages\\pandas\\core\\sparse\\__init__.py",
      "Lib\\site-packages\\pandas\\core\\strings\\accessor.py",
      "Lib\\site-packages\\pandas\\core\\strings\\base.py",
      "Lib\\site-packages\\pandas\\core\\strings\\object_array.py",
      "Lib\\site-packages\\pandas\\core\\strings\\__init__.py",
      "Lib\\site-packages\\pandas\\core\\tools\\datetimes.py",
      "Lib\\site-packages\\pandas\\core\\tools\\numeric.py",
      "Lib\\site-packages\\pandas\\core\\tools\\timedeltas.py",
      "Lib\\site-packages\\pandas\\core\\tools\\times.py",
      "Lib\\site-packages\\pandas\\core\\tools\\__init__.py",
      "Lib\\site-packages\\pandas\\core\\util\\hashing.py",
      "Lib\\site-packages\\pandas\\core\\util\\numba_.py",
      "Lib\\site-packages\\pandas\\core\\util\\__init__.py",
      "Lib\\site-packages\\pandas\\core\\window\\common.py",
      "Lib\\site-packages\\pandas\\core\\window\\doc.py",
      "Lib\\site-packages\\pandas\\core\\window\\ewm.py",
      "Lib\\site-packages\\pandas\\core\\window\\expanding.py",
      "Lib\\site-packages\\pandas\\core\\window\\numba_.py",
      "Lib\\site-packages\\pandas\\core\\window\\online.py",
      "Lib\\site-packages\\pandas\\core\\window\\rolling.py",
      "Lib\\site-packages\\pandas\\core\\window\\__init__.py",
      "Lib\\site-packages\\pandas\\core\\_numba\\executor.py",
      "Lib\\site-packages\\pandas\\core\\_numba\\extensions.py",
      "Lib\\site-packages\\pandas\\core\\_numba\\kernels",
      "Lib\\site-packages\\pandas\\core\\_numba\\__init__.py",
      "Lib\\site-packages\\pandas\\core\\_numba\\kernels\\mean_.py",
      "Lib\\site-packages\\pandas\\core\\_numba\\kernels\\min_max_.py",
      "Lib\\site-packages\\pandas\\core\\_numba\\kernels\\shared.py",
      "Lib\\site-packages\\pandas\\core\\_numba\\kernels\\sum_.py",
      "Lib\\site-packages\\pandas\\core\\_numba\\kernels\\var_.py",
      "Lib\\site-packages\\pandas\\core\\_numba\\kernels\\__init__.py",
      "Lib\\site-packages\\pandas\\errors\\__init__.py",
      "Lib\\site-packages\\pandas\\io\\api.py",
      "Lib\\site-packages\\pandas\\io\\clipboard",
      "Lib\\site-packages\\pandas\\io\\clipboards.py",
      "Lib\\site-packages\\pandas\\io\\common.py",
      "Lib\\site-packages\\pandas\\io\\excel",
      "Lib\\site-packages\\pandas\\io\\feather_format.py",
      "Lib\\site-packages\\pandas\\io\\formats",
      "Lib\\site-packages\\pandas\\io\\gbq.py",
      "Lib\\site-packages\\pandas\\io\\html.py",
      "Lib\\site-packages\\pandas\\io\\json",
      "Lib\\site-packages\\pandas\\io\\orc.py",
      "Lib\\site-packages\\pandas\\io\\parquet.py",
      "Lib\\site-packages\\pandas\\io\\parsers",
      "Lib\\site-packages\\pandas\\io\\pickle.py",
      "Lib\\site-packages\\pandas\\io\\pytables.py",
      "Lib\\site-packages\\pandas\\io\\sas",
      "Lib\\site-packages\\pandas\\io\\spss.py",
      "Lib\\site-packages\\pandas\\io\\sql.py",
      "Lib\\site-packages\\pandas\\io\\stata.py",
      "Lib\\site-packages\\pandas\\io\\xml.py",
      "Lib\\site-packages\\pandas\\io\\_util.py",
      "Lib\\site-packages\\pandas\\io\\__init__.py",
      "Lib\\site-packages\\pandas\\io\\clipboard\\__init__.py",
      "Lib\\site-packages\\pandas\\io\\excel\\_base.py",
      "Lib\\site-packages\\pandas\\io\\excel\\_calamine.py",
      "Lib\\site-packages\\pandas\\io\\excel\\_odfreader.py",
      "Lib\\site-packages\\pandas\\io\\excel\\_odswriter.py",
      "Lib\\site-packages\\pandas\\io\\excel\\_openpyxl.py",
      "Lib\\site-packages\\pandas\\io\\excel\\_pyxlsb.py",
      "Lib\\site-packages\\pandas\\io\\excel\\_util.py",
      "Lib\\site-packages\\pandas\\io\\excel\\_xlrd.py",
      "Lib\\site-packages\\pandas\\io\\excel\\_xlsxwriter.py",
      "Lib\\site-packages\\pandas\\io\\excel\\__init__.py",
      "Lib\\site-packages\\pandas\\io\\formats\\console.py",
      "Lib\\site-packages\\pandas\\io\\formats\\css.py",
      "Lib\\site-packages\\pandas\\io\\formats\\csvs.py",
      "Lib\\site-packages\\pandas\\io\\formats\\excel.py",
      "Lib\\site-packages\\pandas\\io\\formats\\format.py",
      "Lib\\site-packages\\pandas\\io\\formats\\html.py",
      "Lib\\site-packages\\pandas\\io\\formats\\info.py",
      "Lib\\site-packages\\pandas\\io\\formats\\printing.py",
      "Lib\\site-packages\\pandas\\io\\formats\\string.py",
      "Lib\\site-packages\\pandas\\io\\formats\\style.py",
      "Lib\\site-packages\\pandas\\io\\formats\\style_render.py",
      "Lib\\site-packages\\pandas\\io\\formats\\templates",
      "Lib\\site-packages\\pandas\\io\\formats\\xml.py",
      "Lib\\site-packages\\pandas\\io\\formats\\_color_data.py",
      "Lib\\site-packages\\pandas\\io\\formats\\__init__.py",
      "Lib\\site-packages\\pandas\\io\\formats\\templates\\html.tpl",
      "Lib\\site-packages\\pandas\\io\\formats\\templates\\html_style.tpl",
      "Lib\\site-packages\\pandas\\io\\formats\\templates\\html_table.tpl",
      "Lib\\site-packages\\pandas\\io\\formats\\templates\\latex.tpl",
      "Lib\\site-packages\\pandas\\io\\formats\\templates\\latex_longtable.tpl",
      "Lib\\site-packages\\pandas\\io\\formats\\templates\\latex_table.tpl",
      "Lib\\site-packages\\pandas\\io\\formats\\templates\\string.tpl",
      "Lib\\site-packages\\pandas\\io\\json\\_json.py",
      "Lib\\site-packages\\pandas\\io\\json\\_normalize.py",
      "Lib\\site-packages\\pandas\\io\\json\\_table_schema.py",
      "Lib\\site-packages\\pandas\\io\\json\\__init__.py",
      "Lib\\site-packages\\pandas\\io\\parsers\\arrow_parser_wrapper.py",
      "Lib\\site-packages\\pandas\\io\\parsers\\base_parser.py",
      "Lib\\site-packages\\pandas\\io\\parsers\\c_parser_wrapper.py",
      "Lib\\site-packages\\pandas\\io\\parsers\\python_parser.py",
      "Lib\\site-packages\\pandas\\io\\parsers\\readers.py",
      "Lib\\site-packages\\pandas\\io\\parsers\\__init__.py",
      "Lib\\site-packages\\pandas\\io\\sas\\sas7bdat.py",
      "Lib\\site-packages\\pandas\\io\\sas\\sasreader.py",
      "Lib\\site-packages\\pandas\\io\\sas\\sas_constants.py",
      "Lib\\site-packages\\pandas\\io\\sas\\sas_xport.py",
      "Lib\\site-packages\\pandas\\io\\sas\\__init__.py",
      "Lib\\site-packages\\pandas\\plotting\\_core.py",
      "Lib\\site-packages\\pandas\\plotting\\_matplotlib",
      "Lib\\site-packages\\pandas\\plotting\\_misc.py",
      "Lib\\site-packages\\pandas\\plotting\\__init__.py",
      "Lib\\site-packages\\pandas\\plotting\\_matplotlib\\boxplot.py",
      "Lib\\site-packages\\pandas\\plotting\\_matplotlib\\converter.py",
      "Lib\\site-packages\\pandas\\plotting\\_matplotlib\\core.py",
      "Lib\\site-packages\\pandas\\plotting\\_matplotlib\\groupby.py",
      "Lib\\site-packages\\pandas\\plotting\\_matplotlib\\hist.py",
      "Lib\\site-packages\\pandas\\plotting\\_matplotlib\\misc.py",
      "Lib\\site-packages\\pandas\\plotting\\_matplotlib\\style.py",
      "Lib\\site-packages\\pandas\\plotting\\_matplotlib\\timeseries.py",
      "Lib\\site-packages\\pandas\\plotting\\_matplotlib\\tools.py",
      "Lib\\site-packages\\pandas\\plotting\\_matplotlib\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\api",
      "Lib\\site-packages\\pandas\\tests\\apply",
      "Lib\\site-packages\\pandas\\tests\\arithmetic",
      "Lib\\site-packages\\pandas\\tests\\arrays",
      "Lib\\site-packages\\pandas\\tests\\base",
      "Lib\\site-packages\\pandas\\tests\\computation",
      "Lib\\site-packages\\pandas\\tests\\config",
      "Lib\\site-packages\\pandas\\tests\\construction",
      "Lib\\site-packages\\pandas\\tests\\copy_view",
      "Lib\\site-packages\\pandas\\tests\\dtypes",
      "Lib\\site-packages\\pandas\\tests\\extension",
      "Lib\\site-packages\\pandas\\tests\\frame",
      "Lib\\site-packages\\pandas\\tests\\generic",
      "Lib\\site-packages\\pandas\\tests\\groupby",
      "Lib\\site-packages\\pandas\\tests\\indexes",
      "Lib\\site-packages\\pandas\\tests\\indexing",
      "Lib\\site-packages\\pandas\\tests\\interchange",
      "Lib\\site-packages\\pandas\\tests\\internals",
      "Lib\\site-packages\\pandas\\tests\\io",
      "Lib\\site-packages\\pandas\\tests\\libs",
      "Lib\\site-packages\\pandas\\tests\\plotting",
      "Lib\\site-packages\\pandas\\tests\\reductions",
      "Lib\\site-packages\\pandas\\tests\\resample",
      "Lib\\site-packages\\pandas\\tests\\reshape",
      "Lib\\site-packages\\pandas\\tests\\scalar",
      "Lib\\site-packages\\pandas\\tests\\series",
      "Lib\\site-packages\\pandas\\tests\\strings",
      "Lib\\site-packages\\pandas\\tests\\test_aggregation.py",
      "Lib\\site-packages\\pandas\\tests\\test_algos.py",
      "Lib\\site-packages\\pandas\\tests\\test_common.py",
      "Lib\\site-packages\\pandas\\tests\\test_downstream.py",
      "Lib\\site-packages\\pandas\\tests\\test_errors.py",
      "Lib\\site-packages\\pandas\\tests\\test_expressions.py",
      "Lib\\site-packages\\pandas\\tests\\test_flags.py",
      "Lib\\site-packages\\pandas\\tests\\test_multilevel.py",
      "Lib\\site-packages\\pandas\\tests\\test_nanops.py",
      "Lib\\site-packages\\pandas\\tests\\test_optional_dependency.py",
      "Lib\\site-packages\\pandas\\tests\\test_register_accessor.py",
      "Lib\\site-packages\\pandas\\tests\\test_sorting.py",
      "Lib\\site-packages\\pandas\\tests\\test_take.py",
      "Lib\\site-packages\\pandas\\tests\\tools",
      "Lib\\site-packages\\pandas\\tests\\tseries",
      "Lib\\site-packages\\pandas\\tests\\tslibs",
      "Lib\\site-packages\\pandas\\tests\\util",
      "Lib\\site-packages\\pandas\\tests\\window",
      "Lib\\site-packages\\pandas\\tests\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\api\\test_api.py",
      "Lib\\site-packages\\pandas\\tests\\api\\test_types.py",
      "Lib\\site-packages\\pandas\\tests\\api\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\apply\\common.py",
      "Lib\\site-packages\\pandas\\tests\\apply\\test_frame_apply.py",
      "Lib\\site-packages\\pandas\\tests\\apply\\test_frame_apply_relabeling.py",
      "Lib\\site-packages\\pandas\\tests\\apply\\test_frame_transform.py",
      "Lib\\site-packages\\pandas\\tests\\apply\\test_invalid_arg.py",
      "Lib\\site-packages\\pandas\\tests\\apply\\test_numba.py",
      "Lib\\site-packages\\pandas\\tests\\apply\\test_series_apply.py",
      "Lib\\site-packages\\pandas\\tests\\apply\\test_series_apply_relabeling.py",
      "Lib\\site-packages\\pandas\\tests\\apply\\test_series_transform.py",
      "Lib\\site-packages\\pandas\\tests\\apply\\test_str.py",
      "Lib\\site-packages\\pandas\\tests\\apply\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\arithmetic\\common.py",
      "Lib\\site-packages\\pandas\\tests\\arithmetic\\conftest.py",
      "Lib\\site-packages\\pandas\\tests\\arithmetic\\test_array_ops.py",
      "Lib\\site-packages\\pandas\\tests\\arithmetic\\test_categorical.py",
      "Lib\\site-packages\\pandas\\tests\\arithmetic\\test_datetime64.py",
      "Lib\\site-packages\\pandas\\tests\\arithmetic\\test_interval.py",
      "Lib\\site-packages\\pandas\\tests\\arithmetic\\test_numeric.py",
      "Lib\\site-packages\\pandas\\tests\\arithmetic\\test_object.py",
      "Lib\\site-packages\\pandas\\tests\\arithmetic\\test_period.py",
      "Lib\\site-packages\\pandas\\tests\\arithmetic\\test_timedelta64.py",
      "Lib\\site-packages\\pandas\\tests\\arithmetic\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\boolean",
      "Lib\\site-packages\\pandas\\tests\\arrays\\categorical",
      "Lib\\site-packages\\pandas\\tests\\arrays\\datetimes",
      "Lib\\site-packages\\pandas\\tests\\arrays\\floating",
      "Lib\\site-packages\\pandas\\tests\\arrays\\integer",
      "Lib\\site-packages\\pandas\\tests\\arrays\\interval",
      "Lib\\site-packages\\pandas\\tests\\arrays\\masked",
      "Lib\\site-packages\\pandas\\tests\\arrays\\masked_shared.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\numpy_",
      "Lib\\site-packages\\pandas\\tests\\arrays\\period",
      "Lib\\site-packages\\pandas\\tests\\arrays\\sparse",
      "Lib\\site-packages\\pandas\\tests\\arrays\\string_",
      "Lib\\site-packages\\pandas\\tests\\arrays\\test_array.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\test_datetimelike.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\test_datetimes.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\test_ndarray_backed.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\test_period.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\test_timedeltas.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\timedeltas",
      "Lib\\site-packages\\pandas\\tests\\arrays\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\boolean\\test_arithmetic.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\boolean\\test_astype.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\boolean\\test_comparison.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\boolean\\test_construction.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\boolean\\test_function.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\boolean\\test_indexing.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\boolean\\test_logical.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\boolean\\test_ops.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\boolean\\test_reduction.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\boolean\\test_repr.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\boolean\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\categorical\\test_algos.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\categorical\\test_analytics.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\categorical\\test_api.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\categorical\\test_astype.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\categorical\\test_constructors.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\categorical\\test_dtypes.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\categorical\\test_indexing.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\categorical\\test_map.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\categorical\\test_missing.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\categorical\\test_operators.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\categorical\\test_replace.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\categorical\\test_repr.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\categorical\\test_sorting.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\categorical\\test_subclass.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\categorical\\test_take.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\categorical\\test_warnings.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\categorical\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\datetimes\\test_constructors.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\datetimes\\test_cumulative.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\datetimes\\test_reductions.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\datetimes\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\floating\\conftest.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\floating\\test_arithmetic.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\floating\\test_astype.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\floating\\test_comparison.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\floating\\test_concat.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\floating\\test_construction.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\floating\\test_contains.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\floating\\test_function.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\floating\\test_repr.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\floating\\test_to_numpy.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\floating\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\integer\\conftest.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\integer\\test_arithmetic.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\integer\\test_comparison.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\integer\\test_concat.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\integer\\test_construction.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\integer\\test_dtypes.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\integer\\test_function.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\integer\\test_indexing.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\integer\\test_reduction.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\integer\\test_repr.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\integer\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\interval\\test_astype.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\interval\\test_formats.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\interval\\test_interval.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\interval\\test_interval_pyarrow.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\interval\\test_overlaps.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\interval\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\masked\\test_arithmetic.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\masked\\test_arrow_compat.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\masked\\test_function.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\masked\\test_indexing.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\masked\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\numpy_\\test_indexing.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\numpy_\\test_numpy.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\numpy_\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\period\\test_arrow_compat.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\period\\test_astype.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\period\\test_constructors.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\period\\test_reductions.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\period\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\sparse\\test_accessor.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\sparse\\test_arithmetics.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\sparse\\test_array.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\sparse\\test_astype.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\sparse\\test_combine_concat.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\sparse\\test_constructors.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\sparse\\test_dtype.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\sparse\\test_indexing.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\sparse\\test_libsparse.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\sparse\\test_reductions.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\sparse\\test_unary.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\sparse\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\string_\\test_concat.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\string_\\test_string.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\string_\\test_string_arrow.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\string_\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\timedeltas\\test_constructors.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\timedeltas\\test_cumulative.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\timedeltas\\test_reductions.py",
      "Lib\\site-packages\\pandas\\tests\\arrays\\timedeltas\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\base\\common.py",
      "Lib\\site-packages\\pandas\\tests\\base\\test_constructors.py",
      "Lib\\site-packages\\pandas\\tests\\base\\test_conversion.py",
      "Lib\\site-packages\\pandas\\tests\\base\\test_fillna.py",
      "Lib\\site-packages\\pandas\\tests\\base\\test_misc.py",
      "Lib\\site-packages\\pandas\\tests\\base\\test_transpose.py",
      "Lib\\site-packages\\pandas\\tests\\base\\test_unique.py",
      "Lib\\site-packages\\pandas\\tests\\base\\test_value_counts.py",
      "Lib\\site-packages\\pandas\\tests\\base\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\computation\\test_compat.py",
      "Lib\\site-packages\\pandas\\tests\\computation\\test_eval.py",
      "Lib\\site-packages\\pandas\\tests\\computation\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\config\\test_config.py",
      "Lib\\site-packages\\pandas\\tests\\config\\test_localization.py",
      "Lib\\site-packages\\pandas\\tests\\config\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\construction\\test_extract_array.py",
      "Lib\\site-packages\\pandas\\tests\\construction\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\copy_view\\index",
      "Lib\\site-packages\\pandas\\tests\\copy_view\\test_array.py",
      "Lib\\site-packages\\pandas\\tests\\copy_view\\test_astype.py",
      "Lib\\site-packages\\pandas\\tests\\copy_view\\test_chained_assignment_deprecation.py",
      "Lib\\site-packages\\pandas\\tests\\copy_view\\test_clip.py",
      "Lib\\site-packages\\pandas\\tests\\copy_view\\test_constructors.py",
      "Lib\\site-packages\\pandas\\tests\\copy_view\\test_core_functionalities.py",
      "Lib\\site-packages\\pandas\\tests\\copy_view\\test_functions.py",
      "Lib\\site-packages\\pandas\\tests\\copy_view\\test_indexing.py",
      "Lib\\site-packages\\pandas\\tests\\copy_view\\test_internals.py",
      "Lib\\site-packages\\pandas\\tests\\copy_view\\test_interp_fillna.py",
      "Lib\\site-packages\\pandas\\tests\\copy_view\\test_methods.py",
      "Lib\\site-packages\\pandas\\tests\\copy_view\\test_replace.py",
      "Lib\\site-packages\\pandas\\tests\\copy_view\\test_setitem.py",
      "Lib\\site-packages\\pandas\\tests\\copy_view\\test_util.py",
      "Lib\\site-packages\\pandas\\tests\\copy_view\\util.py",
      "Lib\\site-packages\\pandas\\tests\\copy_view\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\copy_view\\index\\test_datetimeindex.py",
      "Lib\\site-packages\\pandas\\tests\\copy_view\\index\\test_index.py",
      "Lib\\site-packages\\pandas\\tests\\copy_view\\index\\test_periodindex.py",
      "Lib\\site-packages\\pandas\\tests\\copy_view\\index\\test_timedeltaindex.py",
      "Lib\\site-packages\\pandas\\tests\\copy_view\\index\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\dtypes\\cast",
      "Lib\\site-packages\\pandas\\tests\\dtypes\\test_common.py",
      "Lib\\site-packages\\pandas\\tests\\dtypes\\test_concat.py",
      "Lib\\site-packages\\pandas\\tests\\dtypes\\test_dtypes.py",
      "Lib\\site-packages\\pandas\\tests\\dtypes\\test_generic.py",
      "Lib\\site-packages\\pandas\\tests\\dtypes\\test_inference.py",
      "Lib\\site-packages\\pandas\\tests\\dtypes\\test_missing.py",
      "Lib\\site-packages\\pandas\\tests\\dtypes\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\dtypes\\cast\\test_can_hold_element.py",
      "Lib\\site-packages\\pandas\\tests\\dtypes\\cast\\test_construct_from_scalar.py",
      "Lib\\site-packages\\pandas\\tests\\dtypes\\cast\\test_construct_ndarray.py",
      "Lib\\site-packages\\pandas\\tests\\dtypes\\cast\\test_construct_object_arr.py",
      "Lib\\site-packages\\pandas\\tests\\dtypes\\cast\\test_dict_compat.py",
      "Lib\\site-packages\\pandas\\tests\\dtypes\\cast\\test_downcast.py",
      "Lib\\site-packages\\pandas\\tests\\dtypes\\cast\\test_find_common_type.py",
      "Lib\\site-packages\\pandas\\tests\\dtypes\\cast\\test_infer_datetimelike.py",
      "Lib\\site-packages\\pandas\\tests\\dtypes\\cast\\test_infer_dtype.py",
      "Lib\\site-packages\\pandas\\tests\\dtypes\\cast\\test_maybe_box_native.py",
      "Lib\\site-packages\\pandas\\tests\\dtypes\\cast\\test_promote.py",
      "Lib\\site-packages\\pandas\\tests\\dtypes\\cast\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\array_with_attr",
      "Lib\\site-packages\\pandas\\tests\\extension\\base",
      "Lib\\site-packages\\pandas\\tests\\extension\\conftest.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\date",
      "Lib\\site-packages\\pandas\\tests\\extension\\decimal",
      "Lib\\site-packages\\pandas\\tests\\extension\\json",
      "Lib\\site-packages\\pandas\\tests\\extension\\list",
      "Lib\\site-packages\\pandas\\tests\\extension\\test_arrow.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\test_categorical.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\test_common.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\test_datetime.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\test_extension.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\test_interval.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\test_masked.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\test_numpy.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\test_period.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\test_sparse.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\test_string.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\array_with_attr\\array.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\array_with_attr\\test_array_with_attr.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\array_with_attr\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\base\\accumulate.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\base\\base.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\base\\casting.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\base\\constructors.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\base\\dim2.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\base\\dtype.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\base\\getitem.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\base\\groupby.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\base\\index.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\base\\interface.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\base\\io.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\base\\methods.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\base\\missing.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\base\\ops.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\base\\printing.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\base\\reduce.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\base\\reshaping.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\base\\setitem.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\base\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\date\\array.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\date\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\decimal\\array.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\decimal\\test_decimal.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\decimal\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\json\\array.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\json\\test_json.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\json\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\list\\array.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\list\\test_list.py",
      "Lib\\site-packages\\pandas\\tests\\extension\\list\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\common.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\conftest.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\constructors",
      "Lib\\site-packages\\pandas\\tests\\frame\\indexing",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods",
      "Lib\\site-packages\\pandas\\tests\\frame\\test_alter_axes.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\test_api.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\test_arithmetic.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\test_arrow_interface.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\test_block_internals.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\test_constructors.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\test_cumulative.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\test_iteration.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\test_logical_ops.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\test_nonunique_indexes.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\test_npfuncs.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\test_query_eval.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\test_reductions.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\test_repr.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\test_stack_unstack.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\test_subclass.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\test_ufunc.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\test_unary.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\test_validate.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\constructors\\test_from_dict.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\constructors\\test_from_records.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\constructors\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\indexing\\test_coercion.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\indexing\\test_delitem.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\indexing\\test_get.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\indexing\\test_getitem.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\indexing\\test_get_value.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\indexing\\test_indexing.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\indexing\\test_insert.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\indexing\\test_mask.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\indexing\\test_setitem.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\indexing\\test_set_value.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\indexing\\test_take.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\indexing\\test_where.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\indexing\\test_xs.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\indexing\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_add_prefix_suffix.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_align.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_asfreq.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_asof.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_assign.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_astype.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_at_time.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_between_time.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_clip.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_combine.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_combine_first.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_compare.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_convert_dtypes.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_copy.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_count.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_cov_corr.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_describe.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_diff.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_dot.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_drop.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_droplevel.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_dropna.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_drop_duplicates.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_dtypes.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_duplicated.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_equals.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_explode.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_fillna.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_filter.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_first_and_last.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_first_valid_index.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_get_numeric_data.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_head_tail.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_infer_objects.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_info.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_interpolate.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_isetitem.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_isin.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_is_homogeneous_dtype.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_iterrows.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_join.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_map.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_matmul.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_nlargest.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_pct_change.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_pipe.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_pop.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_quantile.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_rank.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_reindex.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_reindex_like.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_rename.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_rename_axis.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_reorder_levels.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_replace.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_reset_index.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_round.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_sample.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_select_dtypes.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_set_axis.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_set_index.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_shift.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_size.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_sort_index.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_sort_values.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_swapaxes.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_swaplevel.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_to_csv.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_to_dict.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_to_dict_of_blocks.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_to_numpy.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_to_period.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_to_records.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_to_timestamp.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_transpose.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_truncate.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_tz_convert.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_tz_localize.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_update.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_values.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_value_counts.py",
      "Lib\\site-packages\\pandas\\tests\\frame\\methods\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\generic\\test_duplicate_labels.py",
      "Lib\\site-packages\\pandas\\tests\\generic\\test_finalize.py",
      "Lib\\site-packages\\pandas\\tests\\generic\\test_frame.py",
      "Lib\\site-packages\\pandas\\tests\\generic\\test_generic.py",
      "Lib\\site-packages\\pandas\\tests\\generic\\test_label_or_level_utils.py",
      "Lib\\site-packages\\pandas\\tests\\generic\\test_series.py",
      "Lib\\site-packages\\pandas\\tests\\generic\\test_to_xarray.py",
      "Lib\\site-packages\\pandas\\tests\\generic\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\aggregate",
      "Lib\\site-packages\\pandas\\tests\\groupby\\conftest.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\methods",
      "Lib\\site-packages\\pandas\\tests\\groupby\\test_all_methods.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\test_api.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\test_apply.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\test_apply_mutate.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\test_bin_groupby.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\test_categorical.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\test_counting.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\test_cumulative.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\test_filters.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\test_groupby.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\test_groupby_dropna.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\test_groupby_subclass.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\test_grouping.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\test_indexing.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\test_index_as_string.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\test_libgroupby.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\test_missing.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\test_numba.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\test_numeric_only.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\test_pipe.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\test_raises.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\test_reductions.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\test_timegrouper.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\transform",
      "Lib\\site-packages\\pandas\\tests\\groupby\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\aggregate\\test_aggregate.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\aggregate\\test_cython.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\aggregate\\test_numba.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\aggregate\\test_other.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\aggregate\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\methods\\test_corrwith.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\methods\\test_describe.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\methods\\test_groupby_shift_diff.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\methods\\test_is_monotonic.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\methods\\test_nlargest_nsmallest.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\methods\\test_nth.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\methods\\test_quantile.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\methods\\test_rank.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\methods\\test_sample.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\methods\\test_size.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\methods\\test_skew.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\methods\\test_value_counts.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\methods\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\transform\\test_numba.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\transform\\test_transform.py",
      "Lib\\site-packages\\pandas\\tests\\groupby\\transform\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\base_class",
      "Lib\\site-packages\\pandas\\tests\\indexes\\categorical",
      "Lib\\site-packages\\pandas\\tests\\indexes\\conftest.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimelike_",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimes",
      "Lib\\site-packages\\pandas\\tests\\indexes\\interval",
      "Lib\\site-packages\\pandas\\tests\\indexes\\multi",
      "Lib\\site-packages\\pandas\\tests\\indexes\\numeric",
      "Lib\\site-packages\\pandas\\tests\\indexes\\object",
      "Lib\\site-packages\\pandas\\tests\\indexes\\period",
      "Lib\\site-packages\\pandas\\tests\\indexes\\ranges",
      "Lib\\site-packages\\pandas\\tests\\indexes\\string",
      "Lib\\site-packages\\pandas\\tests\\indexes\\test_any_index.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\test_base.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\test_common.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\test_datetimelike.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\test_engines.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\test_frozen.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\test_indexing.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\test_index_new.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\test_numpy_compat.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\test_old_base.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\test_setops.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\test_subclass.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\timedeltas",
      "Lib\\site-packages\\pandas\\tests\\indexes\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\base_class\\test_constructors.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\base_class\\test_formats.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\base_class\\test_indexing.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\base_class\\test_pickle.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\base_class\\test_reshape.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\base_class\\test_setops.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\base_class\\test_where.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\base_class\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\categorical\\test_append.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\categorical\\test_astype.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\categorical\\test_category.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\categorical\\test_constructors.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\categorical\\test_equals.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\categorical\\test_fillna.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\categorical\\test_formats.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\categorical\\test_indexing.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\categorical\\test_map.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\categorical\\test_reindex.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\categorical\\test_setops.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\categorical\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimelike_\\test_drop_duplicates.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimelike_\\test_equals.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimelike_\\test_indexing.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimelike_\\test_is_monotonic.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimelike_\\test_nat.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimelike_\\test_sort_values.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimelike_\\test_value_counts.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimelike_\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\methods",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\test_arithmetic.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\test_constructors.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\test_datetime.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\test_date_range.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\test_formats.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\test_freq_attr.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\test_indexing.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\test_iter.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\test_join.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\test_npfuncs.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\test_ops.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\test_partial_slicing.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\test_pickle.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\test_reindex.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\test_scalar_compat.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\test_setops.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\test_timezones.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\methods\\test_asof.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\methods\\test_astype.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\methods\\test_delete.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\methods\\test_factorize.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\methods\\test_fillna.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\methods\\test_insert.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\methods\\test_isocalendar.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\methods\\test_map.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\methods\\test_normalize.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\methods\\test_repeat.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\methods\\test_resolution.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\methods\\test_round.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\methods\\test_shift.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\methods\\test_snap.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\methods\\test_to_frame.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\methods\\test_to_julian_date.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\methods\\test_to_period.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\methods\\test_to_pydatetime.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\methods\\test_to_series.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\methods\\test_tz_convert.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\methods\\test_tz_localize.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\methods\\test_unique.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\methods\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\interval\\test_astype.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\interval\\test_constructors.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\interval\\test_equals.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\interval\\test_formats.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\interval\\test_indexing.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\interval\\test_interval.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\interval\\test_interval_range.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\interval\\test_interval_tree.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\interval\\test_join.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\interval\\test_pickle.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\interval\\test_setops.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\interval\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\multi\\conftest.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\multi\\test_analytics.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\multi\\test_astype.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\multi\\test_compat.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\multi\\test_constructors.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\multi\\test_conversion.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\multi\\test_copy.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\multi\\test_drop.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\multi\\test_duplicates.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\multi\\test_equivalence.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\multi\\test_formats.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\multi\\test_get_level_values.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\multi\\test_get_set.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\multi\\test_indexing.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\multi\\test_integrity.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\multi\\test_isin.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\multi\\test_join.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\multi\\test_lexsort.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\multi\\test_missing.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\multi\\test_monotonic.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\multi\\test_names.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\multi\\test_partial_indexing.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\multi\\test_pickle.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\multi\\test_reindex.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\multi\\test_reshape.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\multi\\test_setops.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\multi\\test_sorting.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\multi\\test_take.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\multi\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\numeric\\test_astype.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\numeric\\test_indexing.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\numeric\\test_join.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\numeric\\test_numeric.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\numeric\\test_setops.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\numeric\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\object\\test_astype.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\object\\test_indexing.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\object\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\period\\methods",
      "Lib\\site-packages\\pandas\\tests\\indexes\\period\\test_constructors.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\period\\test_formats.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\period\\test_freq_attr.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\period\\test_indexing.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\period\\test_join.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\period\\test_monotonic.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\period\\test_partial_slicing.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\period\\test_period.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\period\\test_period_range.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\period\\test_pickle.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\period\\test_resolution.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\period\\test_scalar_compat.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\period\\test_searchsorted.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\period\\test_setops.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\period\\test_tools.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\period\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\period\\methods\\test_asfreq.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\period\\methods\\test_astype.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\period\\methods\\test_factorize.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\period\\methods\\test_fillna.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\period\\methods\\test_insert.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\period\\methods\\test_is_full.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\period\\methods\\test_repeat.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\period\\methods\\test_shift.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\period\\methods\\test_to_timestamp.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\period\\methods\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\ranges\\test_constructors.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\ranges\\test_indexing.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\ranges\\test_join.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\ranges\\test_range.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\ranges\\test_setops.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\ranges\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\string\\test_astype.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\string\\test_indexing.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\string\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\timedeltas\\methods",
      "Lib\\site-packages\\pandas\\tests\\indexes\\timedeltas\\test_arithmetic.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\timedeltas\\test_constructors.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\timedeltas\\test_delete.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\timedeltas\\test_formats.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\timedeltas\\test_freq_attr.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\timedeltas\\test_indexing.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\timedeltas\\test_join.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\timedeltas\\test_ops.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\timedeltas\\test_pickle.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\timedeltas\\test_scalar_compat.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\timedeltas\\test_searchsorted.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\timedeltas\\test_setops.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\timedeltas\\test_timedelta.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\timedeltas\\test_timedelta_range.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\timedeltas\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\timedeltas\\methods\\test_astype.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\timedeltas\\methods\\test_factorize.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\timedeltas\\methods\\test_fillna.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\timedeltas\\methods\\test_insert.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\timedeltas\\methods\\test_repeat.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\timedeltas\\methods\\test_shift.py",
      "Lib\\site-packages\\pandas\\tests\\indexes\\timedeltas\\methods\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\indexing\\common.py",
      "Lib\\site-packages\\pandas\\tests\\indexing\\conftest.py",
      "Lib\\site-packages\\pandas\\tests\\indexing\\interval",
      "Lib\\site-packages\\pandas\\tests\\indexing\\multiindex",
      "Lib\\site-packages\\pandas\\tests\\indexing\\test_at.py",
      "Lib\\site-packages\\pandas\\tests\\indexing\\test_categorical.py",
      "Lib\\site-packages\\pandas\\tests\\indexing\\test_chaining_and_caching.py",
      "Lib\\site-packages\\pandas\\tests\\indexing\\test_check_indexer.py",
      "Lib\\site-packages\\pandas\\tests\\indexing\\test_coercion.py",
      "Lib\\site-packages\\pandas\\tests\\indexing\\test_datetime.py",
      "Lib\\site-packages\\pandas\\tests\\indexing\\test_floats.py",
      "Lib\\site-packages\\pandas\\tests\\indexing\\test_iat.py",
      "Lib\\site-packages\\pandas\\tests\\indexing\\test_iloc.py",
      "Lib\\site-packages\\pandas\\tests\\indexing\\test_indexers.py",
      "Lib\\site-packages\\pandas\\tests\\indexing\\test_indexing.py",
      "Lib\\site-packages\\pandas\\tests\\indexing\\test_loc.py",
      "Lib\\site-packages\\pandas\\tests\\indexing\\test_na_indexing.py",
      "Lib\\site-packages\\pandas\\tests\\indexing\\test_partial.py",
      "Lib\\site-packages\\pandas\\tests\\indexing\\test_scalar.py",
      "Lib\\site-packages\\pandas\\tests\\indexing\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\indexing\\interval\\test_interval.py",
      "Lib\\site-packages\\pandas\\tests\\indexing\\interval\\test_interval_new.py",
      "Lib\\site-packages\\pandas\\tests\\indexing\\interval\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\indexing\\multiindex\\test_chaining_and_caching.py",
      "Lib\\site-packages\\pandas\\tests\\indexing\\multiindex\\test_datetime.py",
      "Lib\\site-packages\\pandas\\tests\\indexing\\multiindex\\test_getitem.py",
      "Lib\\site-packages\\pandas\\tests\\indexing\\multiindex\\test_iloc.py",
      "Lib\\site-packages\\pandas\\tests\\indexing\\multiindex\\test_indexing_slow.py",
      "Lib\\site-packages\\pandas\\tests\\indexing\\multiindex\\test_loc.py",
      "Lib\\site-packages\\pandas\\tests\\indexing\\multiindex\\test_multiindex.py",
      "Lib\\site-packages\\pandas\\tests\\indexing\\multiindex\\test_partial.py",
      "Lib\\site-packages\\pandas\\tests\\indexing\\multiindex\\test_setitem.py",
      "Lib\\site-packages\\pandas\\tests\\indexing\\multiindex\\test_slice.py",
      "Lib\\site-packages\\pandas\\tests\\indexing\\multiindex\\test_sorted.py",
      "Lib\\site-packages\\pandas\\tests\\indexing\\multiindex\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\interchange\\test_impl.py",
      "Lib\\site-packages\\pandas\\tests\\interchange\\test_spec_conformance.py",
      "Lib\\site-packages\\pandas\\tests\\interchange\\test_utils.py",
      "Lib\\site-packages\\pandas\\tests\\interchange\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\internals\\test_api.py",
      "Lib\\site-packages\\pandas\\tests\\internals\\test_internals.py",
      "Lib\\site-packages\\pandas\\tests\\internals\\test_managers.py",
      "Lib\\site-packages\\pandas\\tests\\internals\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\io\\conftest.py",
      "Lib\\site-packages\\pandas\\tests\\io\\excel",
      "Lib\\site-packages\\pandas\\tests\\io\\formats",
      "Lib\\site-packages\\pandas\\tests\\io\\generate_legacy_storage_files.py",
      "Lib\\site-packages\\pandas\\tests\\io\\json",
      "Lib\\site-packages\\pandas\\tests\\io\\parser",
      "Lib\\site-packages\\pandas\\tests\\io\\pytables",
      "Lib\\site-packages\\pandas\\tests\\io\\sas",
      "Lib\\site-packages\\pandas\\tests\\io\\test_clipboard.py",
      "Lib\\site-packages\\pandas\\tests\\io\\test_common.py",
      "Lib\\site-packages\\pandas\\tests\\io\\test_compression.py",
      "Lib\\site-packages\\pandas\\tests\\io\\test_feather.py",
      "Lib\\site-packages\\pandas\\tests\\io\\test_fsspec.py",
      "Lib\\site-packages\\pandas\\tests\\io\\test_gbq.py",
      "Lib\\site-packages\\pandas\\tests\\io\\test_gcs.py",
      "Lib\\site-packages\\pandas\\tests\\io\\test_html.py",
      "Lib\\site-packages\\pandas\\tests\\io\\test_http_headers.py",
      "Lib\\site-packages\\pandas\\tests\\io\\test_orc.py",
      "Lib\\site-packages\\pandas\\tests\\io\\test_parquet.py",
      "Lib\\site-packages\\pandas\\tests\\io\\test_pickle.py",
      "Lib\\site-packages\\pandas\\tests\\io\\test_s3.py",
      "Lib\\site-packages\\pandas\\tests\\io\\test_spss.py",
      "Lib\\site-packages\\pandas\\tests\\io\\test_sql.py",
      "Lib\\site-packages\\pandas\\tests\\io\\test_stata.py",
      "Lib\\site-packages\\pandas\\tests\\io\\xml",
      "Lib\\site-packages\\pandas\\tests\\io\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\io\\excel\\test_odf.py",
      "Lib\\site-packages\\pandas\\tests\\io\\excel\\test_odswriter.py",
      "Lib\\site-packages\\pandas\\tests\\io\\excel\\test_openpyxl.py",
      "Lib\\site-packages\\pandas\\tests\\io\\excel\\test_readers.py",
      "Lib\\site-packages\\pandas\\tests\\io\\excel\\test_style.py",
      "Lib\\site-packages\\pandas\\tests\\io\\excel\\test_writers.py",
      "Lib\\site-packages\\pandas\\tests\\io\\excel\\test_xlrd.py",
      "Lib\\site-packages\\pandas\\tests\\io\\excel\\test_xlsxwriter.py",
      "Lib\\site-packages\\pandas\\tests\\io\\excel\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\io\\formats\\style",
      "Lib\\site-packages\\pandas\\tests\\io\\formats\\test_console.py",
      "Lib\\site-packages\\pandas\\tests\\io\\formats\\test_css.py",
      "Lib\\site-packages\\pandas\\tests\\io\\formats\\test_eng_formatting.py",
      "Lib\\site-packages\\pandas\\tests\\io\\formats\\test_format.py",
      "Lib\\site-packages\\pandas\\tests\\io\\formats\\test_ipython_compat.py",
      "Lib\\site-packages\\pandas\\tests\\io\\formats\\test_printing.py",
      "Lib\\site-packages\\pandas\\tests\\io\\formats\\test_to_csv.py",
      "Lib\\site-packages\\pandas\\tests\\io\\formats\\test_to_excel.py",
      "Lib\\site-packages\\pandas\\tests\\io\\formats\\test_to_html.py",
      "Lib\\site-packages\\pandas\\tests\\io\\formats\\test_to_latex.py",
      "Lib\\site-packages\\pandas\\tests\\io\\formats\\test_to_markdown.py",
      "Lib\\site-packages\\pandas\\tests\\io\\formats\\test_to_string.py",
      "Lib\\site-packages\\pandas\\tests\\io\\formats\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\io\\formats\\style\\test_bar.py",
      "Lib\\site-packages\\pandas\\tests\\io\\formats\\style\\test_exceptions.py",
      "Lib\\site-packages\\pandas\\tests\\io\\formats\\style\\test_format.py",
      "Lib\\site-packages\\pandas\\tests\\io\\formats\\style\\test_highlight.py",
      "Lib\\site-packages\\pandas\\tests\\io\\formats\\style\\test_html.py",
      "Lib\\site-packages\\pandas\\tests\\io\\formats\\style\\test_matplotlib.py",
      "Lib\\site-packages\\pandas\\tests\\io\\formats\\style\\test_non_unique.py",
      "Lib\\site-packages\\pandas\\tests\\io\\formats\\style\\test_style.py",
      "Lib\\site-packages\\pandas\\tests\\io\\formats\\style\\test_tooltip.py",
      "Lib\\site-packages\\pandas\\tests\\io\\formats\\style\\test_to_latex.py",
      "Lib\\site-packages\\pandas\\tests\\io\\formats\\style\\test_to_string.py",
      "Lib\\site-packages\\pandas\\tests\\io\\formats\\style\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\io\\json\\conftest.py",
      "Lib\\site-packages\\pandas\\tests\\io\\json\\test_compression.py",
      "Lib\\site-packages\\pandas\\tests\\io\\json\\test_deprecated_kwargs.py",
      "Lib\\site-packages\\pandas\\tests\\io\\json\\test_json_table_schema.py",
      "Lib\\site-packages\\pandas\\tests\\io\\json\\test_json_table_schema_ext_dtype.py",
      "Lib\\site-packages\\pandas\\tests\\io\\json\\test_normalize.py",
      "Lib\\site-packages\\pandas\\tests\\io\\json\\test_pandas.py",
      "Lib\\site-packages\\pandas\\tests\\io\\json\\test_readlines.py",
      "Lib\\site-packages\\pandas\\tests\\io\\json\\test_ujson.py",
      "Lib\\site-packages\\pandas\\tests\\io\\json\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\common",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\conftest.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\dtypes",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\test_comment.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\test_compression.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\test_concatenate_chunks.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\test_converters.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\test_c_parser_only.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\test_dialect.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\test_encoding.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\test_header.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\test_index_col.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\test_mangle_dupes.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\test_multi_thread.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\test_na_values.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\test_network.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\test_parse_dates.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\test_python_parser_only.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\test_quoting.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\test_read_fwf.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\test_skiprows.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\test_textreader.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\test_unsupported.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\test_upcast.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\usecols",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\common\\test_chunksize.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\common\\test_common_basic.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\common\\test_data_list.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\common\\test_decimal.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\common\\test_file_buffer_url.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\common\\test_float.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\common\\test_index.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\common\\test_inf.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\common\\test_ints.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\common\\test_iterator.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\common\\test_read_errors.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\common\\test_verbose.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\common\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\dtypes\\test_categorical.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\dtypes\\test_dtypes_basic.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\dtypes\\test_empty.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\dtypes\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\usecols\\test_parse_dates.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\usecols\\test_strings.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\usecols\\test_usecols_basic.py",
      "Lib\\site-packages\\pandas\\tests\\io\\parser\\usecols\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\io\\pytables\\common.py",
      "Lib\\site-packages\\pandas\\tests\\io\\pytables\\conftest.py",
      "Lib\\site-packages\\pandas\\tests\\io\\pytables\\test_append.py",
      "Lib\\site-packages\\pandas\\tests\\io\\pytables\\test_categorical.py",
      "Lib\\site-packages\\pandas\\tests\\io\\pytables\\test_compat.py",
      "Lib\\site-packages\\pandas\\tests\\io\\pytables\\test_complex.py",
      "Lib\\site-packages\\pandas\\tests\\io\\pytables\\test_errors.py",
      "Lib\\site-packages\\pandas\\tests\\io\\pytables\\test_file_handling.py",
      "Lib\\site-packages\\pandas\\tests\\io\\pytables\\test_keys.py",
      "Lib\\site-packages\\pandas\\tests\\io\\pytables\\test_put.py",
      "Lib\\site-packages\\pandas\\tests\\io\\pytables\\test_pytables_missing.py",
      "Lib\\site-packages\\pandas\\tests\\io\\pytables\\test_read.py",
      "Lib\\site-packages\\pandas\\tests\\io\\pytables\\test_retain_attributes.py",
      "Lib\\site-packages\\pandas\\tests\\io\\pytables\\test_round_trip.py",
      "Lib\\site-packages\\pandas\\tests\\io\\pytables\\test_select.py",
      "Lib\\site-packages\\pandas\\tests\\io\\pytables\\test_store.py",
      "Lib\\site-packages\\pandas\\tests\\io\\pytables\\test_subclass.py",
      "Lib\\site-packages\\pandas\\tests\\io\\pytables\\test_timezones.py",
      "Lib\\site-packages\\pandas\\tests\\io\\pytables\\test_time_series.py",
      "Lib\\site-packages\\pandas\\tests\\io\\pytables\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\io\\sas\\test_byteswap.py",
      "Lib\\site-packages\\pandas\\tests\\io\\sas\\test_sas.py",
      "Lib\\site-packages\\pandas\\tests\\io\\sas\\test_sas7bdat.py",
      "Lib\\site-packages\\pandas\\tests\\io\\sas\\test_xport.py",
      "Lib\\site-packages\\pandas\\tests\\io\\sas\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\io\\xml\\conftest.py",
      "Lib\\site-packages\\pandas\\tests\\io\\xml\\test_to_xml.py",
      "Lib\\site-packages\\pandas\\tests\\io\\xml\\test_xml.py",
      "Lib\\site-packages\\pandas\\tests\\io\\xml\\test_xml_dtypes.py",
      "Lib\\site-packages\\pandas\\tests\\io\\xml\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\libs\\test_hashtable.py",
      "Lib\\site-packages\\pandas\\tests\\libs\\test_join.py",
      "Lib\\site-packages\\pandas\\tests\\libs\\test_lib.py",
      "Lib\\site-packages\\pandas\\tests\\libs\\test_libalgos.py",
      "Lib\\site-packages\\pandas\\tests\\libs\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\plotting\\common.py",
      "Lib\\site-packages\\pandas\\tests\\plotting\\conftest.py",
      "Lib\\site-packages\\pandas\\tests\\plotting\\frame",
      "Lib\\site-packages\\pandas\\tests\\plotting\\test_backend.py",
      "Lib\\site-packages\\pandas\\tests\\plotting\\test_boxplot_method.py",
      "Lib\\site-packages\\pandas\\tests\\plotting\\test_common.py",
      "Lib\\site-packages\\pandas\\tests\\plotting\\test_converter.py",
      "Lib\\site-packages\\pandas\\tests\\plotting\\test_datetimelike.py",
      "Lib\\site-packages\\pandas\\tests\\plotting\\test_groupby.py",
      "Lib\\site-packages\\pandas\\tests\\plotting\\test_hist_method.py",
      "Lib\\site-packages\\pandas\\tests\\plotting\\test_misc.py",
      "Lib\\site-packages\\pandas\\tests\\plotting\\test_series.py",
      "Lib\\site-packages\\pandas\\tests\\plotting\\test_style.py",
      "Lib\\site-packages\\pandas\\tests\\plotting\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\plotting\\frame\\test_frame.py",
      "Lib\\site-packages\\pandas\\tests\\plotting\\frame\\test_frame_color.py",
      "Lib\\site-packages\\pandas\\tests\\plotting\\frame\\test_frame_groupby.py",
      "Lib\\site-packages\\pandas\\tests\\plotting\\frame\\test_frame_legend.py",
      "Lib\\site-packages\\pandas\\tests\\plotting\\frame\\test_frame_subplots.py",
      "Lib\\site-packages\\pandas\\tests\\plotting\\frame\\test_hist_box_by.py",
      "Lib\\site-packages\\pandas\\tests\\plotting\\frame\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\reductions\\test_reductions.py",
      "Lib\\site-packages\\pandas\\tests\\reductions\\test_stat_reductions.py",
      "Lib\\site-packages\\pandas\\tests\\reductions\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\resample\\conftest.py",
      "Lib\\site-packages\\pandas\\tests\\resample\\test_base.py",
      "Lib\\site-packages\\pandas\\tests\\resample\\test_datetime_index.py",
      "Lib\\site-packages\\pandas\\tests\\resample\\test_period_index.py",
      "Lib\\site-packages\\pandas\\tests\\resample\\test_resampler_grouper.py",
      "Lib\\site-packages\\pandas\\tests\\resample\\test_resample_api.py",
      "Lib\\site-packages\\pandas\\tests\\resample\\test_timedelta.py",
      "Lib\\site-packages\\pandas\\tests\\resample\\test_time_grouper.py",
      "Lib\\site-packages\\pandas\\tests\\resample\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\reshape\\concat",
      "Lib\\site-packages\\pandas\\tests\\reshape\\merge",
      "Lib\\site-packages\\pandas\\tests\\reshape\\test_crosstab.py",
      "Lib\\site-packages\\pandas\\tests\\reshape\\test_cut.py",
      "Lib\\site-packages\\pandas\\tests\\reshape\\test_from_dummies.py",
      "Lib\\site-packages\\pandas\\tests\\reshape\\test_get_dummies.py",
      "Lib\\site-packages\\pandas\\tests\\reshape\\test_melt.py",
      "Lib\\site-packages\\pandas\\tests\\reshape\\test_pivot.py",
      "Lib\\site-packages\\pandas\\tests\\reshape\\test_pivot_multilevel.py",
      "Lib\\site-packages\\pandas\\tests\\reshape\\test_qcut.py",
      "Lib\\site-packages\\pandas\\tests\\reshape\\test_union_categoricals.py",
      "Lib\\site-packages\\pandas\\tests\\reshape\\test_util.py",
      "Lib\\site-packages\\pandas\\tests\\reshape\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\reshape\\concat\\conftest.py",
      "Lib\\site-packages\\pandas\\tests\\reshape\\concat\\test_append.py",
      "Lib\\site-packages\\pandas\\tests\\reshape\\concat\\test_append_common.py",
      "Lib\\site-packages\\pandas\\tests\\reshape\\concat\\test_categorical.py",
      "Lib\\site-packages\\pandas\\tests\\reshape\\concat\\test_concat.py",
      "Lib\\site-packages\\pandas\\tests\\reshape\\concat\\test_dataframe.py",
      "Lib\\site-packages\\pandas\\tests\\reshape\\concat\\test_datetimes.py",
      "Lib\\site-packages\\pandas\\tests\\reshape\\concat\\test_empty.py",
      "Lib\\site-packages\\pandas\\tests\\reshape\\concat\\test_index.py",
      "Lib\\site-packages\\pandas\\tests\\reshape\\concat\\test_invalid.py",
      "Lib\\site-packages\\pandas\\tests\\reshape\\concat\\test_series.py",
      "Lib\\site-packages\\pandas\\tests\\reshape\\concat\\test_sort.py",
      "Lib\\site-packages\\pandas\\tests\\reshape\\concat\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\reshape\\merge\\test_join.py",
      "Lib\\site-packages\\pandas\\tests\\reshape\\merge\\test_merge.py",
      "Lib\\site-packages\\pandas\\tests\\reshape\\merge\\test_merge_asof.py",
      "Lib\\site-packages\\pandas\\tests\\reshape\\merge\\test_merge_cross.py",
      "Lib\\site-packages\\pandas\\tests\\reshape\\merge\\test_merge_index_as_string.py",
      "Lib\\site-packages\\pandas\\tests\\reshape\\merge\\test_merge_ordered.py",
      "Lib\\site-packages\\pandas\\tests\\reshape\\merge\\test_multi.py",
      "Lib\\site-packages\\pandas\\tests\\reshape\\merge\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\scalar\\interval",
      "Lib\\site-packages\\pandas\\tests\\scalar\\period",
      "Lib\\site-packages\\pandas\\tests\\scalar\\test_nat.py",
      "Lib\\site-packages\\pandas\\tests\\scalar\\test_na_scalar.py",
      "Lib\\site-packages\\pandas\\tests\\scalar\\timedelta",
      "Lib\\site-packages\\pandas\\tests\\scalar\\timestamp",
      "Lib\\site-packages\\pandas\\tests\\scalar\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\scalar\\interval\\test_arithmetic.py",
      "Lib\\site-packages\\pandas\\tests\\scalar\\interval\\test_constructors.py",
      "Lib\\site-packages\\pandas\\tests\\scalar\\interval\\test_contains.py",
      "Lib\\site-packages\\pandas\\tests\\scalar\\interval\\test_formats.py",
      "Lib\\site-packages\\pandas\\tests\\scalar\\interval\\test_interval.py",
      "Lib\\site-packages\\pandas\\tests\\scalar\\interval\\test_overlaps.py",
      "Lib\\site-packages\\pandas\\tests\\scalar\\interval\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\scalar\\period\\test_arithmetic.py",
      "Lib\\site-packages\\pandas\\tests\\scalar\\period\\test_asfreq.py",
      "Lib\\site-packages\\pandas\\tests\\scalar\\period\\test_period.py",
      "Lib\\site-packages\\pandas\\tests\\scalar\\period\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\scalar\\timedelta\\methods",
      "Lib\\site-packages\\pandas\\tests\\scalar\\timedelta\\test_arithmetic.py",
      "Lib\\site-packages\\pandas\\tests\\scalar\\timedelta\\test_constructors.py",
      "Lib\\site-packages\\pandas\\tests\\scalar\\timedelta\\test_formats.py",
      "Lib\\site-packages\\pandas\\tests\\scalar\\timedelta\\test_timedelta.py",
      "Lib\\site-packages\\pandas\\tests\\scalar\\timedelta\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\scalar\\timedelta\\methods\\test_as_unit.py",
      "Lib\\site-packages\\pandas\\tests\\scalar\\timedelta\\methods\\test_round.py",
      "Lib\\site-packages\\pandas\\tests\\scalar\\timedelta\\methods\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\scalar\\timestamp\\methods",
      "Lib\\site-packages\\pandas\\tests\\scalar\\timestamp\\test_arithmetic.py",
      "Lib\\site-packages\\pandas\\tests\\scalar\\timestamp\\test_comparisons.py",
      "Lib\\site-packages\\pandas\\tests\\scalar\\timestamp\\test_constructors.py",
      "Lib\\site-packages\\pandas\\tests\\scalar\\timestamp\\test_formats.py",
      "Lib\\site-packages\\pandas\\tests\\scalar\\timestamp\\test_timestamp.py",
      "Lib\\site-packages\\pandas\\tests\\scalar\\timestamp\\test_timezones.py",
      "Lib\\site-packages\\pandas\\tests\\scalar\\timestamp\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\scalar\\timestamp\\methods\\test_as_unit.py",
      "Lib\\site-packages\\pandas\\tests\\scalar\\timestamp\\methods\\test_normalize.py",
      "Lib\\site-packages\\pandas\\tests\\scalar\\timestamp\\methods\\test_replace.py",
      "Lib\\site-packages\\pandas\\tests\\scalar\\timestamp\\methods\\test_round.py",
      "Lib\\site-packages\\pandas\\tests\\scalar\\timestamp\\methods\\test_timestamp_method.py",
      "Lib\\site-packages\\pandas\\tests\\scalar\\timestamp\\methods\\test_to_julian_date.py",
      "Lib\\site-packages\\pandas\\tests\\scalar\\timestamp\\methods\\test_to_pydatetime.py",
      "Lib\\site-packages\\pandas\\tests\\scalar\\timestamp\\methods\\test_tz_convert.py",
      "Lib\\site-packages\\pandas\\tests\\scalar\\timestamp\\methods\\test_tz_localize.py",
      "Lib\\site-packages\\pandas\\tests\\scalar\\timestamp\\methods\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\series\\accessors",
      "Lib\\site-packages\\pandas\\tests\\series\\indexing",
      "Lib\\site-packages\\pandas\\tests\\series\\methods",
      "Lib\\site-packages\\pandas\\tests\\series\\test_api.py",
      "Lib\\site-packages\\pandas\\tests\\series\\test_arithmetic.py",
      "Lib\\site-packages\\pandas\\tests\\series\\test_constructors.py",
      "Lib\\site-packages\\pandas\\tests\\series\\test_cumulative.py",
      "Lib\\site-packages\\pandas\\tests\\series\\test_formats.py",
      "Lib\\site-packages\\pandas\\tests\\series\\test_iteration.py",
      "Lib\\site-packages\\pandas\\tests\\series\\test_logical_ops.py",
      "Lib\\site-packages\\pandas\\tests\\series\\test_missing.py",
      "Lib\\site-packages\\pandas\\tests\\series\\test_npfuncs.py",
      "Lib\\site-packages\\pandas\\tests\\series\\test_reductions.py",
      "Lib\\site-packages\\pandas\\tests\\series\\test_subclass.py",
      "Lib\\site-packages\\pandas\\tests\\series\\test_ufunc.py",
      "Lib\\site-packages\\pandas\\tests\\series\\test_unary.py",
      "Lib\\site-packages\\pandas\\tests\\series\\test_validate.py",
      "Lib\\site-packages\\pandas\\tests\\series\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\series\\accessors\\test_cat_accessor.py",
      "Lib\\site-packages\\pandas\\tests\\series\\accessors\\test_dt_accessor.py",
      "Lib\\site-packages\\pandas\\tests\\series\\accessors\\test_list_accessor.py",
      "Lib\\site-packages\\pandas\\tests\\series\\accessors\\test_sparse_accessor.py",
      "Lib\\site-packages\\pandas\\tests\\series\\accessors\\test_struct_accessor.py",
      "Lib\\site-packages\\pandas\\tests\\series\\accessors\\test_str_accessor.py",
      "Lib\\site-packages\\pandas\\tests\\series\\accessors\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\series\\indexing\\test_datetime.py",
      "Lib\\site-packages\\pandas\\tests\\series\\indexing\\test_delitem.py",
      "Lib\\site-packages\\pandas\\tests\\series\\indexing\\test_get.py",
      "Lib\\site-packages\\pandas\\tests\\series\\indexing\\test_getitem.py",
      "Lib\\site-packages\\pandas\\tests\\series\\indexing\\test_indexing.py",
      "Lib\\site-packages\\pandas\\tests\\series\\indexing\\test_mask.py",
      "Lib\\site-packages\\pandas\\tests\\series\\indexing\\test_setitem.py",
      "Lib\\site-packages\\pandas\\tests\\series\\indexing\\test_set_value.py",
      "Lib\\site-packages\\pandas\\tests\\series\\indexing\\test_take.py",
      "Lib\\site-packages\\pandas\\tests\\series\\indexing\\test_where.py",
      "Lib\\site-packages\\pandas\\tests\\series\\indexing\\test_xs.py",
      "Lib\\site-packages\\pandas\\tests\\series\\indexing\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_add_prefix_suffix.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_align.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_argsort.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_asof.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_astype.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_autocorr.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_between.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_case_when.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_clip.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_combine.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_combine_first.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_compare.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_convert_dtypes.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_copy.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_count.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_cov_corr.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_describe.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_diff.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_drop.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_dropna.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_drop_duplicates.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_dtypes.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_duplicated.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_equals.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_explode.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_fillna.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_get_numeric_data.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_head_tail.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_infer_objects.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_info.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_interpolate.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_isin.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_isna.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_is_monotonic.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_is_unique.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_item.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_map.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_matmul.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_nlargest.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_nunique.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_pct_change.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_pop.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_quantile.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_rank.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_reindex.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_reindex_like.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_rename.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_rename_axis.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_repeat.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_replace.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_reset_index.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_round.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_searchsorted.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_set_name.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_size.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_sort_index.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_sort_values.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_tolist.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_to_csv.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_to_dict.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_to_frame.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_to_numpy.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_truncate.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_tz_localize.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_unique.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_unstack.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_update.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_values.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_value_counts.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\test_view.py",
      "Lib\\site-packages\\pandas\\tests\\series\\methods\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\strings\\conftest.py",
      "Lib\\site-packages\\pandas\\tests\\strings\\test_api.py",
      "Lib\\site-packages\\pandas\\tests\\strings\\test_case_justify.py",
      "Lib\\site-packages\\pandas\\tests\\strings\\test_cat.py",
      "Lib\\site-packages\\pandas\\tests\\strings\\test_extract.py",
      "Lib\\site-packages\\pandas\\tests\\strings\\test_find_replace.py",
      "Lib\\site-packages\\pandas\\tests\\strings\\test_get_dummies.py",
      "Lib\\site-packages\\pandas\\tests\\strings\\test_split_partition.py",
      "Lib\\site-packages\\pandas\\tests\\strings\\test_strings.py",
      "Lib\\site-packages\\pandas\\tests\\strings\\test_string_array.py",
      "Lib\\site-packages\\pandas\\tests\\strings\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\tools\\test_to_datetime.py",
      "Lib\\site-packages\\pandas\\tests\\tools\\test_to_numeric.py",
      "Lib\\site-packages\\pandas\\tests\\tools\\test_to_time.py",
      "Lib\\site-packages\\pandas\\tests\\tools\\test_to_timedelta.py",
      "Lib\\site-packages\\pandas\\tests\\tools\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\tseries\\frequencies",
      "Lib\\site-packages\\pandas\\tests\\tseries\\holiday",
      "Lib\\site-packages\\pandas\\tests\\tseries\\offsets",
      "Lib\\site-packages\\pandas\\tests\\tseries\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\tseries\\frequencies\\test_frequencies.py",
      "Lib\\site-packages\\pandas\\tests\\tseries\\frequencies\\test_freq_code.py",
      "Lib\\site-packages\\pandas\\tests\\tseries\\frequencies\\test_inference.py",
      "Lib\\site-packages\\pandas\\tests\\tseries\\frequencies\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\tseries\\holiday\\test_calendar.py",
      "Lib\\site-packages\\pandas\\tests\\tseries\\holiday\\test_federal.py",
      "Lib\\site-packages\\pandas\\tests\\tseries\\holiday\\test_holiday.py",
      "Lib\\site-packages\\pandas\\tests\\tseries\\holiday\\test_observance.py",
      "Lib\\site-packages\\pandas\\tests\\tseries\\holiday\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\tseries\\offsets\\common.py",
      "Lib\\site-packages\\pandas\\tests\\tseries\\offsets\\test_business_day.py",
      "Lib\\site-packages\\pandas\\tests\\tseries\\offsets\\test_business_hour.py",
      "Lib\\site-packages\\pandas\\tests\\tseries\\offsets\\test_business_month.py",
      "Lib\\site-packages\\pandas\\tests\\tseries\\offsets\\test_business_quarter.py",
      "Lib\\site-packages\\pandas\\tests\\tseries\\offsets\\test_business_year.py",
      "Lib\\site-packages\\pandas\\tests\\tseries\\offsets\\test_common.py",
      "Lib\\site-packages\\pandas\\tests\\tseries\\offsets\\test_custom_business_day.py",
      "Lib\\site-packages\\pandas\\tests\\tseries\\offsets\\test_custom_business_hour.py",
      "Lib\\site-packages\\pandas\\tests\\tseries\\offsets\\test_custom_business_month.py",
      "Lib\\site-packages\\pandas\\tests\\tseries\\offsets\\test_dst.py",
      "Lib\\site-packages\\pandas\\tests\\tseries\\offsets\\test_easter.py",
      "Lib\\site-packages\\pandas\\tests\\tseries\\offsets\\test_fiscal.py",
      "Lib\\site-packages\\pandas\\tests\\tseries\\offsets\\test_index.py",
      "Lib\\site-packages\\pandas\\tests\\tseries\\offsets\\test_month.py",
      "Lib\\site-packages\\pandas\\tests\\tseries\\offsets\\test_offsets.py",
      "Lib\\site-packages\\pandas\\tests\\tseries\\offsets\\test_offsets_properties.py",
      "Lib\\site-packages\\pandas\\tests\\tseries\\offsets\\test_quarter.py",
      "Lib\\site-packages\\pandas\\tests\\tseries\\offsets\\test_ticks.py",
      "Lib\\site-packages\\pandas\\tests\\tseries\\offsets\\test_week.py",
      "Lib\\site-packages\\pandas\\tests\\tseries\\offsets\\test_year.py",
      "Lib\\site-packages\\pandas\\tests\\tseries\\offsets\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\tslibs\\test_api.py",
      "Lib\\site-packages\\pandas\\tests\\tslibs\\test_array_to_datetime.py",
      "Lib\\site-packages\\pandas\\tests\\tslibs\\test_ccalendar.py",
      "Lib\\site-packages\\pandas\\tests\\tslibs\\test_conversion.py",
      "Lib\\site-packages\\pandas\\tests\\tslibs\\test_fields.py",
      "Lib\\site-packages\\pandas\\tests\\tslibs\\test_libfrequencies.py",
      "Lib\\site-packages\\pandas\\tests\\tslibs\\test_liboffsets.py",
      "Lib\\site-packages\\pandas\\tests\\tslibs\\test_npy_units.py",
      "Lib\\site-packages\\pandas\\tests\\tslibs\\test_np_datetime.py",
      "Lib\\site-packages\\pandas\\tests\\tslibs\\test_parse_iso8601.py",
      "Lib\\site-packages\\pandas\\tests\\tslibs\\test_parsing.py",
      "Lib\\site-packages\\pandas\\tests\\tslibs\\test_period.py",
      "Lib\\site-packages\\pandas\\tests\\tslibs\\test_resolution.py",
      "Lib\\site-packages\\pandas\\tests\\tslibs\\test_strptime.py",
      "Lib\\site-packages\\pandas\\tests\\tslibs\\test_timedeltas.py",
      "Lib\\site-packages\\pandas\\tests\\tslibs\\test_timezones.py",
      "Lib\\site-packages\\pandas\\tests\\tslibs\\test_to_offset.py",
      "Lib\\site-packages\\pandas\\tests\\tslibs\\test_tzconversion.py",
      "Lib\\site-packages\\pandas\\tests\\tslibs\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\util\\conftest.py",
      "Lib\\site-packages\\pandas\\tests\\util\\test_assert_almost_equal.py",
      "Lib\\site-packages\\pandas\\tests\\util\\test_assert_attr_equal.py",
      "Lib\\site-packages\\pandas\\tests\\util\\test_assert_categorical_equal.py",
      "Lib\\site-packages\\pandas\\tests\\util\\test_assert_extension_array_equal.py",
      "Lib\\site-packages\\pandas\\tests\\util\\test_assert_frame_equal.py",
      "Lib\\site-packages\\pandas\\tests\\util\\test_assert_index_equal.py",
      "Lib\\site-packages\\pandas\\tests\\util\\test_assert_interval_array_equal.py",
      "Lib\\site-packages\\pandas\\tests\\util\\test_assert_numpy_array_equal.py",
      "Lib\\site-packages\\pandas\\tests\\util\\test_assert_produces_warning.py",
      "Lib\\site-packages\\pandas\\tests\\util\\test_assert_series_equal.py",
      "Lib\\site-packages\\pandas\\tests\\util\\test_deprecate.py",
      "Lib\\site-packages\\pandas\\tests\\util\\test_deprecate_kwarg.py",
      "Lib\\site-packages\\pandas\\tests\\util\\test_deprecate_nonkeyword_arguments.py",
      "Lib\\site-packages\\pandas\\tests\\util\\test_doc.py",
      "Lib\\site-packages\\pandas\\tests\\util\\test_hashing.py",
      "Lib\\site-packages\\pandas\\tests\\util\\test_numba.py",
      "Lib\\site-packages\\pandas\\tests\\util\\test_rewrite_warning.py",
      "Lib\\site-packages\\pandas\\tests\\util\\test_shares_memory.py",
      "Lib\\site-packages\\pandas\\tests\\util\\test_show_versions.py",
      "Lib\\site-packages\\pandas\\tests\\util\\test_util.py",
      "Lib\\site-packages\\pandas\\tests\\util\\test_validate_args.py",
      "Lib\\site-packages\\pandas\\tests\\util\\test_validate_args_and_kwargs.py",
      "Lib\\site-packages\\pandas\\tests\\util\\test_validate_inclusive.py",
      "Lib\\site-packages\\pandas\\tests\\util\\test_validate_kwargs.py",
      "Lib\\site-packages\\pandas\\tests\\util\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\window\\conftest.py",
      "Lib\\site-packages\\pandas\\tests\\window\\moments",
      "Lib\\site-packages\\pandas\\tests\\window\\test_api.py",
      "Lib\\site-packages\\pandas\\tests\\window\\test_apply.py",
      "Lib\\site-packages\\pandas\\tests\\window\\test_base_indexer.py",
      "Lib\\site-packages\\pandas\\tests\\window\\test_cython_aggregations.py",
      "Lib\\site-packages\\pandas\\tests\\window\\test_dtypes.py",
      "Lib\\site-packages\\pandas\\tests\\window\\test_ewm.py",
      "Lib\\site-packages\\pandas\\tests\\window\\test_expanding.py",
      "Lib\\site-packages\\pandas\\tests\\window\\test_groupby.py",
      "Lib\\site-packages\\pandas\\tests\\window\\test_numba.py",
      "Lib\\site-packages\\pandas\\tests\\window\\test_online.py",
      "Lib\\site-packages\\pandas\\tests\\window\\test_pairwise.py",
      "Lib\\site-packages\\pandas\\tests\\window\\test_rolling.py",
      "Lib\\site-packages\\pandas\\tests\\window\\test_rolling_functions.py",
      "Lib\\site-packages\\pandas\\tests\\window\\test_rolling_quantile.py",
      "Lib\\site-packages\\pandas\\tests\\window\\test_rolling_skew_kurt.py",
      "Lib\\site-packages\\pandas\\tests\\window\\test_timeseries_window.py",
      "Lib\\site-packages\\pandas\\tests\\window\\test_win_type.py",
      "Lib\\site-packages\\pandas\\tests\\window\\__init__.py",
      "Lib\\site-packages\\pandas\\tests\\window\\moments\\conftest.py",
      "Lib\\site-packages\\pandas\\tests\\window\\moments\\test_moments_consistency_ewm.py",
      "Lib\\site-packages\\pandas\\tests\\window\\moments\\test_moments_consistency_expanding.py",
      "Lib\\site-packages\\pandas\\tests\\window\\moments\\test_moments_consistency_rolling.py",
      "Lib\\site-packages\\pandas\\tests\\window\\moments\\__init__.py",
      "Lib\\site-packages\\pandas\\tseries\\api.py",
      "Lib\\site-packages\\pandas\\tseries\\frequencies.py",
      "Lib\\site-packages\\pandas\\tseries\\holiday.py",
      "Lib\\site-packages\\pandas\\tseries\\offsets.py",
      "Lib\\site-packages\\pandas\\tseries\\__init__.py",
      "Lib\\site-packages\\pandas\\util\\version",
      "Lib\\site-packages\\pandas\\util\\_decorators.py",
      "Lib\\site-packages\\pandas\\util\\_doctools.py",
      "Lib\\site-packages\\pandas\\util\\_exceptions.py",
      "Lib\\site-packages\\pandas\\util\\_print_versions.py",
      "Lib\\site-packages\\pandas\\util\\_tester.py",
      "Lib\\site-packages\\pandas\\util\\_test_decorators.py",
      "Lib\\site-packages\\pandas\\util\\_validators.py",
      "Lib\\site-packages\\pandas\\util\\__init__.py",
      "Lib\\site-packages\\pandas\\util\\version\\__init__.py",
      "Lib\\site-packages\\pandas\\_config\\config.py",
      "Lib\\site-packages\\pandas\\_config\\dates.py",
      "Lib\\site-packages\\pandas\\_config\\display.py",
      "Lib\\site-packages\\pandas\\_config\\localization.py",
      "Lib\\site-packages\\pandas\\_config\\__init__.py",
      "Lib\\site-packages\\pandas\\_libs\\algos.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\algos.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\algos.pyi",
      "Lib\\site-packages\\pandas\\_libs\\arrays.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\arrays.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\arrays.pyi",
      "Lib\\site-packages\\pandas\\_libs\\byteswap.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\byteswap.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\byteswap.pyi",
      "Lib\\site-packages\\pandas\\_libs\\groupby.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\groupby.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\groupby.pyi",
      "Lib\\site-packages\\pandas\\_libs\\hashing.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\hashing.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\hashing.pyi",
      "Lib\\site-packages\\pandas\\_libs\\hashtable.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\hashtable.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\hashtable.pyi",
      "Lib\\site-packages\\pandas\\_libs\\index.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\index.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\index.pyi",
      "Lib\\site-packages\\pandas\\_libs\\indexing.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\indexing.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\indexing.pyi",
      "Lib\\site-packages\\pandas\\_libs\\internals.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\internals.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\internals.pyi",
      "Lib\\site-packages\\pandas\\_libs\\interval.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\interval.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\interval.pyi",
      "Lib\\site-packages\\pandas\\_libs\\join.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\join.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\join.pyi",
      "Lib\\site-packages\\pandas\\_libs\\json.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\json.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\json.pyi",
      "Lib\\site-packages\\pandas\\_libs\\lib.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\lib.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\lib.pyi",
      "Lib\\site-packages\\pandas\\_libs\\missing.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\missing.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\missing.pyi",
      "Lib\\site-packages\\pandas\\_libs\\ops.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\ops.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\ops.pyi",
      "Lib\\site-packages\\pandas\\_libs\\ops_dispatch.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\ops_dispatch.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\ops_dispatch.pyi",
      "Lib\\site-packages\\pandas\\_libs\\pandas_datetime.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\pandas_datetime.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\pandas_parser.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\pandas_parser.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\parsers.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\parsers.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\parsers.pyi",
      "Lib\\site-packages\\pandas\\_libs\\properties.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\properties.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\properties.pyi",
      "Lib\\site-packages\\pandas\\_libs\\reshape.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\reshape.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\reshape.pyi",
      "Lib\\site-packages\\pandas\\_libs\\sas.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\sas.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\sas.pyi",
      "Lib\\site-packages\\pandas\\_libs\\sparse.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\sparse.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\sparse.pyi",
      "Lib\\site-packages\\pandas\\_libs\\testing.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\testing.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\testing.pyi",
      "Lib\\site-packages\\pandas\\_libs\\tslib.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\tslib.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\tslib.pyi",
      "Lib\\site-packages\\pandas\\_libs\\tslibs",
      "Lib\\site-packages\\pandas\\_libs\\window",
      "Lib\\site-packages\\pandas\\_libs\\writers.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\writers.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\writers.pyi",
      "Lib\\site-packages\\pandas\\_libs\\__init__.py",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\base.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\base.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\ccalendar.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\ccalendar.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\ccalendar.pyi",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\conversion.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\conversion.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\conversion.pyi",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\dtypes.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\dtypes.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\dtypes.pyi",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\fields.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\fields.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\fields.pyi",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\nattype.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\nattype.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\nattype.pyi",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\np_datetime.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\np_datetime.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\np_datetime.pyi",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\offsets.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\offsets.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\offsets.pyi",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\parsing.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\parsing.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\parsing.pyi",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\period.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\period.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\period.pyi",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\strptime.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\strptime.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\strptime.pyi",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\timedeltas.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\timedeltas.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\timedeltas.pyi",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\timestamps.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\timestamps.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\timestamps.pyi",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\timezones.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\timezones.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\timezones.pyi",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\tzconversion.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\tzconversion.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\tzconversion.pyi",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\vectorized.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\vectorized.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\vectorized.pyi",
      "Lib\\site-packages\\pandas\\_libs\\tslibs\\__init__.py",
      "Lib\\site-packages\\pandas\\_libs\\window\\aggregations.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\window\\aggregations.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\window\\aggregations.pyi",
      "Lib\\site-packages\\pandas\\_libs\\window\\indexers.cp313-win_amd64.lib",
      "Lib\\site-packages\\pandas\\_libs\\window\\indexers.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pandas\\_libs\\window\\indexers.pyi",
      "Lib\\site-packages\\pandas\\_libs\\window\\__init__.py",
      "Lib\\site-packages\\pandas\\_testing\\asserters.py",
      "Lib\\site-packages\\pandas\\_testing\\compat.py",
      "Lib\\site-packages\\pandas\\_testing\\contexts.py",
      "Lib\\site-packages\\pandas\\_testing\\_hypothesis.py",
      "Lib\\site-packages\\pandas\\_testing\\_io.py",
      "Lib\\site-packages\\pandas\\_testing\\_warnings.py",
      "Lib\\site-packages\\pandas\\_testing\\__init__.py",
      "Lib\\site-packages\\pandas-2.3.3.dist-info\\DELVEWHEEL",
      "Lib\\site-packages\\pandas-2.3.3.dist-info\\entry_points.txt",
      "Lib\\site-packages\\pandas-2.3.3.dist-info\\INSTALLER",
      "Lib\\site-packages\\pandas-2.3.3.dist-info\\LICENSE",
      "Lib\\site-packages\\pandas-2.3.3.dist-info\\METADATA",
      "Lib\\site-packages\\pandas-2.3.3.dist-info\\RECORD",
      "Lib\\site-packages\\pandas-2.3.3.dist-info\\WHEEL",
      "Lib\\site-packages\\pandas.libs\\msvcp140-a4c2229bdc2a2a630acdc095b4d86008.dll",
      "Lib\\site-packages\\PIL\\AvifImagePlugin.py",
      "Lib\\site-packages\\PIL\\BdfFontFile.py",
      "Lib\\site-packages\\PIL\\BlpImagePlugin.py",
      "Lib\\site-packages\\PIL\\BmpImagePlugin.py",
      "Lib\\site-packages\\PIL\\BufrStubImagePlugin.py",
      "Lib\\site-packages\\PIL\\ContainerIO.py",
      "Lib\\site-packages\\PIL\\CurImagePlugin.py",
      "Lib\\site-packages\\PIL\\DcxImagePlugin.py",
      "Lib\\site-packages\\PIL\\DdsImagePlugin.py",
      "Lib\\site-packages\\PIL\\EpsImagePlugin.py",
      "Lib\\site-packages\\PIL\\ExifTags.py",
      "Lib\\site-packages\\PIL\\features.py",
      "Lib\\site-packages\\PIL\\FitsImagePlugin.py",
      "Lib\\site-packages\\PIL\\FliImagePlugin.py",
      "Lib\\site-packages\\PIL\\FontFile.py",
      "Lib\\site-packages\\PIL\\FpxImagePlugin.py",
      "Lib\\site-packages\\PIL\\FtexImagePlugin.py",
      "Lib\\site-packages\\PIL\\GbrImagePlugin.py",
      "Lib\\site-packages\\PIL\\GdImageFile.py",
      "Lib\\site-packages\\PIL\\GifImagePlugin.py",
      "Lib\\site-packages\\PIL\\GimpGradientFile.py",
      "Lib\\site-packages\\PIL\\GimpPaletteFile.py",
      "Lib\\site-packages\\PIL\\GribStubImagePlugin.py",
      "Lib\\site-packages\\PIL\\Hdf5StubImagePlugin.py",
      "Lib\\site-packages\\PIL\\IcnsImagePlugin.py",
      "Lib\\site-packages\\PIL\\IcoImagePlugin.py",
      "Lib\\site-packages\\PIL\\Image.py",
      "Lib\\site-packages\\PIL\\ImageChops.py",
      "Lib\\site-packages\\PIL\\ImageCms.py",
      "Lib\\site-packages\\PIL\\ImageColor.py",
      "Lib\\site-packages\\PIL\\ImageDraw.py",
      "Lib\\site-packages\\PIL\\ImageDraw2.py",
      "Lib\\site-packages\\PIL\\ImageEnhance.py",
      "Lib\\site-packages\\PIL\\ImageFile.py",
      "Lib\\site-packages\\PIL\\ImageFilter.py",
      "Lib\\site-packages\\PIL\\ImageFont.py",
      "Lib\\site-packages\\PIL\\ImageGrab.py",
      "Lib\\site-packages\\PIL\\ImageMath.py",
      "Lib\\site-packages\\PIL\\ImageMode.py",
      "Lib\\site-packages\\PIL\\ImageMorph.py",
      "Lib\\site-packages\\PIL\\ImageOps.py",
      "Lib\\site-packages\\PIL\\ImagePalette.py",
      "Lib\\site-packages\\PIL\\ImagePath.py",
      "Lib\\site-packages\\PIL\\ImageQt.py",
      "Lib\\site-packages\\PIL\\ImageSequence.py",
      "Lib\\site-packages\\PIL\\ImageShow.py",
      "Lib\\site-packages\\PIL\\ImageStat.py",
      "Lib\\site-packages\\PIL\\ImageTk.py",
      "Lib\\site-packages\\PIL\\ImageTransform.py",
      "Lib\\site-packages\\PIL\\ImageWin.py",
      "Lib\\site-packages\\PIL\\ImImagePlugin.py",
      "Lib\\site-packages\\PIL\\ImtImagePlugin.py",
      "Lib\\site-packages\\PIL\\IptcImagePlugin.py",
      "Lib\\site-packages\\PIL\\Jpeg2KImagePlugin.py",
      "Lib\\site-packages\\PIL\\JpegImagePlugin.py",
      "Lib\\site-packages\\PIL\\JpegPresets.py",
      "Lib\\site-packages\\PIL\\McIdasImagePlugin.py",
      "Lib\\site-packages\\PIL\\MicImagePlugin.py",
      "Lib\\site-packages\\PIL\\MpegImagePlugin.py",
      "Lib\\site-packages\\PIL\\MpoImagePlugin.py",
      "Lib\\site-packages\\PIL\\MspImagePlugin.py",
      "Lib\\site-packages\\PIL\\PaletteFile.py",
      "Lib\\site-packages\\PIL\\PalmImagePlugin.py",
      "Lib\\site-packages\\PIL\\PcdImagePlugin.py",
      "Lib\\site-packages\\PIL\\PcfFontFile.py",
      "Lib\\site-packages\\PIL\\PcxImagePlugin.py",
      "Lib\\site-packages\\PIL\\PdfImagePlugin.py",
      "Lib\\site-packages\\PIL\\PdfParser.py",
      "Lib\\site-packages\\PIL\\PixarImagePlugin.py",
      "Lib\\site-packages\\PIL\\PngImagePlugin.py",
      "Lib\\site-packages\\PIL\\PpmImagePlugin.py",
      "Lib\\site-packages\\PIL\\PsdImagePlugin.py",
      "Lib\\site-packages\\PIL\\PSDraw.py",
      "Lib\\site-packages\\PIL\\py.typed",
      "Lib\\site-packages\\PIL\\QoiImagePlugin.py",
      "Lib\\site-packages\\PIL\\report.py",
      "Lib\\site-packages\\PIL\\SgiImagePlugin.py",
      "Lib\\site-packages\\PIL\\SpiderImagePlugin.py",
      "Lib\\site-packages\\PIL\\SunImagePlugin.py",
      "Lib\\site-packages\\PIL\\TarIO.py",
      "Lib\\site-packages\\PIL\\TgaImagePlugin.py",
      "Lib\\site-packages\\PIL\\TiffImagePlugin.py",
      "Lib\\site-packages\\PIL\\TiffTags.py",
      "Lib\\site-packages\\PIL\\WalImageFile.py",
      "Lib\\site-packages\\PIL\\WebPImagePlugin.py",
      "Lib\\site-packages\\PIL\\WmfImagePlugin.py",
      "Lib\\site-packages\\PIL\\XbmImagePlugin.py",
      "Lib\\site-packages\\PIL\\XpmImagePlugin.py",
      "Lib\\site-packages\\PIL\\XVThumbImagePlugin.py",
      "Lib\\site-packages\\PIL\\_avif.cp313-win_amd64.pyd",
      "Lib\\site-packages\\PIL\\_avif.pyi",
      "Lib\\site-packages\\PIL\\_binary.py",
      "Lib\\site-packages\\PIL\\_deprecate.py",
      "Lib\\site-packages\\PIL\\_imaging.cp313-win_amd64.pyd",
      "Lib\\site-packages\\PIL\\_imaging.pyi",
      "Lib\\site-packages\\PIL\\_imagingcms.cp313-win_amd64.pyd",
      "Lib\\site-packages\\PIL\\_imagingcms.pyi",
      "Lib\\site-packages\\PIL\\_imagingft.cp313-win_amd64.pyd",
      "Lib\\site-packages\\PIL\\_imagingft.pyi",
      "Lib\\site-packages\\PIL\\_imagingmath.cp313-win_amd64.pyd",
      "Lib\\site-packages\\PIL\\_imagingmath.pyi",
      "Lib\\site-packages\\PIL\\_imagingmorph.cp313-win_amd64.pyd",
      "Lib\\site-packages\\PIL\\_imagingmorph.pyi",
      "Lib\\site-packages\\PIL\\_imagingtk.cp313-win_amd64.pyd",
      "Lib\\site-packages\\PIL\\_imagingtk.pyi",
      "Lib\\site-packages\\PIL\\_tkinter_finder.py",
      "Lib\\site-packages\\PIL\\_typing.py",
      "Lib\\site-packages\\PIL\\_util.py",
      "Lib\\site-packages\\PIL\\_version.py",
      "Lib\\site-packages\\PIL\\_webp.cp313-win_amd64.pyd",
      "Lib\\site-packages\\PIL\\_webp.pyi",
      "Lib\\site-packages\\PIL\\__init__.py",
      "Lib\\site-packages\\PIL\\__main__.py",
      "Lib\\site-packages\\pillow-11.3.0.dist-info\\INSTALLER",
      "Lib\\site-packages\\pillow-11.3.0.dist-info\\licenses",
      "Lib\\site-packages\\pillow-11.3.0.dist-info\\METADATA",
      "Lib\\site-packages\\pillow-11.3.0.dist-info\\RECORD",
      "Lib\\site-packages\\pillow-11.3.0.dist-info\\top_level.txt",
      "Lib\\site-packages\\pillow-11.3.0.dist-info\\WHEEL",
      "Lib\\site-packages\\pillow-11.3.0.dist-info\\zip-safe",
      "Lib\\site-packages\\pillow-11.3.0.dist-info\\licenses\\LICENSE",
      "Lib\\site-packages\\pip\\py.typed",
      "Lib\\site-packages\\pip\\_internal",
      "Lib\\site-packages\\pip\\_vendor",
      "Lib\\site-packages\\pip\\__init__.py",
      "Lib\\site-packages\\pip\\__main__.py",
      "Lib\\site-packages\\pip\\__pip-runner__.py",
      "Lib\\site-packages\\pip\\_internal\\build_env.py",
      "Lib\\site-packages\\pip\\_internal\\cache.py",
      "Lib\\site-packages\\pip\\_internal\\cli",
      "Lib\\site-packages\\pip\\_internal\\commands",
      "Lib\\site-packages\\pip\\_internal\\configuration.py",
      "Lib\\site-packages\\pip\\_internal\\distributions",
      "Lib\\site-packages\\pip\\_internal\\exceptions.py",
      "Lib\\site-packages\\pip\\_internal\\index",
      "Lib\\site-packages\\pip\\_internal\\locations",
      "Lib\\site-packages\\pip\\_internal\\main.py",
      "Lib\\site-packages\\pip\\_internal\\metadata",
      "Lib\\site-packages\\pip\\_internal\\models",
      "Lib\\site-packages\\pip\\_internal\\network",
      "Lib\\site-packages\\pip\\_internal\\operations",
      "Lib\\site-packages\\pip\\_internal\\pyproject.py",
      "Lib\\site-packages\\pip\\_internal\\req",
      "Lib\\site-packages\\pip\\_internal\\resolution",
      "Lib\\site-packages\\pip\\_internal\\self_outdated_check.py",
      "Lib\\site-packages\\pip\\_internal\\utils",
      "Lib\\site-packages\\pip\\_internal\\vcs",
      "Lib\\site-packages\\pip\\_internal\\wheel_builder.py",
      "Lib\\site-packages\\pip\\_internal\\__init__.py",
      "Lib\\site-packages\\pip\\_internal\\cli\\autocompletion.py",
      "Lib\\site-packages\\pip\\_internal\\cli\\base_command.py",
      "Lib\\site-packages\\pip\\_internal\\cli\\cmdoptions.py",
      "Lib\\site-packages\\pip\\_internal\\cli\\command_context.py",
      "Lib\\site-packages\\pip\\_internal\\cli\\index_command.py",
      "Lib\\site-packages\\pip\\_internal\\cli\\main.py",
      "Lib\\site-packages\\pip\\_internal\\cli\\main_parser.py",
      "Lib\\site-packages\\pip\\_internal\\cli\\parser.py",
      "Lib\\site-packages\\pip\\_internal\\cli\\progress_bars.py",
      "Lib\\site-packages\\pip\\_internal\\cli\\req_command.py",
      "Lib\\site-packages\\pip\\_internal\\cli\\spinners.py",
      "Lib\\site-packages\\pip\\_internal\\cli\\status_codes.py",
      "Lib\\site-packages\\pip\\_internal\\cli\\__init__.py",
      "Lib\\site-packages\\pip\\_internal\\commands\\cache.py",
      "Lib\\site-packages\\pip\\_internal\\commands\\check.py",
      "Lib\\site-packages\\pip\\_internal\\commands\\completion.py",
      "Lib\\site-packages\\pip\\_internal\\commands\\configuration.py",
      "Lib\\site-packages\\pip\\_internal\\commands\\debug.py",
      "Lib\\site-packages\\pip\\_internal\\commands\\download.py",
      "Lib\\site-packages\\pip\\_internal\\commands\\freeze.py",
      "Lib\\site-packages\\pip\\_internal\\commands\\hash.py",
      "Lib\\site-packages\\pip\\_internal\\commands\\help.py",
      "Lib\\site-packages\\pip\\_internal\\commands\\index.py",
      "Lib\\site-packages\\pip\\_internal\\commands\\inspect.py",
      "Lib\\site-packages\\pip\\_internal\\commands\\install.py",
      "Lib\\site-packages\\pip\\_internal\\commands\\list.py",
      "Lib\\site-packages\\pip\\_internal\\commands\\lock.py",
      "Lib\\site-packages\\pip\\_internal\\commands\\search.py",
      "Lib\\site-packages\\pip\\_internal\\commands\\show.py",
      "Lib\\site-packages\\pip\\_internal\\commands\\uninstall.py",
      "Lib\\site-packages\\pip\\_internal\\commands\\wheel.py",
      "Lib\\site-packages\\pip\\_internal\\commands\\__init__.py",
      "Lib\\site-packages\\pip\\_internal\\distributions\\base.py",
      "Lib\\site-packages\\pip\\_internal\\distributions\\installed.py",
      "Lib\\site-packages\\pip\\_internal\\distributions\\sdist.py",
      "Lib\\site-packages\\pip\\_internal\\distributions\\wheel.py",
      "Lib\\site-packages\\pip\\_internal\\distributions\\__init__.py",
      "Lib\\site-packages\\pip\\_internal\\index\\collector.py",
      "Lib\\site-packages\\pip\\_internal\\index\\package_finder.py",
      "Lib\\site-packages\\pip\\_internal\\index\\sources.py",
      "Lib\\site-packages\\pip\\_internal\\index\\__init__.py",
      "Lib\\site-packages\\pip\\_internal\\locations\\base.py",
      "Lib\\site-packages\\pip\\_internal\\locations\\_distutils.py",
      "Lib\\site-packages\\pip\\_internal\\locations\\_sysconfig.py",
      "Lib\\site-packages\\pip\\_internal\\locations\\__init__.py",
      "Lib\\site-packages\\pip\\_internal\\metadata\\base.py",
      "Lib\\site-packages\\pip\\_internal\\metadata\\importlib",
      "Lib\\site-packages\\pip\\_internal\\metadata\\pkg_resources.py",
      "Lib\\site-packages\\pip\\_internal\\metadata\\_json.py",
      "Lib\\site-packages\\pip\\_internal\\metadata\\__init__.py",
      "Lib\\site-packages\\pip\\_internal\\metadata\\importlib\\_compat.py",
      "Lib\\site-packages\\pip\\_internal\\metadata\\importlib\\_dists.py",
      "Lib\\site-packages\\pip\\_internal\\metadata\\importlib\\_envs.py",
      "Lib\\site-packages\\pip\\_internal\\metadata\\importlib\\__init__.py",
      "Lib\\site-packages\\pip\\_internal\\models\\candidate.py",
      "Lib\\site-packages\\pip\\_internal\\models\\direct_url.py",
      "Lib\\site-packages\\pip\\_internal\\models\\format_control.py",
      "Lib\\site-packages\\pip\\_internal\\models\\index.py",
      "Lib\\site-packages\\pip\\_internal\\models\\installation_report.py",
      "Lib\\site-packages\\pip\\_internal\\models\\link.py",
      "Lib\\site-packages\\pip\\_internal\\models\\pylock.py",
      "Lib\\site-packages\\pip\\_internal\\models\\scheme.py",
      "Lib\\site-packages\\pip\\_internal\\models\\search_scope.py",
      "Lib\\site-packages\\pip\\_internal\\models\\selection_prefs.py",
      "Lib\\site-packages\\pip\\_internal\\models\\target_python.py",
      "Lib\\site-packages\\pip\\_internal\\models\\wheel.py",
      "Lib\\site-packages\\pip\\_internal\\models\\__init__.py",
      "Lib\\site-packages\\pip\\_internal\\network\\auth.py",
      "Lib\\site-packages\\pip\\_internal\\network\\cache.py",
      "Lib\\site-packages\\pip\\_internal\\network\\download.py",
      "Lib\\site-packages\\pip\\_internal\\network\\lazy_wheel.py",
      "Lib\\site-packages\\pip\\_internal\\network\\session.py",
      "Lib\\site-packages\\pip\\_internal\\network\\utils.py",
      "Lib\\site-packages\\pip\\_internal\\network\\xmlrpc.py",
      "Lib\\site-packages\\pip\\_internal\\network\\__init__.py",
      "Lib\\site-packages\\pip\\_internal\\operations\\build",
      "Lib\\site-packages\\pip\\_internal\\operations\\check.py",
      "Lib\\site-packages\\pip\\_internal\\operations\\freeze.py",
      "Lib\\site-packages\\pip\\_internal\\operations\\install",
      "Lib\\site-packages\\pip\\_internal\\operations\\prepare.py",
      "Lib\\site-packages\\pip\\_internal\\operations\\__init__.py",
      "Lib\\site-packages\\pip\\_internal\\operations\\build\\build_tracker.py",
      "Lib\\site-packages\\pip\\_internal\\operations\\build\\metadata.py",
      "Lib\\site-packages\\pip\\_internal\\operations\\build\\metadata_editable.py",
      "Lib\\site-packages\\pip\\_internal\\operations\\build\\metadata_legacy.py",
      "Lib\\site-packages\\pip\\_internal\\operations\\build\\wheel.py",
      "Lib\\site-packages\\pip\\_internal\\operations\\build\\wheel_editable.py",
      "Lib\\site-packages\\pip\\_internal\\operations\\build\\wheel_legacy.py",
      "Lib\\site-packages\\pip\\_internal\\operations\\build\\__init__.py",
      "Lib\\site-packages\\pip\\_internal\\operations\\install\\editable_legacy.py",
      "Lib\\site-packages\\pip\\_internal\\operations\\install\\wheel.py",
      "Lib\\site-packages\\pip\\_internal\\operations\\install\\__init__.py",
      "Lib\\site-packages\\pip\\_internal\\req\\constructors.py",
      "Lib\\site-packages\\pip\\_internal\\req\\req_dependency_group.py",
      "Lib\\site-packages\\pip\\_internal\\req\\req_file.py",
      "Lib\\site-packages\\pip\\_internal\\req\\req_install.py",
      "Lib\\site-packages\\pip\\_internal\\req\\req_set.py",
      "Lib\\site-packages\\pip\\_internal\\req\\req_uninstall.py",
      "Lib\\site-packages\\pip\\_internal\\req\\__init__.py",
      "Lib\\site-packages\\pip\\_internal\\resolution\\base.py",
      "Lib\\site-packages\\pip\\_internal\\resolution\\legacy",
      "Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib",
      "Lib\\site-packages\\pip\\_internal\\resolution\\__init__.py",
      "Lib\\site-packages\\pip\\_internal\\resolution\\legacy\\resolver.py",
      "Lib\\site-packages\\pip\\_internal\\resolution\\legacy\\__init__.py",
      "Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\base.py",
      "Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\candidates.py",
      "Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\factory.py",
      "Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\found_candidates.py",
      "Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\provider.py",
      "Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\reporter.py",
      "Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\requirements.py",
      "Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\resolver.py",
      "Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\__init__.py",
      "Lib\\site-packages\\pip\\_internal\\utils\\appdirs.py",
      "Lib\\site-packages\\pip\\_internal\\utils\\compat.py",
      "Lib\\site-packages\\pip\\_internal\\utils\\compatibility_tags.py",
      "Lib\\site-packages\\pip\\_internal\\utils\\datetime.py",
      "Lib\\site-packages\\pip\\_internal\\utils\\deprecation.py",
      "Lib\\site-packages\\pip\\_internal\\utils\\direct_url_helpers.py",
      "Lib\\site-packages\\pip\\_internal\\utils\\egg_link.py",
      "Lib\\site-packages\\pip\\_internal\\utils\\entrypoints.py",
      "Lib\\site-packages\\pip\\_internal\\utils\\filesystem.py",
      "Lib\\site-packages\\pip\\_internal\\utils\\filetypes.py",
      "Lib\\site-packages\\pip\\_internal\\utils\\glibc.py",
      "Lib\\site-packages\\pip\\_internal\\utils\\hashes.py",
      "Lib\\site-packages\\pip\\_internal\\utils\\logging.py",
      "Lib\\site-packages\\pip\\_internal\\utils\\misc.py",
      "Lib\\site-packages\\pip\\_internal\\utils\\packaging.py",
      "Lib\\site-packages\\pip\\_internal\\utils\\retry.py",
      "Lib\\site-packages\\pip\\_internal\\utils\\setuptools_build.py",
      "Lib\\site-packages\\pip\\_internal\\utils\\subprocess.py",
      "Lib\\site-packages\\pip\\_internal\\utils\\temp_dir.py",
      "Lib\\site-packages\\pip\\_internal\\utils\\unpacking.py",
      "Lib\\site-packages\\pip\\_internal\\utils\\urls.py",
      "Lib\\site-packages\\pip\\_internal\\utils\\virtualenv.py",
      "Lib\\site-packages\\pip\\_internal\\utils\\wheel.py",
      "Lib\\site-packages\\pip\\_internal\\utils\\_jaraco_text.py",
      "Lib\\site-packages\\pip\\_internal\\utils\\_log.py",
      "Lib\\site-packages\\pip\\_internal\\utils\\__init__.py",
      "Lib\\site-packages\\pip\\_internal\\vcs\\bazaar.py",
      "Lib\\site-packages\\pip\\_internal\\vcs\\git.py",
      "Lib\\site-packages\\pip\\_internal\\vcs\\mercurial.py",
      "Lib\\site-packages\\pip\\_internal\\vcs\\subversion.py",
      "Lib\\site-packages\\pip\\_internal\\vcs\\versioncontrol.py",
      "Lib\\site-packages\\pip\\_internal\\vcs\\__init__.py",
      "Lib\\site-packages\\pip\\_vendor\\cachecontrol",
      "Lib\\site-packages\\pip\\_vendor\\certifi",
      "Lib\\site-packages\\pip\\_vendor\\dependency_groups",
      "Lib\\site-packages\\pip\\_vendor\\distlib",
      "Lib\\site-packages\\pip\\_vendor\\distro",
      "Lib\\site-packages\\pip\\_vendor\\idna",
      "Lib\\site-packages\\pip\\_vendor\\msgpack",
      "Lib\\site-packages\\pip\\_vendor\\packaging",
      "Lib\\site-packages\\pip\\_vendor\\pkg_resources",
      "Lib\\site-packages\\pip\\_vendor\\platformdirs",
      "Lib\\site-packages\\pip\\_vendor\\pygments",
      "Lib\\site-packages\\pip\\_vendor\\pyproject_hooks",
      "Lib\\site-packages\\pip\\_vendor\\requests",
      "Lib\\site-packages\\pip\\_vendor\\resolvelib",
      "Lib\\site-packages\\pip\\_vendor\\rich",
      "Lib\\site-packages\\pip\\_vendor\\tomli",
      "Lib\\site-packages\\pip\\_vendor\\tomli_w",
      "Lib\\site-packages\\pip\\_vendor\\truststore",
      "Lib\\site-packages\\pip\\_vendor\\urllib3",
      "Lib\\site-packages\\pip\\_vendor\\vendor.txt",
      "Lib\\site-packages\\pip\\_vendor\\__init__.py",
      "Lib\\site-packages\\pip\\_vendor\\cachecontrol\\adapter.py",
      "Lib\\site-packages\\pip\\_vendor\\cachecontrol\\cache.py",
      "Lib\\site-packages\\pip\\_vendor\\cachecontrol\\caches",
      "Lib\\site-packages\\pip\\_vendor\\cachecontrol\\controller.py",
      "Lib\\site-packages\\pip\\_vendor\\cachecontrol\\filewrapper.py",
      "Lib\\site-packages\\pip\\_vendor\\cachecontrol\\heuristics.py",
      "Lib\\site-packages\\pip\\_vendor\\cachecontrol\\py.typed",
      "Lib\\site-packages\\pip\\_vendor\\cachecontrol\\serialize.py",
      "Lib\\site-packages\\pip\\_vendor\\cachecontrol\\wrapper.py",
      "Lib\\site-packages\\pip\\_vendor\\cachecontrol\\_cmd.py",
      "Lib\\site-packages\\pip\\_vendor\\cachecontrol\\__init__.py",
      "Lib\\site-packages\\pip\\_vendor\\cachecontrol\\caches\\file_cache.py",
      "Lib\\site-packages\\pip\\_vendor\\cachecontrol\\caches\\redis_cache.py",
      "Lib\\site-packages\\pip\\_vendor\\cachecontrol\\caches\\__init__.py",
      "Lib\\site-packages\\pip\\_vendor\\certifi\\cacert.pem",
      "Lib\\site-packages\\pip\\_vendor\\certifi\\core.py",
      "Lib\\site-packages\\pip\\_vendor\\certifi\\py.typed",
      "Lib\\site-packages\\pip\\_vendor\\certifi\\__init__.py",
      "Lib\\site-packages\\pip\\_vendor\\certifi\\__main__.py",
      "Lib\\site-packages\\pip\\_vendor\\dependency_groups\\py.typed",
      "Lib\\site-packages\\pip\\_vendor\\dependency_groups\\_implementation.py",
      "Lib\\site-packages\\pip\\_vendor\\dependency_groups\\_lint_dependency_groups.py",
      "Lib\\site-packages\\pip\\_vendor\\dependency_groups\\_pip_wrapper.py",
      "Lib\\site-packages\\pip\\_vendor\\dependency_groups\\_toml_compat.py",
      "Lib\\site-packages\\pip\\_vendor\\dependency_groups\\__init__.py",
      "Lib\\site-packages\\pip\\_vendor\\dependency_groups\\__main__.py",
      "Lib\\site-packages\\pip\\_vendor\\distlib\\compat.py",
      "Lib\\site-packages\\pip\\_vendor\\distlib\\resources.py",
      "Lib\\site-packages\\pip\\_vendor\\distlib\\scripts.py",
      "Lib\\site-packages\\pip\\_vendor\\distlib\\t32.exe",
      "Lib\\site-packages\\pip\\_vendor\\distlib\\t64-arm.exe",
      "Lib\\site-packages\\pip\\_vendor\\distlib\\t64.exe",
      "Lib\\site-packages\\pip\\_vendor\\distlib\\util.py",
      "Lib\\site-packages\\pip\\_vendor\\distlib\\w32.exe",
      "Lib\\site-packages\\pip\\_vendor\\distlib\\w64-arm.exe",
      "Lib\\site-packages\\pip\\_vendor\\distlib\\w64.exe",
      "Lib\\site-packages\\pip\\_vendor\\distlib\\__init__.py",
      "Lib\\site-packages\\pip\\_vendor\\distro\\distro.py",
      "Lib\\site-packages\\pip\\_vendor\\distro\\py.typed",
      "Lib\\site-packages\\pip\\_vendor\\distro\\__init__.py",
      "Lib\\site-packages\\pip\\_vendor\\distro\\__main__.py",
      "Lib\\site-packages\\pip\\_vendor\\idna\\codec.py",
      "Lib\\site-packages\\pip\\_vendor\\idna\\compat.py",
      "Lib\\site-packages\\pip\\_vendor\\idna\\core.py",
      "Lib\\site-packages\\pip\\_vendor\\idna\\idnadata.py",
      "Lib\\site-packages\\pip\\_vendor\\idna\\intranges.py",
      "Lib\\site-packages\\pip\\_vendor\\idna\\package_data.py",
      "Lib\\site-packages\\pip\\_vendor\\idna\\py.typed",
      "Lib\\site-packages\\pip\\_vendor\\idna\\uts46data.py",
      "Lib\\site-packages\\pip\\_vendor\\idna\\__init__.py",
      "Lib\\site-packages\\pip\\_vendor\\msgpack\\exceptions.py",
      "Lib\\site-packages\\pip\\_vendor\\msgpack\\ext.py",
      "Lib\\site-packages\\pip\\_vendor\\msgpack\\fallback.py",
      "Lib\\site-packages\\pip\\_vendor\\msgpack\\__init__.py",
      "Lib\\site-packages\\pip\\_vendor\\packaging\\licenses",
      "Lib\\site-packages\\pip\\_vendor\\packaging\\markers.py",
      "Lib\\site-packages\\pip\\_vendor\\packaging\\metadata.py",
      "Lib\\site-packages\\pip\\_vendor\\packaging\\py.typed",
      "Lib\\site-packages\\pip\\_vendor\\packaging\\requirements.py",
      "Lib\\site-packages\\pip\\_vendor\\packaging\\specifiers.py",
      "Lib\\site-packages\\pip\\_vendor\\packaging\\tags.py",
      "Lib\\site-packages\\pip\\_vendor\\packaging\\utils.py",
      "Lib\\site-packages\\pip\\_vendor\\packaging\\version.py",
      "Lib\\site-packages\\pip\\_vendor\\packaging\\_elffile.py",
      "Lib\\site-packages\\pip\\_vendor\\packaging\\_manylinux.py",
      "Lib\\site-packages\\pip\\_vendor\\packaging\\_musllinux.py",
      "Lib\\site-packages\\pip\\_vendor\\packaging\\_parser.py",
      "Lib\\site-packages\\pip\\_vendor\\packaging\\_structures.py",
      "Lib\\site-packages\\pip\\_vendor\\packaging\\_tokenizer.py",
      "Lib\\site-packages\\pip\\_vendor\\packaging\\__init__.py",
      "Lib\\site-packages\\pip\\_vendor\\packaging\\licenses\\_spdx.py",
      "Lib\\site-packages\\pip\\_vendor\\packaging\\licenses\\__init__.py",
      "Lib\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
      "Lib\\site-packages\\pip\\_vendor\\platformdirs\\android.py",
      "Lib\\site-packages\\pip\\_vendor\\platformdirs\\api.py",
      "Lib\\site-packages\\pip\\_vendor\\platformdirs\\macos.py",
      "Lib\\site-packages\\pip\\_vendor\\platformdirs\\py.typed",
      "Lib\\site-packages\\pip\\_vendor\\platformdirs\\unix.py",
      "Lib\\site-packages\\pip\\_vendor\\platformdirs\\version.py",
      "Lib\\site-packages\\pip\\_vendor\\platformdirs\\windows.py",
      "Lib\\site-packages\\pip\\_vendor\\platformdirs\\__init__.py",
      "Lib\\site-packages\\pip\\_vendor\\platformdirs\\__main__.py",
      "Lib\\site-packages\\pip\\_vendor\\pygments\\console.py",
      "Lib\\site-packages\\pip\\_vendor\\pygments\\filter.py",
      "Lib\\site-packages\\pip\\_vendor\\pygments\\filters",
      "Lib\\site-packages\\pip\\_vendor\\pygments\\formatter.py",
      "Lib\\site-packages\\pip\\_vendor\\pygments\\formatters",
      "Lib\\site-packages\\pip\\_vendor\\pygments\\lexer.py",
      "Lib\\site-packages\\pip\\_vendor\\pygments\\lexers",
      "Lib\\site-packages\\pip\\_vendor\\pygments\\modeline.py",
      "Lib\\site-packages\\pip\\_vendor\\pygments\\plugin.py",
      "Lib\\site-packages\\pip\\_vendor\\pygments\\regexopt.py",
      "Lib\\site-packages\\pip\\_vendor\\pygments\\scanner.py",
      "Lib\\site-packages\\pip\\_vendor\\pygments\\sphinxext.py",
      "Lib\\site-packages\\pip\\_vendor\\pygments\\style.py",
      "Lib\\site-packages\\pip\\_vendor\\pygments\\styles",
      "Lib\\site-packages\\pip\\_vendor\\pygments\\token.py",
      "Lib\\site-packages\\pip\\_vendor\\pygments\\unistring.py",
      "Lib\\site-packages\\pip\\_vendor\\pygments\\util.py",
      "Lib\\site-packages\\pip\\_vendor\\pygments\\__init__.py",
      "Lib\\site-packages\\pip\\_vendor\\pygments\\__main__.py",
      "Lib\\site-packages\\pip\\_vendor\\pygments\\filters\\__init__.py",
      "Lib\\site-packages\\pip\\_vendor\\pygments\\formatters\\_mapping.py",
      "Lib\\site-packages\\pip\\_vendor\\pygments\\formatters\\__init__.py",
      "Lib\\site-packages\\pip\\_vendor\\pygments\\lexers\\python.py",
      "Lib\\site-packages\\pip\\_vendor\\pygments\\lexers\\_mapping.py",
      "Lib\\site-packages\\pip\\_vendor\\pygments\\lexers\\__init__.py",
      "Lib\\site-packages\\pip\\_vendor\\pygments\\styles\\_mapping.py",
      "Lib\\site-packages\\pip\\_vendor\\pygments\\styles\\__init__.py",
      "Lib\\site-packages\\pip\\_vendor\\pyproject_hooks\\py.typed",
      "Lib\\site-packages\\pip\\_vendor\\pyproject_hooks\\_impl.py",
      "Lib\\site-packages\\pip\\_vendor\\pyproject_hooks\\_in_process",
      "Lib\\site-packages\\pip\\_vendor\\pyproject_hooks\\__init__.py",
      "Lib\\site-packages\\pip\\_vendor\\pyproject_hooks\\_in_process\\_in_process.py",
      "Lib\\site-packages\\pip\\_vendor\\pyproject_hooks\\_in_process\\__init__.py",
      "Lib\\site-packages\\pip\\_vendor\\requests\\adapters.py",
      "Lib\\site-packages\\pip\\_vendor\\requests\\api.py",
      "Lib\\site-packages\\pip\\_vendor\\requests\\auth.py",
      "Lib\\site-packages\\pip\\_vendor\\requests\\certs.py",
      "Lib\\site-packages\\pip\\_vendor\\requests\\compat.py",
      "Lib\\site-packages\\pip\\_vendor\\requests\\cookies.py",
      "Lib\\site-packages\\pip\\_vendor\\requests\\exceptions.py",
      "Lib\\site-packages\\pip\\_vendor\\requests\\help.py",
      "Lib\\site-packages\\pip\\_vendor\\requests\\hooks.py",
      "Lib\\site-packages\\pip\\_vendor\\requests\\models.py",
      "Lib\\site-packages\\pip\\_vendor\\requests\\packages.py",
      "Lib\\site-packages\\pip\\_vendor\\requests\\sessions.py",
      "Lib\\site-packages\\pip\\_vendor\\requests\\status_codes.py",
      "Lib\\site-packages\\pip\\_vendor\\requests\\structures.py",
      "Lib\\site-packages\\pip\\_vendor\\requests\\utils.py",
      "Lib\\site-packages\\pip\\_vendor\\requests\\_internal_utils.py",
      "Lib\\site-packages\\pip\\_vendor\\requests\\__init__.py",
      "Lib\\site-packages\\pip\\_vendor\\requests\\__version__.py",
      "Lib\\site-packages\\pip\\_vendor\\resolvelib\\providers.py",
      "Lib\\site-packages\\pip\\_vendor\\resolvelib\\py.typed",
      "Lib\\site-packages\\pip\\_vendor\\resolvelib\\reporters.py",
      "Lib\\site-packages\\pip\\_vendor\\resolvelib\\resolvers",
      "Lib\\site-packages\\pip\\_vendor\\resolvelib\\structs.py",
      "Lib\\site-packages\\pip\\_vendor\\resolvelib\\__init__.py",
      "Lib\\site-packages\\pip\\_vendor\\resolvelib\\resolvers\\abstract.py",
      "Lib\\site-packages\\pip\\_vendor\\resolvelib\\resolvers\\criterion.py",
      "Lib\\site-packages\\pip\\_vendor\\resolvelib\\resolvers\\exceptions.py",
      "Lib\\site-packages\\pip\\_vendor\\resolvelib\\resolvers\\resolution.py",
      "Lib\\site-packages\\pip\\_vendor\\resolvelib\\resolvers\\__init__.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\abc.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\align.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\ansi.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\bar.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\box.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\cells.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\color.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\color_triplet.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\columns.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\console.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\constrain.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\containers.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\control.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\default_styles.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\diagnose.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\emoji.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\errors.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\filesize.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\file_proxy.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\highlighter.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\json.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\jupyter.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\layout.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\live.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\live_render.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\logging.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\markup.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\measure.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\padding.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\pager.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\palette.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\panel.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\pretty.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\progress.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\progress_bar.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\prompt.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\protocol.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\py.typed",
      "Lib\\site-packages\\pip\\_vendor\\rich\\region.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\repr.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\rule.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\scope.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\screen.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\segment.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\spinner.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\status.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\style.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\styled.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\syntax.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\table.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\terminal_theme.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\text.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\theme.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\themes.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\traceback.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\tree.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\_cell_widths.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\_emoji_codes.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\_emoji_replace.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\_export_format.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\_extension.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\_fileno.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\_inspect.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\_log_render.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\_loop.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\_null_file.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\_palettes.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\_pick.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\_ratio.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\_spinners.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\_stack.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\_timer.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\_win32_console.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\_windows.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\_windows_renderer.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\_wrap.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\__init__.py",
      "Lib\\site-packages\\pip\\_vendor\\rich\\__main__.py",
      "Lib\\site-packages\\pip\\_vendor\\tomli\\py.typed",
      "Lib\\site-packages\\pip\\_vendor\\tomli\\_parser.py",
      "Lib\\site-packages\\pip\\_vendor\\tomli\\_re.py",
      "Lib\\site-packages\\pip\\_vendor\\tomli\\_types.py",
      "Lib\\site-packages\\pip\\_vendor\\tomli\\__init__.py",
      "Lib\\site-packages\\pip\\_vendor\\tomli_w\\py.typed",
      "Lib\\site-packages\\pip\\_vendor\\tomli_w\\_writer.py",
      "Lib\\site-packages\\pip\\_vendor\\tomli_w\\__init__.py",
      "Lib\\site-packages\\pip\\_vendor\\truststore\\py.typed",
      "Lib\\site-packages\\pip\\_vendor\\truststore\\_api.py",
      "Lib\\site-packages\\pip\\_vendor\\truststore\\_macos.py",
      "Lib\\site-packages\\pip\\_vendor\\truststore\\_openssl.py",
      "Lib\\site-packages\\pip\\_vendor\\truststore\\_ssl_constants.py",
      "Lib\\site-packages\\pip\\_vendor\\truststore\\_windows.py",
      "Lib\\site-packages\\pip\\_vendor\\truststore\\__init__.py",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\connection.py",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\connectionpool.py",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\exceptions.py",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\fields.py",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\filepost.py",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\packages",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\poolmanager.py",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\request.py",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\response.py",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\util",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\_collections.py",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\_version.py",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\__init__.py",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\appengine.py",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\ntlmpool.py",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\pyopenssl.py",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\securetransport.py",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\socks.py",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\_appengine_environ.py",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\_securetransport",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\__init__.py",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\_securetransport\\bindings.py",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\_securetransport\\low_level.py",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\contrib\\_securetransport\\__init__.py",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\backports",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\six.py",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\__init__.py",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\backports\\makefile.py",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\backports\\weakref_finalize.py",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\packages\\backports\\__init__.py",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\connection.py",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\proxy.py",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\queue.py",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\request.py",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\response.py",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\retry.py",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\ssltransport.py",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\ssl_.py",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\ssl_match_hostname.py",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\timeout.py",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\url.py",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\wait.py",
      "Lib\\site-packages\\pip\\_vendor\\urllib3\\util\\__init__.py",
      "Lib\\site-packages\\pip-25.2.dist-info\\entry_points.txt",
      "Lib\\site-packages\\pip-25.2.dist-info\\INSTALLER",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses",
      "Lib\\site-packages\\pip-25.2.dist-info\\METADATA",
      "Lib\\site-packages\\pip-25.2.dist-info\\RECORD",
      "Lib\\site-packages\\pip-25.2.dist-info\\REQUESTED",
      "Lib\\site-packages\\pip-25.2.dist-info\\top_level.txt",
      "Lib\\site-packages\\pip-25.2.dist-info\\WHEEL",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\AUTHORS.txt",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\LICENSE.txt",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src\\pip",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src\\pip\\_vendor",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src\\pip\\_vendor\\cachecontrol",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src\\pip\\_vendor\\certifi",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src\\pip\\_vendor\\dependency_groups",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src\\pip\\_vendor\\distlib",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src\\pip\\_vendor\\distro",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src\\pip\\_vendor\\idna",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src\\pip\\_vendor\\msgpack",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src\\pip\\_vendor\\packaging",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src\\pip\\_vendor\\pkg_resources",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src\\pip\\_vendor\\platformdirs",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src\\pip\\_vendor\\pygments",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src\\pip\\_vendor\\pyproject_hooks",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src\\pip\\_vendor\\requests",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src\\pip\\_vendor\\resolvelib",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src\\pip\\_vendor\\rich",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src\\pip\\_vendor\\tomli",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src\\pip\\_vendor\\tomli_w",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src\\pip\\_vendor\\truststore",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src\\pip\\_vendor\\urllib3",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src\\pip\\_vendor\\cachecontrol\\LICENSE.txt",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src\\pip\\_vendor\\certifi\\LICENSE",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src\\pip\\_vendor\\dependency_groups\\LICENSE.txt",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src\\pip\\_vendor\\distlib\\LICENSE.txt",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src\\pip\\_vendor\\distro\\LICENSE",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src\\pip\\_vendor\\idna\\LICENSE.md",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src\\pip\\_vendor\\msgpack\\COPYING",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src\\pip\\_vendor\\packaging\\LICENSE",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src\\pip\\_vendor\\packaging\\LICENSE.APACHE",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src\\pip\\_vendor\\packaging\\LICENSE.BSD",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src\\pip\\_vendor\\pkg_resources\\LICENSE",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src\\pip\\_vendor\\platformdirs\\LICENSE",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src\\pip\\_vendor\\pygments\\LICENSE",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src\\pip\\_vendor\\pyproject_hooks\\LICENSE",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src\\pip\\_vendor\\requests\\LICENSE",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src\\pip\\_vendor\\resolvelib\\LICENSE",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src\\pip\\_vendor\\rich\\LICENSE",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src\\pip\\_vendor\\tomli\\LICENSE",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src\\pip\\_vendor\\tomli\\LICENSE-HEADER",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src\\pip\\_vendor\\tomli_w\\LICENSE",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src\\pip\\_vendor\\truststore\\LICENSE",
      "Lib\\site-packages\\pip-25.2.dist-info\\licenses\\src\\pip\\_vendor\\urllib3\\LICENSE.txt",
      "Lib\\site-packages\\propcache\\api.py",
      "Lib\\site-packages\\propcache\\py.typed",
      "Lib\\site-packages\\propcache\\_helpers.py",
      "Lib\\site-packages\\propcache\\_helpers_c.cp313-win_amd64.pyd",
      "Lib\\site-packages\\propcache\\_helpers_c.pyx",
      "Lib\\site-packages\\propcache\\_helpers_py.py",
      "Lib\\site-packages\\propcache\\__init__.py",
      "Lib\\site-packages\\propcache-0.4.1.dist-info\\INSTALLER",
      "Lib\\site-packages\\propcache-0.4.1.dist-info\\licenses",
      "Lib\\site-packages\\propcache-0.4.1.dist-info\\METADATA",
      "Lib\\site-packages\\propcache-0.4.1.dist-info\\RECORD",
      "Lib\\site-packages\\propcache-0.4.1.dist-info\\top_level.txt",
      "Lib\\site-packages\\propcache-0.4.1.dist-info\\WHEEL",
      "Lib\\site-packages\\propcache-0.4.1.dist-info\\licenses\\LICENSE",
      "Lib\\site-packages\\propcache-0.4.1.dist-info\\licenses\\NOTICE",
      "Lib\\site-packages\\protobuf-6.33.0.dist-info\\INSTALLER",
      "Lib\\site-packages\\protobuf-6.33.0.dist-info\\LICENSE",
      "Lib\\site-packages\\protobuf-6.33.0.dist-info\\METADATA",
      "Lib\\site-packages\\protobuf-6.33.0.dist-info\\RECORD",
      "Lib\\site-packages\\protobuf-6.33.0.dist-info\\WHEEL",
      "Lib\\site-packages\\pyarrow\\acero.py",
      "Lib\\site-packages\\pyarrow\\array.pxi",
      "Lib\\site-packages\\pyarrow\\arrow.dll",
      "Lib\\site-packages\\pyarrow\\arrow.lib",
      "Lib\\site-packages\\pyarrow\\arrow_acero.dll",
      "Lib\\site-packages\\pyarrow\\arrow_acero.lib",
      "Lib\\site-packages\\pyarrow\\arrow_compute.dll",
      "Lib\\site-packages\\pyarrow\\arrow_compute.lib",
      "Lib\\site-packages\\pyarrow\\arrow_dataset.dll",
      "Lib\\site-packages\\pyarrow\\arrow_dataset.lib",
      "Lib\\site-packages\\pyarrow\\arrow_flight.dll",
      "Lib\\site-packages\\pyarrow\\arrow_flight.lib",
      "Lib\\site-packages\\pyarrow\\arrow_python.dll",
      "Lib\\site-packages\\pyarrow\\arrow_python.lib",
      "Lib\\site-packages\\pyarrow\\arrow_python_flight.dll",
      "Lib\\site-packages\\pyarrow\\arrow_python_flight.lib",
      "Lib\\site-packages\\pyarrow\\arrow_python_parquet_encryption.dll",
      "Lib\\site-packages\\pyarrow\\arrow_python_parquet_encryption.lib",
      "Lib\\site-packages\\pyarrow\\arrow_substrait.dll",
      "Lib\\site-packages\\pyarrow\\arrow_substrait.lib",
      "Lib\\site-packages\\pyarrow\\benchmark.pxi",
      "Lib\\site-packages\\pyarrow\\benchmark.py",
      "Lib\\site-packages\\pyarrow\\builder.pxi",
      "Lib\\site-packages\\pyarrow\\cffi.py",
      "Lib\\site-packages\\pyarrow\\compat.pxi",
      "Lib\\site-packages\\pyarrow\\compute.py",
      "Lib\\site-packages\\pyarrow\\config.pxi",
      "Lib\\site-packages\\pyarrow\\conftest.py",
      "Lib\\site-packages\\pyarrow\\csv.py",
      "Lib\\site-packages\\pyarrow\\cuda.py",
      "Lib\\site-packages\\pyarrow\\dataset.py",
      "Lib\\site-packages\\pyarrow\\device.pxi",
      "Lib\\site-packages\\pyarrow\\error.pxi",
      "Lib\\site-packages\\pyarrow\\feather.py",
      "Lib\\site-packages\\pyarrow\\flight.py",
      "Lib\\site-packages\\pyarrow\\fs.py",
      "Lib\\site-packages\\pyarrow\\gandiva.pyx",
      "Lib\\site-packages\\pyarrow\\include",
      "Lib\\site-packages\\pyarrow\\includes",
      "Lib\\site-packages\\pyarrow\\interchange",
      "Lib\\site-packages\\pyarrow\\io.pxi",
      "Lib\\site-packages\\pyarrow\\ipc.pxi",
      "Lib\\site-packages\\pyarrow\\ipc.py",
      "Lib\\site-packages\\pyarrow\\json.py",
      "Lib\\site-packages\\pyarrow\\jvm.py",
      "Lib\\site-packages\\pyarrow\\lib.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pyarrow\\lib.h",
      "Lib\\site-packages\\pyarrow\\lib.pxd",
      "Lib\\site-packages\\pyarrow\\lib.pyx",
      "Lib\\site-packages\\pyarrow\\lib_api.h",
      "Lib\\site-packages\\pyarrow\\memory.pxi",
      "Lib\\site-packages\\pyarrow\\orc.py",
      "Lib\\site-packages\\pyarrow\\pandas-shim.pxi",
      "Lib\\site-packages\\pyarrow\\pandas_compat.py",
      "Lib\\site-packages\\pyarrow\\parquet",
      "Lib\\site-packages\\pyarrow\\parquet.dll",
      "Lib\\site-packages\\pyarrow\\parquet.lib",
      "Lib\\site-packages\\pyarrow\\public-api.pxi",
      "Lib\\site-packages\\pyarrow\\scalar.pxi",
      "Lib\\site-packages\\pyarrow\\src",
      "Lib\\site-packages\\pyarrow\\substrait.py",
      "Lib\\site-packages\\pyarrow\\table.pxi",
      "Lib\\site-packages\\pyarrow\\tensor.pxi",
      "Lib\\site-packages\\pyarrow\\tests",
      "Lib\\site-packages\\pyarrow\\types.pxi",
      "Lib\\site-packages\\pyarrow\\types.py",
      "Lib\\site-packages\\pyarrow\\util.py",
      "Lib\\site-packages\\pyarrow\\vendored",
      "Lib\\site-packages\\pyarrow\\_acero.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pyarrow\\_acero.pxd",
      "Lib\\site-packages\\pyarrow\\_acero.pyx",
      "Lib\\site-packages\\pyarrow\\_azurefs.pyx",
      "Lib\\site-packages\\pyarrow\\_compute.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pyarrow\\_compute.pxd",
      "Lib\\site-packages\\pyarrow\\_compute.pyx",
      "Lib\\site-packages\\pyarrow\\_compute_docstrings.py",
      "Lib\\site-packages\\pyarrow\\_csv.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pyarrow\\_csv.pxd",
      "Lib\\site-packages\\pyarrow\\_csv.pyx",
      "Lib\\site-packages\\pyarrow\\_cuda.pxd",
      "Lib\\site-packages\\pyarrow\\_cuda.pyx",
      "Lib\\site-packages\\pyarrow\\_dataset.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pyarrow\\_dataset.pxd",
      "Lib\\site-packages\\pyarrow\\_dataset.pyx",
      "Lib\\site-packages\\pyarrow\\_dataset_orc.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pyarrow\\_dataset_orc.pyx",
      "Lib\\site-packages\\pyarrow\\_dataset_parquet.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pyarrow\\_dataset_parquet.pxd",
      "Lib\\site-packages\\pyarrow\\_dataset_parquet.pyx",
      "Lib\\site-packages\\pyarrow\\_dataset_parquet_encryption.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pyarrow\\_dataset_parquet_encryption.pyx",
      "Lib\\site-packages\\pyarrow\\_dlpack.pxi",
      "Lib\\site-packages\\pyarrow\\_feather.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pyarrow\\_feather.pyx",
      "Lib\\site-packages\\pyarrow\\_flight.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pyarrow\\_flight.pyx",
      "Lib\\site-packages\\pyarrow\\_fs.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pyarrow\\_fs.pxd",
      "Lib\\site-packages\\pyarrow\\_fs.pyx",
      "Lib\\site-packages\\pyarrow\\_gcsfs.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pyarrow\\_gcsfs.pyx",
      "Lib\\site-packages\\pyarrow\\_generated_version.py",
      "Lib\\site-packages\\pyarrow\\_hdfs.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pyarrow\\_hdfs.pyx",
      "Lib\\site-packages\\pyarrow\\_json.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pyarrow\\_json.pxd",
      "Lib\\site-packages\\pyarrow\\_json.pyx",
      "Lib\\site-packages\\pyarrow\\_orc.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pyarrow\\_orc.pxd",
      "Lib\\site-packages\\pyarrow\\_orc.pyx",
      "Lib\\site-packages\\pyarrow\\_parquet.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pyarrow\\_parquet.pxd",
      "Lib\\site-packages\\pyarrow\\_parquet.pyx",
      "Lib\\site-packages\\pyarrow\\_parquet_encryption.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pyarrow\\_parquet_encryption.pxd",
      "Lib\\site-packages\\pyarrow\\_parquet_encryption.pyx",
      "Lib\\site-packages\\pyarrow\\_pyarrow_cpp_tests.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pyarrow\\_pyarrow_cpp_tests.pxd",
      "Lib\\site-packages\\pyarrow\\_pyarrow_cpp_tests.pyx",
      "Lib\\site-packages\\pyarrow\\_s3fs.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pyarrow\\_s3fs.pyx",
      "Lib\\site-packages\\pyarrow\\_substrait.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pyarrow\\_substrait.pyx",
      "Lib\\site-packages\\pyarrow\\__init__.pxd",
      "Lib\\site-packages\\pyarrow\\__init__.py",
      "Lib\\site-packages\\pyarrow\\include\\arrow",
      "Lib\\site-packages\\pyarrow\\include\\parquet",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\acero",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\adapters",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\api.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\array",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\array.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\buffer.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\buffer_builder.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\builder.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\c",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\chunked_array.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\chunk_resolver.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\compare.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\compute",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\config.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\csv",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\dataset",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\datum.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\device.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\device_allocation_type_set.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\engine",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\extension",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\extension_type.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\filesystem",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\flight",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\io",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\ipc",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\json",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\memory_pool.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\memory_pool_test.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\pretty_print.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\python",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\record_batch.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\result.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\scalar.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\sparse_tensor.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\status.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\stl.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\stl_allocator.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\stl_iterator.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\table.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\table_builder.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\tensor",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\tensor.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\testing",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\type.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\type_fwd.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\type_traits.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\vendored",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\visitor.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\visitor_generate.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\visit_array_inline.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\visit_data_inline.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\visit_scalar_inline.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\visit_type_inline.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\acero\\accumulation_queue.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\acero\\aggregate_node.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\acero\\api.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\acero\\asof_join_node.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\acero\\backpressure_handler.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\acero\\benchmark_util.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\acero\\bloom_filter.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\acero\\exec_plan.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\acero\\hash_join.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\acero\\hash_join_dict.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\acero\\hash_join_node.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\acero\\map_node.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\acero\\options.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\acero\\order_by_impl.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\acero\\partition_util.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\acero\\query_context.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\acero\\schema_util.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\acero\\task_util.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\acero\\test_nodes.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\acero\\time_series_util.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\acero\\tpch_node.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\acero\\type_fwd.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\acero\\util.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\acero\\visibility.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\adapters\\orc",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\adapters\\tensorflow",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\adapters\\orc\\adapter.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\adapters\\orc\\options.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\adapters\\tensorflow\\convert.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\array\\array_base.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\array\\array_binary.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\array\\array_decimal.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\array\\array_dict.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\array\\array_nested.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\array\\array_primitive.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\array\\array_run_end.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\array\\builder_adaptive.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\array\\builder_base.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\array\\builder_binary.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\array\\builder_decimal.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\array\\builder_dict.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\array\\builder_nested.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\array\\builder_primitive.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\array\\builder_run_end.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\array\\builder_time.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\array\\builder_union.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\array\\concatenate.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\array\\data.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\array\\diff.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\array\\statistics.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\array\\util.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\array\\validate.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\c\\abi.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\c\\bridge.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\c\\dlpack.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\c\\dlpack_abi.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\c\\helpers.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\compute\\api.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\compute\\api_aggregate.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\compute\\api_scalar.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\compute\\api_vector.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\compute\\cast.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\compute\\exec.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\compute\\expression.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\compute\\function.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\compute\\function_options.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\compute\\initialize.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\compute\\kernel.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\compute\\ordering.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\compute\\registry.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\compute\\row",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\compute\\type_fwd.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\compute\\util.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\compute\\visibility.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\compute\\row\\grouper.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\csv\\api.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\csv\\chunker.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\csv\\column_builder.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\csv\\column_decoder.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\csv\\converter.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\csv\\invalid_row.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\csv\\options.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\csv\\parser.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\csv\\reader.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\csv\\test_common.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\csv\\type_fwd.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\csv\\writer.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\dataset\\api.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\dataset\\dataset.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\dataset\\dataset_writer.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\dataset\\discovery.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\dataset\\file_base.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\dataset\\file_csv.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\dataset\\file_ipc.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\dataset\\file_json.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\dataset\\file_orc.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\dataset\\file_parquet.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\dataset\\parquet_encryption_config.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\dataset\\partition.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\dataset\\plan.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\dataset\\projector.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\dataset\\scanner.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\dataset\\type_fwd.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\dataset\\visibility.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\engine\\api.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\engine\\substrait",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\engine\\substrait\\api.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\engine\\substrait\\extension_set.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\engine\\substrait\\extension_types.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\engine\\substrait\\options.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\engine\\substrait\\relation.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\engine\\substrait\\serde.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\engine\\substrait\\test_plan_builder.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\engine\\substrait\\test_util.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\engine\\substrait\\type_fwd.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\engine\\substrait\\util.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\engine\\substrait\\visibility.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\extension\\bool8.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\extension\\fixed_shape_tensor.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\extension\\json.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\extension\\opaque.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\extension\\uuid.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\filesystem\\api.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\filesystem\\azurefs.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\filesystem\\filesystem.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\filesystem\\filesystem_library.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\filesystem\\gcsfs.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\filesystem\\hdfs.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\filesystem\\localfs.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\filesystem\\mockfs.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\filesystem\\path_util.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\filesystem\\s3fs.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\filesystem\\s3_test_util.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\filesystem\\test_util.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\filesystem\\type_fwd.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\flight\\api.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\flight\\client.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\flight\\client_auth.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\flight\\client_cookie_middleware.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\flight\\client_middleware.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\flight\\client_tracing_middleware.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\flight\\middleware.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\flight\\otel_logging.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\flight\\platform.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\flight\\server.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\flight\\server_auth.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\flight\\server_middleware.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\flight\\server_tracing_middleware.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\flight\\test_auth_handlers.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\flight\\test_definitions.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\flight\\test_flight_server.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\flight\\test_util.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\flight\\transport.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\flight\\transport_server.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\flight\\types.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\flight\\types_async.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\flight\\type_fwd.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\flight\\visibility.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\io\\api.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\io\\buffered.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\io\\caching.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\io\\compressed.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\io\\concurrency.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\io\\file.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\io\\hdfs.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\io\\interfaces.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\io\\memory.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\io\\mman.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\io\\slow.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\io\\stdio.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\io\\test_common.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\io\\transform.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\io\\type_fwd.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\ipc\\api.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\ipc\\dictionary.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\ipc\\feather.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\ipc\\message.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\ipc\\options.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\ipc\\reader.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\ipc\\test_common.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\ipc\\type_fwd.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\ipc\\util.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\ipc\\writer.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\json\\api.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\json\\chunked_builder.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\json\\chunker.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\json\\converter.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\json\\from_string.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\json\\object_parser.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\json\\object_writer.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\json\\options.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\json\\parser.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\json\\rapidjson_defs.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\json\\reader.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\json\\test_common.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\json\\type_fwd.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\python\\api.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\python\\arrow_to_pandas.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\python\\async.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\python\\benchmark.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\python\\common.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\python\\csv.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\python\\datetime.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\python\\decimal.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\python\\extension_type.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\python\\filesystem.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\python\\flight.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\python\\gdb.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\python\\helpers.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\python\\inference.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\python\\io.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\python\\ipc.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\python\\iterators.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\python\\lib.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\python\\lib_api.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\python\\numpy_convert.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\python\\numpy_init.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\python\\numpy_interop.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\python\\numpy_to_arrow.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\python\\parquet_encryption.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\python\\platform.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\python\\pyarrow.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\python\\pyarrow_api.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\python\\pyarrow_lib.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\python\\python_test.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\python\\python_to_arrow.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\python\\type_traits.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\python\\udf.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\python\\util.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\python\\vendored",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\python\\visibility.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\python\\vendored\\pythoncapi_compat.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\tensor\\converter.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\testing\\async_test_util.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\testing\\builder.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\testing\\executor_util.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\testing\\extension_type.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\testing\\fixed_width_test_util.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\testing\\future_util.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\testing\\generator.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\testing\\gtest_compat.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\testing\\gtest_util.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\testing\\matchers.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\testing\\math.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\testing\\process.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\testing\\random.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\testing\\uniform_real.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\testing\\util.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\testing\\visibility.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\algorithm.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\aligned_storage.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\align_util.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\async_generator.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\async_generator_fwd.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\async_util.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\base64.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\basic_decimal.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\benchmark_util.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\binary_view_util.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\bitmap.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\bitmap_builders.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\bitmap_generate.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\bitmap_ops.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\bitmap_reader.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\bitmap_visit.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\bitmap_writer.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\bit_block_counter.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\bit_run_reader.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\bit_util.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\byte_size.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\cancel.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\checked_cast.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\compare.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\compression.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\concurrent_map.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\config.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\converter.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\cpu_info.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\crc32.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\debug.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\decimal.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\delimiting.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\endian.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\float16.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\formatting.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\functional.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\future.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\hashing.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\hash_util.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\int_util.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\int_util_overflow.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\io_util.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\iterator.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\key_value_metadata.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\launder.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\list_util.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\logger.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\logging.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\macros.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\math_constants.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\mutex.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\parallel.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\pcg_random.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\prefetch.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\queue.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\range.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\ree_util.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\regex.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\rows_to_batches.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\secure_string.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\simd.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\small_vector.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\span.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\string.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\string_util.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\task_group.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\test_common.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\thread_pool.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\time.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\tracing.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\type_fwd.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\type_traits.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\ubsan.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\union_util.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\unreachable.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\uri.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\utf8.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\value_parsing.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\vector.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\visibility.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\windows_compatibility.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\util\\windows_fixup.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\vendored\\datetime",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\vendored\\datetime.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\vendored\\double-conversion",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\vendored\\pcg",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\vendored\\portable-snippets",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\vendored\\ProducerConsumerQueue.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\vendored\\strptime.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\vendored\\xxhash",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\vendored\\xxhash.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\vendored\\datetime\\date.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\vendored\\datetime\\ios.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\vendored\\datetime\\tz.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\vendored\\datetime\\tz_private.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\vendored\\datetime\\visibility.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\vendored\\double-conversion\\bignum-dtoa.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\vendored\\double-conversion\\bignum.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\vendored\\double-conversion\\cached-powers.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\vendored\\double-conversion\\diy-fp.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\vendored\\double-conversion\\double-conversion.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\vendored\\double-conversion\\double-to-string.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\vendored\\double-conversion\\fast-dtoa.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\vendored\\double-conversion\\fixed-dtoa.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\vendored\\double-conversion\\ieee.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\vendored\\double-conversion\\string-to-double.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\vendored\\double-conversion\\strtod.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\vendored\\double-conversion\\utils.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\vendored\\pcg\\pcg_extras.hpp",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\vendored\\pcg\\pcg_random.hpp",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\vendored\\pcg\\pcg_uint128.hpp",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\vendored\\portable-snippets\\debug-trap.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\vendored\\portable-snippets\\safe-math.h",
      "Lib\\site-packages\\pyarrow\\include\\arrow\\vendored\\xxhash\\xxhash.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\api",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\arrow",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\benchmark_util.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\bloom_filter.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\bloom_filter_reader.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\column_page.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\column_reader.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\column_scanner.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\column_writer.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\encoding.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\encryption",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\exception.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\file_reader.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\file_writer.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\geospatial",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\hasher.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\level_comparison.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\level_comparison_inc.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\level_conversion.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\level_conversion_inc.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\metadata.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\page_index.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\parquet_version.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\platform.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\printer.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\properties.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\schema.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\size_statistics.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\statistics.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\stream_reader.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\stream_writer.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\test_util.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\types.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\type_fwd.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\windows_compatibility.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\windows_fixup.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\xxhasher.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\api\\io.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\api\\reader.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\api\\schema.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\api\\writer.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\arrow\\reader.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\arrow\\schema.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\arrow\\test_util.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\arrow\\writer.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\encryption\\crypto_factory.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\encryption\\encryption.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\encryption\\file_key_material_store.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\encryption\\file_key_unwrapper.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\encryption\\file_key_wrapper.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\encryption\\file_system_key_material_store.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\encryption\\key_encryption_key.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\encryption\\key_material.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\encryption\\key_metadata.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\encryption\\key_toolkit.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\encryption\\kms_client.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\encryption\\kms_client_factory.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\encryption\\local_wrap_kms_client.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\encryption\\test_encryption_util.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\encryption\\test_in_memory_kms.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\encryption\\two_level_cache_with_expiration.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\encryption\\type_fwd.h",
      "Lib\\site-packages\\pyarrow\\include\\parquet\\geospatial\\statistics.h",
      "Lib\\site-packages\\pyarrow\\includes\\common.pxd",
      "Lib\\site-packages\\pyarrow\\includes\\libarrow.pxd",
      "Lib\\site-packages\\pyarrow\\includes\\libarrow_acero.pxd",
      "Lib\\site-packages\\pyarrow\\includes\\libarrow_cuda.pxd",
      "Lib\\site-packages\\pyarrow\\includes\\libarrow_dataset.pxd",
      "Lib\\site-packages\\pyarrow\\includes\\libarrow_dataset_parquet.pxd",
      "Lib\\site-packages\\pyarrow\\includes\\libarrow_feather.pxd",
      "Lib\\site-packages\\pyarrow\\includes\\libarrow_flight.pxd",
      "Lib\\site-packages\\pyarrow\\includes\\libarrow_fs.pxd",
      "Lib\\site-packages\\pyarrow\\includes\\libarrow_python.pxd",
      "Lib\\site-packages\\pyarrow\\includes\\libarrow_substrait.pxd",
      "Lib\\site-packages\\pyarrow\\includes\\libgandiva.pxd",
      "Lib\\site-packages\\pyarrow\\includes\\libparquet.pxd",
      "Lib\\site-packages\\pyarrow\\includes\\libparquet_encryption.pxd",
      "Lib\\site-packages\\pyarrow\\includes\\__init__.pxd",
      "Lib\\site-packages\\pyarrow\\interchange\\buffer.py",
      "Lib\\site-packages\\pyarrow\\interchange\\column.py",
      "Lib\\site-packages\\pyarrow\\interchange\\dataframe.py",
      "Lib\\site-packages\\pyarrow\\interchange\\from_dataframe.py",
      "Lib\\site-packages\\pyarrow\\interchange\\__init__.py",
      "Lib\\site-packages\\pyarrow\\parquet\\core.py",
      "Lib\\site-packages\\pyarrow\\parquet\\encryption.py",
      "Lib\\site-packages\\pyarrow\\parquet\\__init__.py",
      "Lib\\site-packages\\pyarrow\\src\\arrow",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\api.h",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\arrow_to_pandas.cc",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\arrow_to_pandas.h",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\arrow_to_python_internal.h",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\async.h",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\benchmark.cc",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\benchmark.h",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\CMakeLists.txt",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\common.cc",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\common.h",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\csv.cc",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\csv.h",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\datetime.cc",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\datetime.h",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\decimal.cc",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\decimal.h",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\extension_type.cc",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\extension_type.h",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\filesystem.cc",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\filesystem.h",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\flight.cc",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\flight.h",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\gdb.cc",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\gdb.h",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\helpers.cc",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\helpers.h",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\inference.cc",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\inference.h",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\io.cc",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\io.h",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\ipc.cc",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\ipc.h",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\iterators.h",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\numpy_convert.cc",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\numpy_convert.h",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\numpy_init.cc",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\numpy_init.h",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\numpy_internal.h",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\numpy_interop.h",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\numpy_to_arrow.cc",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\numpy_to_arrow.h",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\parquet_encryption.cc",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\parquet_encryption.h",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\platform.h",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\pyarrow.cc",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\pyarrow.h",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\pyarrow_api.h",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\pyarrow_lib.h",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\python_test.cc",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\python_test.h",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\python_to_arrow.cc",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\python_to_arrow.h",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\type_traits.h",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\udf.cc",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\udf.h",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\util.cc",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\util.h",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\vendored",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\visibility.h",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\vendored\\CMakeLists.txt",
      "Lib\\site-packages\\pyarrow\\src\\arrow\\python\\vendored\\pythoncapi_compat.h",
      "Lib\\site-packages\\pyarrow\\tests\\arrow_16597.py",
      "Lib\\site-packages\\pyarrow\\tests\\arrow_39313.py",
      "Lib\\site-packages\\pyarrow\\tests\\arrow_7980.py",
      "Lib\\site-packages\\pyarrow\\tests\\bound_function_visit_strings.pyx",
      "Lib\\site-packages\\pyarrow\\tests\\conftest.py",
      "Lib\\site-packages\\pyarrow\\tests\\data",
      "Lib\\site-packages\\pyarrow\\tests\\extensions.pyx",
      "Lib\\site-packages\\pyarrow\\tests\\interchange",
      "Lib\\site-packages\\pyarrow\\tests\\pandas_examples.py",
      "Lib\\site-packages\\pyarrow\\tests\\pandas_threaded_import.py",
      "Lib\\site-packages\\pyarrow\\tests\\parquet",
      "Lib\\site-packages\\pyarrow\\tests\\pyarrow_cython_example.pyx",
      "Lib\\site-packages\\pyarrow\\tests\\read_record_batch.py",
      "Lib\\site-packages\\pyarrow\\tests\\strategies.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_acero.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_adhoc_memory_leak.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_array.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_builder.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_cffi.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_compute.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_convert_builtin.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_cpp_internals.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_csv.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_cuda.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_cuda_numba_interop.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_cython.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_dataset.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_dataset_encryption.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_deprecations.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_device.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_dlpack.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_exec_plan.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_extension_type.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_feather.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_flight.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_flight_async.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_fs.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_gandiva.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_gdb.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_io.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_ipc.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_json.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_jvm.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_memory.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_misc.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_orc.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_pandas.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_scalars.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_schema.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_sparse_tensor.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_strategies.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_substrait.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_table.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_tensor.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_types.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_udf.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_util.py",
      "Lib\\site-packages\\pyarrow\\tests\\test_without_numpy.py",
      "Lib\\site-packages\\pyarrow\\tests\\util.py",
      "Lib\\site-packages\\pyarrow\\tests\\wsgi_examples.py",
      "Lib\\site-packages\\pyarrow\\tests\\__init__.py",
      "Lib\\site-packages\\pyarrow\\tests\\data\\feather",
      "Lib\\site-packages\\pyarrow\\tests\\data\\orc",
      "Lib\\site-packages\\pyarrow\\tests\\data\\parquet",
      "Lib\\site-packages\\pyarrow\\tests\\data\\feather\\v0.17.0.version.2-compression.lz4.feather",
      "Lib\\site-packages\\pyarrow\\tests\\data\\orc\\decimal.jsn.gz",
      "Lib\\site-packages\\pyarrow\\tests\\data\\orc\\decimal.orc",
      "Lib\\site-packages\\pyarrow\\tests\\data\\orc\\README.md",
      "Lib\\site-packages\\pyarrow\\tests\\data\\orc\\TestOrcFile.emptyFile.jsn.gz",
      "Lib\\site-packages\\pyarrow\\tests\\data\\orc\\TestOrcFile.emptyFile.orc",
      "Lib\\site-packages\\pyarrow\\tests\\data\\orc\\TestOrcFile.test1.jsn.gz",
      "Lib\\site-packages\\pyarrow\\tests\\data\\orc\\TestOrcFile.test1.orc",
      "Lib\\site-packages\\pyarrow\\tests\\data\\orc\\TestOrcFile.testDate1900.jsn.gz",
      "Lib\\site-packages\\pyarrow\\tests\\data\\orc\\TestOrcFile.testDate1900.orc",
      "Lib\\site-packages\\pyarrow\\tests\\data\\parquet\\v0.7.1.all-named-index.parquet",
      "Lib\\site-packages\\pyarrow\\tests\\data\\parquet\\v0.7.1.column-metadata-handling.parquet",
      "Lib\\site-packages\\pyarrow\\tests\\data\\parquet\\v0.7.1.parquet",
      "Lib\\site-packages\\pyarrow\\tests\\data\\parquet\\v0.7.1.some-named-index.parquet",
      "Lib\\site-packages\\pyarrow\\tests\\interchange\\test_conversion.py",
      "Lib\\site-packages\\pyarrow\\tests\\interchange\\test_interchange_spec.py",
      "Lib\\site-packages\\pyarrow\\tests\\interchange\\__init__.py",
      "Lib\\site-packages\\pyarrow\\tests\\parquet\\common.py",
      "Lib\\site-packages\\pyarrow\\tests\\parquet\\conftest.py",
      "Lib\\site-packages\\pyarrow\\tests\\parquet\\encryption.py",
      "Lib\\site-packages\\pyarrow\\tests\\parquet\\test_basic.py",
      "Lib\\site-packages\\pyarrow\\tests\\parquet\\test_compliant_nested_type.py",
      "Lib\\site-packages\\pyarrow\\tests\\parquet\\test_dataset.py",
      "Lib\\site-packages\\pyarrow\\tests\\parquet\\test_data_types.py",
      "Lib\\site-packages\\pyarrow\\tests\\parquet\\test_datetime.py",
      "Lib\\site-packages\\pyarrow\\tests\\parquet\\test_encryption.py",
      "Lib\\site-packages\\pyarrow\\tests\\parquet\\test_metadata.py",
      "Lib\\site-packages\\pyarrow\\tests\\parquet\\test_pandas.py",
      "Lib\\site-packages\\pyarrow\\tests\\parquet\\test_parquet_file.py",
      "Lib\\site-packages\\pyarrow\\tests\\parquet\\test_parquet_writer.py",
      "Lib\\site-packages\\pyarrow\\tests\\parquet\\__init__.py",
      "Lib\\site-packages\\pyarrow\\vendored\\docscrape.py",
      "Lib\\site-packages\\pyarrow\\vendored\\version.py",
      "Lib\\site-packages\\pyarrow\\vendored\\__init__.py",
      "Lib\\site-packages\\pyarrow-21.0.0.dist-info\\DELVEWHEEL",
      "Lib\\site-packages\\pyarrow-21.0.0.dist-info\\INSTALLER",
      "Lib\\site-packages\\pyarrow-21.0.0.dist-info\\LICENSE.txt",
      "Lib\\site-packages\\pyarrow-21.0.0.dist-info\\METADATA",
      "Lib\\site-packages\\pyarrow-21.0.0.dist-info\\NOTICE.txt",
      "Lib\\site-packages\\pyarrow-21.0.0.dist-info\\RECORD",
      "Lib\\site-packages\\pyarrow-21.0.0.dist-info\\top_level.txt",
      "Lib\\site-packages\\pyarrow-21.0.0.dist-info\\WHEEL",
      "Lib\\site-packages\\pyarrow.libs\\msvcp140-a118642f3ae8774fb9dc223e15c4a52e.dll",
      "Lib\\site-packages\\pydantic\\aliases.py",
      "Lib\\site-packages\\pydantic\\alias_generators.py",
      "Lib\\site-packages\\pydantic\\annotated_handlers.py",
      "Lib\\site-packages\\pydantic\\class_validators.py",
      "Lib\\site-packages\\pydantic\\color.py",
      "Lib\\site-packages\\pydantic\\config.py",
      "Lib\\site-packages\\pydantic\\dataclasses.py",
      "Lib\\site-packages\\pydantic\\datetime_parse.py",
      "Lib\\site-packages\\pydantic\\decorator.py",
      "Lib\\site-packages\\pydantic\\deprecated",
      "Lib\\site-packages\\pydantic\\env_settings.py",
      "Lib\\site-packages\\pydantic\\errors.py",
      "Lib\\site-packages\\pydantic\\error_wrappers.py",
      "Lib\\site-packages\\pydantic\\experimental",
      "Lib\\site-packages\\pydantic\\fields.py",
      "Lib\\site-packages\\pydantic\\functional_serializers.py",
      "Lib\\site-packages\\pydantic\\functional_validators.py",
      "Lib\\site-packages\\pydantic\\generics.py",
      "Lib\\site-packages\\pydantic\\json.py",
      "Lib\\site-packages\\pydantic\\json_schema.py",
      "Lib\\site-packages\\pydantic\\main.py",
      "Lib\\site-packages\\pydantic\\mypy.py",
      "Lib\\site-packages\\pydantic\\networks.py",
      "Lib\\site-packages\\pydantic\\parse.py",
      "Lib\\site-packages\\pydantic\\plugin",
      "Lib\\site-packages\\pydantic\\py.typed",
      "Lib\\site-packages\\pydantic\\root_model.py",
      "Lib\\site-packages\\pydantic\\schema.py",
      "Lib\\site-packages\\pydantic\\tools.py",
      "Lib\\site-packages\\pydantic\\types.py",
      "Lib\\site-packages\\pydantic\\type_adapter.py",
      "Lib\\site-packages\\pydantic\\typing.py",
      "Lib\\site-packages\\pydantic\\utils.py",
      "Lib\\site-packages\\pydantic\\v1",
      "Lib\\site-packages\\pydantic\\validate_call_decorator.py",
      "Lib\\site-packages\\pydantic\\validators.py",
      "Lib\\site-packages\\pydantic\\version.py",
      "Lib\\site-packages\\pydantic\\warnings.py",
      "Lib\\site-packages\\pydantic\\_internal",
      "Lib\\site-packages\\pydantic\\_migration.py",
      "Lib\\site-packages\\pydantic\\__init__.py",
      "Lib\\site-packages\\pydantic\\deprecated\\class_validators.py",
      "Lib\\site-packages\\pydantic\\deprecated\\config.py",
      "Lib\\site-packages\\pydantic\\deprecated\\copy_internals.py",
      "Lib\\site-packages\\pydantic\\deprecated\\decorator.py",
      "Lib\\site-packages\\pydantic\\deprecated\\json.py",
      "Lib\\site-packages\\pydantic\\deprecated\\parse.py",
      "Lib\\site-packages\\pydantic\\deprecated\\tools.py",
      "Lib\\site-packages\\pydantic\\deprecated\\__init__.py",
      "Lib\\site-packages\\pydantic\\experimental\\arguments_schema.py",
      "Lib\\site-packages\\pydantic\\experimental\\missing_sentinel.py",
      "Lib\\site-packages\\pydantic\\experimental\\pipeline.py",
      "Lib\\site-packages\\pydantic\\experimental\\__init__.py",
      "Lib\\site-packages\\pydantic\\plugin\\_loader.py",
      "Lib\\site-packages\\pydantic\\plugin\\_schema_validator.py",
      "Lib\\site-packages\\pydantic\\plugin\\__init__.py",
      "Lib\\site-packages\\pydantic\\v1\\annotated_types.py",
      "Lib\\site-packages\\pydantic\\v1\\class_validators.py",
      "Lib\\site-packages\\pydantic\\v1\\color.py",
      "Lib\\site-packages\\pydantic\\v1\\config.py",
      "Lib\\site-packages\\pydantic\\v1\\dataclasses.py",
      "Lib\\site-packages\\pydantic\\v1\\datetime_parse.py",
      "Lib\\site-packages\\pydantic\\v1\\decorator.py",
      "Lib\\site-packages\\pydantic\\v1\\env_settings.py",
      "Lib\\site-packages\\pydantic\\v1\\errors.py",
      "Lib\\site-packages\\pydantic\\v1\\error_wrappers.py",
      "Lib\\site-packages\\pydantic\\v1\\fields.py",
      "Lib\\site-packages\\pydantic\\v1\\generics.py",
      "Lib\\site-packages\\pydantic\\v1\\json.py",
      "Lib\\site-packages\\pydantic\\v1\\main.py",
      "Lib\\site-packages\\pydantic\\v1\\mypy.py",
      "Lib\\site-packages\\pydantic\\v1\\networks.py",
      "Lib\\site-packages\\pydantic\\v1\\parse.py",
      "Lib\\site-packages\\pydantic\\v1\\py.typed",
      "Lib\\site-packages\\pydantic\\v1\\schema.py",
      "Lib\\site-packages\\pydantic\\v1\\tools.py",
      "Lib\\site-packages\\pydantic\\v1\\types.py",
      "Lib\\site-packages\\pydantic\\v1\\typing.py",
      "Lib\\site-packages\\pydantic\\v1\\utils.py",
      "Lib\\site-packages\\pydantic\\v1\\validators.py",
      "Lib\\site-packages\\pydantic\\v1\\version.py",
      "Lib\\site-packages\\pydantic\\v1\\_hypothesis_plugin.py",
      "Lib\\site-packages\\pydantic\\v1\\__init__.py",
      "Lib\\site-packages\\pydantic\\_internal\\_config.py",
      "Lib\\site-packages\\pydantic\\_internal\\_core_metadata.py",
      "Lib\\site-packages\\pydantic\\_internal\\_core_utils.py",
      "Lib\\site-packages\\pydantic\\_internal\\_dataclasses.py",
      "Lib\\site-packages\\pydantic\\_internal\\_decorators.py",
      "Lib\\site-packages\\pydantic\\_internal\\_decorators_v1.py",
      "Lib\\site-packages\\pydantic\\_internal\\_discriminated_union.py",
      "Lib\\site-packages\\pydantic\\_internal\\_docs_extraction.py",
      "Lib\\site-packages\\pydantic\\_internal\\_fields.py",
      "Lib\\site-packages\\pydantic\\_internal\\_forward_ref.py",
      "Lib\\site-packages\\pydantic\\_internal\\_generate_schema.py",
      "Lib\\site-packages\\pydantic\\_internal\\_generics.py",
      "Lib\\site-packages\\pydantic\\_internal\\_git.py",
      "Lib\\site-packages\\pydantic\\_internal\\_import_utils.py",
      "Lib\\site-packages\\pydantic\\_internal\\_internal_dataclass.py",
      "Lib\\site-packages\\pydantic\\_internal\\_known_annotated_metadata.py",
      "Lib\\site-packages\\pydantic\\_internal\\_mock_val_ser.py",
      "Lib\\site-packages\\pydantic\\_internal\\_model_construction.py",
      "Lib\\site-packages\\pydantic\\_internal\\_namespace_utils.py",
      "Lib\\site-packages\\pydantic\\_internal\\_repr.py",
      "Lib\\site-packages\\pydantic\\_internal\\_schema_gather.py",
      "Lib\\site-packages\\pydantic\\_internal\\_schema_generation_shared.py",
      "Lib\\site-packages\\pydantic\\_internal\\_serializers.py",
      "Lib\\site-packages\\pydantic\\_internal\\_signature.py",
      "Lib\\site-packages\\pydantic\\_internal\\_typing_extra.py",
      "Lib\\site-packages\\pydantic\\_internal\\_utils.py",
      "Lib\\site-packages\\pydantic\\_internal\\_validate_call.py",
      "Lib\\site-packages\\pydantic\\_internal\\_validators.py",
      "Lib\\site-packages\\pydantic\\_internal\\__init__.py",
      "Lib\\site-packages\\pydantic-2.12.3.dist-info\\INSTALLER",
      "Lib\\site-packages\\pydantic-2.12.3.dist-info\\licenses",
      "Lib\\site-packages\\pydantic-2.12.3.dist-info\\METADATA",
      "Lib\\site-packages\\pydantic-2.12.3.dist-info\\RECORD",
      "Lib\\site-packages\\pydantic-2.12.3.dist-info\\WHEEL",
      "Lib\\site-packages\\pydantic-2.12.3.dist-info\\licenses\\LICENSE",
      "Lib\\site-packages\\pydantic_core\\core_schema.py",
      "Lib\\site-packages\\pydantic_core\\py.typed",
      "Lib\\site-packages\\pydantic_core\\_pydantic_core.cp313-win_amd64.pyd",
      "Lib\\site-packages\\pydantic_core\\_pydantic_core.pyi",
      "Lib\\site-packages\\pydantic_core\\__init__.py",
      "Lib\\site-packages\\pydantic_core-2.41.4.dist-info\\INSTALLER",
      "Lib\\site-packages\\pydantic_core-2.41.4.dist-info\\licenses",
      "Lib\\site-packages\\pydantic_core-2.41.4.dist-info\\METADATA",
      "Lib\\site-packages\\pydantic_core-2.41.4.dist-info\\RECORD",
      "Lib\\site-packages\\pydantic_core-2.41.4.dist-info\\WHEEL",
      "Lib\\site-packages\\pydantic_core-2.41.4.dist-info\\licenses\\LICENSE",
      "Lib\\site-packages\\pydeck\\.DS_Store",
      "Lib\\site-packages\\pydeck\\bindings",
      "Lib\\site-packages\\pydeck\\data_utils",
      "Lib\\site-packages\\pydeck\\exceptions",
      "Lib\\site-packages\\pydeck\\frontend_semver.py",
      "Lib\\site-packages\\pydeck\\io",
      "Lib\\site-packages\\pydeck\\nbextension",
      "Lib\\site-packages\\pydeck\\settings.py",
      "Lib\\site-packages\\pydeck\\types",
      "Lib\\site-packages\\pydeck\\widget",
      "Lib\\site-packages\\pydeck\\_version.py",
      "Lib\\site-packages\\pydeck\\__init__.py",
      "Lib\\site-packages\\pydeck\\bindings\\base_map_provider.py",
      "Lib\\site-packages\\pydeck\\bindings\\deck.py",
      "Lib\\site-packages\\pydeck\\bindings\\json_tools.py",
      "Lib\\site-packages\\pydeck\\bindings\\layer.py",
      "Lib\\site-packages\\pydeck\\bindings\\light_settings.py",
      "Lib\\site-packages\\pydeck\\bindings\\map_styles.py",
      "Lib\\site-packages\\pydeck\\bindings\\view.py",
      "Lib\\site-packages\\pydeck\\bindings\\view_state.py",
      "Lib\\site-packages\\pydeck\\bindings\\__init__.py",
      "Lib\\site-packages\\pydeck\\data_utils\\binary_transfer.py",
      "Lib\\site-packages\\pydeck\\data_utils\\color_scales.py",
      "Lib\\site-packages\\pydeck\\data_utils\\type_checking.py",
      "Lib\\site-packages\\pydeck\\data_utils\\viewport_helpers.py",
      "Lib\\site-packages\\pydeck\\data_utils\\__init__.py",
      "Lib\\site-packages\\pydeck\\exceptions\\exceptions.py",
      "Lib\\site-packages\\pydeck\\exceptions\\__init__.py",
      "Lib\\site-packages\\pydeck\\io\\.DS_Store",
      "Lib\\site-packages\\pydeck\\io\\html.py",
      "Lib\\site-packages\\pydeck\\io\\templates",
      "Lib\\site-packages\\pydeck\\io\\__init__.py",
      "Lib\\site-packages\\pydeck\\io\\templates\\index.j2",
      "Lib\\site-packages\\pydeck\\io\\templates\\style.j2",
      "Lib\\site-packages\\pydeck\\nbextension\\.DS_Store",
      "Lib\\site-packages\\pydeck\\nbextension\\static",
      "Lib\\site-packages\\pydeck\\nbextension\\__init__.py",
      "Lib\\site-packages\\pydeck\\nbextension\\static\\.DS_Store",
      "Lib\\site-packages\\pydeck\\nbextension\\static\\.gitkeep",
      "Lib\\site-packages\\pydeck\\nbextension\\static\\extensionRequires.js",
      "Lib\\site-packages\\pydeck\\nbextension\\static\\index.js",
      "Lib\\site-packages\\pydeck\\nbextension\\static\\index.js.map",
      "Lib\\site-packages\\pydeck\\types\\base.py",
      "Lib\\site-packages\\pydeck\\types\\function.py",
      "Lib\\site-packages\\pydeck\\types\\image.py",
      "Lib\\site-packages\\pydeck\\types\\string.py",
      "Lib\\site-packages\\pydeck\\types\\__init__.py",
      "Lib\\site-packages\\pydeck\\widget\\debounce.py",
      "Lib\\site-packages\\pydeck\\widget\\widget.py",
      "Lib\\site-packages\\pydeck\\widget\\_frontend.py",
      "Lib\\site-packages\\pydeck\\widget\\__init__.py",
      "Lib\\site-packages\\pydeck-0.9.1.dist-info\\INSTALLER",
      "Lib\\site-packages\\pydeck-0.9.1.dist-info\\LICENSE.txt",
      "Lib\\site-packages\\pydeck-0.9.1.dist-info\\METADATA",
      "Lib\\site-packages\\pydeck-0.9.1.dist-info\\RECORD",
      "Lib\\site-packages\\pydeck-0.9.1.dist-info\\top_level.txt",
      "Lib\\site-packages\\pydeck-0.9.1.dist-info\\WHEEL",
      "Lib\\site-packages\\python_dateutil-2.9.0.post0.dist-info\\INSTALLER",
      "Lib\\site-packages\\python_dateutil-2.9.0.post0.dist-info\\LICENSE",
      "Lib\\site-packages\\python_dateutil-2.9.0.post0.dist-info\\METADATA",
      "Lib\\site-packages\\python_dateutil-2.9.0.post0.dist-info\\RECORD",
      "Lib\\site-packages\\python_dateutil-2.9.0.post0.dist-info\\top_level.txt",
      "Lib\\site-packages\\python_dateutil-2.9.0.post0.dist-info\\WHEEL",
      "Lib\\site-packages\\python_dateutil-2.9.0.post0.dist-info\\zip-safe",
      "Lib\\site-packages\\python_dotenv-1.1.1.dist-info\\entry_points.txt",
      "Lib\\site-packages\\python_dotenv-1.1.1.dist-info\\INSTALLER",
      "Lib\\site-packages\\python_dotenv-1.1.1.dist-info\\licenses",
      "Lib\\site-packages\\python_dotenv-1.1.1.dist-info\\METADATA",
      "Lib\\site-packages\\python_dotenv-1.1.1.dist-info\\RECORD",
      "Lib\\site-packages\\python_dotenv-1.1.1.dist-info\\REQUESTED",
      "Lib\\site-packages\\python_dotenv-1.1.1.dist-info\\top_level.txt",
      "Lib\\site-packages\\python_dotenv-1.1.1.dist-info\\WHEEL",
      "Lib\\site-packages\\python_dotenv-1.1.1.dist-info\\licenses\\LICENSE",
      "Lib\\site-packages\\pytz\\exceptions.py",
      "Lib\\site-packages\\pytz\\lazy.py",
      "Lib\\site-packages\\pytz\\reference.py",
      "Lib\\site-packages\\pytz\\tzfile.py",
      "Lib\\site-packages\\pytz\\tzinfo.py",
      "Lib\\site-packages\\pytz\\zoneinfo",
      "Lib\\site-packages\\pytz\\__init__.py",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa",
      "Lib\\site-packages\\pytz\\zoneinfo\\America",
      "Lib\\site-packages\\pytz\\zoneinfo\\Antarctica",
      "Lib\\site-packages\\pytz\\zoneinfo\\Arctic",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia",
      "Lib\\site-packages\\pytz\\zoneinfo\\Atlantic",
      "Lib\\site-packages\\pytz\\zoneinfo\\Australia",
      "Lib\\site-packages\\pytz\\zoneinfo\\Brazil",
      "Lib\\site-packages\\pytz\\zoneinfo\\Canada",
      "Lib\\site-packages\\pytz\\zoneinfo\\CET",
      "Lib\\site-packages\\pytz\\zoneinfo\\Chile",
      "Lib\\site-packages\\pytz\\zoneinfo\\CST6CDT",
      "Lib\\site-packages\\pytz\\zoneinfo\\Cuba",
      "Lib\\site-packages\\pytz\\zoneinfo\\EET",
      "Lib\\site-packages\\pytz\\zoneinfo\\Egypt",
      "Lib\\site-packages\\pytz\\zoneinfo\\Eire",
      "Lib\\site-packages\\pytz\\zoneinfo\\EST",
      "Lib\\site-packages\\pytz\\zoneinfo\\EST5EDT",
      "Lib\\site-packages\\pytz\\zoneinfo\\Etc",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe",
      "Lib\\site-packages\\pytz\\zoneinfo\\Factory",
      "Lib\\site-packages\\pytz\\zoneinfo\\GB",
      "Lib\\site-packages\\pytz\\zoneinfo\\GB-Eire",
      "Lib\\site-packages\\pytz\\zoneinfo\\GMT",
      "Lib\\site-packages\\pytz\\zoneinfo\\GMT+0",
      "Lib\\site-packages\\pytz\\zoneinfo\\GMT-0",
      "Lib\\site-packages\\pytz\\zoneinfo\\GMT0",
      "Lib\\site-packages\\pytz\\zoneinfo\\Greenwich",
      "Lib\\site-packages\\pytz\\zoneinfo\\Hongkong",
      "Lib\\site-packages\\pytz\\zoneinfo\\HST",
      "Lib\\site-packages\\pytz\\zoneinfo\\Iceland",
      "Lib\\site-packages\\pytz\\zoneinfo\\Indian",
      "Lib\\site-packages\\pytz\\zoneinfo\\Iran",
      "Lib\\site-packages\\pytz\\zoneinfo\\iso3166.tab",
      "Lib\\site-packages\\pytz\\zoneinfo\\Israel",
      "Lib\\site-packages\\pytz\\zoneinfo\\Jamaica",
      "Lib\\site-packages\\pytz\\zoneinfo\\Japan",
      "Lib\\site-packages\\pytz\\zoneinfo\\Kwajalein",
      "Lib\\site-packages\\pytz\\zoneinfo\\leapseconds",
      "Lib\\site-packages\\pytz\\zoneinfo\\Libya",
      "Lib\\site-packages\\pytz\\zoneinfo\\MET",
      "Lib\\site-packages\\pytz\\zoneinfo\\Mexico",
      "Lib\\site-packages\\pytz\\zoneinfo\\MST",
      "Lib\\site-packages\\pytz\\zoneinfo\\MST7MDT",
      "Lib\\site-packages\\pytz\\zoneinfo\\Navajo",
      "Lib\\site-packages\\pytz\\zoneinfo\\NZ",
      "Lib\\site-packages\\pytz\\zoneinfo\\NZ-CHAT",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific",
      "Lib\\site-packages\\pytz\\zoneinfo\\Poland",
      "Lib\\site-packages\\pytz\\zoneinfo\\Portugal",
      "Lib\\site-packages\\pytz\\zoneinfo\\PRC",
      "Lib\\site-packages\\pytz\\zoneinfo\\PST8PDT",
      "Lib\\site-packages\\pytz\\zoneinfo\\ROC",
      "Lib\\site-packages\\pytz\\zoneinfo\\ROK",
      "Lib\\site-packages\\pytz\\zoneinfo\\Singapore",
      "Lib\\site-packages\\pytz\\zoneinfo\\Turkey",
      "Lib\\site-packages\\pytz\\zoneinfo\\tzdata.zi",
      "Lib\\site-packages\\pytz\\zoneinfo\\UCT",
      "Lib\\site-packages\\pytz\\zoneinfo\\Universal",
      "Lib\\site-packages\\pytz\\zoneinfo\\US",
      "Lib\\site-packages\\pytz\\zoneinfo\\UTC",
      "Lib\\site-packages\\pytz\\zoneinfo\\W-SU",
      "Lib\\site-packages\\pytz\\zoneinfo\\WET",
      "Lib\\site-packages\\pytz\\zoneinfo\\zone.tab",
      "Lib\\site-packages\\pytz\\zoneinfo\\zone1970.tab",
      "Lib\\site-packages\\pytz\\zoneinfo\\zonenow.tab",
      "Lib\\site-packages\\pytz\\zoneinfo\\Zulu",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Abidjan",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Accra",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Addis_Ababa",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Algiers",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Asmara",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Asmera",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Bamako",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Bangui",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Banjul",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Bissau",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Blantyre",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Brazzaville",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Bujumbura",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Cairo",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Casablanca",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Ceuta",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Conakry",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Dakar",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Dar_es_Salaam",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Djibouti",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Douala",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\El_Aaiun",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Freetown",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Gaborone",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Harare",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Johannesburg",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Juba",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Kampala",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Khartoum",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Kigali",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Kinshasa",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Lagos",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Libreville",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Lome",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Luanda",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Lubumbashi",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Lusaka",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Malabo",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Maputo",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Maseru",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Mbabane",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Mogadishu",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Monrovia",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Nairobi",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Ndjamena",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Niamey",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Nouakchott",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Ouagadougou",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Porto-Novo",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Sao_Tome",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Timbuktu",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Tripoli",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Tunis",
      "Lib\\site-packages\\pytz\\zoneinfo\\Africa\\Windhoek",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Adak",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Anchorage",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Anguilla",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Antigua",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Araguaina",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Argentina",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Aruba",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Asuncion",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Atikokan",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Atka",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Bahia",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Bahia_Banderas",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Barbados",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Belem",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Belize",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Blanc-Sablon",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Boa_Vista",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Bogota",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Boise",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Buenos_Aires",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Cambridge_Bay",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Campo_Grande",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Cancun",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Caracas",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Catamarca",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Cayenne",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Cayman",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Chicago",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Chihuahua",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Ciudad_Juarez",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Coral_Harbour",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Cordoba",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Costa_Rica",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Coyhaique",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Creston",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Cuiaba",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Curacao",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Danmarkshavn",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Dawson",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Dawson_Creek",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Denver",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Detroit",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Dominica",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Edmonton",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Eirunepe",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\El_Salvador",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Ensenada",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Fortaleza",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Fort_Nelson",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Fort_Wayne",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Glace_Bay",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Godthab",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Goose_Bay",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Grand_Turk",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Grenada",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Guadeloupe",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Guatemala",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Guayaquil",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Guyana",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Halifax",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Havana",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Hermosillo",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Indiana",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Indianapolis",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Inuvik",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Iqaluit",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Jamaica",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Jujuy",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Juneau",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Kentucky",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Knox_IN",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Kralendijk",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\La_Paz",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Lima",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Los_Angeles",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Louisville",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Lower_Princes",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Maceio",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Managua",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Manaus",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Marigot",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Martinique",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Matamoros",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Mazatlan",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Mendoza",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Menominee",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Merida",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Metlakatla",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Mexico_City",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Miquelon",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Moncton",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Monterrey",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Montevideo",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Montreal",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Montserrat",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Nassau",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\New_York",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Nipigon",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Nome",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Noronha",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\North_Dakota",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Nuuk",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Ojinaga",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Panama",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Pangnirtung",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Paramaribo",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Phoenix",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Port-au-Prince",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Porto_Acre",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Porto_Velho",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Port_of_Spain",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Puerto_Rico",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Punta_Arenas",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Rainy_River",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Rankin_Inlet",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Recife",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Regina",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Resolute",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Rio_Branco",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Rosario",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Santarem",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Santa_Isabel",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Santiago",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Santo_Domingo",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Sao_Paulo",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Scoresbysund",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Shiprock",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Sitka",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\St_Barthelemy",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\St_Johns",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\St_Kitts",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\St_Lucia",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\St_Thomas",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\St_Vincent",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Swift_Current",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Tegucigalpa",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Thule",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Thunder_Bay",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Tijuana",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Toronto",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Tortola",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Vancouver",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Virgin",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Whitehorse",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Winnipeg",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Yakutat",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Yellowknife",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Argentina\\Buenos_Aires",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Argentina\\Catamarca",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Argentina\\ComodRivadavia",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Argentina\\Cordoba",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Argentina\\Jujuy",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Argentina\\La_Rioja",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Argentina\\Mendoza",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Argentina\\Rio_Gallegos",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Argentina\\Salta",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Argentina\\San_Juan",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Argentina\\San_Luis",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Argentina\\Tucuman",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Argentina\\Ushuaia",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Indiana\\Indianapolis",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Indiana\\Knox",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Indiana\\Marengo",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Indiana\\Petersburg",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Indiana\\Tell_City",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Indiana\\Vevay",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Indiana\\Vincennes",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Indiana\\Winamac",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Kentucky\\Louisville",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\Kentucky\\Monticello",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\North_Dakota\\Beulah",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\North_Dakota\\Center",
      "Lib\\site-packages\\pytz\\zoneinfo\\America\\North_Dakota\\New_Salem",
      "Lib\\site-packages\\pytz\\zoneinfo\\Antarctica\\Casey",
      "Lib\\site-packages\\pytz\\zoneinfo\\Antarctica\\Davis",
      "Lib\\site-packages\\pytz\\zoneinfo\\Antarctica\\DumontDUrville",
      "Lib\\site-packages\\pytz\\zoneinfo\\Antarctica\\Macquarie",
      "Lib\\site-packages\\pytz\\zoneinfo\\Antarctica\\Mawson",
      "Lib\\site-packages\\pytz\\zoneinfo\\Antarctica\\McMurdo",
      "Lib\\site-packages\\pytz\\zoneinfo\\Antarctica\\Palmer",
      "Lib\\site-packages\\pytz\\zoneinfo\\Antarctica\\Rothera",
      "Lib\\site-packages\\pytz\\zoneinfo\\Antarctica\\South_Pole",
      "Lib\\site-packages\\pytz\\zoneinfo\\Antarctica\\Syowa",
      "Lib\\site-packages\\pytz\\zoneinfo\\Antarctica\\Troll",
      "Lib\\site-packages\\pytz\\zoneinfo\\Antarctica\\Vostok",
      "Lib\\site-packages\\pytz\\zoneinfo\\Arctic\\Longyearbyen",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Aden",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Almaty",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Amman",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Anadyr",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Aqtau",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Aqtobe",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Ashgabat",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Ashkhabad",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Atyrau",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Baghdad",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Bahrain",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Baku",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Bangkok",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Barnaul",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Beirut",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Bishkek",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Brunei",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Calcutta",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Chita",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Choibalsan",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Chongqing",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Chungking",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Colombo",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Dacca",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Damascus",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Dhaka",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Dili",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Dubai",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Dushanbe",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Famagusta",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Gaza",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Harbin",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Hebron",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Hong_Kong",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Hovd",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Ho_Chi_Minh",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Irkutsk",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Istanbul",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Jakarta",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Jayapura",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Jerusalem",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Kabul",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Kamchatka",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Karachi",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Kashgar",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Kathmandu",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Katmandu",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Khandyga",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Kolkata",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Krasnoyarsk",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Kuala_Lumpur",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Kuching",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Kuwait",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Macao",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Macau",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Magadan",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Makassar",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Manila",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Muscat",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Nicosia",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Novokuznetsk",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Novosibirsk",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Omsk",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Oral",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Phnom_Penh",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Pontianak",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Pyongyang",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Qatar",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Qostanay",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Qyzylorda",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Rangoon",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Riyadh",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Saigon",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Sakhalin",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Samarkand",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Seoul",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Shanghai",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Singapore",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Srednekolymsk",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Taipei",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Tashkent",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Tbilisi",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Tehran",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Tel_Aviv",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Thimbu",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Thimphu",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Tokyo",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Tomsk",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Ujung_Pandang",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Ulaanbaatar",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Ulan_Bator",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Urumqi",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Ust-Nera",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Vientiane",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Vladivostok",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Yakutsk",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Yangon",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Yekaterinburg",
      "Lib\\site-packages\\pytz\\zoneinfo\\Asia\\Yerevan",
      "Lib\\site-packages\\pytz\\zoneinfo\\Atlantic\\Azores",
      "Lib\\site-packages\\pytz\\zoneinfo\\Atlantic\\Bermuda",
      "Lib\\site-packages\\pytz\\zoneinfo\\Atlantic\\Canary",
      "Lib\\site-packages\\pytz\\zoneinfo\\Atlantic\\Cape_Verde",
      "Lib\\site-packages\\pytz\\zoneinfo\\Atlantic\\Faeroe",
      "Lib\\site-packages\\pytz\\zoneinfo\\Atlantic\\Faroe",
      "Lib\\site-packages\\pytz\\zoneinfo\\Atlantic\\Jan_Mayen",
      "Lib\\site-packages\\pytz\\zoneinfo\\Atlantic\\Madeira",
      "Lib\\site-packages\\pytz\\zoneinfo\\Atlantic\\Reykjavik",
      "Lib\\site-packages\\pytz\\zoneinfo\\Atlantic\\South_Georgia",
      "Lib\\site-packages\\pytz\\zoneinfo\\Atlantic\\Stanley",
      "Lib\\site-packages\\pytz\\zoneinfo\\Atlantic\\St_Helena",
      "Lib\\site-packages\\pytz\\zoneinfo\\Australia\\ACT",
      "Lib\\site-packages\\pytz\\zoneinfo\\Australia\\Adelaide",
      "Lib\\site-packages\\pytz\\zoneinfo\\Australia\\Brisbane",
      "Lib\\site-packages\\pytz\\zoneinfo\\Australia\\Broken_Hill",
      "Lib\\site-packages\\pytz\\zoneinfo\\Australia\\Canberra",
      "Lib\\site-packages\\pytz\\zoneinfo\\Australia\\Currie",
      "Lib\\site-packages\\pytz\\zoneinfo\\Australia\\Darwin",
      "Lib\\site-packages\\pytz\\zoneinfo\\Australia\\Eucla",
      "Lib\\site-packages\\pytz\\zoneinfo\\Australia\\Hobart",
      "Lib\\site-packages\\pytz\\zoneinfo\\Australia\\LHI",
      "Lib\\site-packages\\pytz\\zoneinfo\\Australia\\Lindeman",
      "Lib\\site-packages\\pytz\\zoneinfo\\Australia\\Lord_Howe",
      "Lib\\site-packages\\pytz\\zoneinfo\\Australia\\Melbourne",
      "Lib\\site-packages\\pytz\\zoneinfo\\Australia\\North",
      "Lib\\site-packages\\pytz\\zoneinfo\\Australia\\NSW",
      "Lib\\site-packages\\pytz\\zoneinfo\\Australia\\Perth",
      "Lib\\site-packages\\pytz\\zoneinfo\\Australia\\Queensland",
      "Lib\\site-packages\\pytz\\zoneinfo\\Australia\\South",
      "Lib\\site-packages\\pytz\\zoneinfo\\Australia\\Sydney",
      "Lib\\site-packages\\pytz\\zoneinfo\\Australia\\Tasmania",
      "Lib\\site-packages\\pytz\\zoneinfo\\Australia\\Victoria",
      "Lib\\site-packages\\pytz\\zoneinfo\\Australia\\West",
      "Lib\\site-packages\\pytz\\zoneinfo\\Australia\\Yancowinna",
      "Lib\\site-packages\\pytz\\zoneinfo\\Brazil\\Acre",
      "Lib\\site-packages\\pytz\\zoneinfo\\Brazil\\DeNoronha",
      "Lib\\site-packages\\pytz\\zoneinfo\\Brazil\\East",
      "Lib\\site-packages\\pytz\\zoneinfo\\Brazil\\West",
      "Lib\\site-packages\\pytz\\zoneinfo\\Canada\\Atlantic",
      "Lib\\site-packages\\pytz\\zoneinfo\\Canada\\Central",
      "Lib\\site-packages\\pytz\\zoneinfo\\Canada\\Eastern",
      "Lib\\site-packages\\pytz\\zoneinfo\\Canada\\Mountain",
      "Lib\\site-packages\\pytz\\zoneinfo\\Canada\\Newfoundland",
      "Lib\\site-packages\\pytz\\zoneinfo\\Canada\\Pacific",
      "Lib\\site-packages\\pytz\\zoneinfo\\Canada\\Saskatchewan",
      "Lib\\site-packages\\pytz\\zoneinfo\\Canada\\Yukon",
      "Lib\\site-packages\\pytz\\zoneinfo\\Chile\\Continental",
      "Lib\\site-packages\\pytz\\zoneinfo\\Chile\\EasterIsland",
      "Lib\\site-packages\\pytz\\zoneinfo\\Etc\\GMT",
      "Lib\\site-packages\\pytz\\zoneinfo\\Etc\\GMT+0",
      "Lib\\site-packages\\pytz\\zoneinfo\\Etc\\GMT+1",
      "Lib\\site-packages\\pytz\\zoneinfo\\Etc\\GMT+10",
      "Lib\\site-packages\\pytz\\zoneinfo\\Etc\\GMT+11",
      "Lib\\site-packages\\pytz\\zoneinfo\\Etc\\GMT+12",
      "Lib\\site-packages\\pytz\\zoneinfo\\Etc\\GMT+2",
      "Lib\\site-packages\\pytz\\zoneinfo\\Etc\\GMT+3",
      "Lib\\site-packages\\pytz\\zoneinfo\\Etc\\GMT+4",
      "Lib\\site-packages\\pytz\\zoneinfo\\Etc\\GMT+5",
      "Lib\\site-packages\\pytz\\zoneinfo\\Etc\\GMT+6",
      "Lib\\site-packages\\pytz\\zoneinfo\\Etc\\GMT+7",
      "Lib\\site-packages\\pytz\\zoneinfo\\Etc\\GMT+8",
      "Lib\\site-packages\\pytz\\zoneinfo\\Etc\\GMT+9",
      "Lib\\site-packages\\pytz\\zoneinfo\\Etc\\GMT-0",
      "Lib\\site-packages\\pytz\\zoneinfo\\Etc\\GMT-1",
      "Lib\\site-packages\\pytz\\zoneinfo\\Etc\\GMT-10",
      "Lib\\site-packages\\pytz\\zoneinfo\\Etc\\GMT-11",
      "Lib\\site-packages\\pytz\\zoneinfo\\Etc\\GMT-12",
      "Lib\\site-packages\\pytz\\zoneinfo\\Etc\\GMT-13",
      "Lib\\site-packages\\pytz\\zoneinfo\\Etc\\GMT-14",
      "Lib\\site-packages\\pytz\\zoneinfo\\Etc\\GMT-2",
      "Lib\\site-packages\\pytz\\zoneinfo\\Etc\\GMT-3",
      "Lib\\site-packages\\pytz\\zoneinfo\\Etc\\GMT-4",
      "Lib\\site-packages\\pytz\\zoneinfo\\Etc\\GMT-5",
      "Lib\\site-packages\\pytz\\zoneinfo\\Etc\\GMT-6",
      "Lib\\site-packages\\pytz\\zoneinfo\\Etc\\GMT-7",
      "Lib\\site-packages\\pytz\\zoneinfo\\Etc\\GMT-8",
      "Lib\\site-packages\\pytz\\zoneinfo\\Etc\\GMT-9",
      "Lib\\site-packages\\pytz\\zoneinfo\\Etc\\GMT0",
      "Lib\\site-packages\\pytz\\zoneinfo\\Etc\\Greenwich",
      "Lib\\site-packages\\pytz\\zoneinfo\\Etc\\UCT",
      "Lib\\site-packages\\pytz\\zoneinfo\\Etc\\Universal",
      "Lib\\site-packages\\pytz\\zoneinfo\\Etc\\UTC",
      "Lib\\site-packages\\pytz\\zoneinfo\\Etc\\Zulu",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Amsterdam",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Andorra",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Astrakhan",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Athens",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Belfast",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Belgrade",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Berlin",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Bratislava",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Brussels",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Bucharest",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Budapest",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Busingen",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Chisinau",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Copenhagen",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Dublin",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Gibraltar",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Guernsey",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Helsinki",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Isle_of_Man",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Istanbul",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Jersey",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Kaliningrad",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Kiev",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Kirov",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Kyiv",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Lisbon",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Ljubljana",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\London",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Luxembourg",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Madrid",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Malta",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Mariehamn",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Minsk",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Monaco",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Moscow",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Nicosia",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Oslo",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Paris",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Podgorica",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Prague",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Riga",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Rome",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Samara",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\San_Marino",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Sarajevo",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Saratov",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Simferopol",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Skopje",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Sofia",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Stockholm",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Tallinn",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Tirane",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Tiraspol",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Ulyanovsk",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Uzhgorod",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Vaduz",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Vatican",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Vienna",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Vilnius",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Volgograd",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Warsaw",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Zagreb",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Zaporozhye",
      "Lib\\site-packages\\pytz\\zoneinfo\\Europe\\Zurich",
      "Lib\\site-packages\\pytz\\zoneinfo\\Indian\\Antananarivo",
      "Lib\\site-packages\\pytz\\zoneinfo\\Indian\\Chagos",
      "Lib\\site-packages\\pytz\\zoneinfo\\Indian\\Christmas",
      "Lib\\site-packages\\pytz\\zoneinfo\\Indian\\Cocos",
      "Lib\\site-packages\\pytz\\zoneinfo\\Indian\\Comoro",
      "Lib\\site-packages\\pytz\\zoneinfo\\Indian\\Kerguelen",
      "Lib\\site-packages\\pytz\\zoneinfo\\Indian\\Mahe",
      "Lib\\site-packages\\pytz\\zoneinfo\\Indian\\Maldives",
      "Lib\\site-packages\\pytz\\zoneinfo\\Indian\\Mauritius",
      "Lib\\site-packages\\pytz\\zoneinfo\\Indian\\Mayotte",
      "Lib\\site-packages\\pytz\\zoneinfo\\Indian\\Reunion",
      "Lib\\site-packages\\pytz\\zoneinfo\\Mexico\\BajaNorte",
      "Lib\\site-packages\\pytz\\zoneinfo\\Mexico\\BajaSur",
      "Lib\\site-packages\\pytz\\zoneinfo\\Mexico\\General",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Apia",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Auckland",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Bougainville",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Chatham",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Chuuk",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Easter",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Efate",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Enderbury",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Fakaofo",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Fiji",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Funafuti",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Galapagos",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Gambier",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Guadalcanal",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Guam",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Honolulu",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Johnston",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Kanton",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Kiritimati",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Kosrae",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Kwajalein",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Majuro",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Marquesas",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Midway",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Nauru",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Niue",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Norfolk",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Noumea",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Pago_Pago",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Palau",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Pitcairn",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Pohnpei",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Ponape",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Port_Moresby",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Rarotonga",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Saipan",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Samoa",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Tahiti",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Tarawa",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Tongatapu",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Truk",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Wake",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Wallis",
      "Lib\\site-packages\\pytz\\zoneinfo\\Pacific\\Yap",
      "Lib\\site-packages\\pytz\\zoneinfo\\US\\Alaska",
      "Lib\\site-packages\\pytz\\zoneinfo\\US\\Aleutian",
      "Lib\\site-packages\\pytz\\zoneinfo\\US\\Arizona",
      "Lib\\site-packages\\pytz\\zoneinfo\\US\\Central",
      "Lib\\site-packages\\pytz\\zoneinfo\\US\\East-Indiana",
      "Lib\\site-packages\\pytz\\zoneinfo\\US\\Eastern",
      "Lib\\site-packages\\pytz\\zoneinfo\\US\\Hawaii",
      "Lib\\site-packages\\pytz\\zoneinfo\\US\\Indiana-Starke",
      "Lib\\site-packages\\pytz\\zoneinfo\\US\\Michigan",
      "Lib\\site-packages\\pytz\\zoneinfo\\US\\Mountain",
      "Lib\\site-packages\\pytz\\zoneinfo\\US\\Pacific",
      "Lib\\site-packages\\pytz\\zoneinfo\\US\\Samoa",
      "Lib\\site-packages\\pytz-2025.2.dist-info\\INSTALLER",
      "Lib\\site-packages\\pytz-2025.2.dist-info\\LICENSE.txt",
      "Lib\\site-packages\\pytz-2025.2.dist-info\\METADATA",
      "Lib\\site-packages\\pytz-2025.2.dist-info\\RECORD",
      "Lib\\site-packages\\pytz-2025.2.dist-info\\top_level.txt",
      "Lib\\site-packages\\pytz-2025.2.dist-info\\WHEEL",
      "Lib\\site-packages\\pytz-2025.2.dist-info\\zip-safe",
      "Lib\\site-packages\\referencing\\exceptions.py",
      "Lib\\site-packages\\referencing\\jsonschema.py",
      "Lib\\site-packages\\referencing\\py.typed",
      "Lib\\site-packages\\referencing\\retrieval.py",
      "Lib\\site-packages\\referencing\\tests",
      "Lib\\site-packages\\referencing\\typing.py",
      "Lib\\site-packages\\referencing\\_attrs.py",
      "Lib\\site-packages\\referencing\\_attrs.pyi",
      "Lib\\site-packages\\referencing\\_core.py",
      "Lib\\site-packages\\referencing\\__init__.py",
      "Lib\\site-packages\\referencing\\tests\\test_core.py",
      "Lib\\site-packages\\referencing\\tests\\test_exceptions.py",
      "Lib\\site-packages\\referencing\\tests\\test_jsonschema.py",
      "Lib\\site-packages\\referencing\\tests\\test_referencing_suite.py",
      "Lib\\site-packages\\referencing\\tests\\test_retrieval.py",
      "Lib\\site-packages\\referencing\\tests\\__init__.py",
      "Lib\\site-packages\\referencing-0.37.0.dist-info\\INSTALLER",
      "Lib\\site-packages\\referencing-0.37.0.dist-info\\licenses",
      "Lib\\site-packages\\referencing-0.37.0.dist-info\\METADATA",
      "Lib\\site-packages\\referencing-0.37.0.dist-info\\RECORD",
      "Lib\\site-packages\\referencing-0.37.0.dist-info\\WHEEL",
      "Lib\\site-packages\\referencing-0.37.0.dist-info\\licenses\\COPYING",
      "Lib\\site-packages\\requests\\adapters.py",
      "Lib\\site-packages\\requests\\api.py",
      "Lib\\site-packages\\requests\\auth.py",
      "Lib\\site-packages\\requests\\certs.py",
      "Lib\\site-packages\\requests\\compat.py",
      "Lib\\site-packages\\requests\\cookies.py",
      "Lib\\site-packages\\requests\\exceptions.py",
      "Lib\\site-packages\\requests\\help.py",
      "Lib\\site-packages\\requests\\hooks.py",
      "Lib\\site-packages\\requests\\models.py",
      "Lib\\site-packages\\requests\\packages.py",
      "Lib\\site-packages\\requests\\sessions.py",
      "Lib\\site-packages\\requests\\status_codes.py",
      "Lib\\site-packages\\requests\\structures.py",
      "Lib\\site-packages\\requests\\utils.py",
      "Lib\\site-packages\\requests\\_internal_utils.py",
      "Lib\\site-packages\\requests\\__init__.py",
      "Lib\\site-packages\\requests\\__version__.py",
      "Lib\\site-packages\\requests-2.32.5.dist-info\\INSTALLER",
      "Lib\\site-packages\\requests-2.32.5.dist-info\\licenses",
      "Lib\\site-packages\\requests-2.32.5.dist-info\\METADATA",
      "Lib\\site-packages\\requests-2.32.5.dist-info\\RECORD",
      "Lib\\site-packages\\requests-2.32.5.dist-info\\top_level.txt",
      "Lib\\site-packages\\requests-2.32.5.dist-info\\WHEEL",
      "Lib\\site-packages\\requests-2.32.5.dist-info\\licenses\\LICENSE",
      "Lib\\site-packages\\rpds\\py.typed",
      "Lib\\site-packages\\rpds\\rpds.cp313-win_amd64.pyd",
      "Lib\\site-packages\\rpds\\__init__.py",
      "Lib\\site-packages\\rpds\\__init__.pyi",
      "Lib\\site-packages\\rpds_py-0.27.1.dist-info\\INSTALLER",
      "Lib\\site-packages\\rpds_py-0.27.1.dist-info\\licenses",
      "Lib\\site-packages\\rpds_py-0.27.1.dist-info\\METADATA",
      "Lib\\site-packages\\rpds_py-0.27.1.dist-info\\RECORD",
      "Lib\\site-packages\\rpds_py-0.27.1.dist-info\\WHEEL",
      "Lib\\site-packages\\rpds_py-0.27.1.dist-info\\licenses\\LICENSE",
      "Lib\\site-packages\\six-1.17.0.dist-info\\INSTALLER",
      "Lib\\site-packages\\six-1.17.0.dist-info\\LICENSE",
      "Lib\\site-packages\\six-1.17.0.dist-info\\METADATA",
      "Lib\\site-packages\\six-1.17.0.dist-info\\RECORD",
      "Lib\\site-packages\\six-1.17.0.dist-info\\top_level.txt",
      "Lib\\site-packages\\six-1.17.0.dist-info\\WHEEL",
      "Lib\\site-packages\\smmap\\buf.py",
      "Lib\\site-packages\\smmap\\mman.py",
      "Lib\\site-packages\\smmap\\test",
      "Lib\\site-packages\\smmap\\util.py",
      "Lib\\site-packages\\smmap\\__init__.py",
      "Lib\\site-packages\\smmap\\test\\lib.py",
      "Lib\\site-packages\\smmap\\test\\test_buf.py",
      "Lib\\site-packages\\smmap\\test\\test_mman.py",
      "Lib\\site-packages\\smmap\\test\\test_tutorial.py",
      "Lib\\site-packages\\smmap\\test\\test_util.py",
      "Lib\\site-packages\\smmap\\test\\__init__.py",
      "Lib\\site-packages\\smmap-5.0.2.dist-info\\INSTALLER",
      "Lib\\site-packages\\smmap-5.0.2.dist-info\\LICENSE",
      "Lib\\site-packages\\smmap-5.0.2.dist-info\\METADATA",
      "Lib\\site-packages\\smmap-5.0.2.dist-info\\RECORD",
      "Lib\\site-packages\\smmap-5.0.2.dist-info\\top_level.txt",
      "Lib\\site-packages\\smmap-5.0.2.dist-info\\WHEEL",
      "Lib\\site-packages\\smmap-5.0.2.dist-info\\zip-safe",
      "Lib\\site-packages\\sniffio\\py.typed",
      "Lib\\site-packages\\sniffio\\_impl.py",
      "Lib\\site-packages\\sniffio\\_tests",
      "Lib\\site-packages\\sniffio\\_version.py",
      "Lib\\site-packages\\sniffio\\__init__.py",
      "Lib\\site-packages\\sniffio\\_tests\\test_sniffio.py",
      "Lib\\site-packages\\sniffio\\_tests\\__init__.py",
      "Lib\\site-packages\\sniffio-1.3.1.dist-info\\INSTALLER",
      "Lib\\site-packages\\sniffio-1.3.1.dist-info\\LICENSE",
      "Lib\\site-packages\\sniffio-1.3.1.dist-info\\LICENSE.APACHE2",
      "Lib\\site-packages\\sniffio-1.3.1.dist-info\\LICENSE.MIT",
      "Lib\\site-packages\\sniffio-1.3.1.dist-info\\METADATA",
      "Lib\\site-packages\\sniffio-1.3.1.dist-info\\RECORD",
      "Lib\\site-packages\\sniffio-1.3.1.dist-info\\top_level.txt",
      "Lib\\site-packages\\sniffio-1.3.1.dist-info\\WHEEL",
      "Lib\\site-packages\\starlette\\applications.py",
      "Lib\\site-packages\\starlette\\authentication.py",
      "Lib\\site-packages\\starlette\\background.py",
      "Lib\\site-packages\\starlette\\concurrency.py",
      "Lib\\site-packages\\starlette\\config.py",
      "Lib\\site-packages\\starlette\\convertors.py",
      "Lib\\site-packages\\starlette\\datastructures.py",
      "Lib\\site-packages\\starlette\\endpoints.py",
      "Lib\\site-packages\\starlette\\exceptions.py",
      "Lib\\site-packages\\starlette\\formparsers.py",
      "Lib\\site-packages\\starlette\\middleware",
      "Lib\\site-packages\\starlette\\py.typed",
      "Lib\\site-packages\\starlette\\requests.py",
      "Lib\\site-packages\\starlette\\responses.py",
      "Lib\\site-packages\\starlette\\routing.py",
      "Lib\\site-packages\\starlette\\schemas.py",
      "Lib\\site-packages\\starlette\\staticfiles.py",
      "Lib\\site-packages\\starlette\\status.py",
      "Lib\\site-packages\\starlette\\templating.py",
      "Lib\\site-packages\\starlette\\testclient.py",
      "Lib\\site-packages\\starlette\\types.py",
      "Lib\\site-packages\\starlette\\websockets.py",
      "Lib\\site-packages\\starlette\\_exception_handler.py",
      "Lib\\site-packages\\starlette\\_utils.py",
      "Lib\\site-packages\\starlette\\__init__.py",
      "Lib\\site-packages\\starlette\\middleware\\authentication.py",
      "Lib\\site-packages\\starlette\\middleware\\base.py",
      "Lib\\site-packages\\starlette\\middleware\\cors.py",
      "Lib\\site-packages\\starlette\\middleware\\errors.py",
      "Lib\\site-packages\\starlette\\middleware\\exceptions.py",
      "Lib\\site-packages\\starlette\\middleware\\gzip.py",
      "Lib\\site-packages\\starlette\\middleware\\httpsredirect.py",
      "Lib\\site-packages\\starlette\\middleware\\sessions.py",
      "Lib\\site-packages\\starlette\\middleware\\trustedhost.py",
      "Lib\\site-packages\\starlette\\middleware\\wsgi.py",
      "Lib\\site-packages\\starlette\\middleware\\__init__.py",
      "Lib\\site-packages\\starlette-0.48.0.dist-info\\INSTALLER",
      "Lib\\site-packages\\starlette-0.48.0.dist-info\\licenses",
      "Lib\\site-packages\\starlette-0.48.0.dist-info\\METADATA",
      "Lib\\site-packages\\starlette-0.48.0.dist-info\\RECORD",
      "Lib\\site-packages\\starlette-0.48.0.dist-info\\WHEEL",
      "Lib\\site-packages\\starlette-0.48.0.dist-info\\licenses\\LICENSE.md",
      "Lib\\site-packages\\streamlit\\auth_util.py",
      "Lib\\site-packages\\streamlit\\cli_util.py",
      "Lib\\site-packages\\streamlit\\column_config.py",
      "Lib\\site-packages\\streamlit\\commands",
      "Lib\\site-packages\\streamlit\\components",
      "Lib\\site-packages\\streamlit\\config.py",
      "Lib\\site-packages\\streamlit\\config_option.py",
      "Lib\\site-packages\\streamlit\\config_util.py",
      "Lib\\site-packages\\streamlit\\connections",
      "Lib\\site-packages\\streamlit\\cursor.py",
      "Lib\\site-packages\\streamlit\\dataframe_util.py",
      "Lib\\site-packages\\streamlit\\delta_generator.py",
      "Lib\\site-packages\\streamlit\\delta_generator_singletons.py",
      "Lib\\site-packages\\streamlit\\deprecation_util.py",
      "Lib\\site-packages\\streamlit\\development.py",
      "Lib\\site-packages\\streamlit\\elements",
      "Lib\\site-packages\\streamlit\\emojis.py",
      "Lib\\site-packages\\streamlit\\env_util.py",
      "Lib\\site-packages\\streamlit\\errors.py",
      "Lib\\site-packages\\streamlit\\error_util.py",
      "Lib\\site-packages\\streamlit\\external",
      "Lib\\site-packages\\streamlit\\file_util.py",
      "Lib\\site-packages\\streamlit\\git_util.py",
      "Lib\\site-packages\\streamlit\\hello",
      "Lib\\site-packages\\streamlit\\logger.py",
      "Lib\\site-packages\\streamlit\\material_icon_names.py",
      "Lib\\site-packages\\streamlit\\navigation",
      "Lib\\site-packages\\streamlit\\net_util.py",
      "Lib\\site-packages\\streamlit\\platform.py",
      "Lib\\site-packages\\streamlit\\proto",
      "Lib\\site-packages\\streamlit\\py.typed",
      "Lib\\site-packages\\streamlit\\runtime",
      "Lib\\site-packages\\streamlit\\source_util.py",
      "Lib\\site-packages\\streamlit\\static",
      "Lib\\site-packages\\streamlit\\string_util.py",
      "Lib\\site-packages\\streamlit\\temporary_directory.py",
      "Lib\\site-packages\\streamlit\\testing",
      "Lib\\site-packages\\streamlit\\time_util.py",
      "Lib\\site-packages\\streamlit\\type_util.py",
      "Lib\\site-packages\\streamlit\\url_util.py",
      "Lib\\site-packages\\streamlit\\user_info.py",
      "Lib\\site-packages\\streamlit\\util.py",
      "Lib\\site-packages\\streamlit\\vendor",
      "Lib\\site-packages\\streamlit\\version.py",
      "Lib\\site-packages\\streamlit\\watcher",
      "Lib\\site-packages\\streamlit\\web",
      "Lib\\site-packages\\streamlit\\__init__.py",
      "Lib\\site-packages\\streamlit\\__main__.py",
      "Lib\\site-packages\\streamlit\\commands\\echo.py",
      "Lib\\site-packages\\streamlit\\commands\\execution_control.py",
      "Lib\\site-packages\\streamlit\\commands\\experimental_query_params.py",
      "Lib\\site-packages\\streamlit\\commands\\logo.py",
      "Lib\\site-packages\\streamlit\\commands\\navigation.py",
      "Lib\\site-packages\\streamlit\\commands\\page_config.py",
      "Lib\\site-packages\\streamlit\\commands\\__init__.py",
      "Lib\\site-packages\\streamlit\\components\\lib",
      "Lib\\site-packages\\streamlit\\components\\types",
      "Lib\\site-packages\\streamlit\\components\\v1",
      "Lib\\site-packages\\streamlit\\components\\__init__.py",
      "Lib\\site-packages\\streamlit\\components\\lib\\local_component_registry.py",
      "Lib\\site-packages\\streamlit\\components\\lib\\__init__.py",
      "Lib\\site-packages\\streamlit\\components\\types\\base_component_registry.py",
      "Lib\\site-packages\\streamlit\\components\\types\\base_custom_component.py",
      "Lib\\site-packages\\streamlit\\components\\types\\__init__.py",
      "Lib\\site-packages\\streamlit\\components\\v1\\components.py",
      "Lib\\site-packages\\streamlit\\components\\v1\\component_arrow.py",
      "Lib\\site-packages\\streamlit\\components\\v1\\component_registry.py",
      "Lib\\site-packages\\streamlit\\components\\v1\\custom_component.py",
      "Lib\\site-packages\\streamlit\\components\\v1\\__init__.py",
      "Lib\\site-packages\\streamlit\\connections\\base_connection.py",
      "Lib\\site-packages\\streamlit\\connections\\snowflake_connection.py",
      "Lib\\site-packages\\streamlit\\connections\\snowpark_connection.py",
      "Lib\\site-packages\\streamlit\\connections\\sql_connection.py",
      "Lib\\site-packages\\streamlit\\connections\\util.py",
      "Lib\\site-packages\\streamlit\\connections\\__init__.py",
      "Lib\\site-packages\\streamlit\\elements\\alert.py",
      "Lib\\site-packages\\streamlit\\elements\\arrow.py",
      "Lib\\site-packages\\streamlit\\elements\\balloons.py",
      "Lib\\site-packages\\streamlit\\elements\\bokeh_chart.py",
      "Lib\\site-packages\\streamlit\\elements\\code.py",
      "Lib\\site-packages\\streamlit\\elements\\deck_gl_json_chart.py",
      "Lib\\site-packages\\streamlit\\elements\\dialog_decorator.py",
      "Lib\\site-packages\\streamlit\\elements\\doc_string.py",
      "Lib\\site-packages\\streamlit\\elements\\empty.py",
      "Lib\\site-packages\\streamlit\\elements\\exception.py",
      "Lib\\site-packages\\streamlit\\elements\\form.py",
      "Lib\\site-packages\\streamlit\\elements\\graphviz_chart.py",
      "Lib\\site-packages\\streamlit\\elements\\heading.py",
      "Lib\\site-packages\\streamlit\\elements\\html.py",
      "Lib\\site-packages\\streamlit\\elements\\iframe.py",
      "Lib\\site-packages\\streamlit\\elements\\image.py",
      "Lib\\site-packages\\streamlit\\elements\\json.py",
      "Lib\\site-packages\\streamlit\\elements\\layouts.py",
      "Lib\\site-packages\\streamlit\\elements\\lib",
      "Lib\\site-packages\\streamlit\\elements\\map.py",
      "Lib\\site-packages\\streamlit\\elements\\markdown.py",
      "Lib\\site-packages\\streamlit\\elements\\media.py",
      "Lib\\site-packages\\streamlit\\elements\\metric.py",
      "Lib\\site-packages\\streamlit\\elements\\pdf.py",
      "Lib\\site-packages\\streamlit\\elements\\plotly_chart.py",
      "Lib\\site-packages\\streamlit\\elements\\progress.py",
      "Lib\\site-packages\\streamlit\\elements\\pyplot.py",
      "Lib\\site-packages\\streamlit\\elements\\snow.py",
      "Lib\\site-packages\\streamlit\\elements\\spinner.py",
      "Lib\\site-packages\\streamlit\\elements\\text.py",
      "Lib\\site-packages\\streamlit\\elements\\toast.py",
      "Lib\\site-packages\\streamlit\\elements\\vega_charts.py",
      "Lib\\site-packages\\streamlit\\elements\\widgets",
      "Lib\\site-packages\\streamlit\\elements\\write.py",
      "Lib\\site-packages\\streamlit\\elements\\__init__.py",
      "Lib\\site-packages\\streamlit\\elements\\lib\\built_in_chart_utils.py",
      "Lib\\site-packages\\streamlit\\elements\\lib\\color_util.py",
      "Lib\\site-packages\\streamlit\\elements\\lib\\column_config_utils.py",
      "Lib\\site-packages\\streamlit\\elements\\lib\\column_types.py",
      "Lib\\site-packages\\streamlit\\elements\\lib\\dialog.py",
      "Lib\\site-packages\\streamlit\\elements\\lib\\dicttools.py",
      "Lib\\site-packages\\streamlit\\elements\\lib\\file_uploader_utils.py",
      "Lib\\site-packages\\streamlit\\elements\\lib\\form_utils.py",
      "Lib\\site-packages\\streamlit\\elements\\lib\\image_utils.py",
      "Lib\\site-packages\\streamlit\\elements\\lib\\js_number.py",
      "Lib\\site-packages\\streamlit\\elements\\lib\\layout_utils.py",
      "Lib\\site-packages\\streamlit\\elements\\lib\\mutable_status_container.py",
      "Lib\\site-packages\\streamlit\\elements\\lib\\options_selector_utils.py",
      "Lib\\site-packages\\streamlit\\elements\\lib\\pandas_styler_utils.py",
      "Lib\\site-packages\\streamlit\\elements\\lib\\policies.py",
      "Lib\\site-packages\\streamlit\\elements\\lib\\streamlit_plotly_theme.py",
      "Lib\\site-packages\\streamlit\\elements\\lib\\subtitle_utils.py",
      "Lib\\site-packages\\streamlit\\elements\\lib\\utils.py",
      "Lib\\site-packages\\streamlit\\elements\\lib\\__init__.py",
      "Lib\\site-packages\\streamlit\\elements\\widgets\\audio_input.py",
      "Lib\\site-packages\\streamlit\\elements\\widgets\\button.py",
      "Lib\\site-packages\\streamlit\\elements\\widgets\\button_group.py",
      "Lib\\site-packages\\streamlit\\elements\\widgets\\camera_input.py",
      "Lib\\site-packages\\streamlit\\elements\\widgets\\chat.py",
      "Lib\\site-packages\\streamlit\\elements\\widgets\\checkbox.py",
      "Lib\\site-packages\\streamlit\\elements\\widgets\\color_picker.py",
      "Lib\\site-packages\\streamlit\\elements\\widgets\\data_editor.py",
      "Lib\\site-packages\\streamlit\\elements\\widgets\\file_uploader.py",
      "Lib\\site-packages\\streamlit\\elements\\widgets\\multiselect.py",
      "Lib\\site-packages\\streamlit\\elements\\widgets\\number_input.py",
      "Lib\\site-packages\\streamlit\\elements\\widgets\\radio.py",
      "Lib\\site-packages\\streamlit\\elements\\widgets\\selectbox.py",
      "Lib\\site-packages\\streamlit\\elements\\widgets\\select_slider.py",
      "Lib\\site-packages\\streamlit\\elements\\widgets\\slider.py",
      "Lib\\site-packages\\streamlit\\elements\\widgets\\text_widgets.py",
      "Lib\\site-packages\\streamlit\\elements\\widgets\\time_widgets.py",
      "Lib\\site-packages\\streamlit\\elements\\widgets\\__init__.py",
      "Lib\\site-packages\\streamlit\\external\\langchain",
      "Lib\\site-packages\\streamlit\\external\\__init__.py",
      "Lib\\site-packages\\streamlit\\external\\langchain\\streamlit_callback_handler.py",
      "Lib\\site-packages\\streamlit\\external\\langchain\\__init__.py",
      "Lib\\site-packages\\streamlit\\hello\\animation_demo.py",
      "Lib\\site-packages\\streamlit\\hello\\dataframe_demo.py",
      "Lib\\site-packages\\streamlit\\hello\\hello.py",
      "Lib\\site-packages\\streamlit\\hello\\mapping_demo.py",
      "Lib\\site-packages\\streamlit\\hello\\plotting_demo.py",
      "Lib\\site-packages\\streamlit\\hello\\streamlit_app.py",
      "Lib\\site-packages\\streamlit\\hello\\utils.py",
      "Lib\\site-packages\\streamlit\\hello\\__init__.py",
      "Lib\\site-packages\\streamlit\\navigation\\page.py",
      "Lib\\site-packages\\streamlit\\navigation\\__init__.py",
      "Lib\\site-packages\\streamlit\\proto\\Alert_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\Alert_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\AppPage_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\AppPage_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\ArrowNamedDataSet_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\ArrowNamedDataSet_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\ArrowVegaLiteChart_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\ArrowVegaLiteChart_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\Arrow_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\Arrow_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\AudioInput_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\AudioInput_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\Audio_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\Audio_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\AuthRedirect_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\AuthRedirect_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\AutoRerun_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\AutoRerun_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\BackMsg_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\BackMsg_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\Balloons_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\Balloons_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\Block_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\Block_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\BokehChart_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\BokehChart_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\ButtonGroup_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\ButtonGroup_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\Button_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\Button_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\CameraInput_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\CameraInput_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\ChatInput_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\ChatInput_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\Checkbox_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\Checkbox_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\ClientState_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\ClientState_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\Code_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\Code_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\ColorPicker_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\ColorPicker_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\Common_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\Common_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\Components_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\Components_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\DataFrame_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\DataFrame_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\DateInput_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\DateInput_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\DeckGlJsonChart_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\DeckGlJsonChart_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\Delta_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\Delta_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\DocString_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\DocString_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\DownloadButton_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\DownloadButton_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\Element_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\Element_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\Empty_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\Empty_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\Exception_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\Exception_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\Favicon_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\Favicon_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\FileUploader_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\FileUploader_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\ForwardMsg_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\ForwardMsg_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\GapSize_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\GapSize_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\GitInfo_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\GitInfo_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\GraphVizChart_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\GraphVizChart_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\Heading_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\Heading_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\HeightConfig_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\HeightConfig_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\Html_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\Html_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\IFrame_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\IFrame_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\Image_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\Image_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\Json_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\Json_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\LabelVisibilityMessage_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\LabelVisibilityMessage_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\LinkButton_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\LinkButton_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\Logo_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\Logo_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\Markdown_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\Markdown_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\MetricsEvent_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\MetricsEvent_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\Metric_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\Metric_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\MultiSelect_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\MultiSelect_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\NamedDataSet_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\NamedDataSet_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\Navigation_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\Navigation_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\NewSession_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\NewSession_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\NumberInput_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\NumberInput_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\openmetrics_data_model_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\openmetrics_data_model_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\PageConfig_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\PageConfig_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\PageInfo_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\PageInfo_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\PageLink_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\PageLink_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\PageNotFound_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\PageNotFound_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\PageProfile_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\PageProfile_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\PagesChanged_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\PagesChanged_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\ParentMessage_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\ParentMessage_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\PlotlyChart_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\PlotlyChart_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\Progress_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\Progress_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\Radio_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\Radio_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\RootContainer_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\RootContainer_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\Selectbox_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\Selectbox_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\SessionEvent_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\SessionEvent_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\SessionStatus_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\SessionStatus_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\Skeleton_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\Skeleton_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\Slider_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\Slider_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\Snow_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\Snow_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\Spinner_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\Spinner_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\TextArea_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\TextArea_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\TextInput_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\TextInput_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\Text_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\Text_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\TimeInput_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\TimeInput_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\Toast_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\Toast_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\VegaLiteChart_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\VegaLiteChart_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\Video_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\Video_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\WidgetStates_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\WidgetStates_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\WidthConfig_pb2.py",
      "Lib\\site-packages\\streamlit\\proto\\WidthConfig_pb2.pyi",
      "Lib\\site-packages\\streamlit\\proto\\__init__.py",
      "Lib\\site-packages\\streamlit\\runtime\\app_session.py",
      "Lib\\site-packages\\streamlit\\runtime\\caching",
      "Lib\\site-packages\\streamlit\\runtime\\connection_factory.py",
      "Lib\\site-packages\\streamlit\\runtime\\context.py",
      "Lib\\site-packages\\streamlit\\runtime\\context_util.py",
      "Lib\\site-packages\\streamlit\\runtime\\credentials.py",
      "Lib\\site-packages\\streamlit\\runtime\\forward_msg_cache.py",
      "Lib\\site-packages\\streamlit\\runtime\\forward_msg_queue.py",
      "Lib\\site-packages\\streamlit\\runtime\\fragment.py",
      "Lib\\site-packages\\streamlit\\runtime\\media_file_manager.py",
      "Lib\\site-packages\\streamlit\\runtime\\media_file_storage.py",
      "Lib\\site-packages\\streamlit\\runtime\\memory_media_file_storage.py",
      "Lib\\site-packages\\streamlit\\runtime\\memory_session_storage.py",
      "Lib\\site-packages\\streamlit\\runtime\\memory_uploaded_file_manager.py",
      "Lib\\site-packages\\streamlit\\runtime\\metrics_util.py",
      "Lib\\site-packages\\streamlit\\runtime\\pages_manager.py",
      "Lib\\site-packages\\streamlit\\runtime\\runtime.py",
      "Lib\\site-packages\\streamlit\\runtime\\runtime_util.py",
      "Lib\\site-packages\\streamlit\\runtime\\scriptrunner",
      "Lib\\site-packages\\streamlit\\runtime\\scriptrunner_utils",
      "Lib\\site-packages\\streamlit\\runtime\\script_data.py",
      "Lib\\site-packages\\streamlit\\runtime\\secrets.py",
      "Lib\\site-packages\\streamlit\\runtime\\session_manager.py",
      "Lib\\site-packages\\streamlit\\runtime\\state",
      "Lib\\site-packages\\streamlit\\runtime\\stats.py",
      "Lib\\site-packages\\streamlit\\runtime\\theme_util.py",
      "Lib\\site-packages\\streamlit\\runtime\\uploaded_file_manager.py",
      "Lib\\site-packages\\streamlit\\runtime\\websocket_session_manager.py",
      "Lib\\site-packages\\streamlit\\runtime\\__init__.py",
      "Lib\\site-packages\\streamlit\\runtime\\caching\\cached_message_replay.py",
      "Lib\\site-packages\\streamlit\\runtime\\caching\\cache_data_api.py",
      "Lib\\site-packages\\streamlit\\runtime\\caching\\cache_errors.py",
      "Lib\\site-packages\\streamlit\\runtime\\caching\\cache_resource_api.py",
      "Lib\\site-packages\\streamlit\\runtime\\caching\\cache_type.py",
      "Lib\\site-packages\\streamlit\\runtime\\caching\\cache_utils.py",
      "Lib\\site-packages\\streamlit\\runtime\\caching\\hashing.py",
      "Lib\\site-packages\\streamlit\\runtime\\caching\\legacy_cache_api.py",
      "Lib\\site-packages\\streamlit\\runtime\\caching\\storage",
      "Lib\\site-packages\\streamlit\\runtime\\caching\\__init__.py",
      "Lib\\site-packages\\streamlit\\runtime\\caching\\storage\\cache_storage_protocol.py",
      "Lib\\site-packages\\streamlit\\runtime\\caching\\storage\\dummy_cache_storage.py",
      "Lib\\site-packages\\streamlit\\runtime\\caching\\storage\\in_memory_cache_storage_wrapper.py",
      "Lib\\site-packages\\streamlit\\runtime\\caching\\storage\\local_disk_cache_storage.py",
      "Lib\\site-packages\\streamlit\\runtime\\caching\\storage\\__init__.py",
      "Lib\\site-packages\\streamlit\\runtime\\scriptrunner\\exec_code.py",
      "Lib\\site-packages\\streamlit\\runtime\\scriptrunner\\magic.py",
      "Lib\\site-packages\\streamlit\\runtime\\scriptrunner\\magic_funcs.py",
      "Lib\\site-packages\\streamlit\\runtime\\scriptrunner\\script_cache.py",
      "Lib\\site-packages\\streamlit\\runtime\\scriptrunner\\script_runner.py",
      "Lib\\site-packages\\streamlit\\runtime\\scriptrunner\\__init__.py",
      "Lib\\site-packages\\streamlit\\runtime\\scriptrunner_utils\\exceptions.py",
      "Lib\\site-packages\\streamlit\\runtime\\scriptrunner_utils\\script_requests.py",
      "Lib\\site-packages\\streamlit\\runtime\\scriptrunner_utils\\script_run_context.py",
      "Lib\\site-packages\\streamlit\\runtime\\scriptrunner_utils\\__init__.py",
      "Lib\\site-packages\\streamlit\\runtime\\state\\common.py",
      "Lib\\site-packages\\streamlit\\runtime\\state\\query_params.py",
      "Lib\\site-packages\\streamlit\\runtime\\state\\query_params_proxy.py",
      "Lib\\site-packages\\streamlit\\runtime\\state\\safe_session_state.py",
      "Lib\\site-packages\\streamlit\\runtime\\state\\session_state.py",
      "Lib\\site-packages\\streamlit\\runtime\\state\\session_state_proxy.py",
      "Lib\\site-packages\\streamlit\\runtime\\state\\widgets.py",
      "Lib\\site-packages\\streamlit\\runtime\\state\\__init__.py",
      "Lib\\site-packages\\streamlit\\static\\favicon.png",
      "Lib\\site-packages\\streamlit\\static\\index.html",
      "Lib\\site-packages\\streamlit\\static\\manifest.json",
      "Lib\\site-packages\\streamlit\\static\\static",
      "Lib\\site-packages\\streamlit\\static\\static\\css",
      "Lib\\site-packages\\streamlit\\static\\static\\js",
      "Lib\\site-packages\\streamlit\\static\\static\\media",
      "Lib\\site-packages\\streamlit\\static\\static\\css\\index.CHEnSPGk.css",
      "Lib\\site-packages\\streamlit\\static\\static\\css\\index.CIiu7Ygf.css",
      "Lib\\site-packages\\streamlit\\static\\static\\css\\index.DzuxGC_t.css",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\base-input.BQft14La.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\checkbox.yZOfXCeX.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\createDownloadLinkElement.ZaXNnPK4.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\createSuper.Dh9w1cs8.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\data-grid-overlay-editor.DcuHuCyW.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\downloader.MeHtkq8r.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\ErrorOutline.esm.DUpR0_Ka.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\es6.VpBPGCnM.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\FileDownload.esm.CN4j9-1w.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\FileHelper.CaIUKG91.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\FormClearHelper.DTcdrasw.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\Hooks.BRba_Own.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\iframeResizer.contentWindow.yMw_ARIL.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\index.64ejlaaT.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\index.6xX1278W.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\index.B-hiXRzw.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\index.B0H9IXUJ.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\index.B4cAbHP6.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\index.B4dUQfni.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\index.Baqa90pe.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\index.Bj9JgOEC.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\index.BjCwMzj4.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\index.Bm3VbPB5.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\index.BPQo7BKk.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\index.Bxz2yX3P.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\index.BycLveZ4.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\index.C9BdUqTi.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\index.CFMf5_ez.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\index.CGYqqs6j.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\index.CH1tqnSs.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\index.CiAQIz1H.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\index.Cj7DSzVR.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\index.Ck8rQ9OL.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\index.ClELlchS.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\index.CMItVsFA.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\index.Cnpi3o3E.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\index.CTBk8Vk2.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\index.Ctn27_AE.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\index.D2QEXQq_.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\index.Dbe-Q3C-.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\index.DcPNYEUo.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\index.DH71Ezyj.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\index.DHh-U0dK.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\index.DK7hD7_w.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\index.DKv_lNO7.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\index.DNLrMXgm.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\index.DuxqVQpd.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\index.DW0Grddz.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\index.FFOzOWzC.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\index.GRUzrudl.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\input.s6pjQ49A.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\InputInstructions.xnSDuYeQ.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\inputUtils.CptNuJwn.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\memory.Cuvsdfrl.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\number-overlay-editor.DdgVR5m3.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\Particles.CElH0XX2.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\possibleConstructorReturn.CqidKeei.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\ProgressBar.DetlP5aY.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\sandbox.CCQREcJx.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\sprintf.D7DtBTRn.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\timepicker.mkJF97Bb.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\toConsumableArray.De7I7KVR.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\Toolbar.C77ar7rq.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\uniqueId.RI1LJdtz.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\UploadFileInfo.C-jY39rj.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\useBasicWidgetState.CedkNjUW.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\useTextInputAutoExpand.Ca7w8dVs.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\useUpdateUiValue.DeXelfRH.js",
      "Lib\\site-packages\\streamlit\\static\\static\\js\\withFullScreenWrapper.C3561XxJ.js",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\balloon-0.Czj7AKwE.png",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\balloon-1.CNvFFrND.png",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\balloon-2.DTvC6B1t.png",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\balloon-3.CgSk4tbL.png",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\balloon-4.mbtFrzxf.png",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\balloon-5.CSwkUfRA.png",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\fireworks.B4d-_KUe.gif",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\flake-0.DgWaVvm5.png",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\flake-1.B2r5AHMK.png",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\flake-2.BnWSExPC.png",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_AMS-Regular.BQhdFMY1.woff2",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_AMS-Regular.DMm9YOAa.woff",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_AMS-Regular.DRggAlZN.ttf",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Caligraphic-Bold.ATXxdsX0.ttf",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Caligraphic-Bold.BEiXGLvX.woff",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Caligraphic-Bold.Dq_IR9rO.woff2",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Caligraphic-Regular.CTRA-rTL.woff",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Caligraphic-Regular.Di6jR-x-.woff2",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Caligraphic-Regular.wX97UBjC.ttf",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Fraktur-Bold.BdnERNNW.ttf",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Fraktur-Bold.BsDP51OF.woff",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Fraktur-Bold.CL6g_b3V.woff2",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Fraktur-Regular.CB_wures.ttf",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Fraktur-Regular.CTYiF6lA.woff2",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Fraktur-Regular.Dxdc4cR9.woff",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Main-Bold.Cx986IdX.woff2",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Main-Bold.Jm3AIy58.woff",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Main-Bold.waoOVXN0.ttf",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Main-BoldItalic.DxDJ3AOS.woff2",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Main-BoldItalic.DzxPMmG6.ttf",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Main-BoldItalic.SpSLRI95.woff",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Main-Italic.3WenGoN9.ttf",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Main-Italic.BMLOBm91.woff",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Main-Italic.NWA7e6Wa.woff2",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Main-Regular.B22Nviop.woff2",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Main-Regular.Dr94JaBh.woff",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Main-Regular.ypZvNtVU.ttf",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Math-BoldItalic.B3XSjfu4.ttf",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Math-BoldItalic.CZnvNsCZ.woff2",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Math-BoldItalic.iY-2wyZ7.woff",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Math-Italic.DA0__PXp.woff",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Math-Italic.flOr_0UB.ttf",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Math-Italic.t53AETM-.woff2",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_SansSerif-Bold.CFMepnvq.ttf",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_SansSerif-Bold.D1sUS0GD.woff2",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_SansSerif-Bold.DbIhKOiC.woff",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_SansSerif-Italic.C3H0VqGB.woff2",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_SansSerif-Italic.DN2j7dab.woff",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_SansSerif-Italic.YYjJ1zSn.ttf",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_SansSerif-Regular.BNo7hRIc.ttf",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_SansSerif-Regular.CS6fqUqJ.woff",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_SansSerif-Regular.DDBCnlJ7.woff2",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Script-Regular.C5JkGWo-.ttf",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Script-Regular.D3wIWfF6.woff2",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Script-Regular.D5yQViql.woff",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Size1-Regular.C195tn64.woff",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Size1-Regular.Dbsnue_I.ttf",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Size1-Regular.mCD8mA8B.woff2",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Size2-Regular.B7gKUWhC.ttf",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Size2-Regular.Dy4dx90m.woff2",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Size2-Regular.oD1tc_U0.woff",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Size3-Regular.CTq5MqoE.woff",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Size3-Regular.DgpXs0kz.ttf",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Size4-Regular.BF-4gkZK.woff",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Size4-Regular.Dl5lxZxV.woff2",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Size4-Regular.DWFBv043.ttf",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Typewriter-Regular.C0xS9mPB.woff",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Typewriter-Regular.CO6r4hn1.woff2",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\KaTeX_Typewriter-Regular.D3Ib7_Hf.ttf",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\MaterialSymbols-Rounded.DeCZgS-4.woff2",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\snowflake.JU2jBHL8.svg",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\SourceCodeVF-Italic.ttf.Ba1oaZG1.woff2",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\SourceCodeVF-Upright.ttf.BjWn63N-.woff2",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\SourceSansVF-Italic.ttf.Bt9VkdQ3.woff2",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\SourceSansVF-Upright.ttf.BsWL4Kly.woff2",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\SourceSerifVariable-Italic.ttf.CVdzAtxO.woff2",
      "Lib\\site-packages\\streamlit\\static\\static\\media\\SourceSerifVariable-Roman.ttf.mdpVL9bi.woff2",
      "Lib\\site-packages\\streamlit\\testing\\v1",
      "Lib\\site-packages\\streamlit\\testing\\__init__.py",
      "Lib\\site-packages\\streamlit\\testing\\v1\\app_test.py",
      "Lib\\site-packages\\streamlit\\testing\\v1\\element_tree.py",
      "Lib\\site-packages\\streamlit\\testing\\v1\\local_script_runner.py",
      "Lib\\site-packages\\streamlit\\testing\\v1\\util.py",
      "Lib\\site-packages\\streamlit\\testing\\v1\\__init__.py",
      "Lib\\site-packages\\streamlit\\vendor\\pympler",
      "Lib\\site-packages\\streamlit\\vendor\\__init__.py",
      "Lib\\site-packages\\streamlit\\vendor\\pympler\\asizeof.py",
      "Lib\\site-packages\\streamlit\\vendor\\pympler\\__init__.py",
      "Lib\\site-packages\\streamlit\\watcher\\event_based_path_watcher.py",
      "Lib\\site-packages\\streamlit\\watcher\\folder_black_list.py",
      "Lib\\site-packages\\streamlit\\watcher\\local_sources_watcher.py",
      "Lib\\site-packages\\streamlit\\watcher\\path_watcher.py",
      "Lib\\site-packages\\streamlit\\watcher\\polling_path_watcher.py",
      "Lib\\site-packages\\streamlit\\watcher\\util.py",
      "Lib\\site-packages\\streamlit\\watcher\\__init__.py",
      "Lib\\site-packages\\streamlit\\web\\bootstrap.py",
      "Lib\\site-packages\\streamlit\\web\\cache_storage_manager_config.py",
      "Lib\\site-packages\\streamlit\\web\\cli.py",
      "Lib\\site-packages\\streamlit\\web\\server",
      "Lib\\site-packages\\streamlit\\web\\__init__.py",
      "Lib\\site-packages\\streamlit\\web\\server\\app_static_file_handler.py",
      "Lib\\site-packages\\streamlit\\web\\server\\authlib_tornado_integration.py",
      "Lib\\site-packages\\streamlit\\web\\server\\browser_websocket_handler.py",
      "Lib\\site-packages\\streamlit\\web\\server\\component_request_handler.py",
      "Lib\\site-packages\\streamlit\\web\\server\\media_file_handler.py",
      "Lib\\site-packages\\streamlit\\web\\server\\oauth_authlib_routes.py",
      "Lib\\site-packages\\streamlit\\web\\server\\oidc_mixin.py",
      "Lib\\site-packages\\streamlit\\web\\server\\routes.py",
      "Lib\\site-packages\\streamlit\\web\\server\\server.py",
      "Lib\\site-packages\\streamlit\\web\\server\\server_util.py",
      "Lib\\site-packages\\streamlit\\web\\server\\stats_request_handler.py",
      "Lib\\site-packages\\streamlit\\web\\server\\upload_file_request_handler.py",
      "Lib\\site-packages\\streamlit\\web\\server\\websocket_headers.py",
      "Lib\\site-packages\\streamlit\\web\\server\\__init__.py",
      "Lib\\site-packages\\streamlit-1.50.0.dist-info\\entry_points.txt",
      "Lib\\site-packages\\streamlit-1.50.0.dist-info\\INSTALLER",
      "Lib\\site-packages\\streamlit-1.50.0.dist-info\\METADATA",
      "Lib\\site-packages\\streamlit-1.50.0.dist-info\\RECORD",
      "Lib\\site-packages\\streamlit-1.50.0.dist-info\\REQUESTED",
      "Lib\\site-packages\\streamlit-1.50.0.dist-info\\top_level.txt",
      "Lib\\site-packages\\streamlit-1.50.0.dist-info\\WHEEL",
      "Lib\\site-packages\\tenacity\\after.py",
      "Lib\\site-packages\\tenacity\\asyncio",
      "Lib\\site-packages\\tenacity\\before.py",
      "Lib\\site-packages\\tenacity\\before_sleep.py",
      "Lib\\site-packages\\tenacity\\nap.py",
      "Lib\\site-packages\\tenacity\\py.typed",
      "Lib\\site-packages\\tenacity\\retry.py",
      "Lib\\site-packages\\tenacity\\stop.py",
      "Lib\\site-packages\\tenacity\\tornadoweb.py",
      "Lib\\site-packages\\tenacity\\wait.py",
      "Lib\\site-packages\\tenacity\\_utils.py",
      "Lib\\site-packages\\tenacity\\__init__.py",
      "Lib\\site-packages\\tenacity\\asyncio\\retry.py",
      "Lib\\site-packages\\tenacity\\asyncio\\__init__.py",
      "Lib\\site-packages\\tenacity-9.1.2.dist-info\\INSTALLER",
      "Lib\\site-packages\\tenacity-9.1.2.dist-info\\licenses",
      "Lib\\site-packages\\tenacity-9.1.2.dist-info\\METADATA",
      "Lib\\site-packages\\tenacity-9.1.2.dist-info\\RECORD",
      "Lib\\site-packages\\tenacity-9.1.2.dist-info\\top_level.txt",
      "Lib\\site-packages\\tenacity-9.1.2.dist-info\\WHEEL",
      "Lib\\site-packages\\tenacity-9.1.2.dist-info\\licenses\\LICENSE",
      "Lib\\site-packages\\toml\\decoder.py",
      "Lib\\site-packages\\toml\\encoder.py",
      "Lib\\site-packages\\toml\\ordered.py",
      "Lib\\site-packages\\toml\\tz.py",
      "Lib\\site-packages\\toml\\__init__.py",
      "Lib\\site-packages\\toml-0.10.2.dist-info\\INSTALLER",
      "Lib\\site-packages\\toml-0.10.2.dist-info\\LICENSE",
      "Lib\\site-packages\\toml-0.10.2.dist-info\\METADATA",
      "Lib\\site-packages\\toml-0.10.2.dist-info\\RECORD",
      "Lib\\site-packages\\toml-0.10.2.dist-info\\top_level.txt",
      "Lib\\site-packages\\toml-0.10.2.dist-info\\WHEEL",
      "Lib\\site-packages\\tornado\\auth.py",
      "Lib\\site-packages\\tornado\\autoreload.py",
      "Lib\\site-packages\\tornado\\concurrent.py",
      "Lib\\site-packages\\tornado\\curl_httpclient.py",
      "Lib\\site-packages\\tornado\\escape.py",
      "Lib\\site-packages\\tornado\\gen.py",
      "Lib\\site-packages\\tornado\\http1connection.py",
      "Lib\\site-packages\\tornado\\httpclient.py",
      "Lib\\site-packages\\tornado\\httpserver.py",
      "Lib\\site-packages\\tornado\\httputil.py",
      "Lib\\site-packages\\tornado\\ioloop.py",
      "Lib\\site-packages\\tornado\\iostream.py",
      "Lib\\site-packages\\tornado\\locale.py",
      "Lib\\site-packages\\tornado\\locks.py",
      "Lib\\site-packages\\tornado\\log.py",
      "Lib\\site-packages\\tornado\\netutil.py",
      "Lib\\site-packages\\tornado\\options.py",
      "Lib\\site-packages\\tornado\\platform",
      "Lib\\site-packages\\tornado\\process.py",
      "Lib\\site-packages\\tornado\\py.typed",
      "Lib\\site-packages\\tornado\\queues.py",
      "Lib\\site-packages\\tornado\\routing.py",
      "Lib\\site-packages\\tornado\\simple_httpclient.py",
      "Lib\\site-packages\\tornado\\speedups.pyd",
      "Lib\\site-packages\\tornado\\speedups.pyi",
      "Lib\\site-packages\\tornado\\tcpclient.py",
      "Lib\\site-packages\\tornado\\tcpserver.py",
      "Lib\\site-packages\\tornado\\template.py",
      "Lib\\site-packages\\tornado\\test",
      "Lib\\site-packages\\tornado\\testing.py",
      "Lib\\site-packages\\tornado\\util.py",
      "Lib\\site-packages\\tornado\\web.py",
      "Lib\\site-packages\\tornado\\websocket.py",
      "Lib\\site-packages\\tornado\\wsgi.py",
      "Lib\\site-packages\\tornado\\_locale_data.py",
      "Lib\\site-packages\\tornado\\__init__.py",
      "Lib\\site-packages\\tornado\\__init__.pyi",
      "Lib\\site-packages\\tornado\\platform\\asyncio.py",
      "Lib\\site-packages\\tornado\\platform\\caresresolver.py",
      "Lib\\site-packages\\tornado\\platform\\twisted.py",
      "Lib\\site-packages\\tornado\\platform\\__init__.py",
      "Lib\\site-packages\\tornado\\test\\asyncio_test.py",
      "Lib\\site-packages\\tornado\\test\\auth_test.py",
      "Lib\\site-packages\\tornado\\test\\autoreload_test.py",
      "Lib\\site-packages\\tornado\\test\\circlerefs_test.py",
      "Lib\\site-packages\\tornado\\test\\concurrent_test.py",
      "Lib\\site-packages\\tornado\\test\\csv_translations",
      "Lib\\site-packages\\tornado\\test\\curl_httpclient_test.py",
      "Lib\\site-packages\\tornado\\test\\escape_test.py",
      "Lib\\site-packages\\tornado\\test\\gen_test.py",
      "Lib\\site-packages\\tornado\\test\\gettext_translations",
      "Lib\\site-packages\\tornado\\test\\http1connection_test.py",
      "Lib\\site-packages\\tornado\\test\\httpclient_test.py",
      "Lib\\site-packages\\tornado\\test\\httpserver_test.py",
      "Lib\\site-packages\\tornado\\test\\httputil_test.py",
      "Lib\\site-packages\\tornado\\test\\import_test.py",
      "Lib\\site-packages\\tornado\\test\\ioloop_test.py",
      "Lib\\site-packages\\tornado\\test\\iostream_test.py",
      "Lib\\site-packages\\tornado\\test\\locale_test.py",
      "Lib\\site-packages\\tornado\\test\\locks_test.py",
      "Lib\\site-packages\\tornado\\test\\log_test.py",
      "Lib\\site-packages\\tornado\\test\\netutil_test.py",
      "Lib\\site-packages\\tornado\\test\\options_test.cfg",
      "Lib\\site-packages\\tornado\\test\\options_test.py",
      "Lib\\site-packages\\tornado\\test\\options_test_types.cfg",
      "Lib\\site-packages\\tornado\\test\\options_test_types_str.cfg",
      "Lib\\site-packages\\tornado\\test\\process_test.py",
      "Lib\\site-packages\\tornado\\test\\queues_test.py",
      "Lib\\site-packages\\tornado\\test\\resolve_test_helper.py",
      "Lib\\site-packages\\tornado\\test\\routing_test.py",
      "Lib\\site-packages\\tornado\\test\\runtests.py",
      "Lib\\site-packages\\tornado\\test\\simple_httpclient_test.py",
      "Lib\\site-packages\\tornado\\test\\static",
      "Lib\\site-packages\\tornado\\test\\static_foo.txt",
      "Lib\\site-packages\\tornado\\test\\tcpclient_test.py",
      "Lib\\site-packages\\tornado\\test\\tcpserver_test.py",
      "Lib\\site-packages\\tornado\\test\\templates",
      "Lib\\site-packages\\tornado\\test\\template_test.py",
      "Lib\\site-packages\\tornado\\test\\test.crt",
      "Lib\\site-packages\\tornado\\test\\test.key",
      "Lib\\site-packages\\tornado\\test\\testing_test.py",
      "Lib\\site-packages\\tornado\\test\\twisted_test.py",
      "Lib\\site-packages\\tornado\\test\\util.py",
      "Lib\\site-packages\\tornado\\test\\util_test.py",
      "Lib\\site-packages\\tornado\\test\\websocket_test.py",
      "Lib\\site-packages\\tornado\\test\\web_test.py",
      "Lib\\site-packages\\tornado\\test\\wsgi_test.py",
      "Lib\\site-packages\\tornado\\test\\__init__.py",
      "Lib\\site-packages\\tornado\\test\\__main__.py",
      "Lib\\site-packages\\tornado\\test\\csv_translations\\fr_FR.csv",
      "Lib\\site-packages\\tornado\\test\\gettext_translations\\fr_FR",
      "Lib\\site-packages\\tornado\\test\\gettext_translations\\fr_FR\\LC_MESSAGES",
      "Lib\\site-packages\\tornado\\test\\gettext_translations\\fr_FR\\LC_MESSAGES\\tornado_test.mo",
      "Lib\\site-packages\\tornado\\test\\gettext_translations\\fr_FR\\LC_MESSAGES\\tornado_test.po",
      "Lib\\site-packages\\tornado\\test\\static\\dir",
      "Lib\\site-packages\\tornado\\test\\static\\robots.txt",
      "Lib\\site-packages\\tornado\\test\\static\\sample.xml",
      "Lib\\site-packages\\tornado\\test\\static\\sample.xml.bz2",
      "Lib\\site-packages\\tornado\\test\\static\\sample.xml.gz",
      "Lib\\site-packages\\tornado\\test\\static\\dir\\index.html",
      "Lib\\site-packages\\tornado\\test\\templates\\utf8.html",
      "Lib\\site-packages\\tornado-6.5.2.dist-info\\INSTALLER",
      "Lib\\site-packages\\tornado-6.5.2.dist-info\\licenses",
      "Lib\\site-packages\\tornado-6.5.2.dist-info\\METADATA",
      "Lib\\site-packages\\tornado-6.5.2.dist-info\\RECORD",
      "Lib\\site-packages\\tornado-6.5.2.dist-info\\top_level.txt",
      "Lib\\site-packages\\tornado-6.5.2.dist-info\\WHEEL",
      "Lib\\site-packages\\tornado-6.5.2.dist-info\\licenses\\LICENSE",
      "Lib\\site-packages\\typing_extensions-4.15.0.dist-info\\INSTALLER",
      "Lib\\site-packages\\typing_extensions-4.15.0.dist-info\\licenses",
      "Lib\\site-packages\\typing_extensions-4.15.0.dist-info\\METADATA",
      "Lib\\site-packages\\typing_extensions-4.15.0.dist-info\\RECORD",
      "Lib\\site-packages\\typing_extensions-4.15.0.dist-info\\WHEEL",
      "Lib\\site-packages\\typing_extensions-4.15.0.dist-info\\licenses\\LICENSE",
      "Lib\\site-packages\\typing_inspection\\introspection.py",
      "Lib\\site-packages\\typing_inspection\\py.typed",
      "Lib\\site-packages\\typing_inspection\\typing_objects.py",
      "Lib\\site-packages\\typing_inspection\\typing_objects.pyi",
      "Lib\\site-packages\\typing_inspection\\__init__.py",
      "Lib\\site-packages\\typing_inspection-0.4.2.dist-info\\INSTALLER",
      "Lib\\site-packages\\typing_inspection-0.4.2.dist-info\\licenses",
      "Lib\\site-packages\\typing_inspection-0.4.2.dist-info\\METADATA",
      "Lib\\site-packages\\typing_inspection-0.4.2.dist-info\\RECORD",
      "Lib\\site-packages\\typing_inspection-0.4.2.dist-info\\WHEEL",
      "Lib\\site-packages\\typing_inspection-0.4.2.dist-info\\licenses\\LICENSE",
      "Lib\\site-packages\\tzdata\\zoneinfo",
      "Lib\\site-packages\\tzdata\\zones",
      "Lib\\site-packages\\tzdata\\__init__.py",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Antarctica",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Arctic",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Atlantic",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Australia",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Brazil",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Canada",
      "Lib\\site-packages\\tzdata\\zoneinfo\\CET",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Chile",
      "Lib\\site-packages\\tzdata\\zoneinfo\\CST6CDT",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Cuba",
      "Lib\\site-packages\\tzdata\\zoneinfo\\EET",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Egypt",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Eire",
      "Lib\\site-packages\\tzdata\\zoneinfo\\EST",
      "Lib\\site-packages\\tzdata\\zoneinfo\\EST5EDT",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Etc",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Factory",
      "Lib\\site-packages\\tzdata\\zoneinfo\\GB",
      "Lib\\site-packages\\tzdata\\zoneinfo\\GB-Eire",
      "Lib\\site-packages\\tzdata\\zoneinfo\\GMT",
      "Lib\\site-packages\\tzdata\\zoneinfo\\GMT+0",
      "Lib\\site-packages\\tzdata\\zoneinfo\\GMT-0",
      "Lib\\site-packages\\tzdata\\zoneinfo\\GMT0",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Greenwich",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Hongkong",
      "Lib\\site-packages\\tzdata\\zoneinfo\\HST",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Iceland",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Indian",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Iran",
      "Lib\\site-packages\\tzdata\\zoneinfo\\iso3166.tab",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Israel",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Jamaica",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Japan",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Kwajalein",
      "Lib\\site-packages\\tzdata\\zoneinfo\\leapseconds",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Libya",
      "Lib\\site-packages\\tzdata\\zoneinfo\\MET",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Mexico",
      "Lib\\site-packages\\tzdata\\zoneinfo\\MST",
      "Lib\\site-packages\\tzdata\\zoneinfo\\MST7MDT",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Navajo",
      "Lib\\site-packages\\tzdata\\zoneinfo\\NZ",
      "Lib\\site-packages\\tzdata\\zoneinfo\\NZ-CHAT",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Poland",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Portugal",
      "Lib\\site-packages\\tzdata\\zoneinfo\\PRC",
      "Lib\\site-packages\\tzdata\\zoneinfo\\PST8PDT",
      "Lib\\site-packages\\tzdata\\zoneinfo\\ROC",
      "Lib\\site-packages\\tzdata\\zoneinfo\\ROK",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Singapore",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Turkey",
      "Lib\\site-packages\\tzdata\\zoneinfo\\tzdata.zi",
      "Lib\\site-packages\\tzdata\\zoneinfo\\UCT",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Universal",
      "Lib\\site-packages\\tzdata\\zoneinfo\\US",
      "Lib\\site-packages\\tzdata\\zoneinfo\\UTC",
      "Lib\\site-packages\\tzdata\\zoneinfo\\W-SU",
      "Lib\\site-packages\\tzdata\\zoneinfo\\WET",
      "Lib\\site-packages\\tzdata\\zoneinfo\\zone.tab",
      "Lib\\site-packages\\tzdata\\zoneinfo\\zone1970.tab",
      "Lib\\site-packages\\tzdata\\zoneinfo\\zonenow.tab",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Zulu",
      "Lib\\site-packages\\tzdata\\zoneinfo\\__init__.py",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Abidjan",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Accra",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Addis_Ababa",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Algiers",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Asmara",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Asmera",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Bamako",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Bangui",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Banjul",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Bissau",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Blantyre",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Brazzaville",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Bujumbura",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Cairo",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Casablanca",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Ceuta",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Conakry",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Dakar",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Dar_es_Salaam",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Djibouti",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Douala",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\El_Aaiun",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Freetown",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Gaborone",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Harare",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Johannesburg",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Juba",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Kampala",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Khartoum",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Kigali",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Kinshasa",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Lagos",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Libreville",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Lome",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Luanda",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Lubumbashi",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Lusaka",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Malabo",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Maputo",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Maseru",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Mbabane",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Mogadishu",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Monrovia",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Nairobi",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Ndjamena",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Niamey",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Nouakchott",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Ouagadougou",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Porto-Novo",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Sao_Tome",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Timbuktu",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Tripoli",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Tunis",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\Windhoek",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Africa\\__init__.py",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Adak",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Anchorage",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Anguilla",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Antigua",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Araguaina",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Argentina",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Aruba",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Asuncion",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Atikokan",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Atka",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Bahia",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Bahia_Banderas",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Barbados",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Belem",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Belize",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Blanc-Sablon",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Boa_Vista",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Bogota",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Boise",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Buenos_Aires",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Cambridge_Bay",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Campo_Grande",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Cancun",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Caracas",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Catamarca",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Cayenne",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Cayman",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Chicago",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Chihuahua",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Ciudad_Juarez",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Coral_Harbour",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Cordoba",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Costa_Rica",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Coyhaique",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Creston",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Cuiaba",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Curacao",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Danmarkshavn",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Dawson",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Dawson_Creek",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Denver",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Detroit",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Dominica",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Edmonton",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Eirunepe",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\El_Salvador",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Ensenada",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Fortaleza",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Fort_Nelson",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Fort_Wayne",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Glace_Bay",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Godthab",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Goose_Bay",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Grand_Turk",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Grenada",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Guadeloupe",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Guatemala",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Guayaquil",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Guyana",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Halifax",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Havana",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Hermosillo",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Indiana",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Indianapolis",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Inuvik",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Iqaluit",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Jamaica",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Jujuy",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Juneau",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Kentucky",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Knox_IN",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Kralendijk",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\La_Paz",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Lima",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Los_Angeles",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Louisville",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Lower_Princes",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Maceio",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Managua",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Manaus",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Marigot",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Martinique",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Matamoros",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Mazatlan",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Mendoza",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Menominee",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Merida",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Metlakatla",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Mexico_City",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Miquelon",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Moncton",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Monterrey",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Montevideo",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Montreal",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Montserrat",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Nassau",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\New_York",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Nipigon",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Nome",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Noronha",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\North_Dakota",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Nuuk",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Ojinaga",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Panama",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Pangnirtung",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Paramaribo",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Phoenix",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Port-au-Prince",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Porto_Acre",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Porto_Velho",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Port_of_Spain",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Puerto_Rico",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Punta_Arenas",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Rainy_River",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Rankin_Inlet",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Recife",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Regina",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Resolute",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Rio_Branco",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Rosario",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Santarem",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Santa_Isabel",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Santiago",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Santo_Domingo",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Sao_Paulo",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Scoresbysund",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Shiprock",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Sitka",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\St_Barthelemy",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\St_Johns",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\St_Kitts",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\St_Lucia",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\St_Thomas",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\St_Vincent",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Swift_Current",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Tegucigalpa",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Thule",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Thunder_Bay",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Tijuana",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Toronto",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Tortola",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Vancouver",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Virgin",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Whitehorse",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Winnipeg",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Yakutat",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Yellowknife",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\__init__.py",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Argentina\\Buenos_Aires",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Argentina\\Catamarca",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Argentina\\ComodRivadavia",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Argentina\\Cordoba",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Argentina\\Jujuy",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Argentina\\La_Rioja",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Argentina\\Mendoza",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Argentina\\Rio_Gallegos",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Argentina\\Salta",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Argentina\\San_Juan",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Argentina\\San_Luis",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Argentina\\Tucuman",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Argentina\\Ushuaia",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Argentina\\__init__.py",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Indiana\\Indianapolis",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Indiana\\Knox",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Indiana\\Marengo",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Indiana\\Petersburg",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Indiana\\Tell_City",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Indiana\\Vevay",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Indiana\\Vincennes",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Indiana\\Winamac",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Indiana\\__init__.py",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Kentucky\\Louisville",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Kentucky\\Monticello",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\Kentucky\\__init__.py",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\North_Dakota\\Beulah",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\North_Dakota\\Center",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\North_Dakota\\New_Salem",
      "Lib\\site-packages\\tzdata\\zoneinfo\\America\\North_Dakota\\__init__.py",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Antarctica\\Casey",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Antarctica\\Davis",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Antarctica\\DumontDUrville",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Antarctica\\Macquarie",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Antarctica\\Mawson",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Antarctica\\McMurdo",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Antarctica\\Palmer",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Antarctica\\Rothera",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Antarctica\\South_Pole",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Antarctica\\Syowa",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Antarctica\\Troll",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Antarctica\\Vostok",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Antarctica\\__init__.py",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Arctic\\Longyearbyen",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Arctic\\__init__.py",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Aden",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Almaty",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Amman",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Anadyr",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Aqtau",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Aqtobe",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Ashgabat",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Ashkhabad",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Atyrau",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Baghdad",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Bahrain",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Baku",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Bangkok",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Barnaul",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Beirut",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Bishkek",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Brunei",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Calcutta",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Chita",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Choibalsan",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Chongqing",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Chungking",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Colombo",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Dacca",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Damascus",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Dhaka",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Dili",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Dubai",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Dushanbe",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Famagusta",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Gaza",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Harbin",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Hebron",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Hong_Kong",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Hovd",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Ho_Chi_Minh",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Irkutsk",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Istanbul",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Jakarta",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Jayapura",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Jerusalem",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Kabul",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Kamchatka",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Karachi",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Kashgar",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Kathmandu",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Katmandu",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Khandyga",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Kolkata",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Krasnoyarsk",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Kuala_Lumpur",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Kuching",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Kuwait",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Macao",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Macau",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Magadan",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Makassar",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Manila",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Muscat",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Nicosia",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Novokuznetsk",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Novosibirsk",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Omsk",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Oral",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Phnom_Penh",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Pontianak",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Pyongyang",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Qatar",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Qostanay",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Qyzylorda",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Rangoon",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Riyadh",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Saigon",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Sakhalin",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Samarkand",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Seoul",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Shanghai",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Singapore",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Srednekolymsk",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Taipei",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Tashkent",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Tbilisi",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Tehran",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Tel_Aviv",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Thimbu",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Thimphu",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Tokyo",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Tomsk",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Ujung_Pandang",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Ulaanbaatar",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Ulan_Bator",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Urumqi",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Ust-Nera",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Vientiane",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Vladivostok",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Yakutsk",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Yangon",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Yekaterinburg",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\Yerevan",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Asia\\__init__.py",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Atlantic\\Azores",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Atlantic\\Bermuda",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Atlantic\\Canary",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Atlantic\\Cape_Verde",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Atlantic\\Faeroe",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Atlantic\\Faroe",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Atlantic\\Jan_Mayen",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Atlantic\\Madeira",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Atlantic\\Reykjavik",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Atlantic\\South_Georgia",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Atlantic\\Stanley",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Atlantic\\St_Helena",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Atlantic\\__init__.py",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Australia\\ACT",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Australia\\Adelaide",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Australia\\Brisbane",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Australia\\Broken_Hill",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Australia\\Canberra",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Australia\\Currie",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Australia\\Darwin",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Australia\\Eucla",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Australia\\Hobart",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Australia\\LHI",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Australia\\Lindeman",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Australia\\Lord_Howe",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Australia\\Melbourne",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Australia\\North",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Australia\\NSW",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Australia\\Perth",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Australia\\Queensland",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Australia\\South",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Australia\\Sydney",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Australia\\Tasmania",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Australia\\Victoria",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Australia\\West",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Australia\\Yancowinna",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Australia\\__init__.py",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Brazil\\Acre",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Brazil\\DeNoronha",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Brazil\\East",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Brazil\\West",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Brazil\\__init__.py",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Canada\\Atlantic",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Canada\\Central",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Canada\\Eastern",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Canada\\Mountain",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Canada\\Newfoundland",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Canada\\Pacific",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Canada\\Saskatchewan",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Canada\\Yukon",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Canada\\__init__.py",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Chile\\Continental",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Chile\\EasterIsland",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Chile\\__init__.py",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Etc\\GMT",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Etc\\GMT+0",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Etc\\GMT+1",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Etc\\GMT+10",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Etc\\GMT+11",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Etc\\GMT+12",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Etc\\GMT+2",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Etc\\GMT+3",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Etc\\GMT+4",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Etc\\GMT+5",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Etc\\GMT+6",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Etc\\GMT+7",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Etc\\GMT+8",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Etc\\GMT+9",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Etc\\GMT-0",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Etc\\GMT-1",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Etc\\GMT-10",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Etc\\GMT-11",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Etc\\GMT-12",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Etc\\GMT-13",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Etc\\GMT-14",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Etc\\GMT-2",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Etc\\GMT-3",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Etc\\GMT-4",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Etc\\GMT-5",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Etc\\GMT-6",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Etc\\GMT-7",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Etc\\GMT-8",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Etc\\GMT-9",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Etc\\GMT0",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Etc\\Greenwich",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Etc\\UCT",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Etc\\Universal",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Etc\\UTC",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Etc\\Zulu",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Etc\\__init__.py",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Amsterdam",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Andorra",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Astrakhan",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Athens",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Belfast",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Belgrade",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Berlin",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Bratislava",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Brussels",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Bucharest",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Budapest",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Busingen",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Chisinau",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Copenhagen",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Dublin",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Gibraltar",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Guernsey",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Helsinki",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Isle_of_Man",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Istanbul",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Jersey",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Kaliningrad",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Kiev",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Kirov",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Kyiv",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Lisbon",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Ljubljana",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\London",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Luxembourg",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Madrid",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Malta",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Mariehamn",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Minsk",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Monaco",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Moscow",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Nicosia",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Oslo",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Paris",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Podgorica",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Prague",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Riga",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Rome",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Samara",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\San_Marino",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Sarajevo",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Saratov",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Simferopol",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Skopje",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Sofia",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Stockholm",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Tallinn",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Tirane",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Tiraspol",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Ulyanovsk",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Uzhgorod",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Vaduz",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Vatican",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Vienna",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Vilnius",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Volgograd",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Warsaw",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Zagreb",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Zaporozhye",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\Zurich",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Europe\\__init__.py",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Indian\\Antananarivo",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Indian\\Chagos",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Indian\\Christmas",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Indian\\Cocos",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Indian\\Comoro",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Indian\\Kerguelen",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Indian\\Mahe",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Indian\\Maldives",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Indian\\Mauritius",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Indian\\Mayotte",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Indian\\Reunion",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Indian\\__init__.py",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Mexico\\BajaNorte",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Mexico\\BajaSur",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Mexico\\General",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Mexico\\__init__.py",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Apia",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Auckland",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Bougainville",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Chatham",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Chuuk",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Easter",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Efate",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Enderbury",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Fakaofo",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Fiji",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Funafuti",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Galapagos",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Gambier",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Guadalcanal",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Guam",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Honolulu",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Johnston",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Kanton",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Kiritimati",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Kosrae",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Kwajalein",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Majuro",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Marquesas",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Midway",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Nauru",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Niue",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Norfolk",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Noumea",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Pago_Pago",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Palau",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Pitcairn",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Pohnpei",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Ponape",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Port_Moresby",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Rarotonga",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Saipan",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Samoa",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Tahiti",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Tarawa",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Tongatapu",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Truk",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Wake",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Wallis",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\Yap",
      "Lib\\site-packages\\tzdata\\zoneinfo\\Pacific\\__init__.py",
      "Lib\\site-packages\\tzdata\\zoneinfo\\US\\Alaska",
      "Lib\\site-packages\\tzdata\\zoneinfo\\US\\Aleutian",
      "Lib\\site-packages\\tzdata\\zoneinfo\\US\\Arizona",
      "Lib\\site-packages\\tzdata\\zoneinfo\\US\\Central",
      "Lib\\site-packages\\tzdata\\zoneinfo\\US\\East-Indiana",
      "Lib\\site-packages\\tzdata\\zoneinfo\\US\\Eastern",
      "Lib\\site-packages\\tzdata\\zoneinfo\\US\\Hawaii",
      "Lib\\site-packages\\tzdata\\zoneinfo\\US\\Indiana-Starke",
      "Lib\\site-packages\\tzdata\\zoneinfo\\US\\Michigan",
      "Lib\\site-packages\\tzdata\\zoneinfo\\US\\Mountain",
      "Lib\\site-packages\\tzdata\\zoneinfo\\US\\Pacific",
      "Lib\\site-packages\\tzdata\\zoneinfo\\US\\Samoa",
      "Lib\\site-packages\\tzdata\\zoneinfo\\US\\__init__.py",
      "Lib\\site-packages\\tzdata-2025.2.dist-info\\INSTALLER",
      "Lib\\site-packages\\tzdata-2025.2.dist-info\\licenses",
      "Lib\\site-packages\\tzdata-2025.2.dist-info\\METADATA",
      "Lib\\site-packages\\tzdata-2025.2.dist-info\\RECORD",
      "Lib\\site-packages\\tzdata-2025.2.dist-info\\top_level.txt",
      "Lib\\site-packages\\tzdata-2025.2.dist-info\\WHEEL",
      "Lib\\site-packages\\tzdata-2025.2.dist-info\\licenses\\LICENSE",
      "Lib\\site-packages\\tzdata-2025.2.dist-info\\licenses\\licenses",
      "Lib\\site-packages\\tzdata-2025.2.dist-info\\licenses\\licenses\\LICENSE_APACHE",
      "Lib\\site-packages\\urllib3\\connection.py",
      "Lib\\site-packages\\urllib3\\connectionpool.py",
      "Lib\\site-packages\\urllib3\\contrib",
      "Lib\\site-packages\\urllib3\\exceptions.py",
      "Lib\\site-packages\\urllib3\\fields.py",
      "Lib\\site-packages\\urllib3\\filepost.py",
      "Lib\\site-packages\\urllib3\\http2",
      "Lib\\site-packages\\urllib3\\poolmanager.py",
      "Lib\\site-packages\\urllib3\\py.typed",
      "Lib\\site-packages\\urllib3\\response.py",
      "Lib\\site-packages\\urllib3\\util",
      "Lib\\site-packages\\urllib3\\_base_connection.py",
      "Lib\\site-packages\\urllib3\\_collections.py",
      "Lib\\site-packages\\urllib3\\_request_methods.py",
      "Lib\\site-packages\\urllib3\\_version.py",
      "Lib\\site-packages\\urllib3\\__init__.py",
      "Lib\\site-packages\\urllib3\\contrib\\emscripten",
      "Lib\\site-packages\\urllib3\\contrib\\pyopenssl.py",
      "Lib\\site-packages\\urllib3\\contrib\\socks.py",
      "Lib\\site-packages\\urllib3\\contrib\\__init__.py",
      "Lib\\site-packages\\urllib3\\contrib\\emscripten\\connection.py",
      "Lib\\site-packages\\urllib3\\contrib\\emscripten\\emscripten_fetch_worker.js",
      "Lib\\site-packages\\urllib3\\contrib\\emscripten\\fetch.py",
      "Lib\\site-packages\\urllib3\\contrib\\emscripten\\request.py",
      "Lib\\site-packages\\urllib3\\contrib\\emscripten\\response.py",
      "Lib\\site-packages\\urllib3\\contrib\\emscripten\\__init__.py",
      "Lib\\site-packages\\urllib3\\http2\\connection.py",
      "Lib\\site-packages\\urllib3\\http2\\probe.py",
      "Lib\\site-packages\\urllib3\\http2\\__init__.py",
      "Lib\\site-packages\\urllib3\\util\\connection.py",
      "Lib\\site-packages\\urllib3\\util\\proxy.py",
      "Lib\\site-packages\\urllib3\\util\\request.py",
      "Lib\\site-packages\\urllib3\\util\\response.py",
      "Lib\\site-packages\\urllib3\\util\\retry.py",
      "Lib\\site-packages\\urllib3\\util\\ssltransport.py",
      "Lib\\site-packages\\urllib3\\util\\ssl_.py",
      "Lib\\site-packages\\urllib3\\util\\ssl_match_hostname.py",
      "Lib\\site-packages\\urllib3\\util\\timeout.py",
      "Lib\\site-packages\\urllib3\\util\\url.py",
      "Lib\\site-packages\\urllib3\\util\\util.py",
      "Lib\\site-packages\\urllib3\\util\\wait.py",
      "Lib\\site-packages\\urllib3\\util\\__init__.py",
      "Lib\\site-packages\\urllib3-2.5.0.dist-info\\INSTALLER",
      "Lib\\site-packages\\urllib3-2.5.0.dist-info\\licenses",
      "Lib\\site-packages\\urllib3-2.5.0.dist-info\\METADATA",
      "Lib\\site-packages\\urllib3-2.5.0.dist-info\\RECORD",
      "Lib\\site-packages\\urllib3-2.5.0.dist-info\\WHEEL",
      "Lib\\site-packages\\urllib3-2.5.0.dist-info\\licenses\\LICENSE.txt",
      "Lib\\site-packages\\uvicorn\\config.py",
      "Lib\\site-packages\\uvicorn\\importer.py",
      "Lib\\site-packages\\uvicorn\\lifespan",
      "Lib\\site-packages\\uvicorn\\logging.py",
      "Lib\\site-packages\\uvicorn\\loops",
      "Lib\\site-packages\\uvicorn\\main.py",
      "Lib\\site-packages\\uvicorn\\middleware",
      "Lib\\site-packages\\uvicorn\\protocols",
      "Lib\\site-packages\\uvicorn\\py.typed",
      "Lib\\site-packages\\uvicorn\\server.py",
      "Lib\\site-packages\\uvicorn\\supervisors",
      "Lib\\site-packages\\uvicorn\\workers.py",
      "Lib\\site-packages\\uvicorn\\_compat.py",
      "Lib\\site-packages\\uvicorn\\_subprocess.py",
      "Lib\\site-packages\\uvicorn\\_types.py",
      "Lib\\site-packages\\uvicorn\\__init__.py",
      "Lib\\site-packages\\uvicorn\\__main__.py",
      "Lib\\site-packages\\uvicorn\\lifespan\\off.py",
      "Lib\\site-packages\\uvicorn\\lifespan\\on.py",
      "Lib\\site-packages\\uvicorn\\lifespan\\__init__.py",
      "Lib\\site-packages\\uvicorn\\loops\\asyncio.py",
      "Lib\\site-packages\\uvicorn\\loops\\auto.py",
      "Lib\\site-packages\\uvicorn\\loops\\uvloop.py",
      "Lib\\site-packages\\uvicorn\\loops\\__init__.py",
      "Lib\\site-packages\\uvicorn\\middleware\\asgi2.py",
      "Lib\\site-packages\\uvicorn\\middleware\\message_logger.py",
      "Lib\\site-packages\\uvicorn\\middleware\\proxy_headers.py",
      "Lib\\site-packages\\uvicorn\\middleware\\wsgi.py",
      "Lib\\site-packages\\uvicorn\\middleware\\__init__.py",
      "Lib\\site-packages\\uvicorn\\protocols\\http",
      "Lib\\site-packages\\uvicorn\\protocols\\utils.py",
      "Lib\\site-packages\\uvicorn\\protocols\\websockets",
      "Lib\\site-packages\\uvicorn\\protocols\\__init__.py",
      "Lib\\site-packages\\uvicorn\\protocols\\http\\auto.py",
      "Lib\\site-packages\\uvicorn\\protocols\\http\\flow_control.py",
      "Lib\\site-packages\\uvicorn\\protocols\\http\\h11_impl.py",
      "Lib\\site-packages\\uvicorn\\protocols\\http\\httptools_impl.py",
      "Lib\\site-packages\\uvicorn\\protocols\\http\\__init__.py",
      "Lib\\site-packages\\uvicorn\\protocols\\websockets\\auto.py",
      "Lib\\site-packages\\uvicorn\\protocols\\websockets\\websockets_impl.py",
      "Lib\\site-packages\\uvicorn\\protocols\\websockets\\websockets_sansio_impl.py",
      "Lib\\site-packages\\uvicorn\\protocols\\websockets\\wsproto_impl.py",
      "Lib\\site-packages\\uvicorn\\protocols\\websockets\\__init__.py",
      "Lib\\site-packages\\uvicorn\\supervisors\\basereload.py",
      "Lib\\site-packages\\uvicorn\\supervisors\\multiprocess.py",
      "Lib\\site-packages\\uvicorn\\supervisors\\statreload.py",
      "Lib\\site-packages\\uvicorn\\supervisors\\watchfilesreload.py",
      "Lib\\site-packages\\uvicorn\\supervisors\\__init__.py",
      "Lib\\site-packages\\uvicorn-0.38.0.dist-info\\entry_points.txt",
      "Lib\\site-packages\\uvicorn-0.38.0.dist-info\\INSTALLER",
      "Lib\\site-packages\\uvicorn-0.38.0.dist-info\\licenses",
      "Lib\\site-packages\\uvicorn-0.38.0.dist-info\\METADATA",
      "Lib\\site-packages\\uvicorn-0.38.0.dist-info\\RECORD",
      "Lib\\site-packages\\uvicorn-0.38.0.dist-info\\REQUESTED",
      "Lib\\site-packages\\uvicorn-0.38.0.dist-info\\WHEEL",
      "Lib\\site-packages\\uvicorn-0.38.0.dist-info\\licenses\\LICENSE.md",
      "Lib\\site-packages\\watchdog\\events.py",
      "Lib\\site-packages\\watchdog\\observers",
      "Lib\\site-packages\\watchdog\\py.typed",
      "Lib\\site-packages\\watchdog\\tricks",
      "Lib\\site-packages\\watchdog\\utils",
      "Lib\\site-packages\\watchdog\\version.py",
      "Lib\\site-packages\\watchdog\\watchmedo.py",
      "Lib\\site-packages\\watchdog\\__init__.py",
      "Lib\\site-packages\\watchdog\\observers\\api.py",
      "Lib\\site-packages\\watchdog\\observers\\fsevents.py",
      "Lib\\site-packages\\watchdog\\observers\\fsevents2.py",
      "Lib\\site-packages\\watchdog\\observers\\inotify.py",
      "Lib\\site-packages\\watchdog\\observers\\inotify_buffer.py",
      "Lib\\site-packages\\watchdog\\observers\\inotify_c.py",
      "Lib\\site-packages\\watchdog\\observers\\kqueue.py",
      "Lib\\site-packages\\watchdog\\observers\\polling.py",
      "Lib\\site-packages\\watchdog\\observers\\read_directory_changes.py",
      "Lib\\site-packages\\watchdog\\observers\\winapi.py",
      "Lib\\site-packages\\watchdog\\observers\\__init__.py",
      "Lib\\site-packages\\watchdog\\tricks\\__init__.py",
      "Lib\\site-packages\\watchdog\\utils\\bricks.py",
      "Lib\\site-packages\\watchdog\\utils\\delayed_queue.py",
      "Lib\\site-packages\\watchdog\\utils\\dirsnapshot.py",
      "Lib\\site-packages\\watchdog\\utils\\echo.py",
      "Lib\\site-packages\\watchdog\\utils\\event_debouncer.py",
      "Lib\\site-packages\\watchdog\\utils\\patterns.py",
      "Lib\\site-packages\\watchdog\\utils\\platform.py",
      "Lib\\site-packages\\watchdog\\utils\\process_watcher.py",
      "Lib\\site-packages\\watchdog\\utils\\__init__.py",
      "Lib\\site-packages\\watchdog-6.0.0.dist-info\\AUTHORS",
      "Lib\\site-packages\\watchdog-6.0.0.dist-info\\COPYING",
      "Lib\\site-packages\\watchdog-6.0.0.dist-info\\entry_points.txt",
      "Lib\\site-packages\\watchdog-6.0.0.dist-info\\INSTALLER",
      "Lib\\site-packages\\watchdog-6.0.0.dist-info\\LICENSE",
      "Lib\\site-packages\\watchdog-6.0.0.dist-info\\METADATA",
      "Lib\\site-packages\\watchdog-6.0.0.dist-info\\RECORD",
      "Lib\\site-packages\\watchdog-6.0.0.dist-info\\top_level.txt",
      "Lib\\site-packages\\watchdog-6.0.0.dist-info\\WHEEL",
      "Lib\\site-packages\\yarl\\py.typed",
      "Lib\\site-packages\\yarl\\_parse.py",
      "Lib\\site-packages\\yarl\\_path.py",
      "Lib\\site-packages\\yarl\\_query.py",
      "Lib\\site-packages\\yarl\\_quoters.py",
      "Lib\\site-packages\\yarl\\_quoting.py",
      "Lib\\site-packages\\yarl\\_quoting_c.cp313-win_amd64.pyd",
      "Lib\\site-packages\\yarl\\_quoting_c.pyx",
      "Lib\\site-packages\\yarl\\_quoting_py.py",
      "Lib\\site-packages\\yarl\\_url.py",
      "Lib\\site-packages\\yarl\\__init__.py",
      "Lib\\site-packages\\yarl-1.22.0.dist-info\\INSTALLER",
      "Lib\\site-packages\\yarl-1.22.0.dist-info\\licenses",
      "Lib\\site-packages\\yarl-1.22.0.dist-info\\METADATA",
      "Lib\\site-packages\\yarl-1.22.0.dist-info\\RECORD",
      "Lib\\site-packages\\yarl-1.22.0.dist-info\\top_level.txt",
      "Lib\\site-packages\\yarl-1.22.0.dist-info\\WHEEL",
      "Lib\\site-packages\\yarl-1.22.0.dist-info\\licenses\\LICENSE",
      "Lib\\site-packages\\yarl-1.22.0.dist-info\\licenses\\NOTICE",
      "llm\\__pycache__",
      "llm\\__pycache__\\api_models.cpython-311.pyc",
      "llm\\__pycache__\\claude_flow_integration.cpython-311.pyc",
      "llm\\__pycache__\\local_models.cpython-311.pyc",
      "llm\\__pycache__\\model_manager.cpython-311.pyc",
      "llm\\__pycache__\\prompt_templates.cpython-311.pyc",
      "llm\\__pycache__\\__init__.cpython-311.pyc",
      "optimization\\__pycache__",
      "optimization\\__pycache__\\optimization_engine.cpython-311.pyc",
      "optimization\\__pycache__\\__init__.cpython-311.pyc",
      "orchestrator\\__pycache__",
      "orchestrator\\__pycache__\\agent_orchestrator.cpython-311.pyc",
      "orchestrator\\__pycache__\\workflow_orchestrator.cpython-311.pyc",
      "orchestrator\\__pycache__\\__init__.cpython-311.pyc",
      "output\\__pycache__",
      "output\\__pycache__\\artifact_generator.cpython-311.pyc",
      "output\\__pycache__\\report_generator.cpython-311.pyc",
      "output\\__pycache__\\__init__.cpython-311.pyc",
      "routes\\__pycache__",
      "routes\\__pycache__\\agent_routes.cpython-311.pyc",
      "routes\\__pycache__\\analysis_routes.cpython-311.pyc",
      "routes\\__pycache__\\claude_flow_routes.cpython-311.pyc",
      "routes\\__pycache__\\model_routes.cpython-311.pyc",
      "routes\\__pycache__\\workflow_routes.cpython-311.pyc",
      "routes\\__pycache__\\__init__.cpython-311.pyc",
      "services\\__pycache__",
      "services\\__pycache__\\agent_service.cpython-311.pyc",
      "services\\__pycache__\\project_service.cpython-311.pyc",
      "services\\__pycache__\\__init__.cpython-311.pyc",
      "settings\\__pycache__",
      "settings\\__pycache__\\__init__.cpython-311.pyc",
      "share\\jupyter\\nbextensions\\pydeck\\index.js.map",
      "ui\\__pycache__",
      "ui\\components\\__pycache__",
      "ui\\components\\__pycache__\\agent_monitor.cpython-311.pyc",
      "ui\\components\\__pycache__\\analysis_dashboard.cpython-311.pyc",
      "ui\\components\\__pycache__\\chat_interface.cpython-311.pyc",
      "ui\\components\\__pycache__\\optimization_view.cpython-311.pyc",
      "ui\\components\\__pycache__\\settings_panel.cpython-311.pyc",
      "ui\\components\\__pycache__\\__init__.cpython-311.pyc",
      "ui\\pages\\__pycache__",
      "ui\\pages\\__pycache__\\dashboard_page.cpython-311.pyc",
      "ui\\pages\\__pycache__\\__init__.cpython-311.pyc",
      "ui\\__pycache__\\modern_styles.cpython-311.pyc",
      "ui\\__pycache__\\modern_ui_manager.cpython-311.pyc",
      "ui\\__pycache__\\__init__.cpython-311.pyc",
      "workflows\\__pycache__",
      "workflows\\__pycache__\\base_workflow.cpython-311.pyc",
      "workflows\\__pycache__\\project_analysis_workflow.cpython-311.pyc",
      "workflows\\__pycache__\\simple_analysis_workflow.cpython-311.pyc",
      "workflows\\__pycache__\\__init__.cpython-311.pyc",
      "__pycache__\\app.cpython-311.pyc"
    ]
  },
  "file_count": 363,
  "languages": [
    "Python",
    "Markdown",
    "XML",
    "JSON",
    "YAML",
    "JavaScript",
    "Shell",
    "HTML",
    "Mobile App",
    "Python Docker"
  ],
  "frameworks": [
    {
      "name": "React",
      "type": "Frontend",
      "confidence": 1.0,
      "detection_method": "code_patterns",
      "detection_details": [
        "import: react",
        "import: from react",
        "pattern: JSX",
        "pattern: React.Component",
        "pattern: useState",
        "pattern: useEffect"
      ],
      "detection_methods": [
        "code_patterns"
      ]
    },
    {
      "name": "Docker",
      "type": "Library",
      "confidence": 0.9,
      "detection_method": "config_file",
      "config_file": "docker-compose.yml",
      "detection_methods": [
        "config_file"
      ]
    },
    {
      "name": "Node.js",
      "type": "Library",
      "confidence": 0.9,
      "detection_method": "config_file",
      "config_file": "package.json",
      "detection_methods": [
        "config_file"
      ]
    },
    {
      "name": "pytest",
      "type": "Testing",
      "confidence": 0.9,
      "detection_method": "config_file",
      "config_file": "pytest.ini",
      "detection_methods": [
        "code_patterns",
        "dependency",
        "config_file"
      ]
    },
    {
      "name": "Python",
      "type": "Library",
      "confidence": 0.9,
      "detection_method": "config_file",
      "config_file": "requirements.txt",
      "detection_methods": [
        "config_file"
      ]
    },
    {
      "name": "FastAPI",
      "type": "Backend",
      "confidence": 0.9,
      "detection_method": "dependency",
      "dependency": "fastapi",
      "detection_methods": [
        "code_patterns",
        "dependency"
      ]
    },
    {
      "name": "Celery",
      "type": "Library",
      "confidence": 0.9,
      "detection_method": "dependency",
      "dependency": "celery",
      "detection_methods": [
        "dependency"
      ]
    },
    {
      "name": "Vue",
      "type": "Frontend",
      "confidence": 0.8500000000000001,
      "detection_method": "code_patterns",
      "detection_details": [
        "import: vue",
        "import: from vue",
        "pattern: <template>",
        "pattern: export default",
        "pattern: Vue.component"
      ],
      "detection_methods": [
        "code_patterns"
      ]
    },
    {
      "name": "Angular",
      "type": "Frontend",
      "confidence": 0.8500000000000001,
      "detection_method": "code_patterns",
      "detection_details": [
        "import: @angular",
        "import: from @angular",
        "pattern: @Component",
        "pattern: @Injectable",
        "pattern: NgModule"
      ],
      "detection_methods": [
        "code_patterns"
      ]
    },
    {
      "name": "Express.js",
      "type": "Frontend",
      "confidence": 0.8500000000000001,
      "detection_method": "code_patterns",
      "detection_details": [
        "import: express",
        "import: from express",
        "pattern: app.get",
        "pattern: app.post",
        "pattern: express()"
      ],
      "detection_methods": [
        "code_patterns"
      ]
    },
    {
      "name": "unittest",
      "type": "Testing",
      "confidence": 0.8500000000000001,
      "detection_method": "code_patterns",
      "detection_details": [
        "import: unittest",
        "import: from unittest",
        "pattern: class Test",
        "pattern: def test_",
        "pattern: self.assertEqual"
      ],
      "detection_methods": [
        "code_patterns"
      ]
    },
    {
      "name": "Flask",
      "type": "Backend",
      "confidence": 0.7000000000000001,
      "detection_method": "code_patterns",
      "detection_details": [
        "import: flask",
        "import: from flask",
        "pattern: @app.route",
        "pattern: Flask("
      ],
      "detection_methods": [
        "code_patterns"
      ]
    },
    {
      "name": "Next.js",
      "type": "Frontend",
      "confidence": 0.7000000000000001,
      "detection_method": "code_patterns",
      "detection_details": [
        "import: next",
        "import: from next",
        "pattern: getServerSideProps",
        "pattern: getStaticProps"
      ],
      "detection_methods": [
        "code_patterns"
      ]
    },
    {
      "name": "SQLAlchemy",
      "type": "Database",
      "confidence": 0.7000000000000001,
      "detection_method": "code_patterns",
      "detection_details": [
        "import: sqlalchemy",
        "import: from sqlalchemy",
        "pattern: Base = declarative_base",
        "pattern: sessionmaker"
      ],
      "detection_methods": [
        "code_patterns"
      ]
    },
    {
      "name": "Django",
      "type": "Backend",
      "confidence": 0.5,
      "detection_method": "structure",
      "detection_details": [
        "file: settings.py",
        "directory: templates"
      ],
      "detection_methods": [
        "code_patterns",
        "structure"
      ]
    },
    {
      "name": "Jest",
      "type": "Testing",
      "confidence": 0.44999999999999996,
      "detection_method": "code_patterns",
      "detection_details": [
        "pattern: describe(",
        "pattern: it(",
        "pattern: test("
      ],
      "detection_methods": [
        "code_patterns"
      ]
    },
    {
      "name": "Bootstrap",
      "type": "CSS Framework",
      "confidence": 0.44999999999999996,
      "detection_method": "code_patterns",
      "detection_details": [
        "pattern: bootstrap",
        "pattern: btn-",
        "pattern: container"
      ],
      "detection_methods": [
        "code_patterns"
      ]
    },
    {
      "name": "Sass",
      "type": "CSS Framework",
      "confidence": 0.44999999999999996,
      "detection_method": "code_patterns",
      "detection_details": [
        "pattern: @import",
        "pattern: $",
        "pattern: mixin"
      ],
      "detection_methods": [
        "code_patterns"
      ]
    },
    {
      "name": "Pyramid",
      "type": "Backend",
      "confidence": 0.4,
      "detection_method": "code_patterns",
      "detection_details": [
        "import: pyramid",
        "import: from pyramid"
      ],
      "detection_methods": [
        "code_patterns"
      ]
    },
    {
      "name": "Nuxt.js",
      "type": "Frontend",
      "confidence": 0.4,
      "detection_method": "code_patterns",
      "detection_details": [
        "import: nuxt",
        "import: from nuxt"
      ],
      "detection_methods": [
        "code_patterns"
      ]
    },
    {
      "name": "React Native",
      "type": "Mobile",
      "confidence": 0.4,
      "detection_method": "code_patterns",
      "detection_details": [
        "import: react-native",
        "import: from react-native"
      ],
      "detection_methods": [
        "code_patterns"
      ]
    },
    {
      "name": "Mongoose",
      "type": "Database",
      "confidence": 0.4,
      "detection_method": "code_patterns",
      "detection_details": [
        "import: mongoose",
        "import: from mongoose"
      ],
      "detection_methods": [
        "code_patterns"
      ]
    },
    {
      "name": "Mocha",
      "type": "Testing",
      "confidence": 0.3,
      "detection_method": "code_patterns",
      "detection_details": [
        "pattern: describe(",
        "pattern: it("
      ],
      "detection_methods": [
        "code_patterns"
      ]
    },
    {
      "name": "Prisma",
      "type": "Database",
      "confidence": 0.3,
      "detection_method": "code_patterns",
      "detection_details": [
        "pattern: model ",
        "pattern: datasource db"
      ],
      "detection_methods": [
        "code_patterns"
      ]
    },
    {
      "name": "Tailwind CSS",
      "type": "CSS Framework",
      "confidence": 0.3,
      "detection_method": "code_patterns",
      "detection_details": [
        "pattern: @tailwind",
        "pattern: class=\""
      ],
      "detection_methods": [
        "code_patterns"
      ]
    }
  ],
  "dependencies": {
    "packages": [
      {
        "name": "claude-flow",
        "version": "alpha",
        "type": "dependency",
        "manager": "npm",
        "file": "package.json"
      },
      {
        "name": "fastapi",
        "version": "==0.104.1",
        "type": "dependency",
        "manager": "pip",
        "file": "requirements.txt"
      },
      {
        "name": "uvicorn[standard]==0.24.0",
        "version": "latest",
        "type": "dependency",
        "manager": "pip",
        "file": "requirements.txt"
      },
      {
        "name": "python-dotenv",
        "version": "==1.0.0",
        "type": "dependency",
        "manager": "pip",
        "file": "requirements.txt"
      },
      {
        "name": "pytest",
        "version": "==7.4.3",
        "type": "dependency",
        "manager": "pip",
        "file": "requirements.txt"
      },
      {
        "name": "pytest-asyncio",
        "version": "==0.21.1",
        "type": "dependency",
        "manager": "pip",
        "file": "requirements.txt"
      },
      {
        "name": "httpx",
        "version": "==0.25.2",
        "type": "dependency",
        "manager": "pip",
        "file": "requirements.txt"
      },
      {
        "name": "openai",
        "version": "==1.3.7",
        "type": "dependency",
        "manager": "pip",
        "file": "requirements.txt"
      },
      {
        "name": "google-api-python-client",
        "version": "==2.108.0",
        "type": "dependency",
        "manager": "pip",
        "file": "requirements.txt"
      },
      {
        "name": "anthropic",
        "version": "==0.7.8",
        "type": "dependency",
        "manager": "pip",
        "file": "requirements.txt"
      },
      {
        "name": "pydantic",
        "version": "==2.5.0",
        "type": "dependency",
        "manager": "pip",
        "file": "requirements.txt"
      },
      {
        "name": "pydantic-settings",
        "version": "==2.1.0",
        "type": "dependency",
        "manager": "pip",
        "file": "requirements.txt"
      },
      {
        "name": "importlib-metadata",
        "version": "==6.8.0",
        "type": "dependency",
        "manager": "pip",
        "file": "requirements.txt"
      },
      {
        "name": "typing-extensions",
        "version": "==4.8.0",
        "type": "dependency",
        "manager": "pip",
        "file": "requirements.txt"
      },
      {
        "name": "asyncio",
        "version": "==3.4.3",
        "type": "dependency",
        "manager": "pip",
        "file": "requirements.txt"
      },
      {
        "name": "aiofiles",
        "version": "==23.2.1",
        "type": "dependency",
        "manager": "pip",
        "file": "requirements.txt"
      },
      {
        "name": "python-multipart",
        "version": "==0.0.6",
        "type": "dependency",
        "manager": "pip",
        "file": "requirements.txt"
      },
      {
        "name": "jinja2",
        "version": "==3.1.2",
        "type": "dependency",
        "manager": "pip",
        "file": "requirements.txt"
      },
      {
        "name": "streamlit",
        "version": "==1.29.0",
        "type": "dependency",
        "manager": "pip",
        "file": "requirements.txt"
      },
      {
        "name": "tree-sitter",
        "version": "==0.20.4",
        "type": "dependency",
        "manager": "pip",
        "file": "requirements.txt"
      },
      {
        "name": "esprima",
        "version": "==4.0.1",
        "type": "dependency",
        "manager": "pip",
        "file": "requirements.txt"
      },
      {
        "name": "astroid",
        "version": "==3.0.1",
        "type": "dependency",
        "manager": "pip",
        "file": "requirements.txt"
      },
      {
        "name": "ollama",
        "version": "==0.1.6",
        "type": "dependency",
        "manager": "pip",
        "file": "requirements.txt"
      },
      {
        "name": "pymongo",
        "version": "==4.6.0",
        "type": "dependency",
        "manager": "pip",
        "file": "requirements.txt"
      },
      {
        "name": "redis",
        "version": "==5.0.1",
        "type": "dependency",
        "manager": "pip",
        "file": "requirements.txt"
      },
      {
        "name": "celery",
        "version": "==5.3.4",
        "type": "dependency",
        "manager": "pip",
        "file": "requirements.txt"
      },
      {
        "name": "safety",
        "version": "==2.3.5",
        "type": "dependency",
        "manager": "pip",
        "file": "requirements.txt"
      },
      {
        "name": "radon",
        "version": "==6.0.1",
        "type": "dependency",
        "manager": "pip",
        "file": "requirements.txt"
      },
      {
        "name": "lizard",
        "version": "==1.17.10",
        "type": "dependency",
        "manager": "pip",
        "file": "requirements.txt"
      },
      {
        "name": "psutil",
        "version": "==5.9.6",
        "type": "dependency",
        "manager": "pip",
        "file": "requirements.txt"
      },
      {
        "name": "pillow",
        "version": ">=10.0.0",
        "type": "dependency",
        "manager": "pip",
        "file": "requirements.txt"
      },
      {
        "name": "imageio",
        "version": ">=2.31.0",
        "type": "dependency",
        "manager": "pip",
        "file": "requirements.txt"
      },
      {
        "name": "imageio-ffmpeg",
        "version": ">=0.4.9",
        "type": "dependency",
        "manager": "pip",
        "file": "requirements.txt"
      },
      {
        "name": "numpy",
        "version": ">=1.24.0",
        "type": "dependency",
        "manager": "pip",
        "file": "requirements.txt"
      },
      {
        "name": "fastapi",
        "version": "==0.104.1",
        "type": "dependency",
        "manager": "pip",
        "file": "requirements.txt"
      },
      {
        "name": "uvicorn[standard]==0.24.0",
        "version": "latest",
        "type": "dependency",
        "manager": "pip",
        "file": "requirements.txt"
      },
      {
        "name": "pytest",
        "version": "==7.4.3",
        "type": "dependency",
        "manager": "pip",
        "file": "requirements.txt"
      }
    ],
    "package_managers": [
      "npm",
      "pip"
    ],
    "total_dependencies": 37,
    "vulnerabilities": [],
    "outdated_packages": [],
    "license_info": {},
    "dependency_graph": {
      "nodes": [
        {
          "id": "claude-flow",
          "label": "claude-flow",
          "version": "alpha",
          "manager": "npm",
          "type": "dependency"
        },
        {
          "id": "fastapi",
          "label": "fastapi",
          "version": "==0.104.1",
          "manager": "pip",
          "type": "dependency"
        },
        {
          "id": "uvicorn[standard]==0.24.0",
          "label": "uvicorn[standard]==0.24.0",
          "version": "latest",
          "manager": "pip",
          "type": "dependency"
        },
        {
          "id": "python-dotenv",
          "label": "python-dotenv",
          "version": "==1.0.0",
          "manager": "pip",
          "type": "dependency"
        },
        {
          "id": "pytest",
          "label": "pytest",
          "version": "==7.4.3",
          "manager": "pip",
          "type": "dependency"
        },
        {
          "id": "pytest-asyncio",
          "label": "pytest-asyncio",
          "version": "==0.21.1",
          "manager": "pip",
          "type": "dependency"
        },
        {
          "id": "httpx",
          "label": "httpx",
          "version": "==0.25.2",
          "manager": "pip",
          "type": "dependency"
        },
        {
          "id": "openai",
          "label": "openai",
          "version": "==1.3.7",
          "manager": "pip",
          "type": "dependency"
        },
        {
          "id": "google-api-python-client",
          "label": "google-api-python-client",
          "version": "==2.108.0",
          "manager": "pip",
          "type": "dependency"
        },
        {
          "id": "anthropic",
          "label": "anthropic",
          "version": "==0.7.8",
          "manager": "pip",
          "type": "dependency"
        },
        {
          "id": "pydantic",
          "label": "pydantic",
          "version": "==2.5.0",
          "manager": "pip",
          "type": "dependency"
        },
        {
          "id": "pydantic-settings",
          "label": "pydantic-settings",
          "version": "==2.1.0",
          "manager": "pip",
          "type": "dependency"
        },
        {
          "id": "importlib-metadata",
          "label": "importlib-metadata",
          "version": "==6.8.0",
          "manager": "pip",
          "type": "dependency"
        },
        {
          "id": "typing-extensions",
          "label": "typing-extensions",
          "version": "==4.8.0",
          "manager": "pip",
          "type": "dependency"
        },
        {
          "id": "asyncio",
          "label": "asyncio",
          "version": "==3.4.3",
          "manager": "pip",
          "type": "dependency"
        },
        {
          "id": "aiofiles",
          "label": "aiofiles",
          "version": "==23.2.1",
          "manager": "pip",
          "type": "dependency"
        },
        {
          "id": "python-multipart",
          "label": "python-multipart",
          "version": "==0.0.6",
          "manager": "pip",
          "type": "dependency"
        },
        {
          "id": "jinja2",
          "label": "jinja2",
          "version": "==3.1.2",
          "manager": "pip",
          "type": "dependency"
        },
        {
          "id": "streamlit",
          "label": "streamlit",
          "version": "==1.29.0",
          "manager": "pip",
          "type": "dependency"
        },
        {
          "id": "tree-sitter",
          "label": "tree-sitter",
          "version": "==0.20.4",
          "manager": "pip",
          "type": "dependency"
        },
        {
          "id": "esprima",
          "label": "esprima",
          "version": "==4.0.1",
          "manager": "pip",
          "type": "dependency"
        },
        {
          "id": "astroid",
          "label": "astroid",
          "version": "==3.0.1",
          "manager": "pip",
          "type": "dependency"
        },
        {
          "id": "ollama",
          "label": "ollama",
          "version": "==0.1.6",
          "manager": "pip",
          "type": "dependency"
        },
        {
          "id": "pymongo",
          "label": "pymongo",
          "version": "==4.6.0",
          "manager": "pip",
          "type": "dependency"
        },
        {
          "id": "redis",
          "label": "redis",
          "version": "==5.0.1",
          "manager": "pip",
          "type": "dependency"
        },
        {
          "id": "celery",
          "label": "celery",
          "version": "==5.3.4",
          "manager": "pip",
          "type": "dependency"
        },
        {
          "id": "safety",
          "label": "safety",
          "version": "==2.3.5",
          "manager": "pip",
          "type": "dependency"
        },
        {
          "id": "radon",
          "label": "radon",
          "version": "==6.0.1",
          "manager": "pip",
          "type": "dependency"
        },
        {
          "id": "lizard",
          "label": "lizard",
          "version": "==1.17.10",
          "manager": "pip",
          "type": "dependency"
        },
        {
          "id": "psutil",
          "label": "psutil",
          "version": "==5.9.6",
          "manager": "pip",
          "type": "dependency"
        },
        {
          "id": "pillow",
          "label": "pillow",
          "version": ">=10.0.0",
          "manager": "pip",
          "type": "dependency"
        },
        {
          "id": "imageio",
          "label": "imageio",
          "version": ">=2.31.0",
          "manager": "pip",
          "type": "dependency"
        },
        {
          "id": "imageio-ffmpeg",
          "label": "imageio-ffmpeg",
          "version": ">=0.4.9",
          "manager": "pip",
          "type": "dependency"
        },
        {
          "id": "numpy",
          "label": "numpy",
          "version": ">=1.24.0",
          "manager": "pip",
          "type": "dependency"
        },
        {
          "id": "fastapi",
          "label": "fastapi",
          "version": "==0.104.1",
          "manager": "pip",
          "type": "dependency"
        },
        {
          "id": "uvicorn[standard]==0.24.0",
          "label": "uvicorn[standard]==0.24.0",
          "version": "latest",
          "manager": "pip",
          "type": "dependency"
        },
        {
          "id": "pytest",
          "label": "pytest",
          "version": "==7.4.3",
          "manager": "pip",
          "type": "dependency"
        }
      ],
      "edges": [],
      "clusters": {
        "npm": [
          "claude-flow"
        ],
        "pip": [
          "fastapi",
          "uvicorn[standard]==0.24.0",
          "python-dotenv",
          "pytest",
          "pytest-asyncio",
          "httpx",
          "openai",
          "google-api-python-client",
          "anthropic",
          "pydantic",
          "pydantic-settings",
          "importlib-metadata",
          "typing-extensions",
          "asyncio",
          "aiofiles",
          "python-multipart",
          "jinja2",
          "streamlit",
          "tree-sitter",
          "esprima",
          "astroid",
          "ollama",
          "pymongo",
          "redis",
          "celery",
          "safety",
          "radon",
          "lizard",
          "psutil",
          "pillow",
          "imageio",
          "imageio-ffmpeg",
          "numpy",
          "fastapi",
          "uvicorn[standard]==0.24.0",
          "pytest"
        ]
      }
    }
  },
  "dependency_count": 37,
  "api_endpoints": {
    "endpoints": [
      {
        "path": "startup",
        "method": "ON_EVENT",
        "function_name": "startup_event",
        "framework": "FastAPI",
        "file_path": "app.py",
        "parameters": [],
        "response_model": null
      },
      {
        "path": "shutdown",
        "method": "ON_EVENT",
        "function_name": "startup_event",
        "framework": "FastAPI",
        "file_path": "app.py",
        "parameters": [],
        "response_model": null
      },
      {
        "path": "/",
        "method": "GET",
        "function_name": "root",
        "framework": "FastAPI",
        "file_path": "app.py",
        "parameters": [],
        "response_model": null
      },
      {
        "path": "/status",
        "method": "GET",
        "function_name": "root",
        "framework": "FastAPI",
        "file_path": "app.py",
        "parameters": [],
        "response_model": null
      },
      {
        "path": "/test",
        "method": "GET",
        "function_name": "root",
        "framework": "FastAPI",
        "file_path": "app.py",
        "parameters": [],
        "response_model": null
      },
      {
        "path": "/api/analysis/analyze",
        "method": "POST",
        "function_name": "analyze_project",
        "framework": "FastAPI",
        "file_path": "app.py",
        "parameters": [
          {
            "name": "request",
            "type": "analysis_routes.ProjectAnalysisRequest",
            "required": true
          }
        ],
        "response_model": null
      },
      {
        "path": "/api/analysis/results",
        "method": "GET",
        "function_name": "root",
        "framework": "FastAPI",
        "file_path": "app.py",
        "parameters": [],
        "response_model": null
      },
      {
        "path": "/api/analysis/reports",
        "method": "GET",
        "function_name": "root",
        "framework": "FastAPI",
        "file_path": "app.py",
        "parameters": [],
        "response_model": null
      },
      {
        "path": "/api/analysis/artifacts",
        "method": "GET",
        "function_name": "root",
        "framework": "FastAPI",
        "file_path": "app.py",
        "parameters": [],
        "response_model": null
      },
      {
        "path": "/api/agents/chat",
        "method": "POST",
        "function_name": "analyze_project",
        "framework": "FastAPI",
        "file_path": "app.py",
        "parameters": [
          {
            "name": "request",
            "type": "analysis_routes.ProjectAnalysisRequest",
            "required": true
          }
        ],
        "response_model": null
      },
      {
        "path": "/api/agents/generate",
        "method": "POST",
        "function_name": "analyze_project",
        "framework": "FastAPI",
        "file_path": "app.py",
        "parameters": [
          {
            "name": "request",
            "type": "analysis_routes.ProjectAnalysisRequest",
            "required": true
          }
        ],
        "response_model": null
      },
      {
        "path": "/api/agents/status",
        "method": "GET",
        "function_name": "root",
        "framework": "FastAPI",
        "file_path": "app.py",
        "parameters": [],
        "response_model": null
      },
      {
        "path": "/api/agents/optimizations",
        "method": "GET",
        "function_name": "root",
        "framework": "FastAPI",
        "file_path": "app.py",
        "parameters": [],
        "response_model": null
      },
      {
        "path": "/api/workflows/execute/{workflow_type}",
        "method": "POST",
        "function_name": "analyze_project",
        "framework": "FastAPI",
        "file_path": "app.py",
        "parameters": [
          {
            "name": "request",
            "type": "analysis_routes.ProjectAnalysisRequest",
            "required": true
          }
        ],
        "response_model": null
      },
      {
        "path": "/api/workflows/run-complete",
        "method": "POST",
        "function_name": "analyze_project",
        "framework": "FastAPI",
        "file_path": "app.py",
        "parameters": [
          {
            "name": "request",
            "type": "analysis_routes.ProjectAnalysisRequest",
            "required": true
          }
        ],
        "response_model": null
      },
      {
        "path": "/api/workflows/status",
        "method": "GET",
        "function_name": "root",
        "framework": "FastAPI",
        "file_path": "app.py",
        "parameters": [],
        "response_model": null
      },
      {
        "path": "/api/workflows/progress/{workflow_id}",
        "method": "GET",
        "function_name": "root",
        "framework": "FastAPI",
        "file_path": "app.py",
        "parameters": [],
        "response_model": null
      },
      {
        "path": "/api/models",
        "method": "GET",
        "function_name": "root",
        "framework": "FastAPI",
        "file_path": "app.py",
        "parameters": [],
        "response_model": null
      },
      {
        "path": "/api/models/set",
        "method": "POST",
        "function_name": "analyze_project",
        "framework": "FastAPI",
        "file_path": "app.py",
        "parameters": [
          {
            "name": "request",
            "type": "analysis_routes.ProjectAnalysisRequest",
            "required": true
          }
        ],
        "response_model": null
      },
      {
        "path": "/api/models/current",
        "method": "GET",
        "function_name": "root",
        "framework": "FastAPI",
        "file_path": "app.py",
        "parameters": [],
        "response_model": null
      },
      {
        "path": "/api/claude-flow/swarm/init",
        "method": "POST",
        "function_name": "analyze_project",
        "framework": "FastAPI",
        "file_path": "app.py",
        "parameters": [
          {
            "name": "request",
            "type": "analysis_routes.ProjectAnalysisRequest",
            "required": true
          }
        ],
        "response_model": null
      },
      {
        "path": "/api/claude-flow/swarm/execute",
        "method": "POST",
        "function_name": "analyze_project",
        "framework": "FastAPI",
        "file_path": "app.py",
        "parameters": [
          {
            "name": "request",
            "type": "analysis_routes.ProjectAnalysisRequest",
            "required": true
          }
        ],
        "response_model": null
      },
      {
        "path": "/api/claude-flow/swarm/spawn-agent",
        "method": "POST",
        "function_name": "analyze_project",
        "framework": "FastAPI",
        "file_path": "app.py",
        "parameters": [
          {
            "name": "request",
            "type": "analysis_routes.ProjectAnalysisRequest",
            "required": true
          }
        ],
        "response_model": null
      },
      {
        "path": "/api/claude-flow/swarm/status",
        "method": "GET",
        "function_name": "root",
        "framework": "FastAPI",
        "file_path": "app.py",
        "parameters": [],
        "response_model": null
      },
      {
        "path": "/api/claude-flow/memory/store",
        "method": "POST",
        "function_name": "analyze_project",
        "framework": "FastAPI",
        "file_path": "app.py",
        "parameters": [
          {
            "name": "request",
            "type": "analysis_routes.ProjectAnalysisRequest",
            "required": true
          }
        ],
        "response_model": null
      },
      {
        "path": "/api/claude-flow/memory/query",
        "method": "POST",
        "function_name": "analyze_project",
        "framework": "FastAPI",
        "file_path": "app.py",
        "parameters": [
          {
            "name": "request",
            "type": "analysis_routes.ProjectAnalysisRequest",
            "required": true
          }
        ],
        "response_model": null
      },
      {
        "path": "/api/claude-flow/memory/status",
        "method": "GET",
        "function_name": "root",
        "framework": "FastAPI",
        "file_path": "app.py",
        "parameters": [],
        "response_model": null
      },
      {
        "path": "/api/claude-flow/hive-mind/init",
        "method": "POST",
        "function_name": "analyze_project",
        "framework": "FastAPI",
        "file_path": "app.py",
        "parameters": [
          {
            "name": "request",
            "type": "analysis_routes.ProjectAnalysisRequest",
            "required": true
          }
        ],
        "response_model": null
      },
      {
        "path": "/api/claude-flow/mcp/execute",
        "method": "POST",
        "function_name": "analyze_project",
        "framework": "FastAPI",
        "file_path": "app.py",
        "parameters": [
          {
            "name": "request",
            "type": "analysis_routes.ProjectAnalysisRequest",
            "required": true
          }
        ],
        "response_model": null
      },
      {
        "path": "/api/claude-flow/capabilities",
        "method": "GET",
        "function_name": "root",
        "framework": "FastAPI",
        "file_path": "app.py",
        "parameters": [],
        "response_model": null
      },
      {
        "path": "/chat",
        "method": "POST",
        "function_name": "chat_with_agent",
        "framework": "FastAPI",
        "file_path": "routes\\agent_routes.py",
        "parameters": [
          {
            "name": "request",
            "type": "ChatRequest",
            "required": true
          }
        ],
        "response_model": null
      },
      {
        "path": "/generate",
        "method": "POST",
        "function_name": "chat_with_agent",
        "framework": "FastAPI",
        "file_path": "routes\\agent_routes.py",
        "parameters": [
          {
            "name": "request",
            "type": "ChatRequest",
            "required": true
          }
        ],
        "response_model": null
      },
      {
        "path": "/status",
        "method": "GET",
        "function_name": "get_agent_status",
        "framework": "FastAPI",
        "file_path": "routes\\agent_routes.py",
        "parameters": [],
        "response_model": null
      },
      {
        "path": "/optimizations",
        "method": "GET",
        "function_name": "get_agent_status",
        "framework": "FastAPI",
        "file_path": "routes\\agent_routes.py",
        "parameters": [],
        "response_model": null
      },
      {
        "path": "/analyze",
        "method": "POST",
        "function_name": "analyze_project",
        "framework": "FastAPI",
        "file_path": "routes\\analysis_routes.py",
        "parameters": [
          {
            "name": "request",
            "type": "ProjectAnalysisRequest",
            "required": true
          }
        ],
        "response_model": null
      },
      {
        "path": "/results",
        "method": "GET",
        "function_name": "get_analysis_results",
        "framework": "FastAPI",
        "file_path": "routes\\analysis_routes.py",
        "parameters": [],
        "response_model": null
      },
      {
        "path": "/reports",
        "method": "GET",
        "function_name": "get_analysis_results",
        "framework": "FastAPI",
        "file_path": "routes\\analysis_routes.py",
        "parameters": [],
        "response_model": null
      },
      {
        "path": "/artifacts",
        "method": "GET",
        "function_name": "get_analysis_results",
        "framework": "FastAPI",
        "file_path": "routes\\analysis_routes.py",
        "parameters": [],
        "response_model": null
      },
      {
        "path": "/swarm/init",
        "method": "POST",
        "function_name": "init_swarm",
        "framework": "FastAPI",
        "file_path": "routes\\claude_flow_routes.py",
        "parameters": [
          {
            "name": "request",
            "type": "SwarmInitRequest",
            "required": true
          }
        ],
        "response_model": null
      },
      {
        "path": "/swarm/execute",
        "method": "POST",
        "function_name": "init_swarm",
        "framework": "FastAPI",
        "file_path": "routes\\claude_flow_routes.py",
        "parameters": [
          {
            "name": "request",
            "type": "SwarmInitRequest",
            "required": true
          }
        ],
        "response_model": null
      },
      {
        "path": "/swarm/spawn-agent",
        "method": "POST",
        "function_name": "init_swarm",
        "framework": "FastAPI",
        "file_path": "routes\\claude_flow_routes.py",
        "parameters": [
          {
            "name": "request",
            "type": "SwarmInitRequest",
            "required": true
          }
        ],
        "response_model": null
      },
      {
        "path": "/swarm/status",
        "method": "GET",
        "function_name": "get_swarm_status",
        "framework": "FastAPI",
        "file_path": "routes\\claude_flow_routes.py",
        "parameters": [],
        "response_model": null
      },
      {
        "path": "/memory/store",
        "method": "POST",
        "function_name": "init_swarm",
        "framework": "FastAPI",
        "file_path": "routes\\claude_flow_routes.py",
        "parameters": [
          {
            "name": "request",
            "type": "SwarmInitRequest",
            "required": true
          }
        ],
        "response_model": null
      },
      {
        "path": "/memory/query",
        "method": "POST",
        "function_name": "init_swarm",
        "framework": "FastAPI",
        "file_path": "routes\\claude_flow_routes.py",
        "parameters": [
          {
            "name": "request",
            "type": "SwarmInitRequest",
            "required": true
          }
        ],
        "response_model": null
      },
      {
        "path": "/memory/status",
        "method": "GET",
        "function_name": "get_swarm_status",
        "framework": "FastAPI",
        "file_path": "routes\\claude_flow_routes.py",
        "parameters": [],
        "response_model": null
      },
      {
        "path": "/hive-mind/init",
        "method": "POST",
        "function_name": "init_swarm",
        "framework": "FastAPI",
        "file_path": "routes\\claude_flow_routes.py",
        "parameters": [
          {
            "name": "request",
            "type": "SwarmInitRequest",
            "required": true
          }
        ],
        "response_model": null
      },
      {
        "path": "/mcp/execute",
        "method": "POST",
        "function_name": "init_swarm",
        "framework": "FastAPI",
        "file_path": "routes\\claude_flow_routes.py",
        "parameters": [
          {
            "name": "request",
            "type": "SwarmInitRequest",
            "required": true
          }
        ],
        "response_model": null
      },
      {
        "path": "/capabilities",
        "method": "GET",
        "function_name": "get_swarm_status",
        "framework": "FastAPI",
        "file_path": "routes\\claude_flow_routes.py",
        "parameters": [],
        "response_model": null
      },
      {
        "path": "/health",
        "method": "GET",
        "function_name": "get_swarm_status",
        "framework": "FastAPI",
        "file_path": "routes\\claude_flow_routes.py",
        "parameters": [],
        "response_model": null
      },
      {
        "path": "/set",
        "method": "POST",
        "function_name": "set_model",
        "framework": "FastAPI",
        "file_path": "routes\\model_routes.py",
        "parameters": [
          {
            "name": "request",
            "type": "ModelSelectionRequest",
            "required": true
          }
        ],
        "response_model": null
      },
      {
        "path": "/current",
        "method": "GET",
        "function_name": "get_current_model",
        "framework": "FastAPI",
        "file_path": "routes\\model_routes.py",
        "parameters": [],
        "response_model": null
      },
      {
        "path": "/execute/{workflow_type}",
        "method": "POST",
        "function_name": "execute_workflow",
        "framework": "FastAPI",
        "file_path": "routes\\workflow_routes.py",
        "parameters": [
          {
            "name": "workflow_type",
            "type": "str",
            "required": true
          },
          {
            "name": "parameters",
            "type": "Dict[str",
            "required": true
          }
        ],
        "response_model": null
      },
      {
        "path": "/run-complete",
        "method": "POST",
        "function_name": "execute_workflow",
        "framework": "FastAPI",
        "file_path": "routes\\workflow_routes.py",
        "parameters": [
          {
            "name": "workflow_type",
            "type": "str",
            "required": true
          },
          {
            "name": "parameters",
            "type": "Dict[str",
            "required": true
          }
        ],
        "response_model": null
      },
      {
        "path": "/status",
        "method": "GET",
        "function_name": "get_workflow_status",
        "framework": "FastAPI",
        "file_path": "routes\\workflow_routes.py",
        "parameters": [],
        "response_model": null
      },
      {
        "path": "/progress/{workflow_id}",
        "method": "GET",
        "function_name": "get_workflow_status",
        "framework": "FastAPI",
        "file_path": "routes\\workflow_routes.py",
        "parameters": [],
        "response_model": null
      },
      {
        "path": "/",
        "method": "GET",
        "function_name": "root",
        "framework": "FastAPI",
        "file_path": "test-project\\app.py",
        "parameters": [],
        "response_model": null
      },
      {
        "path": "/health",
        "method": "GET",
        "function_name": "root",
        "framework": "FastAPI",
        "file_path": "test-project\\app.py",
        "parameters": [],
        "response_model": null
      },
      {
        "path": "/",
        "method": "GET",
        "function_name": "unknown",
        "framework": "FastAPI",
        "file_path": "tests\\test_analyzers.py",
        "parameters": [],
        "response_model": null
      }
    ],
    "api_framework": "FastAPI",
    "base_url": null,
    "authentication": [
      {
        "type": "session",
        "file_path": "streamlit_app_modern.py",
        "confidence": 0.8
      },
      {
        "type": "session",
        "file_path": ".claude\\scripts\\context-monitor.py",
        "confidence": 0.8
      },
      {
        "type": "session",
        "file_path": ".claude\\skills\\docx\\ooxml\\scripts\\unpack.py",
        "confidence": 0.8
      },
      {
        "type": "jwt",
        "file_path": "analyzers\\api_analyzer.py",
        "confidence": 0.8
      },
      {
        "type": "oauth",
        "file_path": "analyzers\\api_analyzer.py",
        "confidence": 0.8
      },
      {
        "type": "basic",
        "file_path": "analyzers\\api_analyzer.py",
        "confidence": 0.8
      },
      {
        "type": "session",
        "file_path": "analyzers\\api_analyzer.py",
        "confidence": 0.8
      },
      {
        "type": "api_key",
        "file_path": "analyzers\\api_analyzer.py",
        "confidence": 0.8
      },
      {
        "type": "bearer",
        "file_path": "analyzers\\api_analyzer.py",
        "confidence": 0.8
      },
      {
        "type": "session",
        "file_path": "analyzers\\framework_detector.py",
        "confidence": 0.8
      },
      {
        "type": "jwt",
        "file_path": "analyzers\\project_analyzer.py",
        "confidence": 0.8
      },
      {
        "type": "api_key",
        "file_path": "analyzers\\project_analyzer.py",
        "confidence": 0.8
      },
      {
        "type": "bearer",
        "file_path": "analyzers\\project_analyzer.py",
        "confidence": 0.8
      },
      {
        "type": "jwt",
        "file_path": "generators\\skill_generator.py",
        "confidence": 0.8
      },
      {
        "type": "oauth",
        "file_path": "generators\\skill_generator.py",
        "confidence": 0.8
      },
      {
        "type": "jwt",
        "file_path": "generators\\workflow_generator.py",
        "confidence": 0.8
      },
      {
        "type": "oauth",
        "file_path": "generators\\workflow_generator.py",
        "confidence": 0.8
      },
      {
        "type": "session",
        "file_path": "llm\\api_models.py",
        "confidence": 0.8
      },
      {
        "type": "api_key",
        "file_path": "llm\\api_models.py",
        "confidence": 0.8
      },
      {
        "type": "bearer",
        "file_path": "llm\\api_models.py",
        "confidence": 0.8
      },
      {
        "type": "session",
        "file_path": "llm\\claude_flow_integration.py",
        "confidence": 0.8
      },
      {
        "type": "session",
        "file_path": "llm\\local_models.py",
        "confidence": 0.8
      },
      {
        "type": "session",
        "file_path": "llm\\prompt_templates.py",
        "confidence": 0.8
      },
      {
        "type": "session",
        "file_path": "mcps\\__init__.py",
        "confidence": 0.8
      },
      {
        "type": "session",
        "file_path": "routes\\claude_flow_routes.py",
        "confidence": 0.8
      },
      {
        "type": "session",
        "file_path": "settings\\__init__.py",
        "confidence": 0.8
      },
      {
        "type": "api_key",
        "file_path": "settings\\__init__.py",
        "confidence": 0.8
      },
      {
        "type": "jwt",
        "file_path": "share\\jupyter\\nbextensions\\pydeck\\index.js",
        "confidence": 0.8
      },
      {
        "type": "session",
        "file_path": "share\\jupyter\\nbextensions\\pydeck\\index.js",
        "confidence": 0.8
      },
      {
        "type": "api_key",
        "file_path": "share\\jupyter\\nbextensions\\pydeck\\index.js",
        "confidence": 0.8
      },
      {
        "type": "api_key",
        "file_path": "tests\\test_app.py",
        "confidence": 0.8
      },
      {
        "type": "session",
        "file_path": "tests\\test_settings.py",
        "confidence": 0.8
      },
      {
        "type": "api_key",
        "file_path": "tests\\test_settings.py",
        "confidence": 0.8
      },
      {
        "type": "api_key",
        "file_path": "tests\\__init__.py",
        "confidence": 0.8
      },
      {
        "type": "session",
        "file_path": "ui\\components\\modern_project_selector.py",
        "confidence": 0.8
      },
      {
        "type": "api_key",
        "file_path": "ui\\components\\settings_panel.py",
        "confidence": 0.8
      }
    ],
    "middleware": [
      {
        "type": "cors",
        "file_path": "app.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "app.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": ".claude\\skills\\algorithmic-art\\templates\\generator_template.js",
        "confidence": 0.7
      },
      {
        "type": "compression",
        "file_path": ".claude\\skills\\docx\\ooxml\\scripts\\pack.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": ".claude\\skills\\docx\\ooxml\\scripts\\validation\\base.py",
        "confidence": 0.7
      },
      {
        "type": "authentication",
        "file_path": ".claude\\skills\\docx\\ooxml\\scripts\\validation\\base.py",
        "confidence": 0.7
      },
      {
        "type": "rate_limiting",
        "file_path": ".claude\\skills\\docx\\ooxml\\scripts\\validation\\pptx.py",
        "confidence": 0.7
      },
      {
        "type": "authentication",
        "file_path": ".claude\\skills\\docx\\ooxml\\scripts\\validation\\redlining.py",
        "confidence": 0.7
      },
      {
        "type": "authentication",
        "file_path": ".claude\\skills\\docx\\scripts\\document.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": ".claude\\skills\\pdf-anthropic\\scripts\\fill_fillable_fields.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": ".claude\\skills\\skill-creator\\scripts\\init_skill.py",
        "confidence": 0.7
      },
      {
        "type": "authentication",
        "file_path": ".claude\\skills\\skill-creator\\scripts\\init_skill.py",
        "confidence": 0.7
      },
      {
        "type": "compression",
        "file_path": ".claude\\skills\\skill-creator\\scripts\\package_skill.py",
        "confidence": 0.7
      },
      {
        "type": "compression",
        "file_path": ".claude\\skills\\slack-gif-creator\\core\\color_palettes.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": ".claude\\skills\\webapp-testing\\examples\\console_logging.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "agents\\example_agent.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "agents\\project_manager_agent.py",
        "confidence": 0.7
      },
      {
        "type": "security",
        "file_path": "agents\\project_manager_agent.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "agents\\__init__.py",
        "confidence": 0.7
      },
      {
        "type": "cors",
        "file_path": "analyzers\\api_analyzer.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "analyzers\\api_analyzer.py",
        "confidence": 0.7
      },
      {
        "type": "rate_limiting",
        "file_path": "analyzers\\api_analyzer.py",
        "confidence": 0.7
      },
      {
        "type": "compression",
        "file_path": "analyzers\\api_analyzer.py",
        "confidence": 0.7
      },
      {
        "type": "security",
        "file_path": "analyzers\\api_analyzer.py",
        "confidence": 0.7
      },
      {
        "type": "authentication",
        "file_path": "analyzers\\api_analyzer.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "analyzers\\ast_analyzer.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "analyzers\\database_analyzer.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "analyzers\\dependency_analyzer.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "analyzers\\framework_detector.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "analyzers\\language_detector.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "analyzers\\project_analyzer.py",
        "confidence": 0.7
      },
      {
        "type": "security",
        "file_path": "analyzers\\project_analyzer.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "commands\\__init__.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "generators\\agent_generator.py",
        "confidence": 0.7
      },
      {
        "type": "security",
        "file_path": "generators\\agent_generator.py",
        "confidence": 0.7
      },
      {
        "type": "cors",
        "file_path": "generators\\skill_generator.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "generators\\skill_generator.py",
        "confidence": 0.7
      },
      {
        "type": "security",
        "file_path": "generators\\skill_generator.py",
        "confidence": 0.7
      },
      {
        "type": "authentication",
        "file_path": "generators\\skill_generator.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "generators\\skill_templates.py",
        "confidence": 0.7
      },
      {
        "type": "cors",
        "file_path": "generators\\workflow_generator.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "generators\\workflow_generator.py",
        "confidence": 0.7
      },
      {
        "type": "security",
        "file_path": "generators\\workflow_generator.py",
        "confidence": 0.7
      },
      {
        "type": "authentication",
        "file_path": "generators\\workflow_generator.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "hooks\\__init__.py",
        "confidence": 0.7
      },
      {
        "type": "rate_limiting",
        "file_path": "hooks\\__init__.py",
        "confidence": 0.7
      },
      {
        "type": "security",
        "file_path": "hooks\\__init__.py",
        "confidence": 0.7
      },
      {
        "type": "authentication",
        "file_path": "hooks\\__init__.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "llm\\api_models.py",
        "confidence": 0.7
      },
      {
        "type": "authentication",
        "file_path": "llm\\api_models.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "llm\\claude_flow_integration.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "llm\\local_models.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "llm\\model_manager.py",
        "confidence": 0.7
      },
      {
        "type": "cors",
        "file_path": "llm\\prompt_templates.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "llm\\prompt_templates.py",
        "confidence": 0.7
      },
      {
        "type": "compression",
        "file_path": "llm\\prompt_templates.py",
        "confidence": 0.7
      },
      {
        "type": "security",
        "file_path": "llm\\prompt_templates.py",
        "confidence": 0.7
      },
      {
        "type": "authentication",
        "file_path": "llm\\prompt_templates.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "mcps\\__init__.py",
        "confidence": 0.7
      },
      {
        "type": "rate_limiting",
        "file_path": "mcps\\__init__.py",
        "confidence": 0.7
      },
      {
        "type": "authentication",
        "file_path": "mcps\\__init__.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "optimization\\optimization_engine.py",
        "confidence": 0.7
      },
      {
        "type": "security",
        "file_path": "optimization\\optimization_engine.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "orchestrator\\agent_orchestrator.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "orchestrator\\workflow_orchestrator.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "output\\artifact_generator.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "output\\report_generator.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "plugins\\__init__.py",
        "confidence": 0.7
      },
      {
        "type": "compression",
        "file_path": "plugins\\__init__.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "routes\\agent_routes.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "routes\\analysis_routes.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "routes\\claude_flow_routes.py",
        "confidence": 0.7
      },
      {
        "type": "security",
        "file_path": "routes\\claude_flow_routes.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "routes\\model_routes.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "routes\\workflow_routes.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "services\\agent_service.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "services\\project_service.py",
        "confidence": 0.7
      },
      {
        "type": "cors",
        "file_path": "settings\\__init__.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "settings\\__init__.py",
        "confidence": 0.7
      },
      {
        "type": "rate_limiting",
        "file_path": "settings\\__init__.py",
        "confidence": 0.7
      },
      {
        "type": "security",
        "file_path": "settings\\__init__.py",
        "confidence": 0.7
      },
      {
        "type": "cors",
        "file_path": "share\\jupyter\\nbextensions\\pydeck\\index.js",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "share\\jupyter\\nbextensions\\pydeck\\index.js",
        "confidence": 0.7
      },
      {
        "type": "rate_limiting",
        "file_path": "share\\jupyter\\nbextensions\\pydeck\\index.js",
        "confidence": 0.7
      },
      {
        "type": "compression",
        "file_path": "share\\jupyter\\nbextensions\\pydeck\\index.js",
        "confidence": 0.7
      },
      {
        "type": "security",
        "file_path": "share\\jupyter\\nbextensions\\pydeck\\index.js",
        "confidence": 0.7
      },
      {
        "type": "authentication",
        "file_path": "share\\jupyter\\nbextensions\\pydeck\\index.js",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "skills\\__init__.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "tests\\test_analyzers.py",
        "confidence": 0.7
      },
      {
        "type": "cors",
        "file_path": "tests\\test_app.py",
        "confidence": 0.7
      },
      {
        "type": "cors",
        "file_path": "tests\\test_routes.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "tests\\test_settings.py",
        "confidence": 0.7
      },
      {
        "type": "rate_limiting",
        "file_path": "tests\\test_settings.py",
        "confidence": 0.7
      },
      {
        "type": "security",
        "file_path": "tests\\test_settings.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "tests\\__init__.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "ui\\components\\agent_monitor.py",
        "confidence": 0.7
      },
      {
        "type": "security",
        "file_path": "ui\\components\\agent_monitor.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "ui\\components\\analysis_dashboard.py",
        "confidence": 0.7
      },
      {
        "type": "security",
        "file_path": "ui\\components\\analysis_dashboard.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "ui\\components\\chat_interface.py",
        "confidence": 0.7
      },
      {
        "type": "security",
        "file_path": "ui\\components\\chat_interface.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "ui\\components\\modern_project_selector.py",
        "confidence": 0.7
      },
      {
        "type": "security",
        "file_path": "ui\\components\\optimization_view.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "ui\\components\\settings_panel.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "ui\\pages\\dashboard_page.py",
        "confidence": 0.7
      },
      {
        "type": "security",
        "file_path": "ui\\pages\\dashboard_page.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "workflows\\base_workflow.py",
        "confidence": 0.7
      },
      {
        "type": "security",
        "file_path": "workflows\\project_analysis_workflow.py",
        "confidence": 0.7
      },
      {
        "type": "logging",
        "file_path": "workflows\\simple_analysis_workflow.py",
        "confidence": 0.7
      }
    ],
    "openapi_spec": {
      "title": "API Documentation",
      "version": "1.0.0",
      "description": "Auto-generated API documentation",
      "swagger_ui": true
    },
    "documentation": [
      {
        "name": "README.md",
        "path": "README.md",
        "type": "documentation"
      },
      {
        "name": "api-documenter.md",
        "path": ".claude\\agents\\api-documenter.md",
        "type": "documentation"
      },
      {
        "name": "create-architecture-documentation.md",
        "path": ".claude\\commands\\create-architecture-documentation.md",
        "type": "documentation"
      },
      {
        "name": "update-docs.md",
        "path": ".claude\\commands\\update-docs.md",
        "type": "documentation"
      },
      {
        "name": "api_analyzer.py",
        "path": "analyzers\\api_analyzer.py",
        "type": "documentation"
      },
      {
        "name": "ARCHITECTURE.md",
        "path": "docs\\ARCHITECTURE.md",
        "type": "documentation"
      },
      {
        "name": "api_models.py",
        "path": "llm\\api_models.py",
        "type": "documentation"
      },
      {
        "name": "fastapi.exe",
        "path": "Scripts\\fastapi.exe",
        "type": "documentation"
      }
    ],
    "rate_limiting": [],
    "cors_config": {
      "enabled": true,
      "origins": [
        "*"
      ],
      "methods": [
        "GET",
        "POST",
        "PUT",
        "DELETE"
      ],
      "headers": [
        "Content-Type",
        "Authorization"
      ]
    }
  },
  "database_schema": {
    "tables": [],
    "models": [],
    "relationships": [],
    "orm_framework": "Prisma",
    "database_type": "SQLite",
    "migrations": [
      {
        "name": "opc-contentTypes.xsd",
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ecma\\fouth-edition\\opc-contentTypes.xsd",
        "type": "migration",
        "framework": "unknown"
      },
      {
        "name": "opc-coreProperties.xsd",
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ecma\\fouth-edition\\opc-coreProperties.xsd",
        "type": "migration",
        "framework": "unknown"
      },
      {
        "name": "opc-digSig.xsd",
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ecma\\fouth-edition\\opc-digSig.xsd",
        "type": "migration",
        "framework": "unknown"
      },
      {
        "name": "opc-relationships.xsd",
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ecma\\fouth-edition\\opc-relationships.xsd",
        "type": "migration",
        "framework": "unknown"
      },
      {
        "name": "dml-chart.xsd",
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\dml-chart.xsd",
        "type": "migration",
        "framework": "unknown"
      },
      {
        "name": "dml-chartDrawing.xsd",
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\dml-chartDrawing.xsd",
        "type": "migration",
        "framework": "unknown"
      },
      {
        "name": "dml-diagram.xsd",
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\dml-diagram.xsd",
        "type": "migration",
        "framework": "unknown"
      },
      {
        "name": "dml-lockedCanvas.xsd",
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\dml-lockedCanvas.xsd",
        "type": "migration",
        "framework": "unknown"
      },
      {
        "name": "dml-main.xsd",
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\dml-main.xsd",
        "type": "migration",
        "framework": "unknown"
      },
      {
        "name": "dml-picture.xsd",
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\dml-picture.xsd",
        "type": "migration",
        "framework": "unknown"
      },
      {
        "name": "dml-spreadsheetDrawing.xsd",
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\dml-spreadsheetDrawing.xsd",
        "type": "migration",
        "framework": "unknown"
      },
      {
        "name": "dml-wordprocessingDrawing.xsd",
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\dml-wordprocessingDrawing.xsd",
        "type": "migration",
        "framework": "unknown"
      },
      {
        "name": "pml.xsd",
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\pml.xsd",
        "type": "migration",
        "framework": "unknown"
      },
      {
        "name": "shared-additionalCharacteristics.xsd",
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\shared-additionalCharacteristics.xsd",
        "type": "migration",
        "framework": "unknown"
      },
      {
        "name": "shared-bibliography.xsd",
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\shared-bibliography.xsd",
        "type": "migration",
        "framework": "unknown"
      },
      {
        "name": "shared-commonSimpleTypes.xsd",
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\shared-commonSimpleTypes.xsd",
        "type": "migration",
        "framework": "unknown"
      },
      {
        "name": "shared-customXmlDataProperties.xsd",
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\shared-customXmlDataProperties.xsd",
        "type": "migration",
        "framework": "unknown"
      },
      {
        "name": "shared-customXmlSchemaProperties.xsd",
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\shared-customXmlSchemaProperties.xsd",
        "type": "migration",
        "framework": "unknown"
      },
      {
        "name": "shared-documentPropertiesCustom.xsd",
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\shared-documentPropertiesCustom.xsd",
        "type": "migration",
        "framework": "unknown"
      },
      {
        "name": "shared-documentPropertiesExtended.xsd",
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\shared-documentPropertiesExtended.xsd",
        "type": "migration",
        "framework": "unknown"
      },
      {
        "name": "shared-documentPropertiesVariantTypes.xsd",
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\shared-documentPropertiesVariantTypes.xsd",
        "type": "migration",
        "framework": "unknown"
      },
      {
        "name": "shared-math.xsd",
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\shared-math.xsd",
        "type": "migration",
        "framework": "unknown"
      },
      {
        "name": "shared-relationshipReference.xsd",
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\shared-relationshipReference.xsd",
        "type": "migration",
        "framework": "unknown"
      },
      {
        "name": "sml.xsd",
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\sml.xsd",
        "type": "migration",
        "framework": "unknown"
      },
      {
        "name": "vml-main.xsd",
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\vml-main.xsd",
        "type": "migration",
        "framework": "unknown"
      },
      {
        "name": "vml-officeDrawing.xsd",
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\vml-officeDrawing.xsd",
        "type": "migration",
        "framework": "unknown"
      },
      {
        "name": "vml-presentationDrawing.xsd",
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\vml-presentationDrawing.xsd",
        "type": "migration",
        "framework": "unknown"
      },
      {
        "name": "vml-spreadsheetDrawing.xsd",
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\vml-spreadsheetDrawing.xsd",
        "type": "migration",
        "framework": "unknown"
      },
      {
        "name": "vml-wordprocessingDrawing.xsd",
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\vml-wordprocessingDrawing.xsd",
        "type": "migration",
        "framework": "unknown"
      },
      {
        "name": "wml.xsd",
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\wml.xsd",
        "type": "migration",
        "framework": "unknown"
      },
      {
        "name": "xml.xsd",
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\ISO-IEC29500-4_2016\\xml.xsd",
        "type": "migration",
        "framework": "unknown"
      },
      {
        "name": "mc.xsd",
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\mce\\mc.xsd",
        "type": "migration",
        "framework": "unknown"
      },
      {
        "name": "wml-2010.xsd",
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\microsoft\\wml-2010.xsd",
        "type": "migration",
        "framework": "unknown"
      },
      {
        "name": "wml-2012.xsd",
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\microsoft\\wml-2012.xsd",
        "type": "migration",
        "framework": "unknown"
      },
      {
        "name": "wml-2018.xsd",
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\microsoft\\wml-2018.xsd",
        "type": "migration",
        "framework": "unknown"
      },
      {
        "name": "wml-cex-2018.xsd",
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\microsoft\\wml-cex-2018.xsd",
        "type": "migration",
        "framework": "unknown"
      },
      {
        "name": "wml-cid-2016.xsd",
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\microsoft\\wml-cid-2016.xsd",
        "type": "migration",
        "framework": "unknown"
      },
      {
        "name": "wml-sdtdatahash-2020.xsd",
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\microsoft\\wml-sdtdatahash-2020.xsd",
        "type": "migration",
        "framework": "unknown"
      },
      {
        "name": "wml-symex-2015.xsd",
        "path": ".claude\\skills\\docx\\ooxml\\schemas\\microsoft\\wml-symex-2015.xsd",
        "type": "migration",
        "framework": "unknown"
      },
      {
        "name": "jsonschema.exe",
        "path": "Scripts\\jsonschema.exe",
        "type": "migration",
        "framework": "unknown"
      }
    ],
    "indexes": [],
    "constraints": []
  },
  "ast_analysis": {
    "analyzed_files": [
      {
        "file_path": "app.py",
        "language": "python",
        "file_size": 15106,
        "line_count": 457,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "get_workflow_orchestrator",
            "line_number": 285,
            "parameters": [],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "get_ensure_components",
            "line_number": 288,
            "parameters": [],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "get_analysis_results",
            "line_number": 291,
            "parameters": [],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "get_project_manager_agent",
            "line_number": 294,
            "parameters": [],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "get_loaded_modules",
            "line_number": 297,
            "parameters": [],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "get_optimization_engine",
            "line_number": 300,
            "parameters": [],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "get_model_manager",
            "line_number": 303,
            "parameters": [],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "get_agent_generator",
            "line_number": 306,
            "parameters": [],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "set_analysis_results",
            "line_number": 315,
            "parameters": [
              "results"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "set_current_project",
            "line_number": 319,
            "parameters": [
              "path"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          }
        ],
        "classes": [],
        "imports": [
          {
            "type": "import",
            "modules": [
              "asyncio"
            ],
            "line_number": 5
          },
          {
            "type": "import",
            "modules": [
              "logging"
            ],
            "line_number": 6
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 7
          },
          {
            "type": "from_import",
            "module": "typing",
            "names": [
              "Dict",
              "Any"
            ],
            "level": 0,
            "line_number": 8
          },
          {
            "type": "import",
            "modules": [
              "importlib.util"
            ],
            "line_number": 9
          },
          {
            "type": "import",
            "modules": [
              "os"
            ],
            "line_number": 10
          },
          {
            "type": "from_import",
            "module": "dotenv",
            "names": [
              "load_dotenv"
            ],
            "level": 0,
            "line_number": 11
          },
          {
            "type": "from_import",
            "module": "fastapi",
            "names": [
              "FastAPI",
              "HTTPException"
            ],
            "level": 0,
            "line_number": 13
          },
          {
            "type": "from_import",
            "module": "fastapi.middleware.cors",
            "names": [
              "CORSMiddleware"
            ],
            "level": 0,
            "line_number": 14
          },
          {
            "type": "import",
            "modules": [
              "uvicorn"
            ],
            "line_number": 15
          },
          {
            "type": "from_import",
            "module": "settings",
            "names": [
              "Settings"
            ],
            "level": 0,
            "line_number": 17
          },
          {
            "type": "from_import",
            "module": "analyzers.project_analyzer",
            "names": [
              "ProjectAnalyzer"
            ],
            "level": 0,
            "line_number": 18
          },
          {
            "type": "from_import",
            "module": "agents.project_manager_agent",
            "names": [
              "ProjectManagerAgent"
            ],
            "level": 0,
            "line_number": 19
          },
          {
            "type": "from_import",
            "module": "llm.model_manager",
            "names": [
              "ModelManager"
            ],
            "level": 0,
            "line_number": 20
          },
          {
            "type": "from_import",
            "module": "orchestrator.agent_orchestrator",
            "names": [
              "AgentOrchestrator"
            ],
            "level": 0,
            "line_number": 21
          },
          {
            "type": "from_import",
            "module": "orchestrator.workflow_orchestrator",
            "names": [
              "WorkflowOrchestrator"
            ],
            "level": 0,
            "line_number": 22
          },
          {
            "type": "from_import",
            "module": "output.report_generator",
            "names": [
              "ReportGenerator"
            ],
            "level": 0,
            "line_number": 23
          },
          {
            "type": "from_import",
            "module": "output.artifact_generator",
            "names": [
              "ArtifactGenerator"
            ],
            "level": 0,
            "line_number": 24
          },
          {
            "type": "from_import",
            "module": "optimization.optimization_engine",
            "names": [
              "OptimizationEngine"
            ],
            "level": 0,
            "line_number": 25
          },
          {
            "type": "from_import",
            "module": "generators.agent_generator",
            "names": [
              "AgentGenerator"
            ],
            "level": 0,
            "line_number": 26
          },
          {
            "type": "from_import",
            "module": "services.project_service",
            "names": [
              "ProjectService"
            ],
            "level": 0,
            "line_number": 29
          },
          {
            "type": "from_import",
            "module": "services.agent_service",
            "names": [
              "AgentService"
            ],
            "level": 0,
            "line_number": 30
          },
          {
            "type": "from_import",
            "module": "routes",
            "names": [
              "analysis_routes",
              "agent_routes",
              "workflow_routes",
              "model_routes",
              "claude_flow_routes"
            ],
            "level": 0,
            "line_number": 281
          },
          {
            "type": "from_import",
            "module": "llm.claude_flow_integration",
            "names": [
              "get_claude_flow"
            ],
            "level": 0,
            "line_number": 282
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 10,
          "function_count": 10,
          "class_count": 0,
          "import_count": 24,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Name.load_dotenv(name='load_dotenv')",
              "type": "Const.bool(value=False,\n           kind=None)"
            },
            {
              "function": "Attribute.basicConfig(attrname='basicConfig',\n                      expr=<Name.logging l.36 at 0x257e0493890>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.getLogger(attrname='getLogger',\n                    expr=<Name.logging l.40 at 0x257e0491990>)",
              "type": "Instance of logging.RootLogger"
            },
            {
              "function": "Name.FastAPI(name='FastAPI')",
              "type": "Instance of fastapi.applications.FastAPI"
            },
            {
              "function": "Attribute.add_middleware(attrname='add_middleware',\n                         expr=<Name.app l.50 at 0x257e0493310>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.Settings(name='Settings')",
              "type": "Instance of settings.SettingsManager"
            },
            {
              "function": "Name.ProjectAnalyzer(name='ProjectAnalyzer')",
              "type": "Instance of analyzers.project_analyzer.ProjectAnalyzer"
            },
            {
              "function": "Name.ModelManager(name='ModelManager')",
              "type": "Instance of llm.model_manager.ModelManager"
            },
            {
              "function": "Name.WorkflowOrchestrator(name='WorkflowOrchestrator')",
              "type": "Instance of orchestrator.workflow_orchestrator.WorkflowOrchestrator"
            },
            {
              "function": "Name.ReportGenerator(name='ReportGenerator')",
              "type": "Instance of output.report_generator.ReportGenerator"
            },
            {
              "function": "Name.ArtifactGenerator(name='ArtifactGenerator')",
              "type": "Instance of output.artifact_generator.ArtifactGenerator"
            },
            {
              "function": "Name.OptimizationEngine(name='OptimizationEngine')",
              "type": "Instance of optimization.optimization_engine.OptimizationEngine"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.102 at 0x257e04cd2d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.AgentGenerator(name='AgentGenerator')",
              "type": "Instance of generators.agent_generator.AgentGenerator"
            },
            {
              "function": "Name.get_claude_flow(name='get_claude_flow')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.109 at 0x257e04cd950>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.ProjectManagerAgent(name='ProjectManagerAgent')",
              "type": "Instance of agents.project_manager_agent.ProjectManagerAgent"
            },
            {
              "function": "Attribute.initialize(attrname='initialize',\n                     expr=<Name.project_manager_agent l.113 at 0x257e04cdbd0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.AgentOrchestrator(name='AgentOrchestrator')",
              "type": "Instance of orchestrator.agent_orchestrator.AgentOrchestrator"
            },
            {
              "function": "Name.ProjectService(name='ProjectService')",
              "type": "Instance of services.project_service.ProjectService"
            },
            {
              "function": "Name.AgentService(name='AgentService')",
              "type": "Instance of services.agent_service.AgentService"
            },
            {
              "function": "Name.load_all_modules(name='load_all_modules')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.126 at 0x257e04ce550>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.129 at 0x257e04cf090>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.on_event(attrname='on_event',\n                   expr=<Name.app l.133 at 0x257e04cf590>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=4358, col_offset=8, end_lineno=4358, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.4358 at 0x257d8ae59d0>,\n                      returns=<Name.DecoratedCallable l.4358 at 0x257d8ae5890>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.4359 at 0x257d8ae5e10>,\n                        <Return l.4360 at 0x257d8ae6050>])"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.137 at 0x257e04cf3d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.initialize(attrname='initialize',\n                     expr=<Name.model_manager l.140 at 0x257e04cee50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.142 at 0x257e04cf010>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.145 at 0x257e04cff90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.warning(attrname='warning',\n                  expr=<Name.logger l.147 at 0x257e04cf910>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.on_event(attrname='on_event',\n                   expr=<Name.app l.150 at 0x257e04cfd10>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=4358, col_offset=8, end_lineno=4358, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.4358 at 0x257d8ae59d0>,\n                      returns=<Name.DecoratedCallable l.4358 at 0x257d8ae5890>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.4359 at 0x257d8ae5e10>,\n                        <Return l.4360 at 0x257d8ae6050>])"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.154 at 0x257e0522190>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.cleanup(attrname='cleanup',\n                  expr=<Name.project_manager_agent l.157 at 0x257e05223d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.cleanup(attrname='cleanup',\n                  expr=<Name.model_manager l.159 at 0x257e0523f50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.161 at 0x257e0522610>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.164 at 0x257e05215d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Call l.173 at 0x257e0520390>)",
              "type": "Const.bool(value=False,\n           kind=None)"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Name.load_module_directory(name='load_module_directory')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.175 at 0x257e0520ad0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.warning(attrname='warning',\n                  expr=<Name.logger l.177 at 0x257e0520b50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.180 at 0x257e0520cd0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.glob(attrname='glob',\n               expr=<Name.module_path l.188 at 0x257e0523210>)",
              "type": "Generator(generator)"
            },
            {
              "function": "Attribute.spec_from_file_location(attrname='spec_from_file_location',\n                                  expr=<Attribute.util l.193 at 0x257e0523dd0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.module_from_spec(attrname='module_from_spec',\n                           expr=<Attribute.util l.194 at 0x257e0522310>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.exec_module(attrname='exec_module',\n                      expr=<Attribute.loader l.195 at 0x257e0523610>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.200 at 0x257e0529650>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.203 at 0x257e05291d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.206 at 0x257e052b750>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.app l.211 at 0x257e052b250>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.app l.230 at 0x257e0529a10>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Attribute.health_check(attrname='health_check',\n                       expr=<Name.model_manager l.235 at 0x257e052a190>)",
              "type": "Dict.dict(items=[ ( <Const.str l.255 at 0x257e0c60890>,\n              <Await l.255 at 0x257e0c61bd0>),\n            ( <Const.str l.256 at 0x257e0c621d0>,\n              <Await l.256 at 0x257e0c60750>),\n            ( <Const.str l.257 at 0x257e0c62950>,\n              <Call l.257 at 0x257e0c62c10>)])"
            },
            {
              "function": "Attribute.get_status(attrname='get_status',\n                     expr=<Name.project_manager_agent l.240 at 0x257e052ad10>)",
              "type": "Dict.dict(items=[ ( <Const.str l.517 at 0x257d72c0550>,\n              <Attribute.status l.517 at 0x257d72c0490>),\n            ( <Const.str l.518 at 0x257d72c0610>,\n              <Attribute.current_project l.518 at 0x257d72c0590>),\n            ( <Const.str l.519 at 0x257d72c06d0>,\n              <Attribute.capabilities l.519 at 0x257d72c0650>),\n            ( <Const.str l.520 at 0x257d72c0810>,\n              <Call l.520 at 0x257d72c0710>),\n            ( <Const.str l.521 at 0x257d72c0a10>,\n              <Call l.521 at 0x257d72c08d0>),\n            ( <Const.str l.522 at 0x257d72c0c10>,\n              <Call l.522 at 0x257d72c0ad0>),\n            ( <Const.str l.523 at 0x257d72c0d90>,\n              <Call l.523 at 0x257d72c0cd0>)])"
            },
            {
              "function": "Name.ensure_components_initialized(name='ensure_components_initialized')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get_status(attrname='get_status',\n                     expr=<Name.project_manager_agent l.245 at 0x257e052b390>)",
              "type": "Dict.dict(items=[ ( <Const.str l.517 at 0x257d72c0550>,\n              <Attribute.status l.517 at 0x257d72c0490>),\n            ( <Const.str l.518 at 0x257d72c0610>,\n              <Attribute.current_project l.518 at 0x257d72c0590>),\n            ( <Const.str l.519 at 0x257d72c06d0>,\n              <Attribute.capabilities l.519 at 0x257d72c0650>),\n            ( <Const.str l.520 at 0x257d72c0810>,\n              <Call l.520 at 0x257d72c0710>),\n            ( <Const.str l.521 at 0x257d72c0a10>,\n              <Call l.521 at 0x257d72c08d0>),\n            ( <Const.str l.522 at 0x257d72c0c10>,\n              <Call l.522 at 0x257d72c0ad0>),\n            ( <Const.str l.523 at 0x257d72c0d90>,\n              <Call l.523 at 0x257d72c0cd0>)])"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Name.loaded_modules l.257 at 0x257e0528110>)",
              "type": "DictItems.list(ctx=None,\n               elts=[ <Tuple.tuple l.80 at 0x257e26827d0>,\n                 <Tuple.tuple l.81 at 0x257e2680d90>,\n                 <Tuple.tuple l.82 at 0x257e2683d50>,\n                 <Tuple.tuple l.83 at 0x257e2680950>,\n                 <Tuple.tuple l.84 at 0x257e2682550>,\n                 <Tuple.tuple l.85 at 0x257e2680c10>])"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.265 at 0x257e0421650>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.HTTPException(name='HTTPException')",
              "type": "Instance of fastapi.exceptions.HTTPException"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.app l.269 at 0x257e0421390>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Name.app l.310 at 0x257e04236d0>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Name.ensure_components_initialized(name='ensure_components_initialized')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.analyze_project(attrname='analyze_project',\n                          expr=<Name.analysis_routes l.323 at 0x257e04a4210>)",
              "type": "Dict.dict(items=[ ( <Const.str l.84 at 0x257e2782a90>,\n              <Const.str l.84 at 0x257e2782ad0>),\n            ( <Const.str l.85 at 0x257e2782c90>,\n              <Name.workflow_id l.85 at 0x257e2782990>),\n            ( <Const.str l.86 at 0x257e2782c50>,\n              <Name.project_path l.86 at 0x257e2782e50>),\n            ( <Const.str l.87 at 0x257e2782950>,\n              <Const.str l.87 at 0x257e2782e90>)])"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.app l.331 at 0x257e04a69d0>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Attribute.get_analysis_results(attrname='get_analysis_results',\n                               expr=<Name.analysis_routes l.333 at 0x257e04a6f90>)",
              "type": "Dict.dict(items=[ ( <Const.str l.106 at 0x257e29350d0>,\n              <Name._stored_current_project l.106 at 0x257e2783f50>),\n            ( <Const.str l.107 at 0x257e2936390>,\n              <Name._stored_analysis_results l.107 at 0x257e2936410>),\n            ( <Const.str l.108 at 0x257e275cf90>,\n              <Const.str l.108 at 0x257e289cad0>)])"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.app l.335 at 0x257e04a7810>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Attribute.list_reports(attrname='list_reports',\n                       expr=<Name.analysis_routes l.337 at 0x257e04a5c50>)",
              "type": "Dict.dict(items=[ ( <Const.str l.118 at 0x257e275df50>,\n              <List.list l.118 at 0x257e275d050>)])"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.app l.339 at 0x257e04a40d0>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Attribute.list_artifacts(attrname='list_artifacts',\n                         expr=<Name.analysis_routes l.341 at 0x257e04a4510>)",
              "type": "Dict.dict(items=[ ( <Const.str l.141 at 0x257e275f810>,\n              <List.list l.141 at 0x257e275f410>)])"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Name.app l.343 at 0x257e04a6190>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Name.ensure_components_initialized(name='ensure_components_initialized')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.chat_with_agent(attrname='chat_with_agent',\n                          expr=<Name.agent_routes l.346 at 0x257e04a4190>)",
              "type": "Dict.dict(items=[ ( <Const.str l.39 at 0x257e3216610>,\n              <Attribute.message l.39 at 0x257e3216550>),\n            ( <Const.str l.40 at 0x257e32165d0>,\n              <Name.response l.40 at 0x257e3216650>),\n            ( <Const.str l.41 at 0x257e3216690>,\n              <Const.str l.41 at 0x257e32166d0>)])"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Name.app l.348 at 0x257e04a7b90>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Name.ensure_components_initialized(name='ensure_components_initialized')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.generate_agents(attrname='generate_agents',\n                          expr=<Name.agent_routes l.351 at 0x257e04a6990>)",
              "type": "Dict.dict(items=[ ( <Const.str l.65 at 0x257e3217e90>,\n              <Const.str l.65 at 0x257e3217e50>),\n            ( <Const.str l.66 at 0x257e3220090>,\n              <Call l.66 at 0x257e3217ed0>),\n            ( <Const.str l.67 at 0x257e32200d0>,\n              <Name.generated_agents l.67 at 0x257e3220050>)])"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.app l.353 at 0x257e0400f10>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Name.ensure_components_initialized(name='ensure_components_initialized')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get_agent_status(attrname='get_agent_status',\n                           expr=<Name.agent_routes l.356 at 0x257e0400990>)",
              "type": "Dict.dict(items=[ ( <Const.str l.93 at 0x257e3222710>,\n              <Call l.93 at 0x257e3222590>),\n            ( <Const.str l.94 at 0x257e3222750>,\n              <Name.agent_status l.94 at 0x257e32226d0>)])"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.app l.358 at 0x257e0403650>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Name.ensure_components_initialized(name='ensure_components_initialized')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get_optimizations(attrname='get_optimizations',\n                            expr=<Name.agent_routes l.361 at 0x257e0400290>)",
              "type": "Dict.dict(items=[ ( <Const.str l.116 at 0x257e3223f50>,\n              <Const.str l.116 at 0x257e3223f10>),\n            ( <Const.str l.117 at 0x257e3224150>,\n              <Call l.117 at 0x257e3223f90>),\n            ( <Const.str l.118 at 0x257e3224450>,\n              <Call l.118 at 0x257e3224190>),\n            ( <Const.str l.119 at 0x257e3224610>,\n              <Call l.119 at 0x257e3224410>)])"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Name.app l.363 at 0x257e0402890>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Name.ensure_components_initialized(name='ensure_components_initialized')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.execute_workflow(attrname='execute_workflow',\n                           expr=<Name.workflow_routes l.366 at 0x257e0402150>)",
              "type": "Dict.dict(items=[ ( <Const.str l.37 at 0x257e323eb10>,\n              <Const.str l.37 at 0x257e323ead0>),\n            ( <Const.str l.38 at 0x257e323eb90>,\n              <Name.workflow_type l.38 at 0x257e323eb50>),\n            ( <Const.str l.39 at 0x257e323ebd0>,\n              <Name.result l.39 at 0x257e323ec10>)])"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Name.app l.368 at 0x257e04030d0>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Name.ensure_components_initialized(name='ensure_components_initialized')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.run_complete_workflow(attrname='run_complete_workflow',\n                                expr=<Name.workflow_routes l.371 at 0x257e0403cd0>)",
              "type": "Dict.dict(items=[ ( <Const.str l.67 at 0x257e3238750>,\n              <Const.str l.67 at 0x257e3238710>),\n            ( <Const.str l.68 at 0x257e32387d0>,\n              <Name.analysis_result l.68 at 0x257e3238790>),\n            ( <Const.str l.69 at 0x257e3238810>,\n              <Name.generation_result l.69 at 0x257e3238850>)])"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.app l.373 at 0x257e0400a50>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Name.ensure_components_initialized(name='ensure_components_initialized')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get_workflow_status(attrname='get_workflow_status',\n                              expr=<Name.workflow_routes l.376 at 0x257e04003d0>)",
              "type": "Dict.dict(items=[ ( <Const.str l.85 at 0x257e3239d10>,\n              <Call l.85 at 0x257e3239b90>),\n            ( <Const.str l.86 at 0x257e3239e90>,\n              <Call l.86 at 0x257e3239cd0>),\n            ( <Const.str l.87 at 0x257e3239f50>,\n              <Dict.dict l.87 at 0x257e3239e50>)])"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.app l.378 at 0x257e0402790>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Name.ensure_components_initialized(name='ensure_components_initialized')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get_workflow_progress(attrname='get_workflow_progress',\n                                expr=<Name.workflow_routes l.381 at 0x257e04b46d0>)",
              "type": "Dict.dict(items=[ ( <Const.str l.106 at 0x257e323ba50>,\n              <Name.workflow_id l.106 at 0x257e323ba10>),\n            ( <Const.str l.107 at 0x257e323ba90>,\n              <Const.str l.107 at 0x257e323bad0>),\n            ( <Const.str l.108 at 0x257e323bcd0>,\n              <Call l.108 at 0x257e323bb10>),\n            ( <Const.str l.109 at 0x257e323bed0>,\n              <Call l.109 at 0x257e323bd10>),\n            ( <Const.str l.110 at 0x257e32480d0>,\n              <Call l.110 at 0x257e323bf10>)])"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.app l.383 at 0x257e04b4ad0>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Attribute.list_models(attrname='list_models',\n                      expr=<Name.model_routes l.385 at 0x257e04b4fd0>)",
              "type": "Dict.dict(items=[ ( <Const.str l.29 at 0x257e324b990>,\n              <Const.str l.29 at 0x257e324b950>),\n            ( <Const.str l.30 at 0x257e324ba10>,\n              <Name.models l.30 at 0x257e324b9d0>)])"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Name.app l.387 at 0x257e04b5450>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Attribute.set_model(attrname='set_model',\n                    expr=<Name.model_routes l.389 at 0x257e04b5a90>)",
              "type": "Dict.dict(items=[ ( <Const.str l.54 at 0x257e3259450>,\n              <Const.str l.54 at 0x257e3259410>),\n            ( <Const.str l.55 at 0x257e3259550>,\n              <Attribute.model_name l.55 at 0x257e3259490>),\n            ( <Const.str l.56 at 0x257e3259610>,\n              <Attribute.model_type l.56 at 0x257e3259590>)])"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.app l.391 at 0x257e04b5cd0>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Attribute.get_current_model(attrname='get_current_model',\n                            expr=<Name.model_routes l.393 at 0x257e04b5710>)",
              "type": "Dict.dict(items=[ ( <Const.str l.74 at 0x257e325a9d0>,\n              <Const.str l.74 at 0x257e325a990>),\n            ( <Const.str l.75 at 0x257e325aa50>,\n              <Const.NoneType l.75 at 0x257e325aa10>)])"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Name.app l.397 at 0x257e04b6550>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Name.ensure_components_initialized(name='ensure_components_initialized')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.init_swarm(attrname='init_swarm',\n                     expr=<Name.claude_flow_routes l.400 at 0x257e04b6c90>)",
              "type": "Dict.dict(items=[ ( <Const.str l.89 at 0x257e3291710>,\n              <Const.str l.89 at 0x257e32916d0>),\n            ( <Const.str l.90 at 0x257e3291810>,\n              <Attribute.topology l.90 at 0x257e3291750>),\n            ( <Const.str l.91 at 0x257e32918d0>,\n              <Attribute.max_agents l.91 at 0x257e3291850>),\n            ( <Const.str l.92 at 0x257e32919d0>,\n              <Subscript l.92 at 0x257e3291910>)])"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Name.app l.402 at 0x257e04b7110>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Name.ensure_components_initialized(name='ensure_components_initialized')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.execute_task(attrname='execute_task',\n                       expr=<Name.claude_flow_routes l.405 at 0x257e04b7a10>)",
              "type": "Dict.dict(items=[ ( <Const.str l.128 at 0x257e3293790>,\n              <Const.str l.128 at 0x257e3293750>),\n            ( <Const.str l.129 at 0x257e3293890>,\n              <Attribute.task l.129 at 0x257e32937d0>),\n            ( <Const.str l.130 at 0x257e3293990>,\n              <Subscript l.130 at 0x257e32938d0>),\n            ( <Const.str l.131 at 0x257e3293b10>,\n              <BoolOp l.131 at 0x257e3293910>)])"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Name.app l.407 at 0x257e04b7d10>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Name.ensure_components_initialized(name='ensure_components_initialized')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.spawn_agent(attrname='spawn_agent',\n                      expr=<Name.claude_flow_routes l.410 at 0x257e0a1d790>)",
              "type": "Dict.dict(items=[ ( <Const.str l.169 at 0x257e3299650>,\n              <Const.str l.169 at 0x257e3299610>),\n            ( <Const.str l.170 at 0x257e3299750>,\n              <Attribute.agent_type l.170 at 0x257e3299690>),\n            ( <Const.str l.171 at 0x257e3299810>,\n              <Attribute.task l.171 at 0x257e3299790>),\n            ( <Const.str l.172 at 0x257e3299910>,\n              <Subscript l.172 at 0x257e3299850>)])"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.app l.412 at 0x257e0a1db50>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Name.ensure_components_initialized(name='ensure_components_initialized')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get_swarm_status(attrname='get_swarm_status',\n                           expr=<Name.claude_flow_routes l.415 at 0x257e0457e10>)",
              "type": "Dict.dict(items=[ ( <Const.str l.193 at 0x257e329b210>,\n              <Const.str l.193 at 0x257e329b1d0>),\n            ( <Const.str l.194 at 0x257e329b350>,\n              <Subscript l.194 at 0x257e329b250>)])"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Name.app l.417 at 0x257e0455390>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Name.ensure_components_initialized(name='ensure_components_initialized')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.store_memory(attrname='store_memory',\n                       expr=<Name.claude_flow_routes l.420 at 0x257e0454750>)",
              "type": "Dict.dict(items=[ ( <Const.str l.232 at 0x257e32a0dd0>,\n              <Const.str l.232 at 0x257e32a0d90>),\n            ( <Const.str l.233 at 0x257e32a0ed0>,\n              <Attribute.key l.233 at 0x257e32a0e10>),\n            ( <Const.str l.234 at 0x257e32a0f90>,\n              <Attribute.namespace l.234 at 0x257e32a0f10>),\n            ( <Const.str l.235 at 0x257e32a1050>,\n              <Attribute.use_reasoningbank l.235 at 0x257e32a0fd0>)])"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Name.app l.422 at 0x257e0457b90>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Name.ensure_components_initialized(name='ensure_components_initialized')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.query_memory(attrname='query_memory',\n                       expr=<Name.claude_flow_routes l.425 at 0x257e0456f90>)",
              "type": "Dict.dict(items=[ ( <Const.str l.271 at 0x257e32a2c50>,\n              <Const.str l.271 at 0x257e32a2c10>),\n            ( <Const.str l.272 at 0x257e32a2d50>,\n              <Attribute.query l.272 at 0x257e32a2c90>),\n            ( <Const.str l.273 at 0x257e32a2e50>,\n              <Subscript l.273 at 0x257e32a2d90>),\n            ( <Const.str l.274 at 0x257e32a2f10>,\n              <Attribute.namespace l.274 at 0x257e32a2dd0>)])"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.app l.427 at 0x257e04576d0>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Name.ensure_components_initialized(name='ensure_components_initialized')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get_memory_status(attrname='get_memory_status',\n                            expr=<Name.claude_flow_routes l.430 at 0x257e0454190>)",
              "type": "Dict.dict(items=[ ( <Const.str l.302 at 0x257e32a88d0>,\n              <IfExp l.302 at 0x257e32a8750>),\n            ( <Const.str l.303 at 0x257e32a8a10>,\n              <Subscript l.303 at 0x257e32a8910>),\n            ( <Const.str l.304 at 0x257e32a8b90>,\n              <Call l.304 at 0x257e32a8990>),\n            ( <Const.str l.305 at 0x257e32a8d90>,\n              <Call l.305 at 0x257e32a8bd0>)])"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Name.app l.432 at 0x257e0456410>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Name.ensure_components_initialized(name='ensure_components_initialized')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.init_hive_mind(attrname='init_hive_mind',\n                         expr=<Name.claude_flow_routes l.435 at 0x257e04577d0>)",
              "type": "Dict.dict(items=[ ( <Const.str l.340 at 0x257e32aa450>,\n              <Const.str l.340 at 0x257e32aa410>),\n            ( <Const.str l.341 at 0x257e32aa550>,\n              <Attribute.project_task l.341 at 0x257e32aa490>),\n            ( <Const.str l.342 at 0x257e32aa650>,\n              <Subscript l.342 at 0x257e32aa590>),\n            ( <Const.str l.343 at 0x257e32aa690>,\n              <Const.str l.343 at 0x257e32aa5d0>)])"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Name.app l.437 at 0x257e04572d0>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Name.ensure_components_initialized(name='ensure_components_initialized')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.execute_with_mcp_tools(attrname='execute_with_mcp_tools',\n                                 expr=<Name.claude_flow_routes l.440 at 0x257e09fc850>)",
              "type": "Dict.dict(items=[ ( <Const.str l.379 at 0x257e32ac250>,\n              <Const.str l.379 at 0x257e32ac210>),\n            ( <Const.str l.380 at 0x257e32ac350>,\n              <Attribute.task l.380 at 0x257e32ac290>),\n            ( <Const.str l.381 at 0x257e32ac410>,\n              <Attribute.tools l.381 at 0x257e32ac390>),\n            ( <Const.str l.382 at 0x257e32ac510>,\n              <Subscript l.382 at 0x257e32ac450>)])"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.app l.442 at 0x257e09fd090>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Attribute.get_capabilities(attrname='get_capabilities',\n                           expr=<Name.claude_flow_routes l.444 at 0x257e09fd950>)",
              "type": "Dict.dict(items=[ ( <Const.str l.403 at 0x257e32ad850>,\n              <Const.str l.403 at 0x257e32ad810>),\n            ( <Const.str l.404 at 0x257e32ad8d0>,\n              <Const.str l.404 at 0x257e32ad890>),\n            ( <Const.str l.405 at 0x257e32ad9d0>,\n              <Dict.dict l.405 at 0x257e32ad910>),\n            ( <Const.str l.413 at 0x257e32addd0>,\n              <Dict.dict l.413 at 0x257e32add50>),\n            ( <Const.str l.418 at 0x257e32ae190>,\n              <Dict.dict l.418 at 0x257e32ae110>),\n            ( <Const.str l.425 at 0x257e32ae510>,\n              <Dict.dict l.425 at 0x257e32ae490>),\n            ( <Const.str l.430 at 0x257e32aea90>,\n              <Dict.dict l.430 at 0x257e32aea10>)])"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.uvicorn l.450 at 0x257e09fdf50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            }
          ],
          "unresolved_imports": [
            "asyncio",
            "logging",
            "importlib.util",
            "os",
            "uvicorn"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": "test-project\\app.py",
        "language": "python",
        "file_size": 397,
        "line_count": 20,
        "analysis_method": "python_ast",
        "functions": [],
        "classes": [],
        "imports": [
          {
            "type": "from_import",
            "module": "fastapi",
            "names": [
              "FastAPI"
            ],
            "level": 0,
            "line_number": 5
          },
          {
            "type": "import",
            "modules": [
              "uvicorn"
            ],
            "line_number": 6
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 0,
          "function_count": 0,
          "class_count": 0,
          "import_count": 2,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Name.FastAPI(name='FastAPI')",
              "type": "Instance of fastapi.applications.FastAPI"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.app l.10 at 0x257df4ca850>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.app l.14 at 0x257df4cb6d0>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.uvicorn l.19 at 0x257df607ed0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            }
          ],
          "unresolved_imports": [
            "uvicorn"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": "tests\\test_app.py",
        "language": "python",
        "file_size": 5600,
        "line_count": 157,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "setup_method",
            "line_number": 22,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Setup für jeden Test",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_root_endpoint",
            "line_number": 35,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test für den Root-Endpoint",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_status_endpoint",
            "line_number": 45,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test für den Status-Endpoint",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_test_endpoint",
            "line_number": 56,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test für den Test-Endpoint",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_list_agents_endpoint",
            "line_number": 65,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test für den Agent-Status-Endpoint (refactored)",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_list_skills_endpoint",
            "line_number": 74,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test für loaded modules (skills accessible via status)",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_api_keys_status_endpoint",
            "line_number": 83,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test für Model Manager Status (part of /status endpoint)",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_run_agent_not_initialized",
            "line_number": 92,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [
              "<ast.Attribute object at 0x00000257DB498E50>"
            ],
            "docstring": "Test für Run-Agent wenn System nicht initialisiert",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_run_agent_not_found",
            "line_number": 98,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [
              "<ast.Attribute object at 0x00000257DB499D80>"
            ],
            "docstring": "Test für Run-Agent wenn Agent nicht gefunden",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_run_agent_success",
            "line_number": 104,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [
              "<ast.Attribute object at 0x00000257DB49B970>"
            ],
            "docstring": "Test für erfolgreichen Agent-Run",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_run_agent_async",
            "line_number": 110,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [
              "<ast.Attribute object at 0x00000257DB498490>"
            ],
            "docstring": "Test für asynchronen Agent-Run",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_run_agent_no_run_method",
            "line_number": 116,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [
              "<ast.Attribute object at 0x00000257DB498EE0>"
            ],
            "docstring": "Test für Agent ohne run-Methode",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_load_skills_success",
            "line_number": 122,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [
              "<ast.Attribute object at 0x00000257DB49B160>"
            ],
            "docstring": "Test für erfolgreiches Skills-Laden",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_load_skills_error",
            "line_number": 128,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [
              "<ast.Attribute object at 0x00000257DB4990F0>"
            ],
            "docstring": "Test für Fehler beim Skills-Laden",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_cors_headers",
            "line_number": 140,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test für CORS-Headers",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_invalid_json_request",
            "line_number": 147,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [
              "<ast.Attribute object at 0x00000257DB49AB90>"
            ],
            "docstring": "Test für ungültige JSON-Anfrage",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_missing_required_fields",
            "line_number": 153,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [
              "<ast.Attribute object at 0x00000257DB4990C0>"
            ],
            "docstring": "Test für fehlende Pflichtfelder",
            "is_async": false,
            "complexity": 1
          }
        ],
        "classes": [
          {
            "name": "TestApp",
            "line_number": 19,
            "bases": [],
            "decorators": [],
            "docstring": "Test-Klasse für die Hauptanwendung",
            "methods": [
              "setup_method",
              "test_root_endpoint",
              "test_status_endpoint",
              "test_test_endpoint",
              "test_list_agents_endpoint",
              "test_list_skills_endpoint",
              "test_api_keys_status_endpoint",
              "test_run_agent_not_initialized",
              "test_run_agent_not_found",
              "test_run_agent_success",
              "test_run_agent_async",
              "test_run_agent_no_run_method",
              "test_load_skills_success",
              "test_load_skills_error",
              "test_cors_headers",
              "test_invalid_json_request",
              "test_missing_required_fields"
            ],
            "method_count": 17
          }
        ],
        "imports": [
          {
            "type": "import",
            "modules": [
              "pytest"
            ],
            "line_number": 5
          },
          {
            "type": "import",
            "modules": [
              "asyncio"
            ],
            "line_number": 6
          },
          {
            "type": "from_import",
            "module": "fastapi.testclient",
            "names": [
              "TestClient"
            ],
            "level": 0,
            "line_number": 7
          },
          {
            "type": "from_import",
            "module": "unittest.mock",
            "names": [
              "patch",
              "MagicMock"
            ],
            "level": 0,
            "line_number": 8
          },
          {
            "type": "import",
            "modules": [
              "sys"
            ],
            "line_number": 9
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 10
          },
          {
            "type": "from_import",
            "module": "app",
            "names": [
              "app",
              "loaded_modules",
              "current_project",
              "analysis_results"
            ],
            "level": 0,
            "line_number": 16
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 17,
          "function_count": 17,
          "class_count": 1,
          "import_count": 7,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.TestClient(name='TestClient')",
              "type": "Instance of starlette.testclient.TestClient"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.client l.37 at 0x257e042ef50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.json(attrname='json',\n               expr=<Name.response l.39 at 0x257e042cad0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.client l.47 at 0x257e042f390>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.json(attrname='json',\n               expr=<Name.response l.49 at 0x257e0417d50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.client l.58 at 0x257e0416710>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.json(attrname='json',\n               expr=<Name.response l.60 at 0x257e0493790>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.client l.67 at 0x257e32143d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.json(attrname='json',\n               expr=<Name.response l.69 at 0x257e32787d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.client l.76 at 0x257e326a4d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.json(attrname='json',\n               expr=<Name.response l.78 at 0x257e326a310>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.client l.85 at 0x257e3271d10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.json(attrname='json',\n               expr=<Name.response l.87 at 0x257e32721d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.skip(attrname='skip',\n               expr=<Attribute.mark l.91 at 0x257e32713d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.skip(attrname='skip',\n               expr=<Attribute.mark l.97 at 0x257e32714d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.skip(attrname='skip',\n               expr=<Attribute.mark l.103 at 0x257e3273ad0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.skip(attrname='skip',\n               expr=<Attribute.mark l.109 at 0x257e3272d10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.skip(attrname='skip',\n               expr=<Attribute.mark l.115 at 0x257e32731d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.skip(attrname='skip',\n               expr=<Attribute.mark l.121 at 0x257e3283550>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.skip(attrname='skip',\n               expr=<Attribute.mark l.127 at 0x257e3283cd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.skip(attrname='skip',\n               expr=<Attribute.mark l.133 at 0x257e3282690>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.options(attrname='options',\n                  expr=<Attribute.client l.142 at 0x257e3280710>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.skip(attrname='skip',\n               expr=<Attribute.mark l.146 at 0x257e3280bd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.skip(attrname='skip',\n               expr=<Attribute.mark l.152 at 0x257e32b4910>)",
              "type": "Uninferable"
            }
          ],
          "unresolved_imports": [
            "pytest",
            "asyncio",
            "sys"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": "streamlit_app_modern.py",
        "language": "python",
        "file_size": 13898,
        "line_count": 371,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "__init__",
            "line_number": 25,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "initialize_session_state",
            "line_number": 30,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Initialize session state variables",
            "is_async": false,
            "complexity": 6
          },
          {
            "name": "run",
            "line_number": 43,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Main application entry point",
            "is_async": false,
            "complexity": 5
          },
          {
            "name": "render_sidebar",
            "line_number": 63,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Render modern sidebar navigation",
            "is_async": false,
            "complexity": 3
          },
          {
            "name": "render_dashboard",
            "line_number": 109,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Render dashboard page",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "render_analysis",
            "line_number": 113,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Render project analysis page",
            "is_async": false,
            "complexity": 7
          },
          {
            "name": "render_chat",
            "line_number": 201,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Render AI chat interface",
            "is_async": false,
            "complexity": 3
          },
          {
            "name": "render_settings",
            "line_number": 238,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Render settings page",
            "is_async": false,
            "complexity": 6
          },
          {
            "name": "start_analysis",
            "line_number": 300,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Start project analysis",
            "is_async": false,
            "complexity": 5
          },
          {
            "name": "_api_call",
            "line_number": 341,
            "parameters": [
              "self",
              "method",
              "endpoint"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Make API call to backend\n\nArgs:\n    method: HTTP method\n    endpoint: API endpoint\n    **kwargs: Additional requests arguments\n    \nReturns:\n    Response JSON or None",
            "is_async": false,
            "complexity": 3
          }
        ],
        "classes": [
          {
            "name": "ModernApp",
            "line_number": 22,
            "bases": [],
            "decorators": [],
            "docstring": "Main application controller with modern design",
            "methods": [
              "__init__",
              "initialize_session_state",
              "run",
              "render_sidebar",
              "render_dashboard",
              "render_analysis",
              "render_chat",
              "render_settings",
              "start_analysis",
              "_api_call"
            ],
            "method_count": 10
          }
        ],
        "imports": [
          {
            "type": "import",
            "modules": [
              "streamlit"
            ],
            "line_number": 5
          },
          {
            "type": "import",
            "modules": [
              "requests"
            ],
            "line_number": 6
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 7
          },
          {
            "type": "from_import",
            "module": "typing",
            "names": [
              "Dict",
              "Any",
              "Optional"
            ],
            "level": 0,
            "line_number": 8
          },
          {
            "type": "from_import",
            "module": "ui.modern_ui_manager",
            "names": [
              "get_ui_manager"
            ],
            "level": 0,
            "line_number": 11
          },
          {
            "type": "from_import",
            "module": "ui.pages.dashboard_page",
            "names": [
              "DashboardPage"
            ],
            "level": 0,
            "line_number": 12
          },
          {
            "type": "from_import",
            "module": "ui.modern_styles",
            "names": [
              "get_icon",
              "COLORS"
            ],
            "level": 0,
            "line_number": 13
          },
          {
            "type": "import",
            "modules": [
              "time"
            ],
            "line_number": 322
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 40,
          "function_count": 10,
          "class_count": 1,
          "import_count": 8,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Name.get_ui_manager(name='get_ui_manager')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.get_ui_manager(name='get_ui_manager')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.DashboardPage(name='DashboardPage')",
              "type": "Instance of ui.pages.dashboard_page.DashboardPage"
            },
            {
              "function": "Attribute.initialize_session_state(attrname='initialize_session_state',\n                                   expr=<Name.self l.28 at 0x257e3b0a190>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.setup_page(attrname='setup_page',\n                     expr=<Attribute.ui l.46 at 0x257e3b0bf10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.render_sidebar(attrname='render_sidebar',\n                         expr=<Name.self l.49 at 0x257e3af4150>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.session_state l.52 at 0x257e3af43d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.render_dashboard(attrname='render_dashboard',\n                           expr=<Name.self l.55 at 0x257e3af4790>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.render_analysis(attrname='render_analysis',\n                          expr=<Name.self l.57 at 0x257e3af4ad0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.render_chat(attrname='render_chat',\n                      expr=<Name.self l.59 at 0x257e3af4e10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.render_settings(attrname='render_settings',\n                          expr=<Name.self l.61 at 0x257e3af5150>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.render_sidebar_header(attrname='render_sidebar_header',\n                                expr=<Attribute.ui l.67 at 0x257e3af59d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Name.pages l.77 at 0x257e3af6750>)",
              "type": "DictItems.list(ctx=None,\n               elts=[ <Tuple.tuple l.71 at 0x257e3afc090>,\n                 <Tuple.tuple l.72 at 0x257e3afcf50>,\n                 <Tuple.tuple l.73 at 0x257e3afd150>,\n                 <Tuple.tuple l.74 at 0x257e3afdf50>])"
            },
            {
              "function": "Attribute.button(attrname='button',\n                 expr=<Name.st l.78 at 0x257e3af6850>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.get_icon(name='get_icon')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.rerun(attrname='rerun',\n                expr=<Name.st l.84 at 0x257e3af7090>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.markdown(attrname='markdown',\n                   expr=<Name.st l.86 at 0x257e3af7290>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.markdown(attrname='markdown',\n                   expr=<Name.st l.89 at 0x257e3af7450>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.get_icon(name='get_icon')",
              "type": "Uninferable"
            },
            {
              "function": "Name.get_icon(name='get_icon')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.markdown(attrname='markdown',\n                   expr=<Name.st l.102 at 0x257e3af7b10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.render(attrname='render',\n                 expr=<Attribute.dashboard l.111 at 0x257e3b101d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.render_header(attrname='render_header',\n                        expr=<Attribute.ui l.115 at 0x257e3b10910>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.markdown(attrname='markdown',\n                   expr=<Name.st l.122 at 0x257e3b10bd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.text_input(attrname='text_input',\n                     expr=<Name.st l.125 at 0x257e3b10ed0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.session_state l.127 at 0x257e3b11050>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.session_state l.133 at 0x257e3b11690>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.expander(attrname='expander',\n                   expr=<Name.st l.137 at 0x257e3b11a90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.markdown(attrname='markdown',\n                   expr=<Name.st l.138 at 0x257e3b11c90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.markdown(attrname='markdown',\n                   expr=<Name.st l.154 at 0x257e3b11f90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.columns(attrname='columns',\n                  expr=<Name.st l.156 at 0x257e3b12350>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.markdown(attrname='markdown',\n                   expr=<Name.st l.159 at 0x257e3b127d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.button(attrname='button',\n                 expr=<Name.st l.171 at 0x257e3b12fd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.get_icon(name='get_icon')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.start_analysis(attrname='start_analysis',\n                         expr=<Name.self l.178 at 0x257e3b13650>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.button(attrname='button',\n                 expr=<Name.st l.181 at 0x257e3b13910>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.get_icon(name='get_icon')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.rerun(attrname='rerun',\n                expr=<Name.st l.187 at 0x257e3b13f90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.markdown(attrname='markdown',\n                   expr=<Name.st l.191 at 0x257e3b142d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.render_progress_card(attrname='render_progress_card',\n                               expr=<Attribute.ui l.191 at 0x257e3b14310>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.st l.199 at 0x257e3b147d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.render_header(attrname='render_header',\n                        expr=<Attribute.ui l.203 at 0x257e3b14e50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.markdown(attrname='markdown',\n                   expr=<Name.st l.210 at 0x257e3b15110>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.render_card(attrname='render_card',\n                      expr=<Attribute.ui l.210 at 0x257e3b15210>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.text_input(attrname='text_input',\n                     expr=<Name.st l.228 at 0x257e3b15810>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.button(attrname='button',\n                 expr=<Name.st l.234 at 0x257e3b15ad0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.get_icon(name='get_icon')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.show_info(attrname='show_info',\n                    expr=<Attribute.ui l.236 at 0x257e3b16010>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.render_header(attrname='render_header',\n                        expr=<Attribute.ui l.240 at 0x257e3b16710>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.markdown(attrname='markdown',\n                   expr=<Name.st l.247 at 0x257e3b169d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._api_call(attrname='_api_call',\n                    expr=<Name.self l.250 at 0x257e3b16cd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.columns(attrname='columns',\n                  expr=<Name.st l.254 at 0x257e3b17490>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.m l.257 at 0x257e3b179d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.selectbox(attrname='selectbox',\n                    expr=<Name.st l.258 at 0x257e3b17e50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.button(attrname='button',\n                 expr=<Name.st l.265 at 0x257e3b18310>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.get_icon(name='get_icon')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.show_success(attrname='show_success',\n                       expr=<Attribute.ui l.267 at 0x257e3b18950>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.markdown(attrname='markdown',\n                   expr=<Name.st l.270 at 0x257e3b18dd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.markdown(attrname='markdown',\n                   expr=<Name.st l.282 at 0x257e3b19510>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.markdown(attrname='markdown',\n                   expr=<Name.st l.285 at 0x257e3b19750>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.render_card(attrname='render_card',\n                      expr=<Attribute.ui l.285 at 0x257e3b19850>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.show_error(attrname='show_error',\n                     expr=<Attribute.ui l.303 at 0x257e3b1a290>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.spinner(attrname='spinner',\n                  expr=<Name.st l.307 at 0x257e3b1a650>)",
              "type": "Generator(generator)"
            },
            {
              "function": "Attribute._api_call(attrname='_api_call',\n                    expr=<Name.self l.311 at 0x257e3b1aa90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.response l.319 at 0x257e3b1b110>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.st l.321 at 0x257e3b1b450>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._api_call(attrname='_api_call',\n                    expr=<Name.self l.326 at 0x257e3b1b8d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.results_response l.328 at 0x257e3b1bbd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.results_response l.329 at 0x257e3b1be90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.show_success(attrname='show_success',\n                       expr=<Attribute.ui l.330 at 0x257e3b20150>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.balloons(attrname='balloons',\n                   expr=<Name.st l.331 at 0x257e3b20350>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.rerun(attrname='rerun',\n                expr=<Name.st l.333 at 0x257e3b20690>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.show_warning(attrname='show_warning',\n                       expr=<Attribute.ui l.335 at 0x257e3b20850>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.response l.337 at 0x257e3b20c50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.show_error(attrname='show_error',\n                     expr=<Attribute.ui l.338 at 0x257e3b20ed0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.st l.339 at 0x257e3b211d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.request(attrname='request',\n                  expr=<Name.requests l.355 at 0x257e3b22090>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.json(attrname='json',\n               expr=<Name.response l.358 at 0x257e3b22550>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.st l.362 at 0x257e3b22910>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.ModernApp(name='ModernApp')",
              "type": "Instance of .ModernApp"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.app l.369 at 0x257e3b23050>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            }
          ],
          "unresolved_imports": [
            "streamlit",
            "requests",
            "time"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\scripts\\context-monitor.py",
        "language": "python",
        "file_size": 8440,
        "line_count": 236,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "parse_context_from_transcript",
            "line_number": 12,
            "parameters": [
              "transcript_path"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Parse context usage from transcript file.",
            "is_async": false,
            "complexity": 12
          },
          {
            "name": "get_context_display",
            "line_number": 80,
            "parameters": [
              "context_info"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Generate context display with visual indicators.",
            "is_async": false,
            "complexity": 8
          },
          {
            "name": "get_directory_display",
            "line_number": 121,
            "parameters": [
              "workspace_data"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Get directory display name.",
            "is_async": false,
            "complexity": 7
          },
          {
            "name": "get_session_metrics",
            "line_number": 139,
            "parameters": [
              "cost_data"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Get session metrics display.",
            "is_async": false,
            "complexity": 12
          },
          {
            "name": "main",
            "line_number": 193,
            "parameters": [],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 5
          }
        ],
        "classes": [],
        "imports": [
          {
            "type": "import",
            "modules": [
              "json"
            ],
            "line_number": 7
          },
          {
            "type": "import",
            "modules": [
              "sys"
            ],
            "line_number": 8
          },
          {
            "type": "import",
            "modules": [
              "os"
            ],
            "line_number": 9
          },
          {
            "type": "import",
            "modules": [
              "re"
            ],
            "line_number": 10
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 44,
          "function_count": 5,
          "class_count": 0,
          "import_count": 4,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Attribute.path l.14 at 0x25798faead0>)",
              "type": "Const.bool(value=False,\n           kind=None)"
            },
            {
              "function": "Attribute.readlines(attrname='readlines',\n                    expr=<Name.f l.19 at 0x25798faf650>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.reversed(name='reversed')",
              "type": "Instance of builtins.reversed"
            },
            {
              "function": "Attribute.loads(attrname='loads',\n                expr=<Name.json l.26 at 0x25798fe41d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Name.line l.26 at 0x25798fe42d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.data l.29 at 0x25798fe44d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.data l.30 at 0x25798fe4810>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.message l.31 at 0x25798fe4b90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.usage l.34 at 0x25798fe4f50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.usage l.35 at 0x25798fe5210>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.usage l.36 at 0x25798fe54d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.data l.49 at 0x25798fe6210>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.data l.50 at 0x25798fe6550>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.search(attrname='search',\n                 expr=<Name.re l.53 at 0x25798fe6810>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.match l.55 at 0x25798fe6c50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.search(attrname='search',\n                 expr=<Name.re l.63 at 0x25798fe7250>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.match l.65 at 0x25798fe75d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.context_info l.85 at 0x25798fec8d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.context_info l.86 at 0x25798fecb90>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.workspace_data l.123 at 0x25798ff4450>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.workspace_data l.124 at 0x25798ff4710>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.startswith(attrname='startswith',\n                     expr=<Name.current_dir l.127 at 0x25798ff4a90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lstrip(attrname='lstrip',\n                 expr=<Subscript l.128 at 0x25798ff4d50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.basename(attrname='basename',\n                   expr=<Attribute.path l.129 at 0x25798ff5190>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.basename(attrname='basename',\n                   expr=<Attribute.path l.131 at 0x25798ff53d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.basename(attrname='basename',\n                   expr=<Attribute.path l.133 at 0x25798ff56d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.basename(attrname='basename',\n                   expr=<Attribute.path l.135 at 0x25798ff59d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.cost_data l.147 at 0x25798ff6510>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.cost_data l.160 at 0x25798ff7b10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.cost_data l.176 at 0x25798ffd090>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.cost_data l.177 at 0x25798ffd350>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Const.str l.191 at 0x25798ffe950>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.load(attrname='load',\n               expr=<Name.json l.196 at 0x25798fff210>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Call l.199 at 0x25798fff4d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.data l.199 at 0x25798fff510>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.data l.200 at 0x25798fff950>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.data l.201 at 0x25798fffc50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.data l.202 at 0x25798ffff10>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.parse_context_from_transcript(name='parse_context_from_transcript')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.get_context_display(name='get_context_display')",
              "type": "Const.str(value='🔵 ???',\n          kind=None)"
            },
            {
              "function": "Name.get_directory_display(name='get_directory_display')",
              "type": "Uninferable"
            },
            {
              "function": "Name.get_session_metrics(name='get_session_metrics')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.basename(attrname='basename',\n                   expr=<Attribute.path l.233 at 0x25799006350>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.main(name='main')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            }
          ],
          "unresolved_imports": [
            "json",
            "sys",
            "os",
            "re"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\algorithmic-art\\templates\\generator_template.js",
        "language": "javascript",
        "file_size": 7376,
        "line_count": 223,
        "analysis_method": "javascript_ast",
        "functions": [],
        "classes": [],
        "imports": [],
        "complexity_metrics": {},
        "code_issues": [],
        "analysis_error": "'NoneType' object is not callable"
      },
      {
        "file_path": ".claude\\skills\\docx\\ooxml\\scripts\\pack.py",
        "language": "python",
        "file_size": 5596,
        "line_count": 160,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "main",
            "line_number": 19,
            "parameters": [],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 4
          },
          {
            "name": "pack_document",
            "line_number": 45,
            "parameters": [
              "input_dir",
              "output_file",
              "validate"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": "Pack a directory into an Office file (.docx/.pptx/.xlsx).\n\nArgs:\n    input_dir: Path to unpacked Office document directory\n    output_file: Path to output Office file\n    validate: If True, validates with soffice (default: False)\n\nReturns:\n    bool: True if successful, False if validation failed",
            "is_async": false,
            "complexity": 9
          },
          {
            "name": "validate_document",
            "line_number": 90,
            "parameters": [
              "doc_path"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Validate document by converting to HTML with soffice.",
            "is_async": false,
            "complexity": 6
          },
          {
            "name": "condense_xml",
            "line_number": 133,
            "parameters": [
              "xml_file"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Strip unnecessary whitespace and remove comments.",
            "is_async": false,
            "complexity": 8
          }
        ],
        "classes": [],
        "imports": [
          {
            "type": "import",
            "modules": [
              "argparse"
            ],
            "line_number": 9
          },
          {
            "type": "import",
            "modules": [
              "shutil"
            ],
            "line_number": 10
          },
          {
            "type": "import",
            "modules": [
              "subprocess"
            ],
            "line_number": 11
          },
          {
            "type": "import",
            "modules": [
              "sys"
            ],
            "line_number": 12
          },
          {
            "type": "import",
            "modules": [
              "tempfile"
            ],
            "line_number": 13
          },
          {
            "type": "import",
            "modules": [
              "defusedxml.minidom"
            ],
            "line_number": 14
          },
          {
            "type": "import",
            "modules": [
              "zipfile"
            ],
            "line_number": 15
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 16
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 27,
          "function_count": 4,
          "class_count": 0,
          "import_count": 8,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.ArgumentParser(attrname='ArgumentParser',\n                         expr=<Name.argparse l.20 at 0x25798fde5d0>)",
              "type": "Instance of argparse.ArgumentParser"
            },
            {
              "function": "Attribute.add_argument(attrname='add_argument',\n                       expr=<Name.parser l.21 at 0x25798fdc4d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.add_argument(attrname='add_argument',\n                       expr=<Name.parser l.22 at 0x25798fdfc10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.add_argument(attrname='add_argument',\n                       expr=<Name.parser l.23 at 0x25798fdf690>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.parse_args(attrname='parse_args',\n                     expr=<Name.parser l.24 at 0x25798fdf350>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.pack_document(name='pack_document')",
              "type": "Const.bool(value=False,\n           kind=None)"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.is_dir(attrname='is_dir',\n                 expr=<Name.input_dir l.59 at 0x25798fba3d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Attribute.suffix l.61 at 0x25798fbaa90>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.TemporaryDirectory(attrname='TemporaryDirectory',\n                             expr=<Name.tempfile l.65 at 0x25798fbae90>)",
              "type": "Instance of tempfile.TemporaryDirectory"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.copytree(attrname='copytree',\n                   expr=<Name.shutil l.67 at 0x25798fbb410>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.rglob(attrname='rglob',\n                expr=<Name.temp_content_dir l.71 at 0x25798fbb690>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.condense_xml(name='condense_xml')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.mkdir(attrname='mkdir',\n                expr=<Attribute.parent l.75 at 0x25798fbbc50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.ZipFile(attrname='ZipFile',\n                  expr=<Name.zipfile l.76 at 0x25798fbb350>)",
              "type": "Instance of zipfile.ZipFile"
            },
            {
              "function": "Attribute.rglob(attrname='rglob',\n                expr=<Name.temp_content_dir l.77 at 0x25798faec50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.is_file(attrname='is_file',\n                  expr=<Name.f l.78 at 0x25798fac290>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.write(attrname='write',\n                expr=<Name.zf l.79 at 0x25798fac510>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.relative_to(attrname='relative_to',\n                      expr=<Name.f l.79 at 0x25798fadb90>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.validate_document(name='validate_document')",
              "type": "Const.bool(value=False,\n           kind=None)"
            },
            {
              "function": "Attribute.unlink(attrname='unlink',\n                 expr=<Name.output_file l.84 at 0x25798fac590>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Attribute.suffix l.93 at 0x257fe8af910>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.TemporaryDirectory(attrname='TemporaryDirectory',\n                             expr=<Name.tempfile l.101 at 0x25798fad210>)",
              "type": "Instance of tempfile.TemporaryDirectory"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.subprocess l.103 at 0x25798fc3e90>)",
              "type": "Instance of subprocess.CompletedProcess"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Attribute.stderr l.118 at 0x25798fc0650>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.parse(attrname='parse',\n                expr=<Attribute.minidom l.136 at 0x25798fc1e10>)",
              "type": "Instance of xml.dom.minidom.Document"
            },
            {
              "function": "Attribute.getElementsByTagName(attrname='getElementsByTagName',\n                               expr=<Name.dom l.139 at 0x25798fc2410>)",
              "type": "Instance of xml.dom.minicompat.NodeList"
            },
            {
              "function": "Attribute.endswith(attrname='endswith',\n                   expr=<Attribute.tagName l.141 at 0x25798fc26d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.list(name='list')",
              "type": "Instance of builtins.list"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Attribute.nodeValue l.149 at 0x25798fc3710>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.removeChild(attrname='removeChild',\n                      expr=<Name.element l.151 at 0x25799006dd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.write(attrname='write',\n                expr=<Name.f l.155 at 0x257990073d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.toxml(attrname='toxml',\n                expr=<Name.dom l.155 at 0x257990074d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.main(name='main')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            }
          ],
          "unresolved_imports": [
            "argparse",
            "shutil",
            "subprocess",
            "sys",
            "tempfile",
            "defusedxml.minidom",
            "zipfile"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\docx\\ooxml\\scripts\\unpack.py",
        "language": "python",
        "file_size": 1037,
        "line_count": 30,
        "analysis_method": "python_ast",
        "functions": [],
        "classes": [],
        "imports": [
          {
            "type": "import",
            "modules": [
              "random"
            ],
            "line_number": 4
          },
          {
            "type": "import",
            "modules": [
              "sys"
            ],
            "line_number": 5
          },
          {
            "type": "import",
            "modules": [
              "defusedxml.minidom"
            ],
            "line_number": 6
          },
          {
            "type": "import",
            "modules": [
              "zipfile"
            ],
            "line_number": 7
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 8
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 0,
          "function_count": 0,
          "class_count": 0,
          "import_count": 5,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.mkdir(attrname='mkdir',\n                expr=<Name.output_path l.16 at 0x257de576690>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.extractall(attrname='extractall',\n                     expr=<Call l.17 at 0x257e376d050>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.ZipFile(attrname='ZipFile',\n                  expr=<Name.zipfile l.17 at 0x257e376d110>)",
              "type": "Instance of zipfile.ZipFile"
            },
            {
              "function": "Name.list(name='list')",
              "type": "Instance of builtins.list"
            },
            {
              "function": "Attribute.rglob(attrname='rglob',\n                expr=<Name.output_path l.20 at 0x257e376d5d0>)",
              "type": "Generator(generator)"
            },
            {
              "function": "Name.list(name='list')",
              "type": "Instance of builtins.list"
            },
            {
              "function": "Attribute.rglob(attrname='rglob',\n                expr=<Name.output_path l.20 at 0x257e376cc90>)",
              "type": "Generator(generator)"
            },
            {
              "function": "Attribute.read_text(attrname='read_text',\n                    expr=<Name.xml_file l.22 at 0x257df4d3810>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.parseString(attrname='parseString',\n                      expr=<Attribute.minidom l.23 at 0x257e3ac7e10>)",
              "type": "Instance of xml.dom.minidom.Document"
            },
            {
              "function": "Attribute.write_bytes(attrname='write_bytes',\n                      expr=<Name.xml_file l.24 at 0x257e3ac7d10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.toprettyxml(attrname='toprettyxml',\n                      expr=<Name.dom l.24 at 0x257e3ac7a10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.endswith(attrname='endswith',\n                   expr=<Name.input_file l.27 at 0x257de579c90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Const.str l.28 at 0x257de579310>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.choices(attrname='choices',\n                  expr=<Name.random l.28 at 0x257de578790>)",
              "type": "Uninferable"
            }
          ],
          "unresolved_imports": [
            "random",
            "sys",
            "defusedxml.minidom",
            "zipfile"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\docx\\ooxml\\scripts\\validate.py",
        "language": "python",
        "file_size": 1959,
        "line_count": 70,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "main",
            "line_number": 16,
            "parameters": [],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 4
          }
        ],
        "classes": [],
        "imports": [
          {
            "type": "import",
            "modules": [
              "argparse"
            ],
            "line_number": 9
          },
          {
            "type": "import",
            "modules": [
              "sys"
            ],
            "line_number": 10
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 11
          },
          {
            "type": "from_import",
            "module": "validation",
            "names": [
              "DOCXSchemaValidator",
              "PPTXSchemaValidator",
              "RedliningValidator"
            ],
            "level": 0,
            "line_number": 13
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 4,
          "function_count": 1,
          "class_count": 0,
          "import_count": 4,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.ArgumentParser(attrname='ArgumentParser',\n                         expr=<Name.argparse l.17 at 0x25797aca310>)",
              "type": "Instance of argparse.ArgumentParser"
            },
            {
              "function": "Attribute.add_argument(attrname='add_argument',\n                       expr=<Name.parser l.18 at 0x25797aca4d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.add_argument(attrname='add_argument',\n                       expr=<Name.parser l.22 at 0x25797ac8cd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.add_argument(attrname='add_argument',\n                       expr=<Name.parser l.27 at 0x25797ac9290>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.parse_args(attrname='parse_args',\n                     expr=<Name.parser l.33 at 0x25797ac8fd0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Attribute.suffix l.38 at 0x25797acbdd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.is_dir(attrname='is_dir',\n                 expr=<Name.unpacked_dir l.39 at 0x25797acb790>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.is_file(attrname='is_file',\n                  expr=<Name.original_file l.40 at 0x25797acaa50>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.V(name='V')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.validate(attrname='validate',\n                   expr=<Name.validator l.59 at 0x25798098450>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.main(name='main')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            }
          ],
          "unresolved_imports": [
            "argparse",
            "sys"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\docx\\ooxml\\scripts\\validation\\base.py",
        "language": "python",
        "file_size": 39892,
        "line_count": 952,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "__init__",
            "line_number": 106,
            "parameters": [
              "self",
              "unpacked_dir",
              "original_file",
              "verbose"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "validate",
            "line_number": 123,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Run all validation checks and return True if all pass.",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "validate_xml",
            "line_number": 127,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Validate that all XML files are well-formed.",
            "is_async": false,
            "complexity": 7
          },
          {
            "name": "validate_namespaces",
            "line_number": 156,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Validate that namespace prefixes in Ignorable attributes are declared.",
            "is_async": false,
            "complexity": 7
          },
          {
            "name": "validate_unique_ids",
            "line_number": 186,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Validate that specific IDs are unique according to OOXML requirements.",
            "is_async": false,
            "complexity": 17
          },
          {
            "name": "validate_file_references",
            "line_number": 277,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Validate that all .rels files properly reference files and that all files are referenced.",
            "is_async": false,
            "complexity": 24
          },
          {
            "name": "validate_all_relationship_ids",
            "line_number": 388,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Validate that all r:id attributes in XML files reference existing IDs\nin their corresponding .rels files, and optionally validate relationship types.",
            "is_async": false,
            "complexity": 17
          },
          {
            "name": "_get_expected_relationship_type",
            "line_number": 486,
            "parameters": [
              "self",
              "element_name"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Get the expected relationship type for an element.\nFirst checks the explicit mapping, then tries pattern detection.",
            "is_async": false,
            "complexity": 9
          },
          {
            "name": "validate_content_types",
            "line_number": 522,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Validate that all content files are properly declared in [Content_Types].xml.",
            "is_async": false,
            "complexity": 23
          },
          {
            "name": "validate_file_against_xsd",
            "line_number": 641,
            "parameters": [
              "self",
              "xml_file",
              "verbose"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": "Validate a single XML file against XSD schema, comparing with original.\n\nArgs:\n    xml_file: Path to XML file to validate\n    verbose: Enable verbose output\n\nReturns:\n    tuple: (is_valid, new_errors_set) where is_valid is True/False/None (skipped)",
            "is_async": false,
            "complexity": 7
          },
          {
            "name": "validate_against_xsd",
            "line_number": 688,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Validate XML files against XSD schemas, showing only new errors compared to original.",
            "is_async": false,
            "complexity": 14
          },
          {
            "name": "_get_schema_path",
            "line_number": 741,
            "parameters": [
              "self",
              "xml_file"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Determine the appropriate schema path for an XML file.",
            "is_async": false,
            "complexity": 8
          },
          {
            "name": "_clean_ignorable_namespaces",
            "line_number": 765,
            "parameters": [
              "self",
              "xml_doc"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Remove attributes and elements not in allowed namespaces.",
            "is_async": false,
            "complexity": 6
          },
          {
            "name": "_remove_ignorable_elements",
            "line_number": 791,
            "parameters": [
              "self",
              "root"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Recursively remove all elements not in allowed namespaces.",
            "is_async": false,
            "complexity": 7
          },
          {
            "name": "_preprocess_for_mc_ignorable",
            "line_number": 815,
            "parameters": [
              "self",
              "xml_doc"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Preprocess XML to handle mc:Ignorable attribute properly.",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "_validate_single_file_xsd",
            "line_number": 826,
            "parameters": [
              "self",
              "xml_file",
              "base_path"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Validate a single XML file against XSD schema. Returns (is_valid, errors_set).",
            "is_async": false,
            "complexity": 7
          },
          {
            "name": "_get_original_file_errors",
            "line_number": 869,
            "parameters": [
              "self",
              "xml_file"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Get XSD validation errors from a single file in the original document.\n\nArgs:\n    xml_file: Path to the XML file in unpacked_dir to check\n\nReturns:\n    set: Set of error messages from the original file",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "_remove_template_tags_from_text_nodes",
            "line_number": 906,
            "parameters": [
              "self",
              "xml_doc"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Remove template tags from XML text nodes and collect warnings.\n\nTemplate tags follow the pattern {{ ... }} and are used as placeholders\nfor content replacement. They should be removed from text content before\nXSD validation while preserving XML structure.\n\nReturns:\n    tuple: (cleaned_xml_doc, warnings_list)",
            "is_async": false,
            "complexity": 9
          },
          {
            "name": "process_text_content",
            "line_number": 923,
            "parameters": [
              "text",
              "content_type"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 4
          }
        ],
        "classes": [
          {
            "name": "BaseSchemaValidator",
            "line_number": 11,
            "bases": [],
            "decorators": [],
            "docstring": "Base validator with common validation logic for document files.",
            "methods": [
              "__init__",
              "validate",
              "validate_xml",
              "validate_namespaces",
              "validate_unique_ids",
              "validate_file_references",
              "validate_all_relationship_ids",
              "_get_expected_relationship_type",
              "validate_content_types",
              "validate_file_against_xsd",
              "validate_against_xsd",
              "_get_schema_path",
              "_clean_ignorable_namespaces",
              "_remove_ignorable_elements",
              "_preprocess_for_mc_ignorable",
              "_validate_single_file_xsd",
              "_get_original_file_errors",
              "_remove_template_tags_from_text_nodes"
            ],
            "method_count": 18
          }
        ],
        "imports": [
          {
            "type": "import",
            "modules": [
              "re"
            ],
            "line_number": 5
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 6
          },
          {
            "type": "import",
            "modules": [
              "lxml.etree"
            ],
            "line_number": 8
          },
          {
            "type": "import",
            "modules": [
              "lxml.etree"
            ],
            "line_number": 393
          },
          {
            "type": "import",
            "modules": [
              "tempfile"
            ],
            "line_number": 878
          },
          {
            "type": "import",
            "modules": [
              "zipfile"
            ],
            "line_number": 879
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 173,
          "function_count": 19,
          "class_count": 1,
          "import_count": 6,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.resolve(attrname='resolve',\n                  expr=<Call l.107 at 0x257e587f4d0>)",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.rglob(attrname='rglob',\n                expr=<Attribute.unpacked_dir l.117 at 0x25797fc4710>)",
              "type": "Generator(generator)"
            },
            {
              "function": "Name.NotImplementedError(name='NotImplementedError')",
              "type": "Instance of builtins.NotImplementedError"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.relative_to(attrname='relative_to',\n                      expr=<Name.xml_file l.137 at 0x25797fc6590>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.relative_to(attrname='relative_to',\n                      expr=<Name.xml_file l.142 at 0x25797fc6d10>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.set(name='set')",
              "type": "Instance of builtins.set"
            },
            {
              "function": "Attribute.keys(attrname='keys',\n               expr=<Attribute.nsmap l.163 at 0x257ff604cd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Attribute.attrib l.166 at 0x257ff605310>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.endswith(attrname='endswith',\n                   expr=<Name.k l.166 at 0x257ff6054d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.set(name='set')",
              "type": "Instance of builtins.set"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Name.attr_val l.168 at 0x257ff605850>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.relative_to(attrname='relative_to',\n                      expr=<Name.xml_file l.170 at 0x257ff605d10>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.xpath(attrname='xpath',\n                expr=<Name.root l.197 at 0x257ff5fc910>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.remove(attrname='remove',\n                 expr=<Call l.201 at 0x257ff5fea50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.getparent(attrname='getparent',\n                    expr=<Name.elem l.201 at 0x257ff5fe910>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.iter(attrname='iter',\n               expr=<Name.root l.204 at 0x257ff5fc190>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Subscript l.207 at 0x257ff5fcad0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Attribute.tag l.207 at 0x257ff5fd0d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Attribute.tag l.209 at 0x257ff5ff5d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Attribute.attrib l.218 at 0x257ff5fce90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Subscript l.220 at 0x257ff5fd650>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Name.attr l.220 at 0x257ff5fd610>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.attr l.222 at 0x257ff5fdf50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.relative_to(attrname='relative_to',\n                      expr=<Name.xml_file l.236 at 0x257ff5ffad0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.relative_to(attrname='relative_to',\n                      expr=<Name.xml_file l.242 at 0x257ff5ff110>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.relative_to(attrname='relative_to',\n                      expr=<Name.xml_file l.255 at 0x257ff625e90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.relative_to(attrname='relative_to',\n                      expr=<Name.xml_file l.264 at 0x257ff624c10>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Name.list(name='list')",
              "type": "Instance of builtins.list"
            },
            {
              "function": "Attribute.rglob(attrname='rglob',\n                expr=<Attribute.unpacked_dir l.284 at 0x257ff6277d0>)",
              "type": "Generator(generator)"
            },
            {
              "function": "Attribute.rglob(attrname='rglob',\n                expr=<Attribute.unpacked_dir l.293 at 0x257ff626290>)",
              "type": "Generator(generator)"
            },
            {
              "function": "Attribute.is_file(attrname='is_file',\n                  expr=<Name.file_path l.295 at 0x257ff627710>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.endswith(attrname='endswith',\n                   expr=<Attribute.name l.297 at 0x257ff626210>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.resolve(attrname='resolve',\n                  expr=<Name.file_path l.299 at 0x257ff62cd90>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.set(name='set')",
              "type": "Set.set(elts=[])"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.set(name='set')",
              "type": "Set.set(elts=[])"
            },
            {
              "function": "Attribute.findall(attrname='findall',\n                  expr=<Name.rels_root l.322 at 0x257ff62c9d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.rel l.326 at 0x257ff62d150>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.startswith(attrname='startswith',\n                     expr=<Name.target l.327 at 0x257ff62d9d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.resolve(attrname='resolve',\n                  expr=<Name.target_path l.342 at 0x257ff62f690>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Name.target_path l.343 at 0x257ff62f950>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.is_file(attrname='is_file',\n                  expr=<Name.target_path l.343 at 0x257ff62fe10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.relative_to(attrname='relative_to',\n                      expr=<Name.rels_file l.353 at 0x257ff62d7d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.relative_to(attrname='relative_to',\n                      expr=<Name.rels_file l.360 at 0x257ff628b10>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.set(name='set')",
              "type": "Set.set(elts=[])"
            },
            {
              "function": "Attribute.relative_to(attrname='relative_to',\n                      expr=<Name.unref_file l.368 at 0x257ff629650>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Name.rels_file l.409 at 0x257ff62b9d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.findall(attrname='findall',\n                  expr=<Name.rels_root l.417 at 0x257ff636d50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.rel l.420 at 0x257ff637590>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.rel l.421 at 0x257ff634a90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.relative_to(attrname='relative_to',\n                      expr=<Name.rels_file l.425 at 0x257ff637ed0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Name.rel_type l.432 at 0x257ff634e50>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.iter(attrname='iter',\n               expr=<Name.xml_root l.440 at 0x257ff6363d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.elem l.442 at 0x257ff636850>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.relative_to(attrname='relative_to',\n                      expr=<Name.xml_file l.444 at 0x257ff637350>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Attribute.tag l.446 at 0x257ff637c50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Const.str l.454 at 0x257ff6361d0>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.keys(attrname='keys',\n               expr=<Name.rid_to_type l.454 at 0x257ff637090>)",
              "type": "DictKeys.list(ctx=None,\n              elts=[])"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Attribute._get_expected_relationship_type(attrname='_get_expected_relationship_type',\n                                          expr=<Name.self l.458 at 0x257ff63da50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.actual_type l.464 at 0x257ff63c510>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.relative_to(attrname='relative_to',\n                      expr=<Name.xml_file l.472 at 0x257ff63c310>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.element_name l.492 at 0x257ff63f610>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.endswith(attrname='endswith',\n                   expr=<Name.elem_lower l.500 at 0x257ff63c590>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.endswith(attrname='endswith',\n                   expr=<Name.prefix l.504 at 0x257ff63e250>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.prefix l.505 at 0x257ff63f850>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.endswith(attrname='endswith',\n                   expr=<Name.prefix l.506 at 0x257ff63f990>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.prefix l.507 at 0x257ff63ecd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.prefix l.513 at 0x257ff645650>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.endswith(attrname='endswith',\n                   expr=<Name.elem_lower l.516 at 0x257ff647990>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.prefix l.518 at 0x257ff646010>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Name.content_types_file l.528 at 0x257ff644950>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.set(name='set')",
              "type": "Set.set(elts=[])"
            },
            {
              "function": "Name.set(name='set')",
              "type": "Set.set(elts=[])"
            },
            {
              "function": "Attribute.findall(attrname='findall',\n                  expr=<Name.root l.539 at 0x257ff646b10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.override l.542 at 0x257ff647190>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lstrip(attrname='lstrip',\n                 expr=<Name.part_name l.544 at 0x257ff647650>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.findall(attrname='findall',\n                  expr=<Name.root l.547 at 0x257ff647ed0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.default l.550 at 0x257ff6450d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.extension l.552 at 0x257ff646850>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.list(name='list')",
              "type": "Instance of builtins.list"
            },
            {
              "function": "Attribute.rglob(attrname='rglob',\n                expr=<Attribute.unpacked_dir l.579 at 0x257ff655010>)",
              "type": "Generator(generator)"
            },
            {
              "function": "Attribute.is_file(attrname='is_file',\n                  expr=<Name.f l.580 at 0x257ff657b50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.replace(attrname='replace',\n                  expr=<Call l.584 at 0x257ff656ad0>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.relative_to(attrname='relative_to',\n                      expr=<Name.xml_file l.584 at 0x257ff6544d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Name.root_tag l.597 at 0x257ff6562d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Attribute.suffix l.610 at 0x257ff657f50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Call l.617 at 0x257ff6568d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lstrip(attrname='lstrip',\n                 expr=<Attribute.suffix l.617 at 0x257ff656b50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.relative_to(attrname='relative_to',\n                      expr=<Name.file_path l.621 at 0x257ff65cbd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Attribute.resolve(attrname='resolve',\n                  expr=<Call l.652 at 0x257ff65df10>)",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.resolve(attrname='resolve',\n                  expr=<Attribute.unpacked_dir l.653 at 0x257ff65e850>)",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute._validate_single_file_xsd(attrname='_validate_single_file_xsd',\n                                    expr=<Name.self l.656 at 0x257ff65f010>)",
              "type": "Tuple.tuple(ctx=<Context.Load: 1>,\n            elts=[ <Const.NoneType l.830 at 0x257ff641b10>,\n              <Const.NoneType l.830 at 0x257ff641bd0>])"
            },
            {
              "function": "Name.set(name='set')",
              "type": "Set.set(elts=[])"
            },
            {
              "function": "Name.set(name='set')",
              "type": "Set.set(elts=[])"
            },
            {
              "function": "Attribute._get_original_file_errors(attrname='_get_original_file_errors',\n                                    expr=<Name.self l.666 at 0x257ff65c310>)",
              "type": "Set.set(elts=[])"
            },
            {
              "function": "Attribute.relative_to(attrname='relative_to',\n                      expr=<Name.xml_file l.674 at 0x257ff65de90>)",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Name.list(name='list')",
              "type": "Instance of builtins.list"
            },
            {
              "function": "Name.set(name='set')",
              "type": "Set.set(elts=[])"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.relative_to(attrname='relative_to',\n                      expr=<Name.xml_file l.696 at 0x257ff66a310>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.validate_file_against_xsd(attrname='validate_file_against_xsd',\n                                    expr=<Name.self l.697 at 0x257ff66aa10>)",
              "type": "Tuple.tuple(ctx=<Context.Load: 1>,\n            elts=[ <Const.NoneType l.661 at 0x257ff65fcd0>,\n              <Call l.661 at 0x257ff65fc10>])"
            },
            {
              "function": "Name.list(name='list')",
              "type": "List.list(ctx=None,\n          elts=[])"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Attribute.startswith(attrname='startswith',\n                     expr=<Name.e l.728 at 0x257ff6015d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.startswith(attrname='startswith',\n                     expr=<Attribute.name l.752 at 0x257ff603110>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.startswith(attrname='startswith',\n                     expr=<Attribute.name l.756 at 0x257ff603810>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.iter(attrname='iter',\n               expr=<Name.xml_copy l.772 at 0x257ff5f8e50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Name.attr l.778 at 0x257ff5f9550>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._remove_ignorable_elements(attrname='_remove_ignorable_elements',\n                                     expr=<Name.self l.787 at 0x257ff5f9fd0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.list(name='list')",
              "type": "Instance of builtins.list"
            },
            {
              "function": "Name.hasattr(name='hasattr')",
              "type": "Uninferable"
            },
            {
              "function": "Name.callable(name='callable')",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute._remove_ignorable_elements(attrname='_remove_ignorable_elements',\n                                     expr=<Name.self l.809 at 0x257ff5fbe10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.remove(attrname='remove',\n                 expr=<Name.root l.813 at 0x257ff640150>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.getroot(attrname='getroot',\n                  expr=<Name.xml_doc l.818 at 0x257ff640950>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._get_schema_path(attrname='_get_schema_path',\n                           expr=<Name.self l.828 at 0x257ff641850>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute._remove_template_tags_from_text_nodes(attrname='_remove_template_tags_from_text_nodes',\n                                                expr=<Name.self l.845 at 0x257ff643290>)",
              "type": "Tuple.tuple(ctx=<Context.Load: 1>,\n            elts=[ <Call l.947 at 0x257992be990>,\n              <Name.warnings l.947 at 0x257992bec10>])"
            },
            {
              "function": "Attribute._preprocess_for_mc_ignorable(attrname='_preprocess_for_mc_ignorable',\n                                       expr=<Name.self l.846 at 0x257ff643490>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.relative_to(attrname='relative_to',\n                      expr=<Name.xml_file l.849 at 0x257ff6436d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._clean_ignorable_namespaces(attrname='_clean_ignorable_namespaces',\n                                      expr=<Name.self l.854 at 0x257ff643d10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.validate(attrname='validate',\n                   expr=<Name.schema l.857 at 0x257ff643ed0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.set(name='set')",
              "type": "Set.set(elts=[])"
            },
            {
              "function": "Name.set(name='set')",
              "type": "Set.set(elts=[])"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.resolve(attrname='resolve',\n                  expr=<Call l.882 at 0x257ff621550>)",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.resolve(attrname='resolve',\n                  expr=<Attribute.unpacked_dir l.883 at 0x257ff621850>)",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.relative_to(attrname='relative_to',\n                      expr=<Name.xml_file l.884 at 0x257ff621ad0>)",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.TemporaryDirectory(attrname='TemporaryDirectory',\n                             expr=<Name.tempfile l.886 at 0x257ff621d90>)",
              "type": "Instance of tempfile.TemporaryDirectory"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.ZipFile(attrname='ZipFile',\n                  expr=<Name.zipfile l.890 at 0x257ff6222d0>)",
              "type": "Instance of zipfile.ZipFile"
            },
            {
              "function": "Attribute.extractall(attrname='extractall',\n                     expr=<Name.zip_ref l.891 at 0x257ff6225d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Name.original_xml_file l.896 at 0x257ff6228d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.set(name='set')",
              "type": "Set.set(elts=[])"
            },
            {
              "function": "Attribute._validate_single_file_xsd(attrname='_validate_single_file_xsd',\n                                    expr=<Name.self l.901 at 0x257ff622e10>)",
              "type": "Tuple.tuple(ctx=<Context.Load: 1>,\n            elts=[ <Const.NoneType l.830 at 0x257ff641b10>,\n              <Const.NoneType l.830 at 0x257ff641bd0>])"
            },
            {
              "function": "Name.set(name='set')",
              "type": "Set.set(elts=[])"
            },
            {
              "function": "Attribute.compile(attrname='compile',\n                  expr=<Name.re l.917 at 0x257ff623950>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.list(name='list')",
              "type": "Instance of builtins.list"
            },
            {
              "function": "Attribute.finditer(attrname='finditer',\n                   expr=<Name.template_pattern l.926 at 0x257992bca90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.match l.930 at 0x257992bd150>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.sub(attrname='sub',\n              expr=<Name.template_pattern l.932 at 0x257992bd350>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.iter(attrname='iter',\n               expr=<Name.xml_copy l.936 at 0x257992bd690>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.hasattr(name='hasattr')",
              "type": "Uninferable"
            },
            {
              "function": "Name.callable(name='callable')",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.process_text_content(name='process_text_content')",
              "type": "Uninferable"
            },
            {
              "function": "Name.process_text_content(name='process_text_content')",
              "type": "Uninferable"
            },
            {
              "function": "Name.RuntimeError(name='RuntimeError')",
              "type": "Instance of builtins.RuntimeError"
            }
          ],
          "unresolved_imports": [
            "re",
            "lxml.etree",
            "lxml.etree",
            "tempfile",
            "zipfile"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\docx\\ooxml\\scripts\\validation\\docx.py",
        "language": "python",
        "file_size": 9994,
        "line_count": 275,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "validate",
            "line_number": 24,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Run all validation checks and return True if all pass.",
            "is_async": false,
            "complexity": 11
          },
          {
            "name": "validate_whitespace_preservation",
            "line_number": 72,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Validate that w:t elements with whitespace have xml:space='preserve'.",
            "is_async": false,
            "complexity": 13
          },
          {
            "name": "validate_deletions",
            "line_number": 124,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Validate that w:t elements are not within w:del elements.\nFor some reason, XSD validation does not catch this, so we do it manually.",
            "is_async": false,
            "complexity": 9
          },
          {
            "name": "count_paragraphs_in_unpacked",
            "line_number": 173,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Count the number of paragraphs in the unpacked document.",
            "is_async": false,
            "complexity": 4
          },
          {
            "name": "count_paragraphs_in_original",
            "line_number": 192,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Count the number of paragraphs in the original docx file.",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "validate_insertions",
            "line_number": 216,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Validate that w:delText elements are not within w:ins elements.\nw:delText is only allowed in w:ins if nested within a w:del.",
            "is_async": false,
            "complexity": 11
          },
          {
            "name": "compare_paragraph_counts",
            "line_number": 263,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Compare paragraph counts between original and new document.",
            "is_async": false,
            "complexity": 1
          }
        ],
        "classes": [
          {
            "name": "DOCXSchemaValidator",
            "line_number": 14,
            "bases": [
              "BaseSchemaValidator"
            ],
            "decorators": [],
            "docstring": "Validator for Word document XML files against XSD schemas.",
            "methods": [
              "validate",
              "validate_whitespace_preservation",
              "validate_deletions",
              "count_paragraphs_in_unpacked",
              "count_paragraphs_in_original",
              "validate_insertions",
              "compare_paragraph_counts"
            ],
            "method_count": 7
          }
        ],
        "imports": [
          {
            "type": "import",
            "modules": [
              "re"
            ],
            "line_number": 5
          },
          {
            "type": "import",
            "modules": [
              "tempfile"
            ],
            "line_number": 6
          },
          {
            "type": "import",
            "modules": [
              "zipfile"
            ],
            "line_number": 7
          },
          {
            "type": "import",
            "modules": [
              "lxml.etree"
            ],
            "line_number": 9
          },
          {
            "type": "from_import",
            "module": "base",
            "names": [
              "BaseSchemaValidator"
            ],
            "level": 1,
            "line_number": 11
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 51,
          "function_count": 7,
          "class_count": 1,
          "import_count": 5,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.validate_whitespace_preservation(attrname='validate_whitespace_preservation',\n                                           expr=<Name.self l.52 at 0x257e0421a90>)",
              "type": "Const.bool(value=False,\n           kind=None)"
            },
            {
              "function": "Attribute.validate_deletions(attrname='validate_deletions',\n                             expr=<Name.self l.56 at 0x257e0422090>)",
              "type": "Const.bool(value=False,\n           kind=None)"
            },
            {
              "function": "Attribute.validate_insertions(attrname='validate_insertions',\n                              expr=<Name.self l.60 at 0x257e0423c90>)",
              "type": "Const.bool(value=False,\n           kind=None)"
            },
            {
              "function": "Attribute.compare_paragraph_counts(attrname='compare_paragraph_counts',\n                                   expr=<Name.self l.68 at 0x257e0423010>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.iter(attrname='iter',\n               expr=<Name.root l.87 at 0x257e0423950>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.match(attrname='match',\n                expr=<Name.re l.91 at 0x257e0422150>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.match(attrname='match',\n                expr=<Name.re l.91 at 0x257e307cf90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.relative_to(attrname='relative_to',\n                      expr=<Name.xml_file l.105 at 0x257e052af50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.relative_to(attrname='relative_to',\n                      expr=<Name.xml_file l.111 at 0x257e052aa50>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.xpath(attrname='xpath',\n                expr=<Name.root l.142 at 0x257e052af90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.relative_to(attrname='relative_to',\n                      expr=<Name.xml_file l.154 at 0x257e05236d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.relative_to(attrname='relative_to',\n                      expr=<Name.xml_file l.160 at 0x257e0520c10>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.findall(attrname='findall',\n                  expr=<Name.root l.185 at 0x257e0522450>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.TemporaryDirectory(attrname='TemporaryDirectory',\n                             expr=<Name.tempfile l.198 at 0x257e04cd2d0>)",
              "type": "Instance of tempfile.TemporaryDirectory"
            },
            {
              "function": "Attribute.ZipFile(attrname='ZipFile',\n                  expr=<Name.zipfile l.200 at 0x257e04cf910>)",
              "type": "Instance of zipfile.ZipFile"
            },
            {
              "function": "Attribute.extractall(attrname='extractall',\n                     expr=<Name.zip_ref l.201 at 0x257e04cff10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.findall(attrname='findall',\n                  expr=<Name.root l.208 at 0x257e04cc810>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.xpath(attrname='xpath',\n                expr=<Name.root l.232 at 0x257e04cf7d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.relative_to(attrname='relative_to',\n                      expr=<Name.xml_file l.244 at 0x257e05189d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.relative_to(attrname='relative_to',\n                      expr=<Name.xml_file l.250 at 0x257e051b590>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Attribute.count_paragraphs_in_original(attrname='count_paragraphs_in_original',\n                                       expr=<Name.self l.265 at 0x257e4533150>)",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Attribute.count_paragraphs_in_unpacked(attrname='count_paragraphs_in_unpacked',\n                                       expr=<Name.self l.266 at 0x257e0416dd0>)",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.RuntimeError(name='RuntimeError')",
              "type": "Instance of builtins.RuntimeError"
            }
          ],
          "unresolved_imports": [
            "re",
            "tempfile",
            "zipfile",
            "lxml.etree"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\docx\\ooxml\\scripts\\validation\\pptx.py",
        "language": "python",
        "file_size": 12327,
        "line_count": 316,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "validate",
            "line_number": 28,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Run all validation checks and return True if all pass.",
            "is_async": false,
            "complexity": 12
          },
          {
            "name": "validate_uuid_ids",
            "line_number": 77,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Validate that ID attributes that look like UUIDs contain only hex values.",
            "is_async": false,
            "complexity": 12
          },
          {
            "name": "_looks_like_uuid",
            "line_number": 121,
            "parameters": [
              "self",
              "value"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Check if a value has the general structure of a UUID.",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "validate_slide_layout_ids",
            "line_number": 128,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Validate that sldLayoutId elements in slide masters reference valid slide layouts.",
            "is_async": false,
            "complexity": 14
          },
          {
            "name": "validate_no_duplicate_slide_layouts",
            "line_number": 203,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Validate that each slide has exactly one slideLayout reference.",
            "is_async": false,
            "complexity": 7
          },
          {
            "name": "validate_notes_slide_references",
            "line_number": 243,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Validate that each notesSlide file is referenced by only one slide.",
            "is_async": false,
            "complexity": 15
          }
        ],
        "classes": [
          {
            "name": "PPTXSchemaValidator",
            "line_number": 10,
            "bases": [
              "BaseSchemaValidator"
            ],
            "decorators": [],
            "docstring": "Validator for PowerPoint presentation XML files against XSD schemas.",
            "methods": [
              "validate",
              "validate_uuid_ids",
              "_looks_like_uuid",
              "validate_slide_layout_ids",
              "validate_no_duplicate_slide_layouts",
              "validate_notes_slide_references"
            ],
            "method_count": 6
          }
        ],
        "imports": [
          {
            "type": "import",
            "modules": [
              "re"
            ],
            "line_number": 5
          },
          {
            "type": "from_import",
            "module": "base",
            "names": [
              "BaseSchemaValidator"
            ],
            "level": 1,
            "line_number": 7
          },
          {
            "type": "import",
            "modules": [
              "lxml.etree"
            ],
            "line_number": 79
          },
          {
            "type": "import",
            "modules": [
              "lxml.etree"
            ],
            "line_number": 130
          },
          {
            "type": "import",
            "modules": [
              "lxml.etree"
            ],
            "line_number": 205
          },
          {
            "type": "import",
            "modules": [
              "lxml.etree"
            ],
            "line_number": 245
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 62,
          "function_count": 6,
          "class_count": 1,
          "import_count": 6,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.validate_uuid_ids(attrname='validate_uuid_ids',\n                            expr=<Name.self l.44 at 0x25797f07d90>)",
              "type": "Const.bool(value=False,\n           kind=None)"
            },
            {
              "function": "Attribute.validate_slide_layout_ids(attrname='validate_slide_layout_ids',\n                                    expr=<Name.self l.52 at 0x257e590c090>)",
              "type": "Const.bool(value=True,\n           kind=None)"
            },
            {
              "function": "Attribute.validate_notes_slide_references(attrname='validate_notes_slide_references',\n                                          expr=<Name.self l.64 at 0x257e590d0d0>)",
              "type": "Const.bool(value=True,\n           kind=None)"
            },
            {
              "function": "Attribute.validate_no_duplicate_slide_layouts(attrname='validate_no_duplicate_slide_layouts',\n                                              expr=<Name.self l.72 at 0x257e590db50>)",
              "type": "Const.bool(value=False,\n           kind=None)"
            },
            {
              "function": "Attribute.compile(attrname='compile',\n                  expr=<Name.re l.83 at 0x257e590e190>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.iter(attrname='iter',\n               expr=<Name.root l.92 at 0x257e590e3d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Attribute.attrib l.93 at 0x257e590f110>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Subscript l.95 at 0x257e590f450>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Name.attr l.95 at 0x257e590f310>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.endswith(attrname='endswith',\n                   expr=<Name.attr_name l.96 at 0x257e590f9d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._looks_like_uuid(attrname='_looks_like_uuid',\n                           expr=<Name.self l.98 at 0x257e590fb10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.match(attrname='match',\n                expr=<Name.uuid_pattern l.100 at 0x257e590fe50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.relative_to(attrname='relative_to',\n                      expr=<Name.xml_file l.102 at 0x257e590c5d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.relative_to(attrname='relative_to',\n                      expr=<Name.xml_file l.108 at 0x257e59046d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Attribute.replace(attrname='replace',\n                  expr=<Call l.124 at 0x257e5905e10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Name.value l.124 at 0x257e5905dd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.isalnum(attrname='isalnum',\n                  expr=<Name.c l.126 at 0x257e5906550>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.list(name='list')",
              "type": "Instance of builtins.list"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Name.rels_file l.150 at 0x257e58fc350>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.relative_to(attrname='relative_to',\n                      expr=<Name.slide_master l.152 at 0x257e58fcb10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.relative_to(attrname='relative_to',\n                      expr=<Name.rels_file l.153 at 0x257e58fccd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.set(name='set')",
              "type": "Set.set(elts=[])"
            },
            {
              "function": "Attribute.findall(attrname='findall',\n                  expr=<Name.rels_root l.162 at 0x257e58fd890>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.rel l.165 at 0x257e58fdcd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.rel l.167 at 0x257e58fe050>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.findall(attrname='findall',\n                  expr=<Name.root l.170 at 0x257e58fe510>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.sld_layout_id l.173 at 0x257e58fe7d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.sld_layout_id l.176 at 0x257e58fee90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.relative_to(attrname='relative_to',\n                      expr=<Name.slide_master l.180 at 0x257e58ff110>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.relative_to(attrname='relative_to',\n                      expr=<Name.slide_master l.187 at 0x257e58fff90>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Name.list(name='list')",
              "type": "Instance of builtins.list"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.findall(attrname='findall',\n                  expr=<Name.root l.217 at 0x257e58f1990>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.rel l.220 at 0x257e58f2610>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.relative_to(attrname='relative_to',\n                      expr=<Name.rels_file l.225 at 0x257e58f1ed0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.relative_to(attrname='relative_to',\n                      expr=<Name.rels_file l.230 at 0x257e58f35d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.list(name='list')",
              "type": "Instance of builtins.list"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.findall(attrname='findall',\n                  expr=<Name.root l.264 at 0x257e5885fd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.rel l.267 at 0x257e5886690>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.rel l.269 at 0x257992befd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.replace(attrname='replace',\n                  expr=<Name.target l.272 at 0x257992bf350>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.replace(attrname='replace',\n                  expr=<Attribute.stem l.275 at 0x257992bf610>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.append(attrname='append',\n                 expr=<Subscript l.281 at 0x257992bfbd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.relative_to(attrname='relative_to',\n                      expr=<Name.rels_file l.287 at 0x257992c4450>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Name.notes_slide_references l.291 at 0x257992c48d0>)",
              "type": "DictItems.list(ctx=None,\n               elts=[])"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Const.str l.295 at 0x257992c5310>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.relative_to(attrname='relative_to',\n                      expr=<Name.rels_file l.298 at 0x257992c58d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.startswith(attrname='startswith',\n                     expr=<Name.e l.302 at 0x257992c61d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.RuntimeError(name='RuntimeError')",
              "type": "Instance of builtins.RuntimeError"
            }
          ],
          "unresolved_imports": [
            "re",
            "lxml.etree",
            "lxml.etree",
            "lxml.etree",
            "lxml.etree"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\docx\\ooxml\\scripts\\validation\\redlining.py",
        "language": "python",
        "file_size": 11179,
        "line_count": 280,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "__init__",
            "line_number": 14,
            "parameters": [
              "self",
              "unpacked_dir",
              "original_docx",
              "verbose"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "validate",
            "line_number": 22,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Main validation method that returns True if valid, False otherwise.",
            "is_async": false,
            "complexity": 11
          },
          {
            "name": "_generate_detailed_diff",
            "line_number": 114,
            "parameters": [
              "self",
              "original_text",
              "modified_text"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Generate detailed word-level differences using git word diff.",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "_get_git_word_diff",
            "line_number": 139,
            "parameters": [
              "self",
              "original_text",
              "modified_text"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Generate word diff using git with character-level precision.",
            "is_async": false,
            "complexity": 13
          },
          {
            "name": "_remove_claude_tracked_changes",
            "line_number": 217,
            "parameters": [
              "self",
              "root"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Remove tracked changes authored by Claude from the XML root.",
            "is_async": false,
            "complexity": 14
          },
          {
            "name": "_extract_text_content",
            "line_number": 254,
            "parameters": [
              "self",
              "root"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Extract text content from Word XML, preserving paragraph structure.\n\nEmpty paragraphs are skipped to avoid false positives when tracked\ninsertions add only structural elements without text content.",
            "is_async": false,
            "complexity": 5
          }
        ],
        "classes": [
          {
            "name": "RedliningValidator",
            "line_number": 11,
            "bases": [],
            "decorators": [],
            "docstring": "Validator for tracked changes in Word documents.",
            "methods": [
              "__init__",
              "validate",
              "_generate_detailed_diff",
              "_get_git_word_diff",
              "_remove_claude_tracked_changes",
              "_extract_text_content"
            ],
            "method_count": 6
          }
        ],
        "imports": [
          {
            "type": "import",
            "modules": [
              "subprocess"
            ],
            "line_number": 5
          },
          {
            "type": "import",
            "modules": [
              "tempfile"
            ],
            "line_number": 6
          },
          {
            "type": "import",
            "modules": [
              "zipfile"
            ],
            "line_number": 7
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 8
          },
          {
            "type": "import",
            "modules": [
              "xml.etree.ElementTree"
            ],
            "line_number": 32
          },
          {
            "type": "import",
            "modules": [
              "xml.etree.ElementTree"
            ],
            "line_number": 84
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 46,
          "function_count": 6,
          "class_count": 1,
          "import_count": 6,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Name.modified_file l.26 at 0x25799269550>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.parse(attrname='parse',\n                expr=<Name.ET l.34 at 0x25799269f90>)",
              "type": "Instance of xml.etree.ElementTree.ElementTree"
            },
            {
              "function": "Attribute.getroot(attrname='getroot',\n                  expr=<Name.tree l.35 at 0x2579926a210>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.findall(attrname='findall',\n                  expr=<Name.root l.38 at 0x2579926a450>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.findall(attrname='findall',\n                  expr=<Name.root l.39 at 0x2579926a750>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.elem l.45 at 0x2579926ae10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.elem l.50 at 0x2579926b5d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.TemporaryDirectory(attrname='TemporaryDirectory',\n                             expr=<Name.tempfile l.64 at 0x257e58f1bd0>)",
              "type": "Instance of tempfile.TemporaryDirectory"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.ZipFile(attrname='ZipFile',\n                  expr=<Name.zipfile l.69 at 0x25797f04d50>)",
              "type": "Instance of zipfile.ZipFile"
            },
            {
              "function": "Attribute.extractall(attrname='extractall',\n                     expr=<Name.zip_ref l.70 at 0x257e5304c10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Name.original_file l.76 at 0x257992812d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.parse(attrname='parse',\n                expr=<Name.ET l.86 at 0x25799280910>)",
              "type": "Instance of xml.etree.ElementTree.ElementTree"
            },
            {
              "function": "Attribute.getroot(attrname='getroot',\n                  expr=<Name.modified_tree l.87 at 0x25799280c10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.parse(attrname='parse',\n                expr=<Name.ET l.88 at 0x25799280110>)",
              "type": "Instance of xml.etree.ElementTree.ElementTree"
            },
            {
              "function": "Attribute.getroot(attrname='getroot',\n                  expr=<Name.original_tree l.89 at 0x25799281950>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._remove_claude_tracked_changes(attrname='_remove_claude_tracked_changes',\n                                         expr=<Name.self l.95 at 0x25799281fd0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._remove_claude_tracked_changes(attrname='_remove_claude_tracked_changes',\n                                         expr=<Name.self l.96 at 0x25799281e10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._extract_text_content(attrname='_extract_text_content',\n                                expr=<Name.self l.99 at 0x25799281c10>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute._extract_text_content(attrname='_extract_text_content',\n                                expr=<Name.self l.100 at 0x25799282590>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute._generate_detailed_diff(attrname='_generate_detailed_diff',\n                                  expr=<Name.self l.104 at 0x25799283310>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute._get_git_word_diff(attrname='_get_git_word_diff',\n                             expr=<Name.self l.131 at 0x25799283c10>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Const.str l.137 at 0x25799265390>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.TemporaryDirectory(attrname='TemporaryDirectory',\n                             expr=<Name.tempfile l.142 at 0x25799264890>)",
              "type": "Instance of tempfile.TemporaryDirectory"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.write_text(attrname='write_text',\n                     expr=<Name.original_file l.149 at 0x257992650d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.write_text(attrname='write_text',\n                     expr=<Name.modified_file l.150 at 0x25799265510>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.subprocess l.153 at 0x257992658d0>)",
              "type": "Instance of subprocess.CompletedProcess"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Attribute.stdout l.168 at 0x25799266050>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Attribute.stdout l.170 at 0x25799266310>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.startswith(attrname='startswith',\n                     expr=<Name.line l.175 at 0x25799266bd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Name.line l.178 at 0x25799267050>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Const.str l.182 at 0x25799266690>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.subprocess l.185 at 0x25799267c10>)",
              "type": "Instance of subprocess.CompletedProcess"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Attribute.stdout l.199 at 0x25799267550>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Attribute.stdout l.200 at 0x25799267e10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.startswith(attrname='startswith',\n                     expr=<Name.line l.204 at 0x2579925c350>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Name.line l.207 at 0x2579925c790>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Const.str l.209 at 0x2579925cb90>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.iter(attrname='iter',\n               expr=<Name.root l.224 at 0x2579925df10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.child l.227 at 0x2579925e5d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.remove(attrname='remove',\n                 expr=<Name.parent l.230 at 0x2579925ebd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.iter(attrname='iter',\n               expr=<Name.root l.236 at 0x2579925f510>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.child l.239 at 0x2579925fb50>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.list(name='list')",
              "type": "Instance of builtins.list"
            },
            {
              "function": "Name.reversed(name='reversed')",
              "type": "Instance of builtins.reversed"
            },
            {
              "function": "Attribute.iter(attrname='iter',\n               expr=<Name.del_elem l.245 at 0x25798790710>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.reversed(name='reversed')",
              "type": "Instance of builtins.reversed"
            },
            {
              "function": "Name.list(name='list')",
              "type": "Instance of builtins.list"
            },
            {
              "function": "Attribute.insert(attrname='insert',\n                 expr=<Name.parent l.251 at 0x25798790f10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.remove(attrname='remove',\n                 expr=<Name.parent l.252 at 0x25798791150>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.findall(attrname='findall',\n                  expr=<Name.root l.264 at 0x25798792150>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.findall(attrname='findall',\n                  expr=<Name.p_elem l.267 at 0x25798792650>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Const.str l.270 at 0x25798792dd0>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Const.str l.275 at 0x25798793290>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.RuntimeError(name='RuntimeError')",
              "type": "Instance of builtins.RuntimeError"
            }
          ],
          "unresolved_imports": [
            "subprocess",
            "tempfile",
            "zipfile",
            "xml.etree.ElementTree",
            "xml.etree.ElementTree"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\docx\\ooxml\\scripts\\validation\\__init__.py",
        "language": "python",
        "file_size": 336,
        "line_count": 16,
        "analysis_method": "python_ast",
        "functions": [],
        "classes": [],
        "imports": [
          {
            "type": "from_import",
            "module": "base",
            "names": [
              "BaseSchemaValidator"
            ],
            "level": 1,
            "line_number": 5
          },
          {
            "type": "from_import",
            "module": "docx",
            "names": [
              "DOCXSchemaValidator"
            ],
            "level": 1,
            "line_number": 6
          },
          {
            "type": "from_import",
            "module": "pptx",
            "names": [
              "PPTXSchemaValidator"
            ],
            "level": 1,
            "line_number": 7
          },
          {
            "type": "from_import",
            "module": "redlining",
            "names": [
              "RedliningValidator"
            ],
            "level": 1,
            "line_number": 8
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 0,
          "function_count": 0,
          "class_count": 0,
          "import_count": 4,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [],
          "unresolved_imports": [],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\docx\\scripts\\document.py",
        "language": "python",
        "file_size": 50393,
        "line_count": 1277,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "_generate_hex_id",
            "line_number": 596,
            "parameters": [],
            "defaults": 0,
            "decorators": [],
            "docstring": "Generate random 8-character hex ID for para/durable IDs.\n\nValues are constrained to be less than 0x7FFFFFFF per OOXML spec:\n- paraId must be < 0x80000000\n- durableId must be < 0x7FFFFFFF\nWe use the stricter constraint (0x7FFFFFFF) for both.",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_generate_rsid",
            "line_number": 607,
            "parameters": [],
            "defaults": 0,
            "decorators": [],
            "docstring": "Generate random 8-character hex RSID.",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "__init__",
            "line_number": 59,
            "parameters": [
              "self",
              "xml_path",
              "rsid",
              "author",
              "initials"
            ],
            "defaults": 2,
            "decorators": [],
            "docstring": "Initialize with required RSID and optional author.\n\nArgs:\n    xml_path: Path to XML file to edit\n    rsid: RSID to automatically apply to new elements\n    author: Author name for tracked changes and comments (default: \"Claude\")\n    initials: Author initials (default: \"C\")",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_get_next_change_id",
            "line_number": 75,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Get the next available change ID by checking all tracked change elements.",
            "is_async": false,
            "complexity": 5
          },
          {
            "name": "_ensure_w16du_namespace",
            "line_number": 89,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Ensure w16du namespace is declared on the root element.",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "_ensure_w16cex_namespace",
            "line_number": 98,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Ensure w16cex namespace is declared on the root element.",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "_ensure_w14_namespace",
            "line_number": 107,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Ensure w14 namespace is declared on the root element.",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "_inject_attributes_to_nodes",
            "line_number": 116,
            "parameters": [
              "self",
              "nodes"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Inject RSID, author, and date attributes into DOM nodes where applicable.\n\nAdds attributes to elements that support them:\n- w:r: gets w:rsidR (or w:rsidDel if inside w:del)\n- w:p: gets w:rsidR, w:rsidRDefault, w:rsidP, w14:paraId, w14:textId\n- w:t: gets xml:space=\"preserve\" if text has leading/trailing whitespace\n- w:ins, w:del: get w:id, w:author, w:date, w16du:dateUtc\n- w:comment: gets w:author, w:date, w:initials\n- w16cex:commentExtensible: gets w16cex:dateUtc\n\nArgs:\n    nodes: List of DOM nodes to process",
            "is_async": false,
            "complexity": 42
          },
          {
            "name": "replace_node",
            "line_number": 240,
            "parameters": [
              "self",
              "elem",
              "new_content"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Replace node with automatic attribute injection.",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "insert_after",
            "line_number": 246,
            "parameters": [
              "self",
              "elem",
              "xml_content"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Insert after with automatic attribute injection.",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "insert_before",
            "line_number": 252,
            "parameters": [
              "self",
              "elem",
              "xml_content"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Insert before with automatic attribute injection.",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "append_to",
            "line_number": 258,
            "parameters": [
              "self",
              "elem",
              "xml_content"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Append to with automatic attribute injection.",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "revert_insertion",
            "line_number": 264,
            "parameters": [
              "self",
              "elem"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Reject an insertion by wrapping its content in a deletion.\n\nWraps all runs inside w:ins in w:del, converting w:t to w:delText.\nCan process a single w:ins element or a container element with multiple w:ins.\n\nArgs:\n    elem: Element to process (w:ins, w:p, w:body, etc.)\n\nReturns:\n    list: List containing the processed element(s)\n\nRaises:\n    ValueError: If the element contains no w:ins elements\n\nExample:\n    # Reject a single insertion\n    ins = doc[\"word/document.xml\"].get_node(tag=\"w:ins\", attrs={\"w:id\": \"5\"})\n    doc[\"word/document.xml\"].revert_insertion(ins)\n\n    # Reject all insertions in a paragraph\n    para = doc[\"word/document.xml\"].get_node(tag=\"w:p\", line_number=42)\n    doc[\"word/document.xml\"].revert_insertion(para)",
            "is_async": false,
            "complexity": 12
          },
          {
            "name": "revert_deletion",
            "line_number": 342,
            "parameters": [
              "self",
              "elem"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Reject a deletion by re-inserting the deleted content.\n\nCreates w:ins elements after each w:del, copying deleted content and\nconverting w:delText back to w:t.\nCan process a single w:del element or a container element with multiple w:del.\n\nArgs:\n    elem: Element to process (w:del, w:p, w:body, etc.)\n\nReturns:\n    list: If elem is w:del, returns [elem, new_ins]. Otherwise returns [elem].\n\nRaises:\n    ValueError: If the element contains no w:del elements\n\nExample:\n    # Reject a single deletion - returns [w:del, w:ins]\n    del_elem = doc[\"word/document.xml\"].get_node(tag=\"w:del\", attrs={\"w:id\": \"3\"})\n    nodes = doc[\"word/document.xml\"].revert_deletion(del_elem)\n\n    # Reject all deletions in a paragraph - returns [para]\n    para = doc[\"word/document.xml\"].get_node(tag=\"w:p\", line_number=42)\n    nodes = doc[\"word/document.xml\"].revert_deletion(para)",
            "is_async": false,
            "complexity": 15
          },
          {
            "name": "suggest_paragraph",
            "line_number": 434,
            "parameters": [
              "xml_content"
            ],
            "defaults": 0,
            "decorators": [
              "staticmethod"
            ],
            "docstring": "Transform paragraph XML to add tracked change wrapping for insertion.\n\nWraps runs in <w:ins> and adds <w:ins/> to w:rPr in w:pPr for numbered lists.\n\nArgs:\n    xml_content: XML string containing a <w:p> element\n\nReturns:\n    str: Transformed XML with tracked change wrapping",
            "is_async": false,
            "complexity": 4
          },
          {
            "name": "suggest_deletion",
            "line_number": 482,
            "parameters": [
              "self",
              "elem"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Mark a w:r or w:p element as deleted with tracked changes (in-place DOM manipulation).\n\nFor w:r: wraps in <w:del>, converts <w:t> to <w:delText>, preserves w:rPr\nFor w:p (regular): wraps content in <w:del>, converts <w:t> to <w:delText>\nFor w:p (numbered list): adds <w:del/> to w:rPr in w:pPr, wraps content in <w:del>\n\nArgs:\n    elem: A w:r or w:p DOM element without existing tracked changes\n\nReturns:\n    Element: The modified element\n\nRaises:\n    ValueError: If element has existing tracked changes or invalid structure",
            "is_async": false,
            "complexity": 21
          },
          {
            "name": "__init__",
            "line_number": 615,
            "parameters": [
              "self",
              "unpacked_dir",
              "rsid",
              "track_revisions",
              "author",
              "initials"
            ],
            "defaults": 4,
            "decorators": [],
            "docstring": "Initialize with path to unpacked Word document directory.\nAutomatically sets up comment infrastructure (people.xml, RSIDs).\n\nArgs:\n    unpacked_dir: Path to unpacked DOCX directory (must contain word/ subdirectory)\n    rsid: Optional RSID to use for all comment elements. If not provided, one will be generated.\n    track_revisions: If True, enables track revisions in settings.xml (default: False)\n    author: Default author name for comments (default: \"Claude\")\n    initials: Default author initials for comments (default: \"C\")",
            "is_async": false,
            "complexity": 3
          },
          {
            "name": "__getitem__",
            "line_number": 680,
            "parameters": [
              "self",
              "xml_path"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Get or create a DocxXMLEditor for the specified XML file.\n\nEnables lazy-loaded editors with bracket notation:\n    node = doc[\"word/document.xml\"].get_node(tag=\"w:p\", line_number=42)\n\nArgs:\n    xml_path: Relative path to XML file (e.g., \"word/document.xml\", \"word/comments.xml\")\n\nReturns:\n    DocxXMLEditor instance for the specified file\n\nRaises:\n    ValueError: If the file does not exist\n\nExample:\n    # Get node from document.xml\n    node = doc[\"word/document.xml\"].get_node(tag=\"w:del\", attrs={\"w:id\": \"1\"})\n\n    # Get node from comments.xml\n    comment = doc[\"word/comments.xml\"].get_node(tag=\"w:comment\", attrs={\"w:id\": \"0\"})",
            "is_async": false,
            "complexity": 3
          },
          {
            "name": "add_comment",
            "line_number": 713,
            "parameters": [
              "self",
              "start",
              "end",
              "text"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Add a comment spanning from one element to another.\n\nArgs:\n    start: DOM element for the starting point\n    end: DOM element for the ending point\n    text: Comment content\n\nReturns:\n    The comment ID that was created\n\nExample:\n    start_node = cm.get_document_node(tag=\"w:del\", id=\"1\")\n    end_node = cm.get_document_node(tag=\"w:ins\", id=\"2\")\n    cm.add_comment(start=start_node, end=end_node, text=\"Explanation\")",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "reply_to_comment",
            "line_number": 765,
            "parameters": [
              "self",
              "parent_comment_id",
              "text"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Add a reply to an existing comment.\n\nArgs:\n    parent_comment_id: The w:id of the parent comment to reply to\n    text: Reply text\n\nReturns:\n    The comment ID that was created for the reply\n\nExample:\n    cm.reply_to_comment(parent_comment_id=0, text=\"I agree with this change\")",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "__del__",
            "line_number": 833,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Clean up temporary directory on deletion.",
            "is_async": false,
            "complexity": 3
          },
          {
            "name": "validate",
            "line_number": 838,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Validate the document against XSD schema and redlining rules.\n\nRaises:\n    ValueError: If validation fails.",
            "is_async": false,
            "complexity": 3
          },
          {
            "name": "save",
            "line_number": 859,
            "parameters": [
              "self",
              "destination",
              "validate"
            ],
            "defaults": 2,
            "decorators": [],
            "docstring": "Save all modified XML files to disk and copy to destination directory.\n\nThis persists all changes made via add_comment() and reply_to_comment().\n\nArgs:\n    destination: Optional path to save to. If None, saves back to original directory.\n    validate: If True, validates document before saving (default: True).",
            "is_async": false,
            "complexity": 4
          },
          {
            "name": "_get_next_comment_id",
            "line_number": 888,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Get the next available comment ID.",
            "is_async": false,
            "complexity": 5
          },
          {
            "name": "_load_existing_comments",
            "line_number": 904,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Load existing comments from files to enable replies.",
            "is_async": false,
            "complexity": 7
          },
          {
            "name": "_setup_tracking",
            "line_number": 933,
            "parameters": [
              "self",
              "track_revisions"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": "Set up comment infrastructure in unpacked directory.\n\nArgs:\n    track_revisions: If True, enables track revisions in settings.xml",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_update_people_xml",
            "line_number": 954,
            "parameters": [
              "self",
              "path"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Create people.xml if it doesn't exist.",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "_add_content_type_for_people",
            "line_number": 960,
            "parameters": [
              "self",
              "path"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Add people.xml content type to [Content_Types].xml if not already present.",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "_add_relationship_for_people",
            "line_number": 972,
            "parameters": [
              "self",
              "path"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Add people.xml relationship to document.xml.rels if not already present.",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "_update_settings",
            "line_number": 988,
            "parameters": [
              "self",
              "path",
              "track_revisions"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": "Add RSID and optionally enable track revisions in settings.xml.\n\nArgs:\n    path: Path to settings.xml\n    track_revisions: If True, adds trackRevisions element\n\nPlaces elements per OOXML schema order:\n- trackRevisions: early (before defaultTabStop)\n- rsids: late (after compat)",
            "is_async": false,
            "complexity": 13
          },
          {
            "name": "_add_to_comments_xml",
            "line_number": 1068,
            "parameters": [
              "self",
              "comment_id",
              "para_id",
              "text",
              "author",
              "initials",
              "timestamp"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Add a single comment to comments.xml.",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "_add_to_comments_extended_xml",
            "line_number": 1091,
            "parameters": [
              "self",
              "para_id",
              "parent_para_id"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Add a single comment to commentsExtended.xml.",
            "is_async": false,
            "complexity": 3
          },
          {
            "name": "_add_to_comments_ids_xml",
            "line_number": 1107,
            "parameters": [
              "self",
              "para_id",
              "durable_id"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Add a single comment to commentsIds.xml.",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "_add_to_comments_extensible_xml",
            "line_number": 1118,
            "parameters": [
              "self",
              "durable_id"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Add a single comment to commentsExtensible.xml.",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "_comment_range_start_xml",
            "line_number": 1133,
            "parameters": [
              "self",
              "comment_id"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Generate XML for comment range start.",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_comment_range_end_xml",
            "line_number": 1137,
            "parameters": [
              "self",
              "comment_id"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Generate XML for comment range end with reference run.\n\nNote: w:rsidR is automatically added by DocxXMLEditor.",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_comment_ref_run_xml",
            "line_number": 1148,
            "parameters": [
              "self",
              "comment_id"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Generate XML for comment reference run.\n\nNote: w:rsidR is automatically added by DocxXMLEditor.",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_has_relationship",
            "line_number": 1160,
            "parameters": [
              "self",
              "editor",
              "target"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Check if a relationship with given target exists.",
            "is_async": false,
            "complexity": 3
          },
          {
            "name": "_has_override",
            "line_number": 1167,
            "parameters": [
              "self",
              "editor",
              "part_name"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Check if an override with given part name exists.",
            "is_async": false,
            "complexity": 3
          },
          {
            "name": "_has_author",
            "line_number": 1174,
            "parameters": [
              "self",
              "editor",
              "author"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Check if an author already exists in people.xml.",
            "is_async": false,
            "complexity": 3
          },
          {
            "name": "_add_author_to_people",
            "line_number": 1181,
            "parameters": [
              "self",
              "author"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Add author to people.xml (called during initialization).",
            "is_async": false,
            "complexity": 3
          },
          {
            "name": "_ensure_comment_relationships",
            "line_number": 1203,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Ensure word/_rels/document.xml.rels has comment relationships.",
            "is_async": false,
            "complexity": 3
          },
          {
            "name": "_ensure_comment_content_types",
            "line_number": 1243,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Ensure [Content_Types].xml has comment content types.",
            "is_async": false,
            "complexity": 3
          },
          {
            "name": "is_inside_deletion",
            "line_number": 134,
            "parameters": [
              "elem"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Check if element is inside a w:del element.",
            "is_async": false,
            "complexity": 4
          },
          {
            "name": "add_rsid_to_p",
            "line_number": 143,
            "parameters": [
              "elem"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 6
          },
          {
            "name": "add_rsid_to_r",
            "line_number": 158,
            "parameters": [
              "elem"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 4
          },
          {
            "name": "add_tracked_change_attrs",
            "line_number": 167,
            "parameters": [
              "elem"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 6
          },
          {
            "name": "add_comment_attrs",
            "line_number": 182,
            "parameters": [
              "elem"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 4
          },
          {
            "name": "add_comment_extensible_date",
            "line_number": 190,
            "parameters": [
              "elem"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "add_xml_space_to_t",
            "line_number": 196,
            "parameters": [
              "elem"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 7
          }
        ],
        "classes": [
          {
            "name": "DocxXMLEditor",
            "line_number": 47,
            "bases": [
              "XMLEditor"
            ],
            "decorators": [],
            "docstring": "XMLEditor that automatically applies RSID, author, and date to new elements.\n\nAutomatically adds attributes to elements that support them when inserting new content:\n- w:rsidR, w:rsidRDefault, w:rsidP (for w:p and w:r elements)\n- w:author and w:date (for w:ins, w:del, w:comment elements)\n- w:id (for w:ins and w:del elements)\n\nAttributes:\n    dom (defusedxml.minidom.Document): The DOM document for direct manipulation",
            "methods": [
              "__init__",
              "_get_next_change_id",
              "_ensure_w16du_namespace",
              "_ensure_w16cex_namespace",
              "_ensure_w14_namespace",
              "_inject_attributes_to_nodes",
              "replace_node",
              "insert_after",
              "insert_before",
              "append_to",
              "revert_insertion",
              "revert_deletion",
              "suggest_paragraph",
              "suggest_deletion"
            ],
            "method_count": 14
          },
          {
            "name": "Document",
            "line_number": 612,
            "bases": [],
            "decorators": [],
            "docstring": "Manages comments in unpacked Word documents.",
            "methods": [
              "__init__",
              "__getitem__",
              "add_comment",
              "reply_to_comment",
              "__del__",
              "validate",
              "save",
              "_get_next_comment_id",
              "_load_existing_comments",
              "_setup_tracking",
              "_update_people_xml",
              "_add_content_type_for_people",
              "_add_relationship_for_people",
              "_update_settings",
              "_add_to_comments_xml",
              "_add_to_comments_extended_xml",
              "_add_to_comments_ids_xml",
              "_add_to_comments_extensible_xml",
              "_comment_range_start_xml",
              "_comment_range_end_xml",
              "_comment_ref_run_xml",
              "_has_relationship",
              "_has_override",
              "_has_author",
              "_add_author_to_people",
              "_ensure_comment_relationships",
              "_ensure_comment_content_types"
            ],
            "method_count": 27
          }
        ],
        "imports": [
          {
            "type": "import",
            "modules": [
              "html"
            ],
            "line_number": 29
          },
          {
            "type": "import",
            "modules": [
              "random"
            ],
            "line_number": 30
          },
          {
            "type": "import",
            "modules": [
              "shutil"
            ],
            "line_number": 31
          },
          {
            "type": "import",
            "modules": [
              "tempfile"
            ],
            "line_number": 32
          },
          {
            "type": "from_import",
            "module": "datetime",
            "names": [
              "datetime",
              "timezone"
            ],
            "level": 0,
            "line_number": 33
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 34
          },
          {
            "type": "from_import",
            "module": "defusedxml",
            "names": [
              "minidom"
            ],
            "level": 0,
            "line_number": 36
          },
          {
            "type": "from_import",
            "module": "ooxml.scripts.pack",
            "names": [
              "pack_document"
            ],
            "level": 0,
            "line_number": 37
          },
          {
            "type": "from_import",
            "module": "ooxml.scripts.validation.docx",
            "names": [
              "DOCXSchemaValidator"
            ],
            "level": 0,
            "line_number": 38
          },
          {
            "type": "from_import",
            "module": "ooxml.scripts.validation.redlining",
            "names": [
              "RedliningValidator"
            ],
            "level": 0,
            "line_number": 39
          },
          {
            "type": "from_import",
            "module": "utilities",
            "names": [
              "XMLEditor"
            ],
            "level": 1,
            "line_number": 41
          },
          {
            "type": "from_import",
            "module": "datetime",
            "names": [
              "datetime",
              "timezone"
            ],
            "level": 0,
            "line_number": 130
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 227,
          "function_count": 50,
          "class_count": 2,
          "import_count": 12,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.__init__(attrname='__init__',\n                   expr=<Call l.70 at 0x257997349d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.super(name='super')",
              "type": "Super.DocxXMLEditor()"
            },
            {
              "function": "Attribute.getAttribute(attrname='getAttribute',\n                       expr=<Name.elem l.81 at 0x25799735e10>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Attribute.hasAttribute(attrname='hasAttribute',\n                       expr=<Name.root l.92 at 0x25799737050>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.setAttribute(attrname='setAttribute',\n                       expr=<Name.root l.93 at 0x25799737290>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.hasAttribute(attrname='hasAttribute',\n                       expr=<Name.root l.101 at 0x25799737b50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.setAttribute(attrname='setAttribute',\n                       expr=<Name.root l.102 at 0x25799737d90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.hasAttribute(attrname='hasAttribute',\n                       expr=<Name.root l.110 at 0x257996ec690>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.setAttribute(attrname='setAttribute',\n                       expr=<Name.root l.111 at 0x257996ec8d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strftime(attrname='strftime',\n                   expr=<Call l.132 at 0x257996ed1d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.now(attrname='now',\n              expr=<Name.datetime l.132 at 0x257996ed210>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Attribute.hasAttribute(attrname='hasAttribute',\n                       expr=<Name.elem l.144 at 0x257996ee8d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.setAttribute(attrname='setAttribute',\n                       expr=<Name.elem l.145 at 0x257996eeb10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.hasAttribute(attrname='hasAttribute',\n                       expr=<Name.elem l.146 at 0x257996eed90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.setAttribute(attrname='setAttribute',\n                       expr=<Name.elem l.147 at 0x257996eefd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.hasAttribute(attrname='hasAttribute',\n                       expr=<Name.elem l.148 at 0x257996ef250>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.setAttribute(attrname='setAttribute',\n                       expr=<Name.elem l.149 at 0x257996ef490>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.hasAttribute(attrname='hasAttribute',\n                       expr=<Name.elem l.151 at 0x257996ef710>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._ensure_w14_namespace(attrname='_ensure_w14_namespace',\n                                expr=<Name.self l.152 at 0x257996ef950>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.setAttribute(attrname='setAttribute',\n                       expr=<Name.elem l.153 at 0x257996efad0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name._generate_hex_id(name='_generate_hex_id')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.hasAttribute(attrname='hasAttribute',\n                       expr=<Name.elem l.154 at 0x257996efdd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._ensure_w14_namespace(attrname='_ensure_w14_namespace',\n                                expr=<Name.self l.155 at 0x2579973c050>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.setAttribute(attrname='setAttribute',\n                       expr=<Name.elem l.156 at 0x2579973c1d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name._generate_hex_id(name='_generate_hex_id')",
              "type": "Uninferable"
            },
            {
              "function": "Name.is_inside_deletion(name='is_inside_deletion')",
              "type": "Const.bool(value=True,\n           kind=None)"
            },
            {
              "function": "Attribute.hasAttribute(attrname='hasAttribute',\n                       expr=<Name.elem l.161 at 0x2579973cbd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.setAttribute(attrname='setAttribute',\n                       expr=<Name.elem l.162 at 0x2579973ce10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.hasAttribute(attrname='hasAttribute',\n                       expr=<Name.elem l.164 at 0x2579973d0d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.setAttribute(attrname='setAttribute',\n                       expr=<Name.elem l.165 at 0x2579973d310>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.hasAttribute(attrname='hasAttribute',\n                       expr=<Name.elem l.169 at 0x2579973dad0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.setAttribute(attrname='setAttribute',\n                       expr=<Name.elem l.170 at 0x2579973dd10>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute._get_next_change_id(attrname='_get_next_change_id',\n                              expr=<Name.self l.170 at 0x2579973df10>)",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Attribute.hasAttribute(attrname='hasAttribute',\n                       expr=<Name.elem l.171 at 0x2579973e150>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.setAttribute(attrname='setAttribute',\n                       expr=<Name.elem l.172 at 0x2579973e390>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.hasAttribute(attrname='hasAttribute',\n                       expr=<Name.elem l.173 at 0x2579973e610>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.setAttribute(attrname='setAttribute',\n                       expr=<Name.elem l.174 at 0x2579973e850>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.hasAttribute(attrname='hasAttribute',\n                       expr=<Name.elem l.176 at 0x2579973ed90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._ensure_w16du_namespace(attrname='_ensure_w16du_namespace',\n                                  expr=<Name.self l.179 at 0x2579973ef50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.setAttribute(attrname='setAttribute',\n                       expr=<Name.elem l.180 at 0x2579973f0d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.hasAttribute(attrname='hasAttribute',\n                       expr=<Name.elem l.183 at 0x2579973f810>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.setAttribute(attrname='setAttribute',\n                       expr=<Name.elem l.184 at 0x2579973fa50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.hasAttribute(attrname='hasAttribute',\n                       expr=<Name.elem l.185 at 0x2579973fcd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.setAttribute(attrname='setAttribute',\n                       expr=<Name.elem l.186 at 0x2579973ff10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.hasAttribute(attrname='hasAttribute',\n                       expr=<Name.elem l.187 at 0x25799744190>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.setAttribute(attrname='setAttribute',\n                       expr=<Name.elem l.188 at 0x257997443d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.hasAttribute(attrname='hasAttribute',\n                       expr=<Name.elem l.192 at 0x25799744b50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._ensure_w16cex_namespace(attrname='_ensure_w16cex_namespace',\n                                   expr=<Name.self l.193 at 0x25799744d90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.setAttribute(attrname='setAttribute',\n                       expr=<Name.elem l.194 at 0x25799744f10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.isspace(attrname='isspace',\n                  expr=<Subscript l.203 at 0x25799745d90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.isspace(attrname='isspace',\n                  expr=<Subscript l.203 at 0x25799745f90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.hasAttribute(attrname='hasAttribute',\n                       expr=<Name.elem l.204 at 0x257997461d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.setAttribute(attrname='setAttribute',\n                       expr=<Name.elem l.205 at 0x257997463d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.add_rsid_to_p(name='add_rsid_to_p')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.add_rsid_to_r(name='add_rsid_to_r')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.add_xml_space_to_t(name='add_xml_space_to_t')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.add_tracked_change_attrs(name='add_tracked_change_attrs')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.add_comment_attrs(name='add_comment_attrs')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.add_comment_extensible_date(name='add_comment_extensible_date')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.getElementsByTagName(attrname='getElementsByTagName',\n                               expr=<Name.node l.226 at 0x25799750090>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.add_rsid_to_p(name='add_rsid_to_p')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.getElementsByTagName(attrname='getElementsByTagName',\n                               expr=<Name.node l.228 at 0x257997504d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.add_rsid_to_r(name='add_rsid_to_r')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.getElementsByTagName(attrname='getElementsByTagName',\n                               expr=<Name.node l.230 at 0x257997508d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.add_xml_space_to_t(name='add_xml_space_to_t')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.getElementsByTagName(attrname='getElementsByTagName',\n                               expr=<Name.node l.233 at 0x25799750f10>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.add_tracked_change_attrs(name='add_tracked_change_attrs')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.getElementsByTagName(attrname='getElementsByTagName',\n                               expr=<Name.node l.235 at 0x25799751390>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.add_comment_attrs(name='add_comment_attrs')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.getElementsByTagName(attrname='getElementsByTagName',\n                               expr=<Name.node l.237 at 0x25799751790>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.add_comment_extensible_date(name='add_comment_extensible_date')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.super(name='super')",
              "type": "Super.DocxXMLEditor()"
            },
            {
              "function": "Attribute._inject_attributes_to_nodes(attrname='_inject_attributes_to_nodes',\n                                      expr=<Name.self l.243 at 0x25799752490>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.super(name='super')",
              "type": "Super.DocxXMLEditor()"
            },
            {
              "function": "Attribute._inject_attributes_to_nodes(attrname='_inject_attributes_to_nodes',\n                                      expr=<Name.self l.249 at 0x25799753010>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.super(name='super')",
              "type": "Super.DocxXMLEditor()"
            },
            {
              "function": "Attribute._inject_attributes_to_nodes(attrname='_inject_attributes_to_nodes',\n                                      expr=<Name.self l.255 at 0x25799753b90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.super(name='super')",
              "type": "Super.DocxXMLEditor()"
            },
            {
              "function": "Attribute._inject_attributes_to_nodes(attrname='_inject_attributes_to_nodes',\n                                      expr=<Name.self l.261 at 0x25799754710>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.getElementsByTagName(attrname='getElementsByTagName',\n                               expr=<Name.elem l.293 at 0x25799755510>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Name.list(name='list')",
              "type": "Instance of builtins.list"
            },
            {
              "function": "Attribute.getElementsByTagName(attrname='getElementsByTagName',\n                               expr=<Name.ins_elem l.304 at 0x25799755ed0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.hasAttribute(attrname='hasAttribute',\n                       expr=<Name.run l.314 at 0x25799756650>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.setAttribute(attrname='setAttribute',\n                       expr=<Name.run l.315 at 0x25799756850>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.getAttribute(attrname='getAttribute',\n                       expr=<Name.run l.315 at 0x25799756990>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.removeAttribute(attrname='removeAttribute',\n                          expr=<Name.run l.316 at 0x25799756b90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.hasAttribute(attrname='hasAttribute',\n                       expr=<Name.run l.317 at 0x25799756d90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.setAttribute(attrname='setAttribute',\n                       expr=<Name.run l.318 at 0x25799756fd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.list(name='list')",
              "type": "Instance of builtins.list"
            },
            {
              "function": "Attribute.getElementsByTagName(attrname='getElementsByTagName',\n                               expr=<Name.run l.320 at 0x25799757390>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.appendChild(attrname='appendChild',\n                      expr=<Name.del_text l.324 at 0x25799757990>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Attribute.item(attrname='item',\n               expr=<Attribute.attributes l.326 at 0x25799757f50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.setAttribute(attrname='setAttribute',\n                       expr=<Name.del_text l.327 at 0x25799758190>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.replaceChild(attrname='replaceChild',\n                       expr=<Attribute.parentNode l.328 at 0x25799758450>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.appendChild(attrname='appendChild',\n                      expr=<Name.del_wrapper l.332 at 0x25799758810>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.appendChild(attrname='appendChild',\n                      expr=<Name.ins_elem l.335 at 0x25799758a90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._inject_attributes_to_nodes(attrname='_inject_attributes_to_nodes',\n                                      expr=<Name.self l.338 at 0x25799758c50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.getElementsByTagName(attrname='getElementsByTagName',\n                               expr=<Name.elem l.374 at 0x25799759cd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Name.list(name='list')",
              "type": "Instance of builtins.list"
            },
            {
              "function": "Attribute.getElementsByTagName(attrname='getElementsByTagName',\n                               expr=<Name.del_elem l.389 at 0x2579975a750>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.cloneNode(attrname='cloneNode',\n                    expr=<Name.run l.398 at 0x2579975af90>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.list(name='list')",
              "type": "Instance of builtins.list"
            },
            {
              "function": "Attribute.getElementsByTagName(attrname='getElementsByTagName',\n                               expr=<Name.new_run l.401 at 0x2579975b290>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.appendChild(attrname='appendChild',\n                      expr=<Name.t_elem l.405 at 0x2579975b890>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Attribute.item(attrname='item',\n               expr=<Attribute.attributes l.407 at 0x2579975be50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.setAttribute(attrname='setAttribute',\n                       expr=<Name.t_elem l.408 at 0x25799764090>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.replaceChild(attrname='replaceChild',\n                       expr=<Attribute.parentNode l.409 at 0x25799764350>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.hasAttribute(attrname='hasAttribute',\n                       expr=<Name.new_run l.412 at 0x257997645d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.setAttribute(attrname='setAttribute',\n                       expr=<Name.new_run l.413 at 0x257997647d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.getAttribute(attrname='getAttribute',\n                       expr=<Name.new_run l.413 at 0x25799764910>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.removeAttribute(attrname='removeAttribute',\n                          expr=<Name.new_run l.414 at 0x25799764b10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.hasAttribute(attrname='hasAttribute',\n                       expr=<Name.new_run l.415 at 0x25799764d10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.setAttribute(attrname='setAttribute',\n                       expr=<Name.new_run l.416 at 0x25799764f50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.appendChild(attrname='appendChild',\n                      expr=<Name.ins_elem l.418 at 0x257997651d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.insert_after(attrname='insert_after',\n                       expr=<Name.self l.421 at 0x25799765490>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.toxml(attrname='toxml',\n                expr=<Name.ins_elem l.421 at 0x25799765590>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.parseString(attrname='parseString',\n                      expr=<Name.minidom l.446 at 0x25799766890>)",
              "type": "Instance of xml.dom.minidom.Document"
            },
            {
              "function": "Attribute.getElementsByTagName(attrname='getElementsByTagName',\n                               expr=<Name.doc l.447 at 0x25799766b10>)",
              "type": "Instance of xml.dom.minicompat.NodeList"
            },
            {
              "function": "Attribute.getElementsByTagName(attrname='getElementsByTagName',\n                               expr=<Name.para l.450 at 0x25799766e10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.createElement(attrname='createElement',\n                        expr=<Name.doc l.452 at 0x25799767190>)",
              "type": "Instance of xml.dom.minidom.Element"
            },
            {
              "function": "Attribute.insertBefore(attrname='insertBefore',\n                       expr=<Name.para l.453 at 0x25799767410>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.appendChild(attrname='appendChild',\n                      expr=<Name.para l.455 at 0x25799767690>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.getElementsByTagName(attrname='getElementsByTagName',\n                               expr=<Name.pPr l.460 at 0x25799767b10>)",
              "type": "Instance of xml.dom.minicompat.NodeList"
            },
            {
              "function": "Attribute.createElement(attrname='createElement',\n                        expr=<Name.doc l.462 at 0x25799767e90>)",
              "type": "Instance of xml.dom.minidom.Element"
            },
            {
              "function": "Attribute.appendChild(attrname='appendChild',\n                      expr=<Name.pPr l.463 at 0x25799768090>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.createElement(attrname='createElement',\n                        expr=<Name.doc l.468 at 0x257997684d0>)",
              "type": "Instance of xml.dom.minidom.Element"
            },
            {
              "function": "Attribute.insertBefore(attrname='insertBefore',\n                       expr=<Name.rPr l.469 at 0x257997686d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.appendChild(attrname='appendChild',\n                      expr=<Name.rPr l.471 at 0x25799768950>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.createElement(attrname='createElement',\n                        expr=<Name.doc l.474 at 0x25799768b90>)",
              "type": "Instance of xml.dom.minidom.Element"
            },
            {
              "function": "Attribute.removeChild(attrname='removeChild',\n                      expr=<Name.para l.476 at 0x25799769250>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.appendChild(attrname='appendChild',\n                      expr=<Name.ins_wrapper l.477 at 0x25799769410>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.appendChild(attrname='appendChild',\n                      expr=<Name.para l.478 at 0x25799769610>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.toxml(attrname='toxml',\n                expr=<Name.para l.480 at 0x257997697d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.getElementsByTagName(attrname='getElementsByTagName',\n                               expr=<Name.elem l.500 at 0x2579976a050>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Name.list(name='list')",
              "type": "Instance of builtins.list"
            },
            {
              "function": "Attribute.getElementsByTagName(attrname='getElementsByTagName',\n                               expr=<Name.elem l.504 at 0x2579976a550>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.appendChild(attrname='appendChild',\n                      expr=<Name.del_text l.508 at 0x2579976ab50>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Attribute.item(attrname='item',\n               expr=<Attribute.attributes l.511 at 0x2579976b110>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.setAttribute(attrname='setAttribute',\n                       expr=<Name.del_text l.512 at 0x2579976b310>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.replaceChild(attrname='replaceChild',\n                       expr=<Attribute.parentNode l.513 at 0x2579976b5d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.hasAttribute(attrname='hasAttribute',\n                       expr=<Name.elem l.516 at 0x2579976b850>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.setAttribute(attrname='setAttribute',\n                       expr=<Name.elem l.517 at 0x2579976ba50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.getAttribute(attrname='getAttribute',\n                       expr=<Name.elem l.517 at 0x2579976bb90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.removeAttribute(attrname='removeAttribute',\n                          expr=<Name.elem l.518 at 0x2579976bd90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.hasAttribute(attrname='hasAttribute',\n                       expr=<Name.elem l.519 at 0x2579976bf90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.setAttribute(attrname='setAttribute',\n                       expr=<Name.elem l.520 at 0x25799770210>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.insertBefore(attrname='insertBefore',\n                       expr=<Name.parent l.525 at 0x25799770910>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.removeChild(attrname='removeChild',\n                      expr=<Name.parent l.526 at 0x25799770b10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.appendChild(attrname='appendChild',\n                      expr=<Name.del_wrapper l.527 at 0x25799770cd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._inject_attributes_to_nodes(attrname='_inject_attributes_to_nodes',\n                                      expr=<Name.self l.530 at 0x25799770e90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.getElementsByTagName(attrname='getElementsByTagName',\n                               expr=<Name.elem l.536 at 0x257997713d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.getElementsByTagName(attrname='getElementsByTagName',\n                               expr=<Name.elem l.536 at 0x25799771550>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.getElementsByTagName(attrname='getElementsByTagName',\n                               expr=<Name.elem l.540 at 0x25799771990>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.getElementsByTagName(attrname='getElementsByTagName',\n                               expr=<Subscript l.541 at 0x25799771cd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.getElementsByTagName(attrname='getElementsByTagName',\n                               expr=<Name.pPr l.546 at 0x25799772250>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.appendChild(attrname='appendChild',\n                      expr=<Name.pPr l.550 at 0x257997727d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.insertBefore(attrname='insertBefore',\n                       expr=<Name.rPr l.556 at 0x25799772e50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.appendChild(attrname='appendChild',\n                      expr=<Name.rPr l.558 at 0x257997730d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.list(name='list')",
              "type": "Instance of builtins.list"
            },
            {
              "function": "Attribute.getElementsByTagName(attrname='getElementsByTagName',\n                               expr=<Name.elem l.561 at 0x257997733d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.appendChild(attrname='appendChild',\n                      expr=<Name.del_text l.565 at 0x257997739d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Attribute.item(attrname='item',\n               expr=<Attribute.attributes l.568 at 0x25799773f50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.setAttribute(attrname='setAttribute',\n                       expr=<Name.del_text l.569 at 0x25799778150>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.replaceChild(attrname='replaceChild',\n                       expr=<Attribute.parentNode l.570 at 0x25799778410>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.getElementsByTagName(attrname='getElementsByTagName',\n                               expr=<Name.elem l.573 at 0x25799778750>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.hasAttribute(attrname='hasAttribute',\n                       expr=<Name.run l.574 at 0x25799778950>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.setAttribute(attrname='setAttribute',\n                       expr=<Name.run l.575 at 0x25799778b50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.getAttribute(attrname='getAttribute',\n                       expr=<Name.run l.575 at 0x25799778c90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.removeAttribute(attrname='removeAttribute',\n                          expr=<Name.run l.576 at 0x25799778e90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.hasAttribute(attrname='hasAttribute',\n                       expr=<Name.run l.577 at 0x25799779090>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.setAttribute(attrname='setAttribute',\n                       expr=<Name.run l.578 at 0x257997792d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.removeChild(attrname='removeChild',\n                      expr=<Name.elem l.583 at 0x25799779cd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.appendChild(attrname='appendChild',\n                      expr=<Name.del_wrapper l.584 at 0x25799779e90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.appendChild(attrname='appendChild',\n                      expr=<Name.elem l.585 at 0x2579977a090>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._inject_attributes_to_nodes(attrname='_inject_attributes_to_nodes',\n                                      expr=<Name.self l.588 at 0x2579977a210>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.randint(attrname='randint',\n                  expr=<Name.random l.604 at 0x2579977acd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Const.str l.609 at 0x2579977b410>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.choices(attrname='choices',\n                  expr=<Name.random l.609 at 0x2579977b510>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Attribute.original_path l.636 at 0x25799780710>)",
              "type": "Const.bool(value=False,\n           kind=None)"
            },
            {
              "function": "Attribute.is_dir(attrname='is_dir',\n                 expr=<Attribute.original_path l.636 at 0x257997808d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.mkdtemp(attrname='mkdtemp',\n                  expr=<Name.tempfile l.640 at 0x25799780e50>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.copytree(attrname='copytree',\n                   expr=<Name.shutil l.642 at 0x25799781390>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Name.pack_document(name='pack_document')",
              "type": "Uninferable"
            },
            {
              "function": "Name._generate_rsid(name='_generate_rsid')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute._load_existing_comments(attrname='_load_existing_comments',\n                                  expr=<Name.self l.668 at 0x25799782fd0>)",
              "type": "Dict.dict(items=[])"
            },
            {
              "function": "Attribute._get_next_comment_id(attrname='_get_next_comment_id',\n                               expr=<Name.self l.669 at 0x25799783210>)",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Attribute._setup_tracking(attrname='_setup_tracking',\n                          expr=<Name.self l.675 at 0x257997835d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._add_author_to_people(attrname='_add_author_to_people',\n                                expr=<Name.self l.678 at 0x257997837d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Name.file_path l.705 at 0x25799784350>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Name.DocxXMLEditor(name='DocxXMLEditor')",
              "type": "Instance of .DocxXMLEditor"
            },
            {
              "function": "Name._generate_hex_id(name='_generate_hex_id')",
              "type": "Uninferable"
            },
            {
              "function": "Name._generate_hex_id(name='_generate_hex_id')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strftime(attrname='strftime',\n                   expr=<Call l.733 at 0x25799785b90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.now(attrname='now',\n              expr=<Name.datetime l.733 at 0x25799785bd0>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Attribute.insert_before(attrname='insert_before',\n                        expr=<Attribute._document l.736 at 0x25799785ed0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._comment_range_start_xml(attrname='_comment_range_start_xml',\n                                   expr=<Name.self l.736 at 0x25799786010>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.append_to(attrname='append_to',\n                    expr=<Attribute._document l.741 at 0x25799786450>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._comment_range_end_xml(attrname='_comment_range_end_xml',\n                                 expr=<Name.self l.741 at 0x25799786590>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.insert_after(attrname='insert_after',\n                       expr=<Attribute._document l.743 at 0x25799786810>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._comment_range_end_xml(attrname='_comment_range_end_xml',\n                                 expr=<Name.self l.743 at 0x25799786950>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._add_to_comments_xml(attrname='_add_to_comments_xml',\n                               expr=<Name.self l.746 at 0x25799786b90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._add_to_comments_extended_xml(attrname='_add_to_comments_extended_xml',\n                                        expr=<Name.self l.751 at 0x25799786f50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._add_to_comments_ids_xml(attrname='_add_to_comments_ids_xml',\n                                   expr=<Name.self l.754 at 0x25799787190>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._add_to_comments_extensible_xml(attrname='_add_to_comments_extensible_xml',\n                                          expr=<Name.self l.757 at 0x25799787350>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Name._generate_hex_id(name='_generate_hex_id')",
              "type": "Uninferable"
            },
            {
              "function": "Name._generate_hex_id(name='_generate_hex_id')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strftime(attrname='strftime',\n                   expr=<Call l.790 at 0x25799794d90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.now(attrname='now',\n              expr=<Name.datetime l.790 at 0x25799794dd0>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Attribute.get_node(attrname='get_node',\n                   expr=<Attribute._document l.793 at 0x25799795190>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get_node(attrname='get_node',\n                   expr=<Attribute._document l.796 at 0x257997956d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.insert_after(attrname='insert_after',\n                       expr=<Attribute._document l.800 at 0x25799795b90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._comment_range_start_xml(attrname='_comment_range_start_xml',\n                                   expr=<Name.self l.801 at 0x25799795bd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.insert_after(attrname='insert_after',\n                       expr=<Attribute._document l.804 at 0x25799796010>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.insert_after(attrname='insert_after',\n                       expr=<Attribute._document l.807 at 0x25799796390>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._comment_ref_run_xml(attrname='_comment_ref_run_xml',\n                               expr=<Name.self l.808 at 0x257997964d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._add_to_comments_xml(attrname='_add_to_comments_xml',\n                               expr=<Name.self l.812 at 0x25799796710>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._add_to_comments_extended_xml(attrname='_add_to_comments_extended_xml',\n                                        expr=<Name.self l.817 at 0x25799796ad0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._add_to_comments_ids_xml(attrname='_add_to_comments_ids_xml',\n                                   expr=<Name.self l.822 at 0x25799796d90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._add_to_comments_extensible_xml(attrname='_add_to_comments_extensible_xml',\n                                          expr=<Name.self l.825 at 0x25799796f90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.hasattr(name='hasattr')",
              "type": "Const.bool(value=True,\n           kind=None)"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Call l.835 at 0x25799797c90>)",
              "type": "Const.bool(value=False,\n           kind=None)"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.rmtree(attrname='rmtree',\n                 expr=<Name.shutil l.836 at 0x25799797f50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.DOCXSchemaValidator(name='DOCXSchemaValidator')",
              "type": "Uninferable"
            },
            {
              "function": "Name.RedliningValidator(name='RedliningValidator')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.validate(attrname='validate',\n                   expr=<Name.schema_validator l.854 at 0x25799798e10>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.validate(attrname='validate',\n                   expr=<Name.redlining_validator l.856 at 0x257997991d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Attribute.comments_path l.870 at 0x25799799c10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._ensure_comment_relationships(attrname='_ensure_comment_relationships',\n                                        expr=<Name.self l.871 at 0x25799799e10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._ensure_comment_content_types(attrname='_ensure_comment_content_types',\n                                        expr=<Name.self l.872 at 0x25799799f90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.values(attrname='values',\n                 expr=<Attribute._editors l.875 at 0x2579979a1d0>)",
              "type": "DictValues.list(ctx=None,\n                elts=[])"
            },
            {
              "function": "Attribute.save(attrname='save',\n               expr=<Name.editor l.876 at 0x2579979a3d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.validate(attrname='validate',\n                   expr=<Name.self l.880 at 0x2579979a650>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.copytree(attrname='copytree',\n                   expr=<Name.shutil l.884 at 0x2579979ab50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Attribute.comments_path l.890 at 0x2579979b310>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.getElementsByTagName(attrname='getElementsByTagName',\n                               expr=<Attribute.dom l.895 at 0x2579979b9d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.getAttribute(attrname='getAttribute',\n                       expr=<Name.comment_elem l.896 at 0x2579979bcd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Attribute.comments_path l.906 at 0x257997a0b90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.getElementsByTagName(attrname='getElementsByTagName',\n                               expr=<Attribute.dom l.912 at 0x257997a1250>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.getAttribute(attrname='getAttribute',\n                       expr=<Name.comment_elem l.913 at 0x257997a1590>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.getElementsByTagName(attrname='getElementsByTagName',\n                               expr=<Name.comment_elem l.919 at 0x257997a1a90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.getAttribute(attrname='getAttribute',\n                       expr=<Name.p_elem l.920 at 0x257997a1d50>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Attribute._update_people_xml(attrname='_update_people_xml',\n                             expr=<Name.self l.941 at 0x257997a2dd0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._add_content_type_for_people(attrname='_add_content_type_for_people',\n                                       expr=<Name.self l.944 at 0x257997a2f90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._add_relationship_for_people(attrname='_add_relationship_for_people',\n                                       expr=<Name.self l.945 at 0x257997a3210>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._update_settings(attrname='_update_settings',\n                           expr=<Name.self l.950 at 0x257997a3510>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Name.path l.956 at 0x257997a3d90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.copy(attrname='copy',\n               expr=<Name.shutil l.958 at 0x257997a3f90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._has_override(attrname='_has_override',\n                        expr=<Name.self l.964 at 0x257997a8990>)",
              "type": "Const.bool(value=True,\n           kind=None)"
            },
            {
              "function": "Attribute.append_to(attrname='append_to',\n                    expr=<Name.editor l.970 at 0x257997a8f50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._has_relationship(attrname='_has_relationship',\n                            expr=<Name.self l.976 at 0x257997a98d0>)",
              "type": "Const.bool(value=True,\n           kind=None)"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Name.root_tag l.981 at 0x257997aa110>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get_next_rid(attrname='get_next_rid',\n                       expr=<Name.editor l.982 at 0x257997aa4d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.append_to(attrname='append_to',\n                    expr=<Name.editor l.986 at 0x257997aaa10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get_node(attrname='get_node',\n                   expr=<Name.editor l.1000 at 0x257997ab410>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Attribute.tagName l.1001 at 0x257997ab890>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.getElementsByTagName(attrname='getElementsByTagName',\n                               expr=<Attribute.dom l.1007 at 0x257997b01d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.getElementsByTagName(attrname='getElementsByTagName',\n                               expr=<Attribute.dom l.1015 at 0x257997b0e90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.insert_before(attrname='insert_before',\n                        expr=<Name.editor l.1017 at 0x257997b1150>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.insert_before(attrname='insert_before',\n                        expr=<Name.editor l.1023 at 0x257997b1790>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.append_to(attrname='append_to',\n                    expr=<Name.editor l.1025 at 0x257997b1a10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.getElementsByTagName(attrname='getElementsByTagName',\n                               expr=<Attribute.dom l.1028 at 0x257997b1d90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.getElementsByTagName(attrname='getElementsByTagName',\n                               expr=<Attribute.dom l.1039 at 0x257997b2bd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.insert_after(attrname='insert_after',\n                       expr=<Name.editor l.1041 at 0x257997b2f90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.getElementsByTagName(attrname='getElementsByTagName',\n                               expr=<Attribute.dom l.1045 at 0x257997b3510>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.insert_before(attrname='insert_before',\n                        expr=<Name.editor l.1049 at 0x257997b38d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.append_to(attrname='append_to',\n                    expr=<Name.editor l.1053 at 0x257997b3e50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.getAttribute(attrname='getAttribute',\n                       expr=<Name.elem l.1058 at 0x257997b4510>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.getElementsByTagName(attrname='getElementsByTagName',\n                               expr=<Name.rsids_elem l.1059 at 0x257997b4990>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.append_to(attrname='append_to',\n                    expr=<Name.editor l.1064 at 0x257997b5250>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Attribute.comments_path l.1072 at 0x257997b5c90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.copy(attrname='copy',\n               expr=<Name.shutil l.1073 at 0x257997b5ed0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get_node(attrname='get_node',\n                   expr=<Name.editor l.1076 at 0x257997b6450>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.replace(attrname='replace',\n                  expr=<Call l.1079 at 0x257997b6710>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.replace(attrname='replace',\n                  expr=<Call l.1079 at 0x257997b6750>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.replace(attrname='replace',\n                  expr=<Name.text l.1079 at 0x257997b67d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.append_to(attrname='append_to',\n                    expr=<Name.editor l.1089 at 0x257997b70d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Attribute.comments_extended_path l.1093 at 0x257997b7850>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.copy(attrname='copy',\n               expr=<Name.shutil l.1094 at 0x257997b7a90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get_node(attrname='get_node',\n                   expr=<Name.editor l.1099 at 0x257997c0050>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.append_to(attrname='append_to',\n                    expr=<Name.editor l.1105 at 0x257997c0950>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Attribute.comments_ids_path l.1109 at 0x257997c1110>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.copy(attrname='copy',\n               expr=<Name.shutil l.1110 at 0x257997c1350>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get_node(attrname='get_node',\n                   expr=<Name.editor l.1113 at 0x257997c18d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.append_to(attrname='append_to',\n                    expr=<Name.editor l.1116 at 0x257997c1e90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Attribute.comments_extensible_path l.1120 at 0x257997c25d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.copy(attrname='copy',\n               expr=<Name.shutil l.1121 at 0x257997c2810>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get_node(attrname='get_node',\n                   expr=<Name.editor l.1126 at 0x257997c2d90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.append_to(attrname='append_to',\n                    expr=<Name.editor l.1129 at 0x257997c3250>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.getElementsByTagName(attrname='getElementsByTagName',\n                               expr=<Attribute.dom l.1162 at 0x257997c50d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.getAttribute(attrname='getAttribute',\n                       expr=<Name.rel_elem l.1163 at 0x257997c5350>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.getElementsByTagName(attrname='getElementsByTagName',\n                               expr=<Attribute.dom l.1169 at 0x257997c5d90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.getAttribute(attrname='getAttribute',\n                       expr=<Name.override_elem l.1170 at 0x257997c6010>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.getElementsByTagName(attrname='getElementsByTagName',\n                               expr=<Attribute.dom l.1176 at 0x257997c6a50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.getAttribute(attrname='getAttribute',\n                       expr=<Name.person_elem l.1177 at 0x257997c6cd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Name.people_path l.1186 at 0x257997c7850>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.get_node(attrname='get_node',\n                   expr=<Name.editor l.1190 at 0x257997c7e90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._has_author(attrname='_has_author',\n                      expr=<Name.self l.1193 at 0x257997cc0d0>)",
              "type": "Const.bool(value=True,\n           kind=None)"
            },
            {
              "function": "Attribute.escape(attrname='escape',\n                 expr=<Name.html l.1197 at 0x257997cc490>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.append_to(attrname='append_to',\n                    expr=<Name.editor l.1201 at 0x257997cca90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._has_relationship(attrname='_has_relationship',\n                            expr=<Name.self l.1207 at 0x257997cd310>)",
              "type": "Const.bool(value=True,\n           kind=None)"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Name.root_tag l.1212 at 0x257997cdb50>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Attribute.get_next_rid(attrname='get_next_rid',\n                       expr=<Name.editor l.1213 at 0x257997cdfd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.append_to(attrname='append_to',\n                    expr=<Name.editor l.1241 at 0x257997cf290>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._has_override(attrname='_has_override',\n                        expr=<Name.self l.1247 at 0x257997cfb10>)",
              "type": "Const.bool(value=True,\n           kind=None)"
            },
            {
              "function": "Attribute.append_to(attrname='append_to',\n                    expr=<Name.editor l.1276 at 0x257997d4b50>)",
              "type": "Uninferable"
            }
          ],
          "unresolved_imports": [
            "html",
            "random",
            "shutil",
            "tempfile"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\docx\\scripts\\utilities.py",
        "language": "python",
        "file_size": 13694,
        "line_count": 375,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "_create_line_tracking_parser",
            "line_number": 346,
            "parameters": [],
            "defaults": 0,
            "decorators": [],
            "docstring": "Create a SAX parser that tracks line and column numbers for each element.\n\nMonkey patches the SAX content handler to store the current line and column\nposition from the underlying expat parser onto each element as a parse_position\nattribute (line, column) tuple.\n\nReturns:\n    defusedxml.sax.xmlreader.XMLReader: Configured SAX parser",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "__init__",
            "line_number": 55,
            "parameters": [
              "self",
              "xml_path"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Initialize with path to XML file and parse with line number tracking.\n\nArgs:\n    xml_path: Path to XML file to edit (str or Path)\n\nRaises:\n    ValueError: If the XML file does not exist",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "get_node",
            "line_number": 76,
            "parameters": [
              "self",
              "tag",
              "attrs",
              "line_number",
              "contains"
            ],
            "defaults": 3,
            "decorators": [],
            "docstring": "Get a DOM element by tag and identifier.\n\nFinds an element by either its line number in the original file or by\nmatching attribute values. Exactly one match must be found.\n\nArgs:\n    tag: The XML tag name (e.g., \"w:del\", \"w:ins\", \"w:r\")\n    attrs: Dictionary of attribute name-value pairs to match (e.g., {\"w:id\": \"1\"})\n    line_number: Line number (int) or line range (range) in original XML file (1-indexed)\n    contains: Text string that must appear in any text node within the element.\n              Supports both entity notation (&#8220;) and Unicode characters (“).\n\nReturns:\n    defusedxml.minidom.Element: The matching DOM element\n\nRaises:\n    ValueError: If node not found or multiple matches found\n\nExample:\n    elem = editor.get_node(tag=\"w:r\", line_number=519)\n    elem = editor.get_node(tag=\"w:r\", line_number=range(100, 200))\n    elem = editor.get_node(tag=\"w:del\", attrs={\"w:id\": \"1\"})\n    elem = editor.get_node(tag=\"w:p\", attrs={\"w14:paraId\": \"12345678\"})\n    elem = editor.get_node(tag=\"w:commentRangeStart\", attrs={\"w:id\": \"0\"})\n    elem = editor.get_node(tag=\"w:p\", contains=\"specific text\")\n    elem = editor.get_node(tag=\"w:t\", contains=\"&#8220;Agreement\")  # Entity notation\n    elem = editor.get_node(tag=\"w:t\", contains=\"“Agreement\")   # Unicode character",
            "is_async": false,
            "complexity": 18
          },
          {
            "name": "_get_element_text",
            "line_number": 183,
            "parameters": [
              "self",
              "elem"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Recursively extract all text content from an element.\n\nSkips text nodes that contain only whitespace (spaces, tabs, newlines),\nwhich typically represent XML formatting rather than document content.\n\nArgs:\n    elem: defusedxml.minidom.Element to extract text from\n\nReturns:\n    str: Concatenated text from all non-whitespace text nodes within the element",
            "is_async": false,
            "complexity": 5
          },
          {
            "name": "replace_node",
            "line_number": 206,
            "parameters": [
              "self",
              "elem",
              "new_content"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Replace a DOM element with new XML content.\n\nArgs:\n    elem: defusedxml.minidom.Element to replace\n    new_content: String containing XML to replace the node with\n\nReturns:\n    List[defusedxml.minidom.Node]: All inserted nodes\n\nExample:\n    new_nodes = editor.replace_node(old_elem, \"<w:r><w:t>text</w:t></w:r>\")",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "insert_after",
            "line_number": 227,
            "parameters": [
              "self",
              "elem",
              "xml_content"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Insert XML content after a DOM element.\n\nArgs:\n    elem: defusedxml.minidom.Element to insert after\n    xml_content: String containing XML to insert\n\nReturns:\n    List[defusedxml.minidom.Node]: All inserted nodes\n\nExample:\n    new_nodes = editor.insert_after(elem, \"<w:r><w:t>text</w:t></w:r>\")",
            "is_async": false,
            "complexity": 3
          },
          {
            "name": "insert_before",
            "line_number": 251,
            "parameters": [
              "self",
              "elem",
              "xml_content"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Insert XML content before a DOM element.\n\nArgs:\n    elem: defusedxml.minidom.Element to insert before\n    xml_content: String containing XML to insert\n\nReturns:\n    List[defusedxml.minidom.Node]: All inserted nodes\n\nExample:\n    new_nodes = editor.insert_before(elem, \"<w:r><w:t>text</w:t></w:r>\")",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "append_to",
            "line_number": 271,
            "parameters": [
              "self",
              "elem",
              "xml_content"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Append XML content as a child of a DOM element.\n\nArgs:\n    elem: defusedxml.minidom.Element to append to\n    xml_content: String containing XML to append\n\nReturns:\n    List[defusedxml.minidom.Node]: All inserted nodes\n\nExample:\n    new_nodes = editor.append_to(elem, \"<w:r><w:t>text</w:t></w:r>\")",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "get_next_rid",
            "line_number": 290,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Get the next available rId for relationships files.",
            "is_async": false,
            "complexity": 4
          },
          {
            "name": "save",
            "line_number": 302,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Save the edited XML back to the file.\n\nSerializes the DOM tree and writes it back to the original file path,\npreserving the original encoding (ascii or utf-8).",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_parse_fragment",
            "line_number": 312,
            "parameters": [
              "self",
              "xml_content"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Parse XML fragment and return list of imported nodes.\n\nArgs:\n    xml_content: String containing XML fragment\n\nReturns:\n    List of defusedxml.minidom.Node objects imported into this document\n\nRaises:\n    AssertionError: If fragment contains no element nodes",
            "is_async": false,
            "complexity": 5
          },
          {
            "name": "set_content_handler",
            "line_number": 358,
            "parameters": [
              "dom_handler"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "startElementNS",
            "line_number": 359,
            "parameters": [
              "name",
              "tagName",
              "attrs"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          }
        ],
        "classes": [
          {
            "name": "XMLEditor",
            "line_number": 41,
            "bases": [],
            "decorators": [],
            "docstring": "Editor for manipulating OOXML XML files with line-number-based node finding.\n\nThis class parses XML files and tracks the original line and column position\nof each element. This enables finding nodes by their line number in the original\nfile, which is useful when working with Read tool output.\n\nAttributes:\n    xml_path: Path to the XML file being edited\n    encoding: Detected encoding of the XML file ('ascii' or 'utf-8')\n    dom: Parsed DOM tree with parse_position attributes on elements",
            "methods": [
              "__init__",
              "get_node",
              "_get_element_text",
              "replace_node",
              "insert_after",
              "insert_before",
              "append_to",
              "get_next_rid",
              "save",
              "_parse_fragment"
            ],
            "method_count": 10
          }
        ],
        "imports": [
          {
            "type": "import",
            "modules": [
              "html"
            ],
            "line_number": 33
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 34
          },
          {
            "type": "from_import",
            "module": "typing",
            "names": [
              "Optional",
              "Union"
            ],
            "level": 0,
            "line_number": 35
          },
          {
            "type": "import",
            "modules": [
              "defusedxml.minidom"
            ],
            "line_number": 37
          },
          {
            "type": "import",
            "modules": [
              "defusedxml.sax"
            ],
            "line_number": 38
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 47,
          "function_count": 13,
          "class_count": 1,
          "import_count": 5,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Attribute.xml_path l.66 at 0x2579985c050>)",
              "type": "Const.bool(value=False,\n           kind=None)"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.decode(attrname='decode',\n                 expr=<Call l.70 at 0x25799878090>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.read(attrname='read',\n               expr=<Name.f l.70 at 0x25799878190>)",
              "type": "Uninferable"
            },
            {
              "function": "Name._create_line_tracking_parser(name='_create_line_tracking_parser')",
              "type": "Instance of defusedxml.expatreader.DefusedExpatParser"
            },
            {
              "function": "Attribute.parse(attrname='parse',\n                expr=<Attribute.minidom l.74 at 0x25799878ed0>)",
              "type": "Instance of xml.dom.minidom.Document"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.getElementsByTagName(attrname='getElementsByTagName',\n                               expr=<Attribute.dom l.113 at 0x25799869810>)",
              "type": "Instance of xml.dom.minicompat.NodeList"
            },
            {
              "function": "Name.getattr(name='getattr')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.getAttribute(attrname='getAttribute',\n                       expr=<Name.elem l.130 at 0x2579986a5d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Name.attrs l.131 at 0x2579986aa50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._get_element_text(attrname='_get_element_text',\n                            expr=<Name.self l.137 at 0x2579986af50>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.unescape(attrname='unescape',\n                   expr=<Name.html l.140 at 0x2579986b1d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Const.str l.162 at 0x2579964c850>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Attribute.data l.200 at 0x2579964eb10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._get_element_text(attrname='_get_element_text',\n                            expr=<Name.self l.203 at 0x2579964f490>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Const.str l.204 at 0x2579964f750>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute._parse_fragment(attrname='_parse_fragment',\n                          expr=<Name.self l.221 at 0x2579964e450>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.insertBefore(attrname='insertBefore',\n                       expr=<Name.parent l.223 at 0x257996506d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.removeChild(attrname='removeChild',\n                      expr=<Name.parent l.224 at 0x25799650350>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._parse_fragment(attrname='_parse_fragment',\n                          expr=<Name.self l.243 at 0x25799651050>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.insertBefore(attrname='insertBefore',\n                       expr=<Name.parent l.246 at 0x257996514d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.appendChild(attrname='appendChild',\n                      expr=<Name.parent l.248 at 0x25799651590>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._parse_fragment(attrname='_parse_fragment',\n                          expr=<Name.self l.266 at 0x25799652510>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.insertBefore(attrname='insertBefore',\n                       expr=<Name.parent l.268 at 0x25799652750>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._parse_fragment(attrname='_parse_fragment',\n                          expr=<Name.self l.285 at 0x257996528d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.appendChild(attrname='appendChild',\n                      expr=<Name.elem l.287 at 0x257996520d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.getElementsByTagName(attrname='getElementsByTagName',\n                               expr=<Attribute.dom l.293 at 0x25799653990>)",
              "type": "Instance of xml.dom.minicompat.NodeList"
            },
            {
              "function": "Attribute.getAttribute(attrname='getAttribute',\n                       expr=<Name.rel_elem l.294 at 0x257996535d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.startswith(attrname='startswith',\n                     expr=<Name.rel_id l.295 at 0x257996534d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Attribute.toxml(attrname='toxml',\n                expr=<Attribute.dom l.309 at 0x25799645010>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.write_bytes(attrname='write_bytes',\n                      expr=<Attribute.xml_path l.310 at 0x25799645310>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Attribute.item(attrname='item',\n               expr=<Attribute.attributes l.330 at 0x25799646910>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.startswith(attrname='startswith',\n                     expr=<Attribute.name l.331 at 0x25799646790>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Const.str l.334 at 0x25799646190>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.parseString(attrname='parseString',\n                      expr=<Attribute.minidom l.336 at 0x257996474d0>)",
              "type": "Instance of xml.dom.minidom.Document"
            },
            {
              "function": "Attribute.importNode(attrname='importNode',\n                     expr=<Attribute.dom l.338 at 0x257996477d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.orig_start_cb(name='orig_start_cb')",
              "type": "Uninferable"
            },
            {
              "function": "Name.orig_set_content_handler(name='orig_set_content_handler')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.make_parser(attrname='make_parser',\n                      expr=<Attribute.sax l.371 at 0x25799639d90>)",
              "type": "Instance of defusedxml.expatreader.DefusedExpatParser"
            }
          ],
          "unresolved_imports": [
            "html",
            "defusedxml.minidom",
            "defusedxml.sax"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\docx\\scripts\\__init__.py",
        "language": "python",
        "file_size": 65,
        "line_count": 2,
        "analysis_method": "python_ast",
        "functions": [],
        "classes": [],
        "imports": [],
        "complexity_metrics": {
          "cyclomatic_complexity": 0,
          "function_count": 0,
          "class_count": 0,
          "import_count": 0,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [],
          "unresolved_imports": [],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\pdf-anthropic\\scripts\\check_bounding_boxes.py",
        "language": "python",
        "file_size": 3139,
        "line_count": 71,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "get_bounding_box_messages",
            "line_number": 18,
            "parameters": [
              "fields_json_stream"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 16
          },
          {
            "name": "rects_intersect",
            "line_number": 23,
            "parameters": [
              "r1",
              "r2"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 4
          }
        ],
        "classes": [
          {
            "name": "RectAndField",
            "line_number": 11,
            "bases": [],
            "decorators": [
              "dataclass"
            ],
            "docstring": null,
            "methods": [],
            "method_count": 0
          }
        ],
        "imports": [
          {
            "type": "from_import",
            "module": "dataclasses",
            "names": [
              "dataclass"
            ],
            "level": 0,
            "line_number": 1
          },
          {
            "type": "import",
            "modules": [
              "json"
            ],
            "line_number": 2
          },
          {
            "type": "import",
            "modules": [
              "sys"
            ],
            "line_number": 3
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 20,
          "function_count": 2,
          "class_count": 1,
          "import_count": 3,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.load(attrname='load',\n               expr=<Name.json l.20 at 0x257995d3250>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.RectAndField(name='RectAndField')",
              "type": "Instance of .RectAndField"
            },
            {
              "function": "Name.RectAndField(name='RectAndField')",
              "type": "Instance of .RectAndField"
            },
            {
              "function": "Name.enumerate(name='enumerate')",
              "type": "Instance of builtins.enumerate"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Name.rects_intersect(name='rects_intersect')",
              "type": "Uninferable"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Subscript l.49 at 0x2579996ead0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Name.get_bounding_box_messages(name='get_bounding_box_messages')",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            }
          ],
          "unresolved_imports": [
            "json",
            "sys"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\pdf-anthropic\\scripts\\check_bounding_boxes_test.py",
        "language": "python",
        "file_size": 8818,
        "line_count": 227,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "create_json_stream",
            "line_number": 10,
            "parameters": [
              "self",
              "data"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Helper to create a JSON stream from data",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_no_intersections",
            "line_number": 14,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test case with no bounding box intersections",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_label_entry_intersection_same_field",
            "line_number": 38,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test intersection between label and entry of the same field",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "test_intersection_between_different_fields",
            "line_number": 56,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test intersection between bounding boxes of different fields",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "test_different_pages_no_intersection",
            "line_number": 80,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test that boxes on different pages don't count as intersecting",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_entry_height_too_small",
            "line_number": 104,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test that entry box height is checked against font size",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "test_entry_height_adequate",
            "line_number": 125,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test that adequate entry box height passes",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_default_font_size",
            "line_number": 146,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test that default font size is used when not specified",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "test_no_entry_text",
            "line_number": 165,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test that missing entry_text doesn't cause height check",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_multiple_errors_limit",
            "line_number": 183,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test that error messages are limited to prevent excessive output",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "test_edge_touching_boxes",
            "line_number": 206,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test that boxes touching at edges don't count as intersecting",
            "is_async": false,
            "complexity": 1
          }
        ],
        "classes": [
          {
            "name": "TestGetBoundingBoxMessages",
            "line_number": 8,
            "bases": [
              "unittest.TestCase"
            ],
            "decorators": [],
            "docstring": null,
            "methods": [
              "create_json_stream",
              "test_no_intersections",
              "test_label_entry_intersection_same_field",
              "test_intersection_between_different_fields",
              "test_different_pages_no_intersection",
              "test_entry_height_too_small",
              "test_entry_height_adequate",
              "test_default_font_size",
              "test_no_entry_text",
              "test_multiple_errors_limit",
              "test_edge_touching_boxes"
            ],
            "method_count": 11
          }
        ],
        "imports": [
          {
            "type": "import",
            "modules": [
              "unittest"
            ],
            "line_number": 1
          },
          {
            "type": "import",
            "modules": [
              "json"
            ],
            "line_number": 2
          },
          {
            "type": "import",
            "modules": [
              "io"
            ],
            "line_number": 3
          },
          {
            "type": "from_import",
            "module": "check_bounding_boxes",
            "names": [
              "get_bounding_box_messages"
            ],
            "level": 0,
            "line_number": 4
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 16,
          "function_count": 11,
          "class_count": 1,
          "import_count": 4,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.StringIO(attrname='StringIO',\n                   expr=<Name.io l.12 at 0x257999747d0>)",
              "type": "Instance of _io.StringIO"
            },
            {
              "function": "Attribute.dumps(attrname='dumps',\n                expr=<Name.json l.12 at 0x257999748d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.create_json_stream(attrname='create_json_stream',\n                             expr=<Name.self l.33 at 0x25799975ed0>)",
              "type": "Instance of _io.StringIO"
            },
            {
              "function": "Name.get_bounding_box_messages(name='get_bounding_box_messages')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.assertTrue(attrname='assertTrue',\n                     expr=<Name.self l.35 at 0x25799976310>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.assertFalse(attrname='assertFalse',\n                      expr=<Name.self l.36 at 0x257999768d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.create_json_stream(attrname='create_json_stream',\n                             expr=<Name.self l.51 at 0x25799977bd0>)",
              "type": "Instance of _io.StringIO"
            },
            {
              "function": "Name.get_bounding_box_messages(name='get_bounding_box_messages')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.assertTrue(attrname='assertTrue',\n                     expr=<Name.self l.53 at 0x25799977f90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.assertFalse(attrname='assertFalse',\n                      expr=<Name.self l.54 at 0x25799990750>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.create_json_stream(attrname='create_json_stream',\n                             expr=<Name.self l.75 at 0x25799991f90>)",
              "type": "Instance of _io.StringIO"
            },
            {
              "function": "Name.get_bounding_box_messages(name='get_bounding_box_messages')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.assertTrue(attrname='assertTrue',\n                     expr=<Name.self l.77 at 0x25799992350>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.assertFalse(attrname='assertFalse',\n                      expr=<Name.self l.78 at 0x25799992a50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.create_json_stream(attrname='create_json_stream',\n                             expr=<Name.self l.99 at 0x257999982d0>)",
              "type": "Instance of _io.StringIO"
            },
            {
              "function": "Name.get_bounding_box_messages(name='get_bounding_box_messages')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.assertTrue(attrname='assertTrue',\n                     expr=<Name.self l.101 at 0x25799998690>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.assertFalse(attrname='assertFalse',\n                      expr=<Name.self l.102 at 0x25799998c10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.create_json_stream(attrname='create_json_stream',\n                             expr=<Name.self l.120 at 0x25799999fd0>)",
              "type": "Instance of _io.StringIO"
            },
            {
              "function": "Name.get_bounding_box_messages(name='get_bounding_box_messages')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.assertTrue(attrname='assertTrue',\n                     expr=<Name.self l.122 at 0x2579999a450>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.assertFalse(attrname='assertFalse',\n                      expr=<Name.self l.123 at 0x2579999ab50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.create_json_stream(attrname='create_json_stream',\n                             expr=<Name.self l.141 at 0x2579999bed0>)",
              "type": "Instance of _io.StringIO"
            },
            {
              "function": "Name.get_bounding_box_messages(name='get_bounding_box_messages')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.assertTrue(attrname='assertTrue',\n                     expr=<Name.self l.143 at 0x2579999c390>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.assertFalse(attrname='assertFalse',\n                      expr=<Name.self l.144 at 0x2579999c910>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.create_json_stream(attrname='create_json_stream',\n                             expr=<Name.self l.160 at 0x2579999dc90>)",
              "type": "Instance of _io.StringIO"
            },
            {
              "function": "Name.get_bounding_box_messages(name='get_bounding_box_messages')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.assertTrue(attrname='assertTrue',\n                     expr=<Name.self l.162 at 0x2579999e090>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.assertFalse(attrname='assertFalse',\n                      expr=<Name.self l.163 at 0x2579999e790>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.create_json_stream(attrname='create_json_stream',\n                             expr=<Name.self l.178 at 0x2579999fa90>)",
              "type": "Instance of _io.StringIO"
            },
            {
              "function": "Name.get_bounding_box_messages(name='get_bounding_box_messages')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.assertTrue(attrname='assertTrue',\n                     expr=<Name.self l.180 at 0x2579999fe50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.assertFalse(attrname='assertFalse',\n                      expr=<Name.self l.181 at 0x257999a4410>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Attribute.create_json_stream(attrname='create_json_stream',\n                             expr=<Name.self l.197 at 0x257999a5d90>)",
              "type": "Instance of _io.StringIO"
            },
            {
              "function": "Name.get_bounding_box_messages(name='get_bounding_box_messages')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.assertTrue(attrname='assertTrue',\n                     expr=<Name.self l.200 at 0x257999a61d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.assertGreater(attrname='assertGreater',\n                        expr=<Name.self l.203 at 0x257999a6c50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.assertLess(attrname='assertLess',\n                     expr=<Name.self l.204 at 0x257999a6e90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.create_json_stream(attrname='create_json_stream',\n                             expr=<Name.self l.219 at 0x257999a7e90>)",
              "type": "Instance of _io.StringIO"
            },
            {
              "function": "Name.get_bounding_box_messages(name='get_bounding_box_messages')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.assertTrue(attrname='assertTrue',\n                     expr=<Name.self l.221 at 0x257999ac290>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.assertFalse(attrname='assertFalse',\n                      expr=<Name.self l.222 at 0x257999ac810>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.main(attrname='main',\n               expr=<Name.unittest l.226 at 0x257999acf90>)",
              "type": "Instance of unittest.main.TestProgram"
            }
          ],
          "unresolved_imports": [
            "unittest",
            "json",
            "io"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\pdf-anthropic\\scripts\\check_fillable_fields.py",
        "language": "python",
        "file_size": 362,
        "line_count": 13,
        "analysis_method": "python_ast",
        "functions": [],
        "classes": [],
        "imports": [
          {
            "type": "import",
            "modules": [
              "sys"
            ],
            "line_number": 1
          },
          {
            "type": "from_import",
            "module": "pypdf",
            "names": [
              "PdfReader"
            ],
            "level": 0,
            "line_number": 2
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 0,
          "function_count": 0,
          "class_count": 0,
          "import_count": 2,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Name.PdfReader(name='PdfReader')",
              "type": "Instance of pypdf._reader.PdfReader"
            },
            {
              "function": "Attribute.get_fields(attrname='get_fields',\n                     expr=<Name.reader l.9 at 0x257e04a5a10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            }
          ],
          "unresolved_imports": [
            "sys"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\pdf-anthropic\\scripts\\convert_pdf_to_images.py",
        "language": "python",
        "file_size": 1123,
        "line_count": 36,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "convert",
            "line_number": 10,
            "parameters": [
              "pdf_path",
              "output_dir",
              "max_dim"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 4
          }
        ],
        "classes": [],
        "imports": [
          {
            "type": "import",
            "modules": [
              "os"
            ],
            "line_number": 1
          },
          {
            "type": "import",
            "modules": [
              "sys"
            ],
            "line_number": 2
          },
          {
            "type": "from_import",
            "module": "pdf2image",
            "names": [
              "convert_from_path"
            ],
            "level": 0,
            "line_number": 4
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 4,
          "function_count": 1,
          "class_count": 0,
          "import_count": 3,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Name.convert_from_path(name='convert_from_path')",
              "type": "Uninferable"
            },
            {
              "function": "Name.enumerate(name='enumerate')",
              "type": "Instance of builtins.enumerate"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Attribute.resize(attrname='resize',\n                 expr=<Name.image l.20 at 0x2579a0293d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Attribute.path l.22 at 0x2579a028fd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.save(attrname='save',\n               expr=<Name.image l.23 at 0x2579a02ab10>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.convert(name='convert')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            }
          ],
          "unresolved_imports": [
            "os",
            "sys"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\pdf-anthropic\\scripts\\create_validation_image.py",
        "language": "python",
        "file_size": 1603,
        "line_count": 42,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "create_validation_image",
            "line_number": 11,
            "parameters": [
              "page_number",
              "fields_json_path",
              "input_path",
              "output_path"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 3
          }
        ],
        "classes": [],
        "imports": [
          {
            "type": "import",
            "modules": [
              "json"
            ],
            "line_number": 1
          },
          {
            "type": "import",
            "modules": [
              "sys"
            ],
            "line_number": 2
          },
          {
            "type": "from_import",
            "module": "PIL",
            "names": [
              "Image",
              "ImageDraw"
            ],
            "level": 0,
            "line_number": 4
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 3,
          "function_count": 1,
          "class_count": 0,
          "import_count": 3,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.load(attrname='load',\n               expr=<Name.json l.14 at 0x25799e23110>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.open(attrname='open',\n               expr=<Name.Image l.16 at 0x25799e238d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.Draw(attrname='Draw',\n               expr=<Name.ImageDraw l.17 at 0x2579a030650>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.rectangle(attrname='rectangle',\n                    expr=<Name.draw l.25 at 0x2579a030f10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.rectangle(attrname='rectangle',\n                    expr=<Name.draw l.26 at 0x2579a031d10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.save(attrname='save',\n               expr=<Name.img l.29 at 0x2579a1da910>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.create_validation_image(name='create_validation_image')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            }
          ],
          "unresolved_imports": [
            "json",
            "sys"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\pdf-anthropic\\scripts\\extract_form_field_info.py",
        "language": "python",
        "file_size": 6127,
        "line_count": 153,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "get_full_annotation_field_id",
            "line_number": 12,
            "parameters": [
              "annotation"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 3
          },
          {
            "name": "make_field_dict",
            "line_number": 22,
            "parameters": [
              "field",
              "field_id"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 6
          },
          {
            "name": "get_field_info",
            "line_number": 62,
            "parameters": [
              "reader"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 16
          },
          {
            "name": "write_field_info",
            "line_number": 140,
            "parameters": [
              "pdf_path",
              "json_output_path"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "sort_key",
            "line_number": 126,
            "parameters": [
              "f"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 4
          }
        ],
        "classes": [],
        "imports": [
          {
            "type": "import",
            "modules": [
              "json"
            ],
            "line_number": 1
          },
          {
            "type": "import",
            "modules": [
              "sys"
            ],
            "line_number": 2
          },
          {
            "type": "from_import",
            "module": "pypdf",
            "names": [
              "PdfReader"
            ],
            "level": 0,
            "line_number": 4
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 30,
          "function_count": 5,
          "class_count": 0,
          "import_count": 3,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.annotation l.15 at 0x2579a2db650>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.annotation l.18 at 0x2579a2dbb10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Const.str l.19 at 0x2579a2dbf50>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.reversed(name='reversed')",
              "type": "Instance of builtins.reversed"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.field l.24 at 0x2579a2dc890>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.field l.29 at 0x2579a2de050>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.field l.43 at 0x2579a2dce10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get_fields(attrname='get_fields',\n                     expr=<Name.reader l.63 at 0x2579a2dfad0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.set(name='set')",
              "type": "Set.set(elts=[])"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Name.fields l.68 at 0x2579a2e4fd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.field l.71 at 0x2579a2e50d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.field l.72 at 0x2579a2e4dd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.make_field_dict(name='make_field_dict')",
              "type": "Dict.dict(items=[ ( <Const.str l.23 at 0x2579a2dc710>,\n              <Name.field_id l.23 at 0x2579a2dc5d0>)])"
            },
            {
              "function": "Name.enumerate(name='enumerate')",
              "type": "Instance of builtins.enumerate"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.page l.85 at 0x2579a2e5310>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.get_full_annotation_field_id(name='get_full_annotation_field_id')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.ann l.90 at 0x2579a2e6190>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.ann l.99 at 0x2579a2e7150>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.append(attrname='append',\n                 expr=<Subscript l.111 at 0x2579a2e79d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.values(attrname='values',\n                 expr=<Name.field_info_by_id l.119 at 0x2579a2e8350>)",
              "type": "DictValues.list(ctx=None,\n                elts=[])"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.field_info l.123 at 0x2579a2e8f10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.f l.130 at 0x2579a39fe90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.f l.132 at 0x2579a3a8650>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.list(name='list')",
              "type": "List.list(ctx=None,\n          elts=[])"
            },
            {
              "function": "Attribute.values(attrname='values',\n                 expr=<Name.radio_fields_by_id l.134 at 0x2579a3a8950>)",
              "type": "DictValues.list(ctx=None,\n                elts=[])"
            },
            {
              "function": "Name.PdfReader(name='PdfReader')",
              "type": "Instance of pypdf._reader.PdfReader"
            },
            {
              "function": "Name.get_field_info(name='get_field_info')",
              "type": "List.list(ctx=None,\n          elts=[])"
            },
            {
              "function": "Attribute.dump(attrname='dump',\n               expr=<Name.json l.144 at 0x2579a3a9bd0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Name.write_field_info(name='write_field_info')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            }
          ],
          "unresolved_imports": [
            "json",
            "sys"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\pdf-anthropic\\scripts\\fill_fillable_fields.py",
        "language": "python",
        "file_size": 4863,
        "line_count": 115,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "fill_pdf_fields",
            "line_number": 12,
            "parameters": [
              "input_pdf_path",
              "fields_json_path",
              "output_pdf_path"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 11
          },
          {
            "name": "validation_error_for_field_value",
            "line_number": 59,
            "parameters": [
              "field_info",
              "field_value"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 8
          },
          {
            "name": "monkeypatch_pydpf_method",
            "line_number": 90,
            "parameters": [],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 5
          },
          {
            "name": "patched_get_inherited",
            "line_number": 96,
            "parameters": [
              "self",
              "key",
              "default"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 5
          }
        ],
        "classes": [],
        "imports": [
          {
            "type": "import",
            "modules": [
              "json"
            ],
            "line_number": 1
          },
          {
            "type": "import",
            "modules": [
              "sys"
            ],
            "line_number": 2
          },
          {
            "type": "from_import",
            "module": "pypdf",
            "names": [
              "PdfReader",
              "PdfWriter"
            ],
            "level": 0,
            "line_number": 4
          },
          {
            "type": "from_import",
            "module": "extract_form_field_info",
            "names": [
              "get_field_info"
            ],
            "level": 0,
            "line_number": 6
          },
          {
            "type": "from_import",
            "module": "pypdf.generic",
            "names": [
              "DictionaryObject"
            ],
            "level": 0,
            "line_number": 91
          },
          {
            "type": "from_import",
            "module": "pypdf.constants",
            "names": [
              "FieldDictionaryAttributes"
            ],
            "level": 0,
            "line_number": 92
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 29,
          "function_count": 4,
          "class_count": 0,
          "import_count": 6,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.load(attrname='load',\n               expr=<Name.json l.14 at 0x2579a3b8650>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.PdfReader(name='PdfReader')",
              "type": "Instance of pypdf._reader.PdfReader"
            },
            {
              "function": "Name.get_field_info(name='get_field_info')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.fields_by_ids l.31 at 0x2579a3ba450>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.validation_error_for_field_value(name='validation_error_for_field_value')",
              "type": "Uninferable"
            },
            {
              "function": "Name.PdfWriter(name='PdfWriter')",
              "type": "Instance of pypdf._writer.PdfWriter"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Name.fields_by_page l.48 at 0x2579a3bc750>)",
              "type": "DictItems.list(ctx=None,\n               elts=[])"
            },
            {
              "function": "Attribute.update_page_form_field_values(attrname='update_page_form_field_values',\n                                        expr=<Name.writer l.49 at 0x2579a3bc890>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.set_need_appearances_writer(attrname='set_need_appearances_writer',\n                                      expr=<Name.writer l.53 at 0x2579a3bccd0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.write(attrname='write',\n                expr=<Name.writer l.56 at 0x2579a3bd190>)",
              "type": "Tuple.tuple(ctx=<Context.Load: 1>,\n            elts=[ <Name.my_file l.1408 at 0x2579a6cd490>,\n              <Name.stream l.1408 at 0x2579a6cd550>])"
            },
            {
              "function": "Name.original_get_inherited(name='original_get_inherited')",
              "type": "Uninferable"
            },
            {
              "function": "Name.monkeypatch_pydpf_method(name='monkeypatch_pydpf_method')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.fill_pdf_fields(name='fill_pdf_fields')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            }
          ],
          "unresolved_imports": [
            "json",
            "sys"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\pdf-anthropic\\scripts\\fill_pdf_form_with_annotations.py",
        "language": "python",
        "file_size": 3596,
        "line_count": 108,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "transform_coordinates",
            "line_number": 11,
            "parameters": [
              "bbox",
              "image_width",
              "image_height",
              "pdf_width",
              "pdf_height"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Transform bounding box from image coordinates to PDF coordinates",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "fill_pdf_form",
            "line_number": 28,
            "parameters": [
              "input_pdf_path",
              "fields_json_path",
              "output_pdf_path"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Fill the PDF form with data from fields.json",
            "is_async": false,
            "complexity": 6
          }
        ],
        "classes": [],
        "imports": [
          {
            "type": "import",
            "modules": [
              "json"
            ],
            "line_number": 1
          },
          {
            "type": "import",
            "modules": [
              "sys"
            ],
            "line_number": 2
          },
          {
            "type": "from_import",
            "module": "pypdf",
            "names": [
              "PdfReader",
              "PdfWriter"
            ],
            "level": 0,
            "line_number": 4
          },
          {
            "type": "from_import",
            "module": "pypdf.annotations",
            "names": [
              "FreeText"
            ],
            "level": 0,
            "line_number": 5
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 7,
          "function_count": 2,
          "class_count": 0,
          "import_count": 4,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.load(attrname='load',\n               expr=<Name.json l.33 at 0x2579a8ece90>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.PdfReader(name='PdfReader')",
              "type": "Instance of pypdf._reader.PdfReader"
            },
            {
              "function": "Name.PdfWriter(name='PdfWriter')",
              "type": "Instance of pypdf._writer.PdfWriter"
            },
            {
              "function": "Attribute.append(attrname='append',\n                 expr=<Name.writer l.40 at 0x2579a8ed490>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.enumerate(name='enumerate')",
              "type": "Instance of builtins.enumerate"
            },
            {
              "function": "Name.transform_coordinates(name='transform_coordinates')",
              "type": "Tuple.tuple(ctx=<Context.Load: 1>,\n            elts=[ <Name.left l.25 at 0x2579a8ec1d0>,\n              <Name.bottom l.25 at 0x2579a8ec290>,\n              <Name.right l.25 at 0x2579a8ec310>,\n              <Name.top l.25 at 0x2579a8ec350>])"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.entry_text l.73 at 0x2579a8f4290>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.entry_text l.74 at 0x2579a8f4650>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.entry_text l.75 at 0x2579a8f4990>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.FreeText(name='FreeText')",
              "type": "Instance of pypdf.annotations._markup_annotations.FreeText"
            },
            {
              "function": "Attribute.add_annotation(attrname='add_annotation',\n                         expr=<Name.writer l.90 at 0x2579a8f5350>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.write(attrname='write',\n                expr=<Name.writer l.94 at 0x2579a8f59d0>)",
              "type": "Tuple.tuple(ctx=<Context.Load: 1>,\n            elts=[ <Name.my_file l.1408 at 0x2579a6cd490>,\n              <Name.stream l.1408 at 0x2579a6cd550>])"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Name.fill_pdf_form(name='fill_pdf_form')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            }
          ],
          "unresolved_imports": [
            "json",
            "sys"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\skill-creator\\scripts\\init_skill.py",
        "language": "python",
        "file_size": 10796,
        "line_count": 304,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "title_case_skill_name",
            "line_number": 189,
            "parameters": [
              "skill_name"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Convert hyphenated skill name to Title Case for display.",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "init_skill",
            "line_number": 194,
            "parameters": [
              "skill_name",
              "path"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Initialize a new skill directory with template SKILL.md.\n\nArgs:\n    skill_name: Name of the skill\n    path: Path where the skill directory should be created\n\nReturns:\n    Path to created skill directory, or None if error",
            "is_async": false,
            "complexity": 5
          },
          {
            "name": "main",
            "line_number": 273,
            "parameters": [],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 4
          }
        ],
        "classes": [],
        "imports": [
          {
            "type": "import",
            "modules": [
              "sys"
            ],
            "line_number": 14
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 15
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 10,
          "function_count": 3,
          "class_count": 0,
          "import_count": 2,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Const.str l.191 at 0x2579a94bf90>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.capitalize(attrname='capitalize',\n                     expr=<Name.word l.191 at 0x2579a954190>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Name.skill_name l.191 at 0x2579a954450>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.resolve(attrname='resolve',\n                  expr=<Call l.206 at 0x2579a954cd0>)",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Name.skill_dir l.209 at 0x2579a954fd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.mkdir(attrname='mkdir',\n                expr=<Name.skill_dir l.215 at 0x2579a955790>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.title_case_skill_name(name='title_case_skill_name')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.format(attrname='format',\n                 expr=<Name.SKILL_TEMPLATE l.223 at 0x2579a956410>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.write_text(attrname='write_text',\n                     expr=<Name.skill_md_path l.230 at 0x2579a956a10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.mkdir(attrname='mkdir',\n                expr=<Name.scripts_dir l.240 at 0x2579a957450>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.write_text(attrname='write_text',\n                     expr=<Name.example_script l.242 at 0x2579a957810>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.format(attrname='format',\n                 expr=<Name.EXAMPLE_SCRIPT l.242 at 0x2579a957910>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.chmod(attrname='chmod',\n                expr=<Name.example_script l.243 at 0x2579a957b50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.mkdir(attrname='mkdir',\n                expr=<Name.references_dir l.248 at 0x2579a95c0d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.write_text(attrname='write_text',\n                     expr=<Name.example_reference l.250 at 0x2579a95c450>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.format(attrname='format',\n                 expr=<Name.EXAMPLE_REFERENCE l.250 at 0x2579a95c550>)",
              "type": "Const.str(value=('# Reference Documentation for \\n'\n           '\\n'\n           'This is a placeholder for detailed reference documentation.\\n'\n           'Replace with actual reference content or delete if not '\n           'needed.\\n'\n           '\\n'\n           'Example real reference docs from other skills:\\n'\n           '- product-management/references/communication.md - '\n           'Comprehensive guide for status updates\\n'\n           '- product-management/references/context_building.md - '\n           'Deep-dive on gathering context\\n'\n           '- bigquery/references/ - API references and query examples\\n'\n           '\\n'\n           '## When Reference Docs Are Useful\\n'\n           '\\n'\n           'Reference docs are ideal for:\\n'\n           '- Comprehensive API documentation\\n'\n           '- Detailed workflow guides\\n'\n           '- Complex multi-step processes\\n'\n           '- Information too lengthy for main SKILL.md\\n'\n           \"- Content that's only needed for specific use cases\\n\"\n           '\\n'\n           '## Structure Suggestions\\n'\n           '\\n'\n           '### API Reference Example\\n'\n           '- Overview\\n'\n           '- Authentication\\n'\n           '- Endpoints with examples\\n'\n           '- Error codes\\n'\n           '- Rate limits\\n'\n           '\\n'\n           '### Workflow Guide Example\\n'\n           '- Prerequisites\\n'\n           '- Step-by-step instructions\\n'\n           '- Common patterns\\n'\n           '- Troubleshooting\\n'\n           '- Best practices\\n'),\n          kind=None)"
            },
            {
              "function": "Attribute.mkdir(attrname='mkdir',\n                expr=<Name.assets_dir l.255 at 0x2579a95cad0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.write_text(attrname='write_text',\n                     expr=<Name.example_asset l.257 at 0x2579a95ce90>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.init_skill(name='init_skill')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.main(name='main')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            }
          ],
          "unresolved_imports": [
            "sys"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\skill-creator\\scripts\\package_skill.py",
        "language": "python",
        "file_size": 3227,
        "line_count": 111,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "package_skill",
            "line_number": 19,
            "parameters": [
              "skill_path",
              "output_dir"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": "Package a skill folder into a zip file.\n\nArgs:\n    skill_path: Path to the skill folder\n    output_dir: Optional output directory for the zip file (defaults to current directory)\n\nReturns:\n    Path to the created zip file, or None if error",
            "is_async": false,
            "complexity": 9
          },
          {
            "name": "main",
            "line_number": 85,
            "parameters": [],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 4
          }
        ],
        "classes": [],
        "imports": [
          {
            "type": "import",
            "modules": [
              "sys"
            ],
            "line_number": 13
          },
          {
            "type": "import",
            "modules": [
              "zipfile"
            ],
            "line_number": 14
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 15
          },
          {
            "type": "from_import",
            "module": "quick_validate",
            "names": [
              "validate_skill"
            ],
            "level": 0,
            "line_number": 16
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 13,
          "function_count": 2,
          "class_count": 0,
          "import_count": 4,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.resolve(attrname='resolve',\n                  expr=<Call l.30 at 0x2579a964e90>)",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Name.skill_path l.33 at 0x2579a965150>)",
              "type": "Const.bool(value=False,\n           kind=None)"
            },
            {
              "function": "Attribute.is_dir(attrname='is_dir',\n                 expr=<Name.skill_path l.37 at 0x2579a965850>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Name.skill_md l.43 at 0x2579a965f90>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.validate_skill(name='validate_skill')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.resolve(attrname='resolve',\n                  expr=<Call l.59 at 0x2579a967550>)",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.mkdir(attrname='mkdir',\n                expr=<Name.output_path l.60 at 0x2579a9677d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.cwd(attrname='cwd',\n              expr=<Name.Path l.62 at 0x2579a967b50>)",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.ZipFile(attrname='ZipFile',\n                  expr=<Name.zipfile l.68 at 0x2579a970290>)",
              "type": "Instance of zipfile.ZipFile"
            },
            {
              "function": "Attribute.rglob(attrname='rglob',\n                expr=<Name.skill_path l.70 at 0x2579a9706d0>)",
              "type": "Generator(generator)"
            },
            {
              "function": "Attribute.is_file(attrname='is_file',\n                  expr=<Name.file_path l.71 at 0x2579a9708d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.relative_to(attrname='relative_to',\n                      expr=<Name.file_path l.73 at 0x2579a970b50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.write(attrname='write',\n                expr=<Name.zipf l.74 at 0x2579a970d50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.package_skill(name='package_skill')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.main(name='main')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            }
          ],
          "unresolved_imports": [
            "sys",
            "zipfile"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\skill-creator\\scripts\\quick_validate.py",
        "language": "python",
        "file_size": 2165,
        "line_count": 65,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "validate_skill",
            "line_number": 11,
            "parameters": [
              "skill_path"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Basic validation of a skill",
            "is_async": false,
            "complexity": 14
          }
        ],
        "classes": [],
        "imports": [
          {
            "type": "import",
            "modules": [
              "sys"
            ],
            "line_number": 6
          },
          {
            "type": "import",
            "modules": [
              "os"
            ],
            "line_number": 7
          },
          {
            "type": "import",
            "modules": [
              "re"
            ],
            "line_number": 8
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 9
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 14,
          "function_count": 1,
          "class_count": 0,
          "import_count": 4,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Name.skill_md l.17 at 0x2579a975a50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.read_text(attrname='read_text',\n                    expr=<Name.skill_md l.21 at 0x2579a975ed0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.startswith(attrname='startswith',\n                     expr=<Name.content l.22 at 0x2579a976050>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.match(attrname='match',\n                expr=<Name.re l.26 at 0x2579a976510>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.match l.30 at 0x2579a976ad0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.search(attrname='search',\n                 expr=<Name.re l.39 at 0x2579a977350>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Call l.41 at 0x2579a9776d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.name_match l.41 at 0x2579a977710>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.match(attrname='match',\n                expr=<Name.re l.43 at 0x2579a977990>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.startswith(attrname='startswith',\n                     expr=<Name.name l.45 at 0x2579a988090>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.endswith(attrname='endswith',\n                   expr=<Name.name l.45 at 0x2579a988210>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.search(attrname='search',\n                 expr=<Name.re l.49 at 0x2579a988890>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Call l.51 at 0x2579a988c10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.desc_match l.51 at 0x2579a988c50>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.validate_skill(name='validate_skill')",
              "type": "Tuple.tuple(ctx=<Context.Load: 1>,\n            elts=[ <Const.bool l.18 at 0x2579a975c90>,\n              <Const.str l.18 at 0x2579a975d50>])"
            }
          ],
          "unresolved_imports": [
            "sys",
            "os",
            "re"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\slack-gif-creator\\core\\color_palettes.py",
        "language": "python",
        "file_size": 8724,
        "line_count": 302,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "get_palette",
            "line_number": 108,
            "parameters": [
              "name"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": "Get a color palette by name.\n\nArgs:\n    name: Palette name (vibrant, pastel, dark, neon, professional, warm, cool, monochrome)\n\nReturns:\n    Dictionary of color roles to RGB tuples",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "get_text_color_for_background",
            "line_number": 121,
            "parameters": [
              "bg_color"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Get the best text color (black or white) for a given background.\n\nUses luminance calculation to ensure readability.\n\nArgs:\n    bg_color: Background RGB color\n\nReturns:\n    Text color (black or white) that contrasts well",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "get_complementary_color",
            "line_number": 141,
            "parameters": [
              "color"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Get the complementary (opposite) color on the color wheel.\n\nArgs:\n    color: RGB color tuple\n\nReturns:\n    Complementary RGB color",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "lighten_color",
            "line_number": 163,
            "parameters": [
              "color",
              "amount"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": "Lighten a color by a given amount.\n\nArgs:\n    color: RGB color tuple\n    amount: Amount to lighten (0.0-1.0)\n\nReturns:\n    Lightened RGB color",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "darken_color",
            "line_number": 181,
            "parameters": [
              "color",
              "amount"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": "Darken a color by a given amount.\n\nArgs:\n    color: RGB color tuple\n    amount: Amount to darken (0.0-1.0)\n\nReturns:\n    Darkened RGB color",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "blend_colors",
            "line_number": 199,
            "parameters": [
              "color1",
              "color2",
              "ratio"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": "Blend two colors together.\n\nArgs:\n    color1: First RGB color\n    color2: Second RGB color\n    ratio: Blend ratio (0.0 = all color1, 1.0 = all color2)\n\nReturns:\n    Blended RGB color",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "create_gradient_colors",
            "line_number": 222,
            "parameters": [
              "start_color",
              "end_color",
              "steps"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Create a gradient of colors between two colors.\n\nArgs:\n    start_color: Starting RGB color\n    end_color: Ending RGB color\n    steps: Number of gradient steps\n\nReturns:\n    List of RGB colors forming gradient",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "get_impact_color",
            "line_number": 256,
            "parameters": [
              "effect_type"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": "Get a color for impact/emphasis effects.\n\nArgs:\n    effect_type: Type of effect (flash, explosion, electricity, etc.)\n\nReturns:\n    RGB color for effect",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "get_emoji_palette",
            "line_number": 292,
            "parameters": [
              "name"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": "Get a limited color palette optimized for emoji GIFs (<64KB).\n\nArgs:\n    name: Palette name (simple, vibrant_emoji)\n\nReturns:\n    List of RGB colors (6-8 colors)",
            "is_async": false,
            "complexity": 1
          }
        ],
        "classes": [],
        "imports": [
          {
            "type": "from_import",
            "module": "typing",
            "names": [
              "Optional"
            ],
            "level": 0,
            "line_number": 9
          },
          {
            "type": "import",
            "modules": [
              "colorsys"
            ],
            "line_number": 10
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 10,
          "function_count": 9,
          "class_count": 0,
          "import_count": 2,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.name l.118 at 0x2579a9ba950>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.rgb_to_hsv(attrname='rgb_to_hsv',\n                     expr=<Name.colorsys l.153 at 0x2579a9c10d0>)",
              "type": "Tuple.tuple(ctx=<Context.Load: 1>,\n            elts=[ <Const.float l.131 at 0x2579a9ebe90>,\n              <Const.float l.131 at 0x2579a9ebf50>,\n              <Name.v l.131 at 0x2579a9ebf90>])"
            },
            {
              "function": "Attribute.hsv_to_rgb(attrname='hsv_to_rgb',\n                     expr=<Name.colorsys l.159 at 0x2579a9c1790>)",
              "type": "Tuple.tuple(ctx=<Context.Load: 1>,\n            elts=[ <Name.v l.147 at 0x2579a9edd10>,\n              <Name.v l.147 at 0x2579a9eddd0>,\n              <Name.v l.147 at 0x2579a9ede50>])"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Name.blend_colors(name='blend_colors')",
              "type": "Tuple.tuple(ctx=<Context.Load: 1>,\n            elts=[ <Name.r l.219 at 0x2579a9c7490>,\n              <Name.g l.219 at 0x2579a9c7550>,\n              <Name.b l.219 at 0x2579a9c75d0>])"
            }
          ],
          "unresolved_imports": [
            "colorsys"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\slack-gif-creator\\core\\easing.py",
        "language": "python",
        "file_size": 6289,
        "line_count": 230,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "linear",
            "line_number": 12,
            "parameters": [
              "t"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Linear interpolation (no easing).",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "ease_in_quad",
            "line_number": 17,
            "parameters": [
              "t"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Quadratic ease-in (slow start, accelerating).",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "ease_out_quad",
            "line_number": 22,
            "parameters": [
              "t"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Quadratic ease-out (fast start, decelerating).",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "ease_in_out_quad",
            "line_number": 27,
            "parameters": [
              "t"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Quadratic ease-in-out (slow start and end).",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "ease_in_cubic",
            "line_number": 34,
            "parameters": [
              "t"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Cubic ease-in (slow start).",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "ease_out_cubic",
            "line_number": 39,
            "parameters": [
              "t"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Cubic ease-out (fast start).",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "ease_in_out_cubic",
            "line_number": 44,
            "parameters": [
              "t"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Cubic ease-in-out.",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "ease_in_bounce",
            "line_number": 51,
            "parameters": [
              "t"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Bounce ease-in (bouncy start).",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "ease_out_bounce",
            "line_number": 56,
            "parameters": [
              "t"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Bounce ease-out (bouncy end).",
            "is_async": false,
            "complexity": 4
          },
          {
            "name": "ease_in_out_bounce",
            "line_number": 71,
            "parameters": [
              "t"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Bounce ease-in-out.",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "ease_in_elastic",
            "line_number": 78,
            "parameters": [
              "t"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Elastic ease-in (spring effect).",
            "is_async": false,
            "complexity": 3
          },
          {
            "name": "ease_out_elastic",
            "line_number": 85,
            "parameters": [
              "t"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Elastic ease-out (spring effect).",
            "is_async": false,
            "complexity": 3
          },
          {
            "name": "ease_in_out_elastic",
            "line_number": 92,
            "parameters": [
              "t"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Elastic ease-in-out.",
            "is_async": false,
            "complexity": 4
          },
          {
            "name": "get_easing",
            "line_number": 117,
            "parameters": [
              "name"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": "Get easing function by name.",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "interpolate",
            "line_number": 122,
            "parameters": [
              "start",
              "end",
              "t",
              "easing"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": "Interpolate between two values with easing.\n\nArgs:\n    start: Start value\n    end: End value\n    t: Progress from 0.0 to 1.0\n    easing: Name of easing function\n\nReturns:\n    Interpolated value",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "ease_back_in",
            "line_number": 140,
            "parameters": [
              "t"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Back ease-in (slight overshoot backward before forward motion).",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "ease_back_out",
            "line_number": 147,
            "parameters": [
              "t"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Back ease-out (overshoot forward then settle back).",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "ease_back_in_out",
            "line_number": 154,
            "parameters": [
              "t"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Back ease-in-out (overshoot at both ends).",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "apply_squash_stretch",
            "line_number": 163,
            "parameters": [
              "base_scale",
              "intensity",
              "direction"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": "Calculate squash and stretch scales for more dynamic animation.\n\nArgs:\n    base_scale: (width_scale, height_scale) base scales\n    intensity: Squash/stretch intensity (0.0-1.0)\n    direction: 'vertical', 'horizontal', or 'both'\n\nReturns:\n    (width_scale, height_scale) with squash/stretch applied",
            "is_async": false,
            "complexity": 4
          },
          {
            "name": "calculate_arc_motion",
            "line_number": 194,
            "parameters": [
              "start",
              "end",
              "height",
              "t"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Calculate position along a parabolic arc (natural motion path).\n\nArgs:\n    start: (x, y) starting position\n    end: (x, y) ending position\n    height: Arc height at midpoint (positive = upward)\n    t: Progress (0.0-1.0)\n\nReturns:\n    (x, y) position along arc",
            "is_async": false,
            "complexity": 1
          }
        ],
        "classes": [],
        "imports": [
          {
            "type": "import",
            "modules": [
              "math"
            ],
            "line_number": 9
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 37,
          "function_count": 20,
          "class_count": 0,
          "import_count": 1,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Name.ease_out_bounce(name='ease_out_bounce')",
              "type": "Uninferable"
            },
            {
              "function": "Name.ease_in_bounce(name='ease_in_bounce')",
              "type": "Uninferable"
            },
            {
              "function": "Name.ease_out_bounce(name='ease_out_bounce')",
              "type": "Uninferable"
            },
            {
              "function": "Name.get_easing(name='get_easing')",
              "type": "Uninferable"
            },
            {
              "function": "Name.ease_func(name='ease_func')",
              "type": "Uninferable"
            }
          ],
          "unresolved_imports": [
            "math"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\slack-gif-creator\\core\\frame_composer.py",
        "language": "python",
        "file_size": 14468,
        "line_count": 469,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "create_blank_frame",
            "line_number": 14,
            "parameters": [
              "width",
              "height",
              "color"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": "Create a blank frame with solid color background.\n\nArgs:\n    width: Frame width\n    height: Frame height\n    color: RGB color tuple (default: white)\n\nReturns:\n    PIL Image",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "draw_circle",
            "line_number": 29,
            "parameters": [
              "frame",
              "center",
              "radius",
              "fill_color",
              "outline_color",
              "outline_width"
            ],
            "defaults": 3,
            "decorators": [],
            "docstring": "Draw a circle on a frame.\n\nArgs:\n    frame: PIL Image to draw on\n    center: (x, y) center position\n    radius: Circle radius\n    fill_color: RGB fill color (None for no fill)\n    outline_color: RGB outline color (None for no outline)\n    outline_width: Outline width in pixels\n\nReturns:\n    Modified frame",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "draw_rectangle",
            "line_number": 54,
            "parameters": [
              "frame",
              "top_left",
              "bottom_right",
              "fill_color",
              "outline_color",
              "outline_width"
            ],
            "defaults": 3,
            "decorators": [],
            "docstring": "Draw a rectangle on a frame.\n\nArgs:\n    frame: PIL Image to draw on\n    top_left: (x, y) top-left corner\n    bottom_right: (x, y) bottom-right corner\n    fill_color: RGB fill color (None for no fill)\n    outline_color: RGB outline color (None for no outline)\n    outline_width: Outline width in pixels\n\nReturns:\n    Modified frame",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "draw_line",
            "line_number": 77,
            "parameters": [
              "frame",
              "start",
              "end",
              "color",
              "width"
            ],
            "defaults": 2,
            "decorators": [],
            "docstring": "Draw a line on a frame.\n\nArgs:\n    frame: PIL Image to draw on\n    start: (x, y) start position\n    end: (x, y) end position\n    color: RGB line color\n    width: Line width in pixels\n\nReturns:\n    Modified frame",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "draw_text",
            "line_number": 97,
            "parameters": [
              "frame",
              "text",
              "position",
              "font_size",
              "color",
              "centered"
            ],
            "defaults": 3,
            "decorators": [],
            "docstring": "Draw text on a frame.\n\nArgs:\n    frame: PIL Image to draw on\n    text: Text to draw\n    position: (x, y) position (top-left unless centered=True)\n    font_size: Font size in pixels\n    color: RGB text color\n    centered: If True, center text at position\n\nReturns:\n    Modified frame",
            "is_async": false,
            "complexity": 3
          },
          {
            "name": "draw_emoji",
            "line_number": 134,
            "parameters": [
              "frame",
              "emoji",
              "position",
              "size"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": "Draw emoji text on a frame (requires system emoji support).\n\nArgs:\n    frame: PIL Image to draw on\n    emoji: Emoji character(s)\n    position: (x, y) position\n    size: Emoji size in pixels\n\nReturns:\n    Modified frame",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "composite_layers",
            "line_number": 160,
            "parameters": [
              "base",
              "overlay",
              "position",
              "alpha"
            ],
            "defaults": 2,
            "decorators": [],
            "docstring": "Composite one image on top of another.\n\nArgs:\n    base: Base image\n    overlay: Image to overlay on top\n    position: (x, y) position to place overlay\n    alpha: Opacity of overlay (0.0 = transparent, 1.0 = opaque)\n\nReturns:\n    Composite image",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "draw_stick_figure",
            "line_number": 190,
            "parameters": [
              "frame",
              "position",
              "scale",
              "color",
              "line_width"
            ],
            "defaults": 3,
            "decorators": [],
            "docstring": "Draw a simple stick figure.\n\nArgs:\n    frame: PIL Image to draw on\n    position: (x, y) center position of head\n    scale: Size multiplier\n    color: RGB line color\n    line_width: Line width in pixels\n\nReturns:\n    Modified frame",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "create_gradient_background",
            "line_number": 235,
            "parameters": [
              "width",
              "height",
              "top_color",
              "bottom_color"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Create a vertical gradient background.\n\nArgs:\n    width: Frame width\n    height: Frame height\n    top_color: RGB color at top\n    bottom_color: RGB color at bottom\n\nReturns:\n    PIL Image with gradient",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "draw_emoji_enhanced",
            "line_number": 270,
            "parameters": [
              "frame",
              "emoji",
              "position",
              "size",
              "shadow",
              "shadow_offset"
            ],
            "defaults": 3,
            "decorators": [],
            "docstring": "Draw emoji with optional shadow for better visual quality.\n\nArgs:\n    frame: PIL Image to draw on\n    emoji: Emoji character(s)\n    position: (x, y) position\n    size: Emoji size in pixels (minimum 12)\n    shadow: Whether to add drop shadow\n    shadow_offset: Shadow offset\n\nReturns:\n    Modified frame",
            "is_async": false,
            "complexity": 8
          },
          {
            "name": "draw_circle_with_shadow",
            "line_number": 323,
            "parameters": [
              "frame",
              "center",
              "radius",
              "fill_color",
              "shadow_offset",
              "shadow_color"
            ],
            "defaults": 2,
            "decorators": [],
            "docstring": "Draw a circle with drop shadow.\n\nArgs:\n    frame: PIL Image to draw on\n    center: (x, y) center position\n    radius: Circle radius\n    fill_color: RGB fill color\n    shadow_offset: (x, y) shadow offset\n    shadow_color: RGB shadow color\n\nReturns:\n    Modified frame",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "draw_rounded_rectangle",
            "line_number": 361,
            "parameters": [
              "frame",
              "top_left",
              "bottom_right",
              "radius",
              "fill_color",
              "outline_color",
              "outline_width"
            ],
            "defaults": 3,
            "decorators": [],
            "docstring": "Draw a rectangle with rounded corners.\n\nArgs:\n    frame: PIL Image to draw on\n    top_left: (x, y) top-left corner\n    bottom_right: (x, y) bottom-right corner\n    radius: Corner radius\n    fill_color: RGB fill color (None for no fill)\n    outline_color: RGB outline color (None for no outline)\n    outline_width: Outline width\n\nReturns:\n    Modified frame",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "add_vignette",
            "line_number": 392,
            "parameters": [
              "frame",
              "strength"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": "Add a vignette effect (darkened edges) to frame.\n\nArgs:\n    frame: PIL Image\n    strength: Vignette strength (0.0-1.0)\n\nReturns:\n    Frame with vignette",
            "is_async": false,
            "complexity": 3
          },
          {
            "name": "draw_star",
            "line_number": 435,
            "parameters": [
              "frame",
              "center",
              "size",
              "fill_color",
              "outline_color",
              "outline_width"
            ],
            "defaults": 2,
            "decorators": [],
            "docstring": "Draw a 5-pointed star.\n\nArgs:\n    frame: PIL Image to draw on\n    center: (x, y) center position\n    size: Star size (outer radius)\n    fill_color: RGB fill color\n    outline_color: RGB outline color (None for no outline)\n    outline_width: Outline width\n\nReturns:\n    Modified frame",
            "is_async": false,
            "complexity": 2
          }
        ],
        "classes": [],
        "imports": [
          {
            "type": "from_import",
            "module": "PIL",
            "names": [
              "Image",
              "ImageDraw",
              "ImageFont"
            ],
            "level": 0,
            "line_number": 9
          },
          {
            "type": "import",
            "modules": [
              "numpy"
            ],
            "line_number": 10
          },
          {
            "type": "from_import",
            "module": "typing",
            "names": [
              "Optional"
            ],
            "level": 0,
            "line_number": 11
          },
          {
            "type": "import",
            "modules": [
              "math"
            ],
            "line_number": 453
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 29,
          "function_count": 14,
          "class_count": 0,
          "import_count": 4,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.new(attrname='new',\n              expr=<Name.Image l.26 at 0x2579aa35f10>)",
              "type": "Instance of PIL.Image.Image"
            },
            {
              "function": "Attribute.Draw(attrname='Draw',\n               expr=<Name.ImageDraw l.47 at 0x2579aa37390>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.ellipse(attrname='ellipse',\n                  expr=<Name.draw l.50 at 0x2579aa37d50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.Draw(attrname='Draw',\n               expr=<Name.ImageDraw l.72 at 0x2579aa61450>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.rectangle(attrname='rectangle',\n                    expr=<Name.draw l.73 at 0x2579aa61610>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.Draw(attrname='Draw',\n               expr=<Name.ImageDraw l.92 at 0x2579aa62a50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.line(attrname='line',\n               expr=<Name.draw l.93 at 0x2579aa62c10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.Draw(attrname='Draw',\n               expr=<Name.ImageDraw l.114 at 0x2579aa63f90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.truetype(attrname='truetype',\n                   expr=<Name.ImageFont l.118 at 0x257e42db8d0>)",
              "type": "Instance of PIL.ImageFont.FreeTypeFont"
            },
            {
              "function": "Attribute.load_default(attrname='load_default',\n                       expr=<Name.ImageFont l.120 at 0x257e3fca710>)",
              "type": "Instance of PIL.ImageFont.ImageFont"
            },
            {
              "function": "Attribute.textbbox(attrname='textbbox',\n                   expr=<Name.draw l.123 at 0x257d8b5e290>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.text(attrname='text',\n               expr=<Name.draw l.130 at 0x2579a8bc710>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.Draw(attrname='Draw',\n               expr=<Name.ImageDraw l.147 at 0x25799f6b250>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.truetype(attrname='truetype',\n                   expr=<Name.ImageFont l.151 at 0x2579a99b910>)",
              "type": "Instance of PIL.ImageFont.FreeTypeFont"
            },
            {
              "function": "Attribute.truetype(attrname='truetype',\n                   expr=<Name.ImageFont l.154 at 0x2579a13e4d0>)",
              "type": "Instance of PIL.ImageFont.FreeTypeFont"
            },
            {
              "function": "Attribute.text(attrname='text',\n               expr=<Name.draw l.156 at 0x2579a00de50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.base l.175 at 0x257983aa510>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.overlay l.176 at 0x257e57a0090>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.copy(attrname='copy',\n               expr=<Name.overlay_rgba l.180 at 0x2579a51d450>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.putalpha(attrname='putalpha',\n                   expr=<Name.overlay_rgba l.181 at 0x2579a563c10>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Attribute.paste(attrname='paste',\n                expr=<Name.base_rgba l.184 at 0x2579a5956d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.base_rgba l.187 at 0x2579a4ead10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.Draw(attrname='Draw',\n               expr=<Name.ImageDraw l.205 at 0x2579a4941d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Attribute.ellipse(attrname='ellipse',\n                  expr=<Name.draw l.216 at 0x2579a2c0f90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.line(attrname='line',\n               expr=<Name.draw l.222 at 0x2579a2c2a90>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Attribute.line(attrname='line',\n               expr=<Name.draw l.226 at 0x2579a2c8f90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.line(attrname='line',\n               expr=<Name.draw l.229 at 0x2579a2c8290>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.line(attrname='line',\n               expr=<Name.draw l.230 at 0x2579a2c9850>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.new(attrname='new',\n              expr=<Name.Image l.250 at 0x2579a3cbc50>)",
              "type": "Instance of PIL.Image.Image"
            },
            {
              "function": "Attribute.Draw(attrname='Draw',\n               expr=<Name.ImageDraw l.251 at 0x2579a41c0d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Attribute.line(attrname='line',\n               expr=<Name.draw l.265 at 0x2579a41e850>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.Draw(attrname='Draw',\n               expr=<Name.ImageDraw l.287 at 0x2579a295ad0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.truetype(attrname='truetype',\n                   expr=<Name.ImageFont l.294 at 0x2579a250c90>)",
              "type": "Instance of PIL.ImageFont.FreeTypeFont"
            },
            {
              "function": "Attribute.truetype(attrname='truetype',\n                   expr=<Name.ImageFont l.298 at 0x2579a252410>)",
              "type": "Instance of PIL.ImageFont.FreeTypeFont"
            },
            {
              "function": "Attribute.load_default(attrname='load_default',\n                       expr=<Name.ImageFont l.300 at 0x2579a252bd0>)",
              "type": "Instance of PIL.ImageFont.ImageFont"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Attribute.text(attrname='text',\n               expr=<Name.draw l.308 at 0x257e463d550>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.text(attrname='text',\n               expr=<Name.draw l.315 at 0x25799f92590>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.text(attrname='text',\n               expr=<Name.draw l.318 at 0x25799e2ca10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.Draw(attrname='Draw',\n               expr=<Name.ImageDraw l.341 at 0x25799e24ed0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.ellipse(attrname='ellipse',\n                  expr=<Name.draw l.352 at 0x2579a055350>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.ellipse(attrname='ellipse',\n                  expr=<Name.draw l.356 at 0x25799cd9fd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.Draw(attrname='Draw',\n               expr=<Name.ImageDraw l.381 at 0x25799ce12d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.rounded_rectangle(attrname='rounded_rectangle',\n                            expr=<Name.draw l.386 at 0x25799cccd10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.new(attrname='new',\n              expr=<Name.Image l.410 at 0x25799918390>)",
              "type": "Instance of PIL.Image.Image"
            },
            {
              "function": "Attribute.load(attrname='load',\n               expr=<Name.overlay l.411 at 0x25799e04bd0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Attribute.array(attrname='array',\n                expr=<Name.np l.426 at 0x25799bbfa50>)",
              "type": "Instance of .ndarray"
            },
            {
              "function": "Attribute.array(attrname='array',\n                expr=<Name.np l.427 at 0x25799bbe9d0>)",
              "type": "Instance of .ndarray"
            },
            {
              "function": "Attribute.astype(attrname='astype',\n                 expr=<BinOp l.430 at 0x25799c33c90>)",
              "type": "Instance of .ndarray"
            },
            {
              "function": "Attribute.fromarray(attrname='fromarray',\n                    expr=<Name.Image l.432 at 0x25799bcb190>)",
              "type": "Instance of PIL.Image.Image"
            },
            {
              "function": "Attribute.Draw(attrname='Draw',\n               expr=<Name.ImageDraw l.454 at 0x257992f9150>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Attribute.polygon(attrname='polygon',\n                  expr=<Name.draw l.467 at 0x25799bd1690>)",
              "type": "Uninferable"
            }
          ],
          "unresolved_imports": [
            "numpy",
            "math"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\slack-gif-creator\\core\\typography.py",
        "language": "python",
        "file_size": 10761,
        "line_count": 357,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "get_font",
            "line_number": 25,
            "parameters": [
              "size",
              "bold"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": "Get a font with fallback support.\n\nArgs:\n    size: Font size in pixels\n    bold: Use bold variant if available\n\nReturns:\n    ImageFont object",
            "is_async": false,
            "complexity": 3
          },
          {
            "name": "draw_text_with_outline",
            "line_number": 58,
            "parameters": [
              "frame",
              "text",
              "position",
              "font_size",
              "text_color",
              "outline_color",
              "outline_width",
              "centered",
              "bold"
            ],
            "defaults": 6,
            "decorators": [],
            "docstring": "Draw text with outline for maximum readability.\n\nThis is THE most important function for professional-looking text in GIFs.\nThe outline ensures text is readable on any background.\n\nArgs:\n    frame: PIL Image to draw on\n    text: Text to draw\n    position: (x, y) position\n    font_size: Font size in pixels\n    text_color: RGB color for text fill\n    outline_color: RGB color for outline\n    outline_width: Width of outline in pixels (2-4 recommended)\n    centered: If True, center text at position\n    bold: Use bold font variant\n\nReturns:\n    Modified frame",
            "is_async": false,
            "complexity": 6
          },
          {
            "name": "draw_text_with_shadow",
            "line_number": 114,
            "parameters": [
              "frame",
              "text",
              "position",
              "font_size",
              "text_color",
              "shadow_color",
              "shadow_offset",
              "centered",
              "bold"
            ],
            "defaults": 6,
            "decorators": [],
            "docstring": "Draw text with drop shadow for depth.\n\nArgs:\n    frame: PIL Image to draw on\n    text: Text to draw\n    position: (x, y) position\n    font_size: Font size in pixels\n    text_color: RGB color for text\n    shadow_color: RGB color for shadow\n    shadow_offset: (x, y) offset for shadow\n    centered: If True, center text at position\n    bold: Use bold font variant\n\nReturns:\n    Modified frame",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "draw_text_with_glow",
            "line_number": 164,
            "parameters": [
              "frame",
              "text",
              "position",
              "font_size",
              "text_color",
              "glow_color",
              "glow_radius",
              "centered",
              "bold"
            ],
            "defaults": 6,
            "decorators": [],
            "docstring": "Draw text with glow effect for emphasis.\n\nArgs:\n    frame: PIL Image to draw on\n    text: Text to draw\n    position: (x, y) position\n    font_size: Font size in pixels\n    text_color: RGB color for text\n    glow_color: RGB color for glow\n    glow_radius: Radius of glow effect\n    centered: If True, center text at position\n    bold: Use bold font variant\n\nReturns:\n    Modified frame",
            "is_async": false,
            "complexity": 7
          },
          {
            "name": "draw_text_in_box",
            "line_number": 218,
            "parameters": [
              "frame",
              "text",
              "position",
              "font_size",
              "text_color",
              "box_color",
              "box_alpha",
              "padding",
              "centered",
              "bold"
            ],
            "defaults": 7,
            "decorators": [],
            "docstring": "Draw text in a semi-transparent box for guaranteed readability.\n\nArgs:\n    frame: PIL Image to draw on\n    text: Text to draw\n    position: (x, y) position\n    font_size: Font size in pixels\n    text_color: RGB color for text\n    box_color: RGB color for background box\n    box_alpha: Opacity of box (0.0-1.0)\n    padding: Padding around text in pixels\n    centered: If True, center at position\n    bold: Use bold font variant\n\nReturns:\n    Modified frame",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "get_text_size",
            "line_number": 294,
            "parameters": [
              "text",
              "font_size",
              "bold"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": "Get the dimensions of text without drawing it.\n\nArgs:\n    text: Text to measure\n    font_size: Font size in pixels\n    bold: Use bold font variant\n\nReturns:\n    (width, height) tuple",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "get_optimal_font_size",
            "line_number": 316,
            "parameters": [
              "text",
              "max_width",
              "max_height",
              "start_size"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": "Find the largest font size that fits within given dimensions.\n\nArgs:\n    text: Text to size\n    max_width: Maximum width in pixels\n    max_height: Maximum height in pixels\n    start_size: Starting font size to try\n\nReturns:\n    Optimal font size",
            "is_async": false,
            "complexity": 4
          },
          {
            "name": "scale_font_for_frame",
            "line_number": 339,
            "parameters": [
              "base_size",
              "frame_width",
              "frame_height"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Scale font size proportionally to frame dimensions.\n\nUseful for maintaining relative text size across different GIF dimensions.\n\nArgs:\n    base_size: Base font size for 480x480 frame\n    frame_width: Actual frame width\n    frame_height: Actual frame height\n\nReturns:\n    Scaled font size",
            "is_async": false,
            "complexity": 1
          }
        ],
        "classes": [],
        "imports": [
          {
            "type": "from_import",
            "module": "PIL",
            "names": [
              "Image",
              "ImageDraw",
              "ImageFont"
            ],
            "level": 0,
            "line_number": 9
          },
          {
            "type": "from_import",
            "module": "typing",
            "names": [
              "Optional"
            ],
            "level": 0,
            "line_number": 10
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 26,
          "function_count": 8,
          "class_count": 0,
          "import_count": 2,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.truetype(attrname='truetype',\n                   expr=<Name.ImageFont l.50 at 0x2579b0a2690>)",
              "type": "Instance of PIL.ImageFont.FreeTypeFont"
            },
            {
              "function": "Attribute.load_default(attrname='load_default',\n                       expr=<Name.ImageFont l.55 at 0x2579b0a2a50>)",
              "type": "Instance of PIL.ImageFont.ImageFont"
            },
            {
              "function": "Attribute.Draw(attrname='Draw',\n               expr=<Name.ImageDraw l.89 at 0x2579b0a8090>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.get_font(name='get_font')",
              "type": "Instance of PIL.ImageFont.FreeTypeFont"
            },
            {
              "function": "Attribute.textbbox(attrname='textbbox',\n                   expr=<Name.draw l.94 at 0x2579b0a86d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Attribute.text(attrname='text',\n               expr=<Name.draw l.106 at 0x2579b0aa510>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.text(attrname='text',\n               expr=<Name.draw l.109 at 0x2579b0aaad0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.Draw(attrname='Draw',\n               expr=<Name.ImageDraw l.142 at 0x2579b0b0550>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.get_font(name='get_font')",
              "type": "Instance of PIL.ImageFont.FreeTypeFont"
            },
            {
              "function": "Attribute.textbbox(attrname='textbbox',\n                   expr=<Name.draw l.147 at 0x2579b0b0b50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.text(attrname='text',\n               expr=<Name.draw l.156 at 0x2579b0b2110>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.text(attrname='text',\n               expr=<Name.draw l.159 at 0x2579b0b2410>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.Draw(attrname='Draw',\n               expr=<Name.ImageDraw l.192 at 0x2579b0b3c10>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.get_font(name='get_font')",
              "type": "Instance of PIL.ImageFont.FreeTypeFont"
            },
            {
              "function": "Attribute.textbbox(attrname='textbbox',\n                   expr=<Name.draw l.197 at 0x2579b0bc250>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Attribute.text(attrname='text',\n               expr=<Name.draw l.210 at 0x2579b0be110>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.text(attrname='text',\n               expr=<Name.draw l.213 at 0x2579b0be710>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.new(attrname='new',\n              expr=<Name.Image l.249 at 0x2579b0c0050>)",
              "type": "Instance of PIL.Image.Image"
            },
            {
              "function": "Attribute.Draw(attrname='Draw',\n               expr=<Name.ImageDraw l.250 at 0x2579b0c04d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.Draw(attrname='Draw',\n               expr=<Name.ImageDraw l.251 at 0x2579b0c0750>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.get_font(name='get_font')",
              "type": "Instance of PIL.ImageFont.FreeTypeFont"
            },
            {
              "function": "Attribute.textbbox(attrname='textbbox',\n                   expr=<Name.draw l.256 at 0x2579b0c0c90>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Attribute.rectangle(attrname='rectangle',\n                    expr=<Name.draw_overlay l.280 at 0x2579b0c3250>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.frame l.283 at 0x2579b0c36d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.alpha_composite(attrname='alpha_composite',\n                          expr=<Name.Image l.284 at 0x2579b0c3950>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.frame_rgba l.285 at 0x2579b0c3bd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.Draw(attrname='Draw',\n               expr=<Name.ImageDraw l.288 at 0x2579b0c3e10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.text(attrname='text',\n               expr=<Name.draw l.289 at 0x2579b0c3f90>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.get_font(name='get_font')",
              "type": "Instance of PIL.ImageFont.FreeTypeFont"
            },
            {
              "function": "Attribute.new(attrname='new',\n              expr=<Name.Image l.308 at 0x2579b0c8fd0>)",
              "type": "Instance of PIL.Image.Image"
            },
            {
              "function": "Attribute.Draw(attrname='Draw',\n               expr=<Name.ImageDraw l.309 at 0x2579b0c9350>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.textbbox(attrname='textbbox',\n                   expr=<Name.draw l.310 at 0x2579b0c95d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.get_text_size(name='get_text_size')",
              "type": "Tuple.tuple(ctx=<Context.Load: 1>,\n            elts=[ <Name.width l.313 at 0x2579b0c9ed0>,\n              <Name.height l.313 at 0x2579b0c9f90>])"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            }
          ],
          "unresolved_imports": [],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\slack-gif-creator\\core\\validators.py",
        "language": "python",
        "file_size": 8201,
        "line_count": 265,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "check_slack_size",
            "line_number": 11,
            "parameters": [
              "gif_path",
              "is_emoji"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": "Check if GIF meets Slack size limits.\n\nArgs:\n    gif_path: Path to GIF file\n    is_emoji: True for emoji GIF (64KB limit), False for message GIF (2MB limit)\n\nReturns:\n    Tuple of (passes: bool, info: dict with details)",
            "is_async": false,
            "complexity": 3
          },
          {
            "name": "validate_dimensions",
            "line_number": 59,
            "parameters": [
              "width",
              "height",
              "is_emoji"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": "Check if dimensions are suitable for Slack.\n\nArgs:\n    width: Frame width in pixels\n    height: Frame height in pixels\n    is_emoji: True for emoji GIF, False for message GIF\n\nReturns:\n    Tuple of (passes: bool, info: dict with details)",
            "is_async": false,
            "complexity": 9
          },
          {
            "name": "validate_gif",
            "line_number": 122,
            "parameters": [
              "gif_path",
              "is_emoji"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": "Run all validations on a GIF file.\n\nArgs:\n    gif_path: Path to GIF file\n    is_emoji: True for emoji GIF, False for message GIF\n\nReturns:\n    Tuple of (all_pass: bool, results: dict)",
            "is_async": false,
            "complexity": 9
          },
          {
            "name": "get_optimization_suggestions",
            "line_number": 200,
            "parameters": [
              "results"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Get suggestions for optimizing a GIF based on validation results.\n\nArgs:\n    results: Results dict from validate_gif()\n\nReturns:\n    List of suggestion strings",
            "is_async": false,
            "complexity": 6
          },
          {
            "name": "is_slack_ready",
            "line_number": 241,
            "parameters": [
              "gif_path",
              "is_emoji",
              "verbose"
            ],
            "defaults": 2,
            "decorators": [],
            "docstring": "Quick check if GIF is ready for Slack.\n\nArgs:\n    gif_path: Path to GIF file\n    is_emoji: True for emoji GIF, False for message GIF\n    verbose: Print detailed feedback\n\nReturns:\n    True if ready, False otherwise",
            "is_async": false,
            "complexity": 5
          }
        ],
        "classes": [],
        "imports": [
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 8
          },
          {
            "type": "from_import",
            "module": "PIL",
            "names": [
              "Image"
            ],
            "level": 0,
            "line_number": 133
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 32,
          "function_count": 5,
          "class_count": 0,
          "import_count": 2,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Name.gif_path l.24 at 0x2579b0d6ad0>)",
              "type": "Const.bool(value=False,\n           kind=None)"
            },
            {
              "function": "Attribute.stat(attrname='stat',\n               expr=<Name.gif_path l.27 at 0x2579b0d71d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.float(name='float')",
              "type": "Instance of builtins.float"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Name.gif_path l.137 at 0x2579b0e7710>)",
              "type": "Const.bool(value=False,\n           kind=None)"
            },
            {
              "function": "Name.check_slack_size(name='check_slack_size')",
              "type": "Tuple.tuple(ctx=<Context.Load: 1>,\n            elts=[ <Const.bool l.25 at 0x2579b0d6cd0>,\n              <Dict.dict l.25 at 0x2579b0d6e10>])"
            },
            {
              "function": "Attribute.open(attrname='open',\n               expr=<Name.Image l.148 at 0x2579b0eca10>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.validate_dimensions(name='validate_dimensions')",
              "type": "Tuple.tuple(ctx=<Context.Load: 1>,\n            elts=[ <Name.passes l.119 at 0x2579b0e6bd0>,\n              <Name.info l.119 at 0x2579b0e6c10>])"
            },
            {
              "function": "Attribute.seek(attrname='seek',\n               expr=<Name.img l.156 at 0x2579b0ed690>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.info l.163 at 0x2579b0edd90>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.results l.212 at 0x2579b0f4d90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.results l.213 at 0x2579b0f5090>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.results l.214 at 0x2579b0f5390>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.size_info l.217 at 0x2579b0f55d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.dim_info l.232 at 0x2579b0f7250>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.dim_info l.232 at 0x2579b0f7490>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.validate_gif(name='validate_gif')",
              "type": "Tuple.tuple(ctx=<Context.Load: 1>,\n            elts=[ <Const.bool l.138 at 0x2579b0e7910>,\n              <Dict.dict l.138 at 0x2579b0e79d0>])"
            },
            {
              "function": "Name.get_optimization_suggestions(name='get_optimization_suggestions')",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Name.check_slack_size(name='check_slack_size')",
              "type": "Tuple.tuple(ctx=<Context.Load: 1>,\n            elts=[ <Const.bool l.25 at 0x2579b0d6cd0>,\n              <Dict.dict l.25 at 0x2579b0d6e10>])"
            }
          ],
          "unresolved_imports": [],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\slack-gif-creator\\core\\visual_effects.py",
        "language": "python",
        "file_size": 14862,
        "line_count": 494,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "add_motion_blur",
            "line_number": 213,
            "parameters": [
              "frame",
              "prev_frame",
              "blur_amount"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": "Add motion blur by blending with previous frame.\n\nArgs:\n    frame: Current frame\n    prev_frame: Previous frame (None for first frame)\n    blur_amount: Amount of blur (0.0-1.0)\n\nReturns:\n    Frame with motion blur applied",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "create_impact_flash",
            "line_number": 239,
            "parameters": [
              "frame",
              "position",
              "radius",
              "intensity"
            ],
            "defaults": 2,
            "decorators": [],
            "docstring": "Create a bright flash effect at impact point.\n\nArgs:\n    frame: PIL Image to draw on\n    position: Center of flash\n    radius: Flash radius\n    intensity: Flash intensity (0.0-1.0)\n\nReturns:\n    Modified frame",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "create_shockwave_rings",
            "line_number": 275,
            "parameters": [
              "frame",
              "position",
              "radii",
              "color",
              "width"
            ],
            "defaults": 2,
            "decorators": [],
            "docstring": "Create expanding ring effects.\n\nArgs:\n    frame: PIL Image to draw on\n    position: Center of rings\n    radii: List of ring radii\n    color: Ring color\n    width: Ring width\n\nReturns:\n    Modified frame",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "create_explosion_effect",
            "line_number": 301,
            "parameters": [
              "frame",
              "position",
              "radius",
              "progress",
              "color"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": "Create an explosion effect that expands and fades.\n\nArgs:\n    frame: PIL Image to draw on\n    position: Explosion center\n    radius: Maximum radius\n    progress: Animation progress (0.0-1.0)\n    color: Explosion color\n\nReturns:\n    Modified frame",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "add_glow_effect",
            "line_number": 340,
            "parameters": [
              "frame",
              "mask_color",
              "glow_color",
              "blur_radius"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": "Add a glow effect to areas of a specific color.\n\nArgs:\n    frame: PIL Image\n    mask_color: Color to create glow around\n    glow_color: Color of glow\n    blur_radius: Blur amount\n\nReturns:\n    Frame with glow",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "add_drop_shadow",
            "line_number": 373,
            "parameters": [
              "frame",
              "object_bounds",
              "shadow_offset",
              "shadow_color",
              "blur"
            ],
            "defaults": 3,
            "decorators": [],
            "docstring": "Add drop shadow to an object.\n\nArgs:\n    frame: PIL Image\n    object_bounds: (x1, y1, x2, y2) bounds of object\n    shadow_offset: (x, y) offset of shadow\n    shadow_color: Shadow color\n    blur: Shadow blur amount\n\nReturns:\n    Frame with shadow",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "create_speed_lines",
            "line_number": 410,
            "parameters": [
              "frame",
              "position",
              "direction",
              "length",
              "count",
              "color"
            ],
            "defaults": 3,
            "decorators": [],
            "docstring": "Create speed lines for motion effect.\n\nArgs:\n    frame: PIL Image to draw on\n    position: Center position\n    direction: Angle in radians (0 = right, pi/2 = down)\n    length: Line length\n    count: Number of lines\n    color: Line color\n\nReturns:\n    Modified frame",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "create_screen_shake_offset",
            "line_number": 455,
            "parameters": [
              "intensity",
              "frame_index"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Calculate screen shake offset for a frame.\n\nArgs:\n    intensity: Shake intensity in pixels\n    frame_index: Current frame number\n\nReturns:\n    (x, y) offset tuple",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "apply_screen_shake",
            "line_number": 474,
            "parameters": [
              "frame",
              "intensity",
              "frame_index"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Apply screen shake effect to entire frame.\n\nArgs:\n    frame: PIL Image\n    intensity: Shake intensity\n    frame_index: Current frame number\n\nReturns:\n    Shaken frame",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "__init__",
            "line_number": 19,
            "parameters": [
              "self",
              "x",
              "y",
              "vx",
              "vy",
              "lifetime",
              "color",
              "size",
              "shape"
            ],
            "defaults": 2,
            "decorators": [],
            "docstring": "Initialize a particle.\n\nArgs:\n    x, y: Starting position\n    vx, vy: Velocity\n    lifetime: How long particle lives (in frames)\n    color: RGB color\n    size: Particle size in pixels\n    shape: 'circle', 'square', or 'star'",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "update",
            "line_number": 45,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Update particle position and lifetime.",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "is_alive",
            "line_number": 59,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Check if particle is still alive.",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "get_alpha",
            "line_number": 63,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Get particle opacity based on lifetime.",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "render",
            "line_number": 67,
            "parameters": [
              "self",
              "frame"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Render particle to frame.\n\nArgs:\n    frame: PIL Image to draw on",
            "is_async": false,
            "complexity": 5
          },
          {
            "name": "__init__",
            "line_number": 109,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Initialize particle system.",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "emit",
            "line_number": 113,
            "parameters": [
              "self",
              "x",
              "y",
              "count",
              "spread",
              "speed",
              "color",
              "lifetime",
              "size",
              "shape"
            ],
            "defaults": 7,
            "decorators": [],
            "docstring": "Emit a burst of particles.\n\nArgs:\n    x, y: Emission position\n    count: Number of particles to emit\n    spread: Angle spread (radians)\n    speed: Initial speed\n    color: Particle color\n    lifetime: Particle lifetime in frames\n    size: Particle size\n    shape: Particle shape",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "emit_confetti",
            "line_number": 143,
            "parameters": [
              "self",
              "x",
              "y",
              "count",
              "colors"
            ],
            "defaults": 2,
            "decorators": [],
            "docstring": "Emit confetti particles (colorful, falling).\n\nArgs:\n    x, y: Emission position\n    count: Number of confetti pieces\n    colors: List of colors (random if None)",
            "is_async": false,
            "complexity": 3
          },
          {
            "name": "emit_sparkles",
            "line_number": 171,
            "parameters": [
              "self",
              "x",
              "y",
              "count"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": "Emit sparkle particles (twinkling stars).\n\nArgs:\n    x, y: Emission position\n    count: Number of sparkles",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "update",
            "line_number": 194,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Update all particles.",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "render",
            "line_number": 203,
            "parameters": [
              "self",
              "frame"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Render all particles to frame.",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "get_particle_count",
            "line_number": 208,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Get number of active particles.",
            "is_async": false,
            "complexity": 1
          }
        ],
        "classes": [
          {
            "name": "Particle",
            "line_number": 16,
            "bases": [],
            "decorators": [],
            "docstring": "A single particle in a particle system.",
            "methods": [
              "__init__",
              "update",
              "is_alive",
              "get_alpha",
              "render"
            ],
            "method_count": 5
          },
          {
            "name": "ParticleSystem",
            "line_number": 106,
            "bases": [],
            "decorators": [],
            "docstring": "Manages a collection of particles.",
            "methods": [
              "__init__",
              "emit",
              "emit_confetti",
              "emit_sparkles",
              "update",
              "render",
              "get_particle_count"
            ],
            "method_count": 7
          }
        ],
        "imports": [
          {
            "type": "from_import",
            "module": "PIL",
            "names": [
              "Image",
              "ImageDraw",
              "ImageFilter"
            ],
            "level": 0,
            "line_number": 9
          },
          {
            "type": "import",
            "modules": [
              "numpy"
            ],
            "line_number": 10
          },
          {
            "type": "import",
            "modules": [
              "math"
            ],
            "line_number": 11
          },
          {
            "type": "import",
            "modules": [
              "random"
            ],
            "line_number": 12
          },
          {
            "type": "from_import",
            "module": "typing",
            "names": [
              "Optional"
            ],
            "level": 0,
            "line_number": 13
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 35,
          "function_count": 21,
          "class_count": 2,
          "import_count": 5,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.is_alive(attrname='is_alive',\n                   expr=<Name.self l.74 at 0x2579b14bcd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.Draw(attrname='Draw',\n               expr=<Name.ImageDraw l.77 at 0x2579b14c090>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get_alpha(attrname='get_alpha',\n                    expr=<Name.self l.78 at 0x2579b14c310>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.tuple(name='tuple')",
              "type": "Instance of builtins.tuple"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Attribute.ellipse(attrname='ellipse',\n                  expr=<Name.draw l.89 at 0x2579b14dbd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.rectangle(attrname='rectangle',\n                    expr=<Name.draw l.92 at 0x2579b14e190>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.line(attrname='line',\n               expr=<Name.draw l.103 at 0x2579b14f410>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Attribute.uniform(attrname='uniform',\n                  expr=<Name.random l.132 at 0x2579b159450>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.uniform(attrname='uniform',\n                  expr=<Name.random l.133 at 0x2579b1597d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.uniform(attrname='uniform',\n                  expr=<Name.random l.138 at 0x2579b15a190>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Particle(name='Particle')",
              "type": "Instance of .Particle"
            },
            {
              "function": "Attribute.append(attrname='append',\n                 expr=<Attribute.particles l.141 at 0x2579b15a910>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Attribute.choice(attrname='choice',\n                 expr=<Name.random l.160 at 0x2579b15c490>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.uniform(attrname='uniform',\n                  expr=<Name.random l.161 at 0x2579b15c710>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.uniform(attrname='uniform',\n                  expr=<Name.random l.162 at 0x2579b15ca10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.choice(attrname='choice',\n                 expr=<Name.random l.163 at 0x2579b15cd50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.randint(attrname='randint',\n                  expr=<Name.random l.164 at 0x2579b15d090>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.uniform(attrname='uniform',\n                  expr=<Name.random l.165 at 0x2579b15d390>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Particle(name='Particle')",
              "type": "Instance of .Particle"
            },
            {
              "function": "Attribute.append(attrname='append',\n                 expr=<Attribute.particles l.169 at 0x2579b15db10>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Attribute.choice(attrname='choice',\n                 expr=<Name.random l.182 at 0x2579b15ec90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.uniform(attrname='uniform',\n                  expr=<Name.random l.183 at 0x2579b15ef10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.uniform(attrname='uniform',\n                  expr=<Name.random l.184 at 0x2579b15f290>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.uniform(attrname='uniform',\n                  expr=<Name.random l.187 at 0x2579b15fb90>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Particle(name='Particle')",
              "type": "Instance of .Particle"
            },
            {
              "function": "Attribute.append(attrname='append',\n                 expr=<Attribute.particles l.192 at 0x2579b164450>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.update(attrname='update',\n                 expr=<Name.particle l.198 at 0x2579b164cd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.is_alive(attrname='is_alive',\n                   expr=<Name.p l.201 at 0x2579b165250>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.render(attrname='render',\n                 expr=<Name.particle l.206 at 0x2579b165b10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.array(attrname='array',\n                expr=<Name.np l.230 at 0x2579b166e90>)",
              "type": "Instance of .ndarray"
            },
            {
              "function": "Attribute.array(attrname='array',\n                expr=<Name.np l.231 at 0x2579b1671d0>)",
              "type": "Instance of .ndarray"
            },
            {
              "function": "Attribute.astype(attrname='astype',\n                 expr=<Call l.234 at 0x2579b167850>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.clip(attrname='clip',\n               expr=<Name.np l.234 at 0x2579b167890>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.fromarray(attrname='fromarray',\n                    expr=<Name.Image l.236 at 0x2579b167c10>)",
              "type": "Instance of PIL.Image.Image"
            },
            {
              "function": "Attribute.new(attrname='new',\n              expr=<Name.Image l.254 at 0x2579b16c8d0>)",
              "type": "Instance of PIL.Image.Image"
            },
            {
              "function": "Attribute.Draw(attrname='Draw',\n               expr=<Name.ImageDraw l.255 at 0x2579b16cd50>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Attribute.ellipse(attrname='ellipse',\n                  expr=<Name.draw l.267 at 0x2579b16e010>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.frame l.270 at 0x2579b16e690>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.alpha_composite(attrname='alpha_composite',\n                          expr=<Name.Image l.271 at 0x2579b16e910>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.frame_rgba l.272 at 0x2579b16ead0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.Draw(attrname='Draw',\n               expr=<Name.ImageDraw l.291 at 0x2579b16fb50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.ellipse(attrname='ellipse',\n                  expr=<Name.draw l.296 at 0x2579b174290>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Attribute.new(attrname='new',\n              expr=<Name.Image l.321 at 0x2579b175b90>)",
              "type": "Instance of PIL.Image.Image"
            },
            {
              "function": "Attribute.Draw(attrname='Draw',\n               expr=<Name.ImageDraw l.322 at 0x2579b176010>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Attribute.ellipse(attrname='ellipse',\n                  expr=<Name.draw l.332 at 0x2579b177110>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.frame l.335 at 0x2579b177390>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.alpha_composite(attrname='alpha_composite',\n                          expr=<Name.Image l.336 at 0x2579b177610>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.frame_rgba l.337 at 0x2579b1777d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.array(attrname='array',\n                expr=<Name.np l.356 at 0x2579b1785d0>)",
              "type": "Instance of .ndarray"
            },
            {
              "function": "Attribute.all(attrname='all',\n              expr=<Name.np l.357 at 0x2579b178850>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.new(attrname='new',\n              expr=<Name.Image l.360 at 0x2579b178c50>)",
              "type": "Instance of PIL.Image.Image"
            },
            {
              "function": "Attribute.array(attrname='array',\n                expr=<Name.np l.361 at 0x2579b179090>)",
              "type": "Instance of .ndarray"
            },
            {
              "function": "Attribute.fromarray(attrname='fromarray',\n                    expr=<Name.Image l.363 at 0x2579b1794d0>)",
              "type": "Instance of PIL.Image.Image"
            },
            {
              "function": "Attribute.filter(attrname='filter',\n                 expr=<Name.glow l.366 at 0x2579b179710>)",
              "type": "Instance of PIL.Image.Image"
            },
            {
              "function": "Attribute.GaussianBlur(attrname='GaussianBlur',\n                       expr=<Name.ImageFilter l.366 at 0x2579b179750>)",
              "type": "Instance of PIL.ImageFilter.GaussianBlur"
            },
            {
              "function": "Attribute.blend(attrname='blend',\n                expr=<Name.Image l.369 at 0x2579b179a90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.crop(attrname='crop',\n               expr=<Name.frame l.392 at 0x2579b17b1d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.new(attrname='new',\n              expr=<Name.Image l.395 at 0x2579b17b590>)",
              "type": "Instance of PIL.Image.Image"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.frame l.398 at 0x2579b17ba10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.paste(attrname='paste',\n                expr=<Name.frame_rgba l.402 at 0x2579b184090>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.paste(attrname='paste',\n                expr=<Name.frame_rgba l.405 at 0x2579b184290>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.frame_rgba l.407 at 0x2579b1844d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.Draw(attrname='Draw',\n               expr=<Name.ImageDraw l.427 at 0x2579b185690>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Attribute.uniform(attrname='uniform',\n                  expr=<Name.random l.435 at 0x2579b185f90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.uniform(attrname='uniform',\n                  expr=<Name.random l.436 at 0x2579b186310>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.uniform(attrname='uniform',\n                  expr=<Name.random l.441 at 0x2579b186cd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.randint(attrname='randint',\n                  expr=<Name.random l.446 at 0x2579b1877d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.randint(attrname='randint',\n                  expr=<Name.random l.447 at 0x2579b187a90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.line(attrname='line',\n               expr=<Name.draw l.450 at 0x2579b187c50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.seed(attrname='seed',\n               expr=<Name.random l.467 at 0x2579b18c9d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.randint(attrname='randint',\n                  expr=<Name.random l.468 at 0x2579b18cc50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.randint(attrname='randint',\n                  expr=<Name.random l.469 at 0x2579b18cf50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.seed(attrname='seed',\n               expr=<Name.random l.470 at 0x2579b18d190>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.create_screen_shake_offset(name='create_screen_shake_offset')",
              "type": "Tuple.tuple(ctx=<Context.Load: 1>,\n            elts=[ <Name.offset_x l.471 at 0x2579b18d310>,\n              <Name.offset_y l.471 at 0x2579b18d3d0>])"
            },
            {
              "function": "Attribute.new(attrname='new',\n              expr=<Name.Image l.489 at 0x2579b18e010>)",
              "type": "Instance of PIL.Image.Image"
            },
            {
              "function": "Attribute.paste(attrname='paste',\n                expr=<Name.shaken l.492 at 0x2579b18e390>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            }
          ],
          "unresolved_imports": [
            "numpy",
            "math",
            "random"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\slack-gif-creator\\templates\\bounce.py",
        "language": "python",
        "file_size": 3053,
        "line_count": 106,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "create_bounce_animation",
            "line_number": 19,
            "parameters": [
              "object_type",
              "object_data",
              "num_frames",
              "bounce_height",
              "ground_y",
              "start_x",
              "frame_width",
              "frame_height",
              "bg_color"
            ],
            "defaults": 9,
            "decorators": [],
            "docstring": "Create frames for a bouncing animation.\n\nArgs:\n    object_type: 'circle', 'emoji', or 'custom'\n    object_data: Data for the object (e.g., {'radius': 30, 'color': (255, 0, 0)})\n    num_frames: Number of frames in the animation\n    bounce_height: Maximum height of bounce\n    ground_y: Y position of ground\n    start_x: X position (or starting X if moving horizontally)\n    frame_width: Frame width\n    frame_height: Frame height\n    bg_color: Background color\n\nReturns:\n    List of frames",
            "is_async": false,
            "complexity": 7
          }
        ],
        "classes": [],
        "imports": [
          {
            "type": "import",
            "modules": [
              "sys"
            ],
            "line_number": 8
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 9
          },
          {
            "type": "from_import",
            "module": "core.gif_builder",
            "names": [
              "GIFBuilder"
            ],
            "level": 0,
            "line_number": 14
          },
          {
            "type": "from_import",
            "module": "core.frame_composer",
            "names": [
              "create_blank_frame",
              "draw_circle",
              "draw_emoji"
            ],
            "level": 0,
            "line_number": 15
          },
          {
            "type": "from_import",
            "module": "core.easing",
            "names": [
              "ease_out_bounce",
              "interpolate"
            ],
            "level": 0,
            "line_number": 16
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 7,
          "function_count": 1,
          "class_count": 0,
          "import_count": 5,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Name.create_blank_frame(name='create_blank_frame')",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.ease_out_bounce(name='ease_out_bounce')",
              "type": "Uninferable"
            },
            {
              "function": "Name.draw_circle(name='draw_circle')",
              "type": "Uninferable"
            },
            {
              "function": "Name.draw_emoji(name='draw_emoji')",
              "type": "Uninferable"
            },
            {
              "function": "Name.GIFBuilder(name='GIFBuilder')",
              "type": "Uninferable"
            },
            {
              "function": "Name.create_bounce_animation(name='create_bounce_animation')",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.add_frames(attrname='add_frames',\n                     expr=<Name.builder l.103 at 0x2579af55110>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.save(attrname='save',\n               expr=<Name.builder l.106 at 0x257ff8e48d0>)",
              "type": "Uninferable"
            }
          ],
          "unresolved_imports": [
            "sys"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\slack-gif-creator\\templates\\explode.py",
        "language": "python",
        "file_size": 11250,
        "line_count": 332,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "create_explode_animation",
            "line_number": 23,
            "parameters": [
              "object_type",
              "object_data",
              "num_frames",
              "explode_type",
              "num_pieces",
              "explosion_speed",
              "center_pos",
              "frame_width",
              "frame_height",
              "bg_color"
            ],
            "defaults": 10,
            "decorators": [],
            "docstring": "Create explosion animation.\n\nArgs:\n    object_type: 'emoji', 'circle', 'text'\n    object_data: Object configuration\n    num_frames: Number of frames\n    explode_type: Type of explosion\n    num_pieces: Number of pieces/particles\n    explosion_speed: Speed of explosion\n    center_pos: Center position\n    frame_width: Frame width\n    frame_height: Frame height\n    bg_color: Background color\n\nReturns:\n    List of frames",
            "is_async": false,
            "complexity": 25
          },
          {
            "name": "create_particle_burst",
            "line_number": 240,
            "parameters": [
              "num_frames",
              "particle_count",
              "center_pos",
              "colors",
              "frame_width",
              "frame_height",
              "bg_color"
            ],
            "defaults": 7,
            "decorators": [],
            "docstring": "Create simple particle burst effect.\n\nArgs:\n    num_frames: Number of frames\n    particle_count: Number of particles\n    center_pos: Burst center\n    colors: Particle colors (None for random)\n    frame_width: Frame width\n    frame_height: Frame height\n    bg_color: Background color\n\nReturns:\n    List of frames",
            "is_async": false,
            "complexity": 4
          }
        ],
        "classes": [],
        "imports": [
          {
            "type": "import",
            "modules": [
              "sys"
            ],
            "line_number": 8
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 9
          },
          {
            "type": "import",
            "modules": [
              "math"
            ],
            "line_number": 10
          },
          {
            "type": "import",
            "modules": [
              "random"
            ],
            "line_number": 11
          },
          {
            "type": "from_import",
            "module": "PIL",
            "names": [
              "Image",
              "ImageDraw"
            ],
            "level": 0,
            "line_number": 15
          },
          {
            "type": "import",
            "modules": [
              "numpy"
            ],
            "line_number": 16
          },
          {
            "type": "from_import",
            "module": "core.gif_builder",
            "names": [
              "GIFBuilder"
            ],
            "level": 0,
            "line_number": 17
          },
          {
            "type": "from_import",
            "module": "core.frame_composer",
            "names": [
              "create_blank_frame",
              "draw_emoji_enhanced"
            ],
            "level": 0,
            "line_number": 18
          },
          {
            "type": "from_import",
            "module": "core.visual_effects",
            "names": [
              "ParticleSystem"
            ],
            "level": 0,
            "line_number": 19
          },
          {
            "type": "from_import",
            "module": "core.easing",
            "names": [
              "interpolate"
            ],
            "level": 0,
            "line_number": 20
          },
          {
            "type": "from_import",
            "module": "core.color_palettes",
            "names": [
              "get_palette"
            ],
            "level": 0,
            "line_number": 268
          },
          {
            "type": "from_import",
            "module": "templates.fade",
            "names": [
              "apply_opacity"
            ],
            "level": 0,
            "line_number": 181
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 29,
          "function_count": 2,
          "class_count": 0,
          "import_count": 12,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Attribute.uniform(attrname='uniform',\n                  expr=<Name.random l.63 at 0x2579b492e50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.uniform(attrname='uniform',\n                  expr=<Name.random l.64 at 0x2579b4931d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.randint(attrname='randint',\n                  expr=<Name.random l.67 at 0x2579b493b90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.randint(attrname='randint',\n                  expr=<Name.random l.69 at 0x2579b493f90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.randint(attrname='randint',\n                  expr=<Name.random l.70 at 0x2579b498190>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.randint(attrname='randint',\n                  expr=<Name.random l.71 at 0x2579b498350>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.uniform(attrname='uniform',\n                  expr=<Name.random l.73 at 0x2579b498590>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Name.create_blank_frame(name='create_blank_frame')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.Draw(attrname='Draw',\n               expr=<Name.ImageDraw l.87 at 0x2579b499790>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.draw_emoji_enhanced(name='draw_emoji_enhanced')",
              "type": "Uninferable"
            },
            {
              "function": "Name.tuple(name='tuple')",
              "type": "Instance of builtins.tuple"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Attribute.ellipse(attrname='ellipse',\n                  expr=<Name.draw l.117 at 0x2579b4a4710>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.draw_emoji_enhanced(name='draw_emoji_enhanced')",
              "type": "Uninferable"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Name.tuple(name='tuple')",
              "type": "Instance of builtins.tuple"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Attribute.polygon(attrname='polygon',\n                  expr=<Name.draw l.159 at 0x2579b4a8a90>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Attribute.new(attrname='new',\n              expr=<Name.Image l.171 at 0x2579b4a9b50>)",
              "type": "Instance of PIL.Image.Image"
            },
            {
              "function": "Name.draw_emoji_enhanced(name='draw_emoji_enhanced')",
              "type": "Uninferable"
            },
            {
              "function": "Name.apply_opacity(name='apply_opacity')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.frame l.184 at 0x2579b4aab10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.alpha_composite(attrname='alpha_composite',\n                          expr=<Name.Image l.185 at 0x2579b4aad90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.frame l.186 at 0x2579b4ab010>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.Draw(attrname='Draw',\n               expr=<Name.ImageDraw l.187 at 0x2579b4ab210>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.tuple(name='tuple')",
              "type": "Instance of builtins.tuple"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Attribute.ellipse(attrname='ellipse',\n                  expr=<Name.draw l.198 at 0x2579b4b0950>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.tuple(name='tuple')",
              "type": "Instance of builtins.tuple"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Attribute.ellipse(attrname='ellipse',\n                  expr=<Name.draw l.216 at 0x2579b4b28d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.draw_emoji_enhanced(name='draw_emoji_enhanced')",
              "type": "Uninferable"
            },
            {
              "function": "Name.ParticleSystem(name='ParticleSystem')",
              "type": "Uninferable"
            },
            {
              "function": "Name.get_palette(name='get_palette')",
              "type": "Uninferable"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Attribute.choice(attrname='choice',\n                 expr=<Name.random l.273 at 0x2579b4be550>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.emit(attrname='emit',\n               expr=<Name.particles l.274 at 0x2579b4be710>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.uniform(attrname='uniform',\n                  expr=<Name.random l.277 at 0x2579b4bea50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.uniform(attrname='uniform',\n                  expr=<Name.random l.279 at 0x2579b4bec50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.randint(attrname='randint',\n                  expr=<Name.random l.280 at 0x2579b4beed0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Name.create_blank_frame(name='create_blank_frame')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.update(attrname='update',\n                 expr=<Name.particles l.288 at 0x2579b4bf850>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.render(attrname='render',\n                 expr=<Name.particles l.289 at 0x2579b4bf9d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.GIFBuilder(name='GIFBuilder')",
              "type": "Uninferable"
            },
            {
              "function": "Name.create_explode_animation(name='create_explode_animation')",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.add_frames(attrname='add_frames',\n                     expr=<Name.builder l.310 at 0x2579b4c0b90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.save(attrname='save',\n               expr=<Name.builder l.311 at 0x2579b4c0d10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.clear(attrname='clear',\n                expr=<Name.builder l.314 at 0x2579b4c0f90>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.create_explode_animation(name='create_explode_animation')",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.add_frames(attrname='add_frames',\n                     expr=<Name.builder l.322 at 0x2579b4c1750>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.save(attrname='save',\n               expr=<Name.builder l.323 at 0x2579b4c18d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.clear(attrname='clear',\n                expr=<Name.builder l.326 at 0x2579b4c1ad0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.create_particle_burst(name='create_particle_burst')",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.add_frames(attrname='add_frames',\n                     expr=<Name.builder l.328 at 0x2579b4c1f10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.save(attrname='save',\n               expr=<Name.builder l.329 at 0x2579b4c20d0>)",
              "type": "Uninferable"
            }
          ],
          "unresolved_imports": [
            "sys",
            "math",
            "random",
            "numpy"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\slack-gif-creator\\templates\\fade.py",
        "language": "python",
        "file_size": 10130,
        "line_count": 330,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "create_fade_animation",
            "line_number": 20,
            "parameters": [
              "object_type",
              "object_data",
              "num_frames",
              "fade_type",
              "easing",
              "center_pos",
              "frame_width",
              "frame_height",
              "bg_color"
            ],
            "defaults": 9,
            "decorators": [],
            "docstring": "Create fade animation.\n\nArgs:\n    object_type: 'emoji', 'text', 'image'\n    object_data: Object configuration\n    num_frames: Number of frames\n    fade_type: Type of fade effect\n    easing: Easing function\n    center_pos: Center position\n    frame_width: Frame width\n    frame_height: Frame height\n    bg_color: Background color\n\nReturns:\n    List of frames",
            "is_async": false,
            "complexity": 15
          },
          {
            "name": "apply_opacity",
            "line_number": 149,
            "parameters": [
              "image",
              "opacity"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Apply opacity to an RGBA image.\n\nArgs:\n    image: RGBA image\n    opacity: Opacity value (0.0 to 1.0)\n\nReturns:\n    Image with adjusted opacity",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "create_crossfade",
            "line_number": 175,
            "parameters": [
              "object1_data",
              "object2_data",
              "num_frames",
              "easing",
              "object_type",
              "center_pos",
              "frame_width",
              "frame_height",
              "bg_color"
            ],
            "defaults": 7,
            "decorators": [],
            "docstring": "Crossfade between two objects.\n\nArgs:\n    object1_data: First object configuration\n    object2_data: Second object configuration\n    num_frames: Number of frames\n    easing: Easing function\n    object_type: Type of objects\n    center_pos: Center position\n    frame_width: Frame width\n    frame_height: Frame height\n    bg_color: Background color\n\nReturns:\n    List of frames",
            "is_async": false,
            "complexity": 3
          },
          {
            "name": "create_fade_to_color",
            "line_number": 251,
            "parameters": [
              "start_color",
              "end_color",
              "num_frames",
              "easing",
              "frame_width",
              "frame_height"
            ],
            "defaults": 4,
            "decorators": [],
            "docstring": "Fade from one solid color to another.\n\nArgs:\n    start_color: Starting RGB color\n    end_color: Ending RGB color\n    num_frames: Number of frames\n    easing: Easing function\n    frame_width: Frame width\n    frame_height: Frame height\n\nReturns:\n    List of frames",
            "is_async": false,
            "complexity": 2
          }
        ],
        "classes": [],
        "imports": [
          {
            "type": "import",
            "modules": [
              "sys"
            ],
            "line_number": 8
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 9
          },
          {
            "type": "from_import",
            "module": "PIL",
            "names": [
              "Image",
              "ImageDraw"
            ],
            "level": 0,
            "line_number": 13
          },
          {
            "type": "import",
            "modules": [
              "numpy"
            ],
            "line_number": 14
          },
          {
            "type": "from_import",
            "module": "core.gif_builder",
            "names": [
              "GIFBuilder"
            ],
            "level": 0,
            "line_number": 15
          },
          {
            "type": "from_import",
            "module": "core.frame_composer",
            "names": [
              "create_blank_frame",
              "draw_emoji_enhanced"
            ],
            "level": 0,
            "line_number": 16
          },
          {
            "type": "from_import",
            "module": "core.easing",
            "names": [
              "interpolate"
            ],
            "level": 0,
            "line_number": 17
          },
          {
            "type": "from_import",
            "module": "core.typography",
            "names": [
              "draw_text_with_outline"
            ],
            "level": 0,
            "line_number": 104
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 22,
          "function_count": 4,
          "class_count": 0,
          "import_count": 8,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.create_blank_frame(name='create_blank_frame')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.new(attrname='new',\n              expr=<Name.Image l.85 at 0x2579b4e9390>)",
              "type": "Instance of PIL.Image.Image"
            },
            {
              "function": "Name.draw_emoji_enhanced(name='draw_emoji_enhanced')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.object_data l.92 at 0x2579b4ea010>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.apply_opacity(name='apply_opacity')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.frame_bg l.99 at 0x2579b4ea610>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.alpha_composite(attrname='alpha_composite',\n                          expr=<Name.Image l.100 at 0x2579b4ea8d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.frame l.101 at 0x2579b4eab90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.new(attrname='new',\n              expr=<Name.Image l.107 at 0x2579b4eb010>)",
              "type": "Instance of PIL.Image.Image"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.text_canvas l.108 at 0x2579b4eb510>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.paste(attrname='paste',\n                expr=<Name.text_canvas_rgb l.109 at 0x2579b4eb6d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.draw_text_with_outline(name='draw_text_with_outline')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.object_data l.113 at 0x2579b4ebb50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.object_data l.115 at 0x2579b4ebd50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.object_data l.116 at 0x2579b4f0050>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.object_data l.117 at 0x2579b4f0310>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.text_canvas_rgb l.123 at 0x2579b4f0890>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.getdata(attrname='getdata',\n                  expr=<Name.text_canvas l.124 at 0x2579b4f0ad0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.putdata(attrname='putdata',\n                  expr=<Name.text_canvas l.131 at 0x2579b4f16d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.apply_opacity(name='apply_opacity')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.frame_bg l.137 at 0x2579b4f1b90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.alpha_composite(attrname='alpha_composite',\n                          expr=<Name.Image l.138 at 0x2579b4f1dd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.frame l.139 at 0x2579b4f2050>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.image l.161 at 0x2579b4f2f10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Name.image l.164 at 0x2579b4f3390>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.array(attrname='array',\n                expr=<Name.np l.167 at 0x2579b4f35d0>)",
              "type": "Instance of .ndarray"
            },
            {
              "function": "Attribute.fromarray(attrname='fromarray',\n                    expr=<Name.Image l.169 at 0x2579b4f3a90>)",
              "type": "Instance of PIL.Image.Image"
            },
            {
              "function": "Attribute.astype(attrname='astype',\n                 expr=<Name.a_array l.169 at 0x2579b4f3ad0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.merge(attrname='merge',\n                expr=<Name.Image l.172 at 0x2579b4f3dd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.create_blank_frame(name='create_blank_frame')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.new(attrname='new',\n              expr=<Name.Image l.217 at 0x2579b4fa650>)",
              "type": "Instance of PIL.Image.Image"
            },
            {
              "function": "Name.draw_emoji_enhanced(name='draw_emoji_enhanced')",
              "type": "Uninferable"
            },
            {
              "function": "Name.apply_opacity(name='apply_opacity')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.new(attrname='new',\n              expr=<Name.Image l.229 at 0x2579b4fb710>)",
              "type": "Instance of PIL.Image.Image"
            },
            {
              "function": "Name.draw_emoji_enhanced(name='draw_emoji_enhanced')",
              "type": "Uninferable"
            },
            {
              "function": "Name.apply_opacity(name='apply_opacity')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.frame l.241 at 0x2579b504850>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.alpha_composite(attrname='alpha_composite',\n                          expr=<Name.Image l.242 at 0x2579b504a90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.alpha_composite(attrname='alpha_composite',\n                          expr=<Name.Image l.243 at 0x2579b504d10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.frame_rgba l.244 at 0x2579b504f90>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.create_blank_frame(name='create_blank_frame')",
              "type": "Uninferable"
            },
            {
              "function": "Name.GIFBuilder(name='GIFBuilder')",
              "type": "Uninferable"
            },
            {
              "function": "Name.create_fade_animation(name='create_fade_animation')",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.add_frames(attrname='add_frames',\n                     expr=<Name.builder l.304 at 0x2579b50ce10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.save(attrname='save',\n               expr=<Name.builder l.305 at 0x2579b50cf90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.clear(attrname='clear',\n                expr=<Name.builder l.308 at 0x2579b50d210>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.create_crossfade(name='create_crossfade')",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.add_frames(attrname='add_frames',\n                     expr=<Name.builder l.315 at 0x2579b50da90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.save(attrname='save',\n               expr=<Name.builder l.316 at 0x2579b50dc10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.clear(attrname='clear',\n                expr=<Name.builder l.319 at 0x2579b50de10>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.create_fade_animation(name='create_fade_animation')",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.add_frames(attrname='add_frames',\n                     expr=<Name.builder l.326 at 0x2579b50e510>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.save(attrname='save',\n               expr=<Name.builder l.327 at 0x2579b50e690>)",
              "type": "Uninferable"
            }
          ],
          "unresolved_imports": [
            "sys",
            "numpy"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\slack-gif-creator\\templates\\flip.py",
        "language": "python",
        "file_size": 9446,
        "line_count": 292,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "create_flip_animation",
            "line_number": 20,
            "parameters": [
              "object1_data",
              "object2_data",
              "num_frames",
              "flip_axis",
              "easing",
              "object_type",
              "center_pos",
              "frame_width",
              "frame_height",
              "bg_color"
            ],
            "defaults": 9,
            "decorators": [],
            "docstring": "Create 3D-style flip animation.\n\nArgs:\n    object1_data: First object (front side)\n    object2_data: Second object (back side, None = same as front)\n    num_frames: Number of frames\n    flip_axis: Axis to flip around\n    easing: Easing function\n    object_type: Type of objects\n    center_pos: Center position\n    frame_width: Frame width\n    frame_height: Frame height\n    bg_color: Background color\n\nReturns:\n    List of frames",
            "is_async": false,
            "complexity": 12
          },
          {
            "name": "create_quick_flip",
            "line_number": 195,
            "parameters": [
              "emoji_front",
              "emoji_back",
              "num_frames",
              "frame_size"
            ],
            "defaults": 2,
            "decorators": [],
            "docstring": "Create quick flip for emoji GIFs.\n\nArgs:\n    emoji_front: Front emoji\n    emoji_back: Back emoji\n    num_frames: Number of frames\n    frame_size: Frame size (square)\n\nReturns:\n    List of frames",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "create_nope_flip",
            "line_number": 227,
            "parameters": [
              "num_frames",
              "frame_width",
              "frame_height"
            ],
            "defaults": 3,
            "decorators": [],
            "docstring": "Create \"nope\" reaction flip (like flipping table).\n\nArgs:\n    num_frames: Number of frames\n    frame_width: Frame width\n    frame_height: Frame height\n\nReturns:\n    List of frames",
            "is_async": false,
            "complexity": 1
          }
        ],
        "classes": [],
        "imports": [
          {
            "type": "import",
            "modules": [
              "sys"
            ],
            "line_number": 8
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 9
          },
          {
            "type": "import",
            "modules": [
              "math"
            ],
            "line_number": 10
          },
          {
            "type": "from_import",
            "module": "PIL",
            "names": [
              "Image"
            ],
            "level": 0,
            "line_number": 14
          },
          {
            "type": "from_import",
            "module": "core.gif_builder",
            "names": [
              "GIFBuilder"
            ],
            "level": 0,
            "line_number": 15
          },
          {
            "type": "from_import",
            "module": "core.frame_composer",
            "names": [
              "create_blank_frame",
              "draw_emoji_enhanced"
            ],
            "level": 0,
            "line_number": 16
          },
          {
            "type": "from_import",
            "module": "core.easing",
            "names": [
              "interpolate"
            ],
            "level": 0,
            "line_number": 17
          },
          {
            "type": "from_import",
            "module": "core.typography",
            "names": [
              "draw_text_with_outline"
            ],
            "level": 0,
            "line_number": 115
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 14,
          "function_count": 3,
          "class_count": 0,
          "import_count": 8,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Name.create_blank_frame(name='create_blank_frame')",
              "type": "Uninferable"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.new(attrname='new',\n              expr=<Name.Image l.82 at 0x2579b59d050>)",
              "type": "Instance of PIL.Image.Image"
            },
            {
              "function": "Name.draw_emoji_enhanced(name='draw_emoji_enhanced')",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Attribute.resize(attrname='resize',\n                 expr=<Name.emoji_canvas l.103 at 0x2579b59e910>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.frame l.110 at 0x2579b59f250>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.paste(attrname='paste',\n                expr=<Name.frame_rgba l.111 at 0x2579b59f3d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.frame_rgba l.112 at 0x2579b59f790>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.current_object l.118 at 0x2579b59fc10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.current_object l.119 at 0x2579b59fed0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.new(attrname='new',\n              expr=<Name.Image l.122 at 0x2579b5a0410>)",
              "type": "Instance of PIL.Image.Image"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.text_canvas l.125 at 0x2579b5a0950>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.paste(attrname='paste',\n                expr=<Name.text_canvas_rgb l.126 at 0x2579b5a0b10>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.draw_text_with_outline(name='draw_text_with_outline')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.current_object l.133 at 0x2579b5a1210>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.current_object l.134 at 0x2579b5a15d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.text_canvas_rgb l.140 at 0x2579b5a1b10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.getdata(attrname='getdata',\n                  expr=<Name.text_canvas l.141 at 0x2579b5a1d10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.putdata(attrname='putdata',\n                  expr=<Name.text_canvas l.148 at 0x2579b5a2950>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Attribute.resize(attrname='resize',\n                 expr=<Name.text_canvas l.158 at 0x2579b5a3710>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.crop(attrname='crop',\n               expr=<Name.text_scaled l.167 at 0x2579b5a8750>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.crop(attrname='crop',\n               expr=<Name.text_scaled l.179 at 0x2579b5a9810>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.frame l.186 at 0x2579b5a9e10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.paste(attrname='paste',\n                expr=<Name.frame_rgba l.187 at 0x2579b5a9f90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.frame_rgba l.188 at 0x2579b5aa350>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.create_flip_animation(name='create_flip_animation')",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Name.create_flip_animation(name='create_flip_animation')",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Name.GIFBuilder(name='GIFBuilder')",
              "type": "Uninferable"
            },
            {
              "function": "Name.create_flip_animation(name='create_flip_animation')",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.add_frames(attrname='add_frames',\n                     expr=<Name.builder l.270 at 0x2579b5b2090>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.save(attrname='save',\n               expr=<Name.builder l.271 at 0x2579b5b2210>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.clear(attrname='clear',\n                expr=<Name.builder l.274 at 0x2579b5b2490>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.create_flip_animation(name='create_flip_animation')",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.add_frames(attrname='add_frames',\n                     expr=<Name.builder l.282 at 0x2579b5b3110>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.save(attrname='save',\n               expr=<Name.builder l.283 at 0x2579b5b3250>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.GIFBuilder(name='GIFBuilder')",
              "type": "Uninferable"
            },
            {
              "function": "Name.create_quick_flip(name='create_quick_flip')",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.add_frames(attrname='add_frames',\n                     expr=<Name.builder l.288 at 0x2579b5b3a50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.save(attrname='save',\n               expr=<Name.builder l.289 at 0x2579b5b3c10>)",
              "type": "Uninferable"
            }
          ],
          "unresolved_imports": [
            "sys",
            "math"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\slack-gif-creator\\templates\\kaleidoscope.py",
        "language": "python",
        "file_size": 6349,
        "line_count": 212,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "apply_kaleidoscope",
            "line_number": 18,
            "parameters": [
              "frame",
              "segments",
              "center"
            ],
            "defaults": 2,
            "decorators": [],
            "docstring": "Apply kaleidoscope effect by mirroring/rotating frame sections.\n\nArgs:\n    frame: Input frame\n    segments: Number of mirror segments (4, 6, 8, 12 work well)\n    center: Center point for effect (None = frame center)\n\nReturns:\n    Frame with kaleidoscope effect",
            "is_async": false,
            "complexity": 7
          },
          {
            "name": "apply_simple_mirror",
            "line_number": 86,
            "parameters": [
              "frame",
              "mode"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": "Apply simple mirror effect (faster than full kaleidoscope).\n\nArgs:\n    frame: Input frame\n    mode: 'horizontal', 'vertical', 'quad' (4-way), 'radial'\n\nReturns:\n    Mirrored frame",
            "is_async": false,
            "complexity": 4
          },
          {
            "name": "create_kaleidoscope_animation",
            "line_number": 140,
            "parameters": [
              "base_frame",
              "num_frames",
              "segments",
              "rotation_speed",
              "width",
              "height"
            ],
            "defaults": 6,
            "decorators": [],
            "docstring": "Create animated kaleidoscope effect.\n\nArgs:\n    base_frame: Frame to apply effect to (or None for demo pattern)\n    num_frames: Number of frames\n    segments: Kaleidoscope segments\n    rotation_speed: How fast pattern rotates (0.5-2.0)\n    width: Frame width if generating demo\n    height: Frame height if generating demo\n\nReturns:\n    List of frames with kaleidoscope effect",
            "is_async": false,
            "complexity": 4
          }
        ],
        "classes": [],
        "imports": [
          {
            "type": "import",
            "modules": [
              "sys"
            ],
            "line_number": 8
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 9
          },
          {
            "type": "import",
            "modules": [
              "math"
            ],
            "line_number": 10
          },
          {
            "type": "from_import",
            "module": "PIL",
            "names": [
              "Image",
              "ImageOps",
              "ImageDraw"
            ],
            "level": 0,
            "line_number": 14
          },
          {
            "type": "import",
            "modules": [
              "numpy"
            ],
            "line_number": 15
          },
          {
            "type": "from_import",
            "module": "core.gif_builder",
            "names": [
              "GIFBuilder"
            ],
            "level": 0,
            "line_number": 197
          },
          {
            "type": "from_import",
            "module": "core.color_palettes",
            "names": [
              "get_palette"
            ],
            "level": 0,
            "line_number": 170
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 15,
          "function_count": 3,
          "class_count": 0,
          "import_count": 7,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.new(attrname='new',\n              expr=<Name.Image l.37 at 0x2579b4c3e10>)",
              "type": "Instance of PIL.Image.Image"
            },
            {
              "function": "Attribute.array(attrname='array',\n                expr=<Name.np l.47 at 0x2579b4d8e50>)",
              "type": "Instance of .ndarray"
            },
            {
              "function": "Attribute.zeros_like(attrname='zeros_like',\n                     expr=<Name.np l.48 at 0x2579b4db010>)",
              "type": "Instance of .ndarray"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Attribute.fromarray(attrname='fromarray',\n                    expr=<Name.Image l.83 at 0x2579b5b8d90>)",
              "type": "Instance of PIL.Image.Image"
            },
            {
              "function": "Attribute.crop(attrname='crop',\n               expr=<Name.frame l.102 at 0x2579b5b9e90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.mirror(attrname='mirror',\n                 expr=<Name.ImageOps l.103 at 0x2579b5ba250>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.copy(attrname='copy',\n               expr=<Name.frame l.104 at 0x2579b5ba4d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.paste(attrname='paste',\n                expr=<Name.result l.105 at 0x2579b5ba650>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.crop(attrname='crop',\n               expr=<Name.frame l.110 at 0x2579b5bac50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.flip(attrname='flip',\n               expr=<Name.ImageOps l.111 at 0x2579b5bb010>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.copy(attrname='copy',\n               expr=<Name.frame l.112 at 0x2579b5bb290>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.paste(attrname='paste',\n                expr=<Name.result l.113 at 0x2579b5bb3d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.crop(attrname='crop',\n               expr=<Name.frame l.118 at 0x2579b5bb9d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.new(attrname='new',\n              expr=<Name.Image l.120 at 0x2579b5bbd90>)",
              "type": "Instance of PIL.Image.Image"
            },
            {
              "function": "Attribute.paste(attrname='paste',\n                expr=<Name.result l.123 at 0x2579b5bc050>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.paste(attrname='paste',\n                expr=<Name.result l.126 at 0x2579b5bc310>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.mirror(attrname='mirror',\n                 expr=<Name.ImageOps l.126 at 0x2579b5bc410>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.paste(attrname='paste',\n                expr=<Name.result l.129 at 0x2579b5bc710>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.flip(attrname='flip',\n               expr=<Name.ImageOps l.129 at 0x2579b5bc810>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.paste(attrname='paste',\n                expr=<Name.result l.132 at 0x2579b5bcb50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.flip(attrname='flip',\n               expr=<Name.ImageOps l.132 at 0x2579b5bcc50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.mirror(attrname='mirror',\n                 expr=<Name.ImageOps l.132 at 0x2579b5bcd50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.new(attrname='new',\n              expr=<Name.Image l.166 at 0x2579b5be2d0>)",
              "type": "Instance of PIL.Image.Image"
            },
            {
              "function": "Attribute.Draw(attrname='Draw',\n               expr=<Name.ImageDraw l.167 at 0x2579b5be750>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.get_palette(name='get_palette')",
              "type": "Uninferable"
            },
            {
              "function": "Name.enumerate(name='enumerate')",
              "type": "Instance of builtins.enumerate"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Attribute.ellipse(attrname='ellipse',\n                  expr=<Name.draw l.178 at 0x2579b5cc0d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Attribute.rotate(attrname='rotate',\n                 expr=<Name.base_frame l.185 at 0x2579b5cccd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.apply_kaleidoscope(name='apply_kaleidoscope')",
              "type": "Instance of PIL.Image.Image"
            },
            {
              "function": "Name.GIFBuilder(name='GIFBuilder')",
              "type": "Uninferable"
            },
            {
              "function": "Name.create_kaleidoscope_animation(name='create_kaleidoscope_animation')",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.add_frames(attrname='add_frames',\n                     expr=<Name.builder l.210 at 0x2579b5cded0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.save(attrname='save',\n               expr=<Name.builder l.211 at 0x2579b5ce0d0>)",
              "type": "Uninferable"
            }
          ],
          "unresolved_imports": [
            "sys",
            "math",
            "numpy"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\slack-gif-creator\\templates\\morph.py",
        "language": "python",
        "file_size": 11228,
        "line_count": 330,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "create_morph_animation",
            "line_number": 20,
            "parameters": [
              "object1_data",
              "object2_data",
              "num_frames",
              "morph_type",
              "easing",
              "object_type",
              "center_pos",
              "frame_width",
              "frame_height",
              "bg_color"
            ],
            "defaults": 8,
            "decorators": [],
            "docstring": "Create morphing animation between two objects.\n\nArgs:\n    object1_data: First object configuration\n    object2_data: Second object configuration\n    num_frames: Number of frames\n    morph_type: Type of morph effect\n    easing: Easing function\n    object_type: Type of objects\n    center_pos: Center position\n    frame_width: Frame width\n    frame_height: Frame height\n    bg_color: Background color\n\nReturns:\n    List of frames",
            "is_async": false,
            "complexity": 13
          },
          {
            "name": "create_reaction_morph",
            "line_number": 200,
            "parameters": [
              "emoji_start",
              "emoji_end",
              "num_frames",
              "frame_size"
            ],
            "defaults": 2,
            "decorators": [],
            "docstring": "Create quick emoji reaction morph (for emoji GIFs).\n\nArgs:\n    emoji_start: Starting emoji\n    emoji_end: Ending emoji\n    num_frames: Number of frames\n    frame_size: Frame size (square)\n\nReturns:\n    List of frames",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "create_shape_morph",
            "line_number": 232,
            "parameters": [
              "shapes",
              "num_frames",
              "frames_per_shape",
              "frame_width",
              "frame_height",
              "bg_color"
            ],
            "defaults": 5,
            "decorators": [],
            "docstring": "Morph through a sequence of shapes.\n\nArgs:\n    shapes: List of shape dicts with 'radius' and 'color'\n    num_frames: Total number of frames\n    frames_per_shape: Frames to spend on each morph\n    frame_width: Frame width\n    frame_height: Frame height\n    bg_color: Background color\n\nReturns:\n    List of frames",
            "is_async": false,
            "complexity": 2
          }
        ],
        "classes": [],
        "imports": [
          {
            "type": "import",
            "modules": [
              "sys"
            ],
            "line_number": 8
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 9
          },
          {
            "type": "from_import",
            "module": "PIL",
            "names": [
              "Image"
            ],
            "level": 0,
            "line_number": 13
          },
          {
            "type": "import",
            "modules": [
              "numpy"
            ],
            "line_number": 14
          },
          {
            "type": "from_import",
            "module": "core.gif_builder",
            "names": [
              "GIFBuilder"
            ],
            "level": 0,
            "line_number": 15
          },
          {
            "type": "from_import",
            "module": "core.frame_composer",
            "names": [
              "create_blank_frame",
              "draw_emoji_enhanced",
              "draw_circle"
            ],
            "level": 0,
            "line_number": 16
          },
          {
            "type": "from_import",
            "module": "core.easing",
            "names": [
              "interpolate"
            ],
            "level": 0,
            "line_number": 17
          },
          {
            "type": "from_import",
            "module": "core.color_palettes",
            "names": [
              "get_palette"
            ],
            "level": 0,
            "line_number": 316
          },
          {
            "type": "from_import",
            "module": "templates.fade",
            "names": [
              "apply_opacity"
            ],
            "level": 0,
            "line_number": 74
          },
          {
            "type": "import",
            "modules": [
              "math"
            ],
            "line_number": 154
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 16,
          "function_count": 3,
          "class_count": 0,
          "import_count": 10,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Name.create_blank_frame(name='create_blank_frame')",
              "type": "Uninferable"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.new(attrname='new',\n              expr=<Name.Image l.63 at 0x2579b776850>)",
              "type": "Instance of PIL.Image.Image"
            },
            {
              "function": "Name.draw_emoji_enhanced(name='draw_emoji_enhanced')",
              "type": "Uninferable"
            },
            {
              "function": "Name.apply_opacity(name='apply_opacity')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.new(attrname='new',\n              expr=<Name.Image l.78 at 0x2579b777a10>)",
              "type": "Instance of PIL.Image.Image"
            },
            {
              "function": "Name.draw_emoji_enhanced(name='draw_emoji_enhanced')",
              "type": "Uninferable"
            },
            {
              "function": "Name.apply_opacity(name='apply_opacity')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.frame l.91 at 0x2579b77cad0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.alpha_composite(attrname='alpha_composite',\n                          expr=<Name.Image l.92 at 0x2579b77cd50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.alpha_composite(attrname='alpha_composite',\n                          expr=<Name.Image l.93 at 0x2579b77cfd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.frame_rgba l.94 at 0x2579b77d250>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.tuple(name='tuple')",
              "type": "Instance of builtins.tuple"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Name.draw_circle(name='draw_circle')",
              "type": "Uninferable"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Attribute.new(attrname='new',\n              expr=<Name.Image l.122 at 0x2579b77fdd0>)",
              "type": "Instance of PIL.Image.Image"
            },
            {
              "function": "Name.draw_emoji_enhanced(name='draw_emoji_enhanced')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.frame l.131 at 0x2579b784a90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.alpha_composite(attrname='alpha_composite',\n                          expr=<Name.Image l.132 at 0x2579b784d10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.frame l.133 at 0x2579b784f90>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Attribute.new(attrname='new',\n              expr=<Name.Image l.139 at 0x2579b7858d0>)",
              "type": "Instance of PIL.Image.Image"
            },
            {
              "function": "Name.draw_emoji_enhanced(name='draw_emoji_enhanced')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.frame l.148 at 0x2579b786590>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.alpha_composite(attrname='alpha_composite',\n                          expr=<Name.Image l.149 at 0x2579b786850>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.frame l.150 at 0x2579b786ad0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.new(attrname='new',\n              expr=<Name.Image l.174 at 0x2579b78c550>)",
              "type": "Instance of PIL.Image.Image"
            },
            {
              "function": "Name.draw_emoji_enhanced(name='draw_emoji_enhanced')",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Attribute.resize(attrname='resize',\n                 expr=<Name.emoji_canvas l.186 at 0x2579b78d650>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.frame l.191 at 0x2579b78df90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.paste(attrname='paste',\n                expr=<Name.frame_rgba l.192 at 0x2579b78e0d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.frame_rgba l.193 at 0x2579b78e490>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.create_morph_animation(name='create_morph_animation')",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.tuple(name='tuple')",
              "type": "Instance of builtins.tuple"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Name.create_blank_frame(name='create_blank_frame')",
              "type": "Uninferable"
            },
            {
              "function": "Name.draw_circle(name='draw_circle')",
              "type": "Uninferable"
            },
            {
              "function": "Name.GIFBuilder(name='GIFBuilder')",
              "type": "Uninferable"
            },
            {
              "function": "Name.create_morph_animation(name='create_morph_animation')",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.add_frames(attrname='add_frames',\n                     expr=<Name.builder l.299 at 0x2579b798a10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.save(attrname='save',\n               expr=<Name.builder l.300 at 0x2579b798b90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.clear(attrname='clear',\n                expr=<Name.builder l.303 at 0x2579b798e10>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.create_morph_animation(name='create_morph_animation')",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.add_frames(attrname='add_frames',\n                     expr=<Name.builder l.311 at 0x2579b799750>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.save(attrname='save',\n               expr=<Name.builder l.312 at 0x2579b7998d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.clear(attrname='clear',\n                expr=<Name.builder l.315 at 0x2579b799ad0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.get_palette(name='get_palette')",
              "type": "Uninferable"
            },
            {
              "function": "Name.create_shape_morph(name='create_shape_morph')",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.add_frames(attrname='add_frames',\n                     expr=<Name.builder l.326 at 0x2579b79ac90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.save(attrname='save',\n               expr=<Name.builder l.327 at 0x2579b79ae50>)",
              "type": "Uninferable"
            }
          ],
          "unresolved_imports": [
            "sys",
            "numpy",
            "math"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\slack-gif-creator\\templates\\move.py",
        "language": "python",
        "file_size": 9382,
        "line_count": 294,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "create_move_animation",
            "line_number": 19,
            "parameters": [
              "object_type",
              "object_data",
              "start_pos",
              "end_pos",
              "num_frames",
              "motion_type",
              "easing",
              "motion_params",
              "frame_width",
              "frame_height",
              "bg_color"
            ],
            "defaults": 11,
            "decorators": [],
            "docstring": "Create frames showing object moving along a path.\n\nArgs:\n    object_type: 'circle', 'emoji', or 'custom'\n    object_data: Data for the object\n    start_pos: Starting (x, y) position\n    end_pos: Ending (x, y) position\n    num_frames: Number of frames\n    motion_type: Type of motion path\n    easing: Easing function name\n    motion_params: Additional parameters for motion (e.g., {'arc_height': 100})\n    frame_width: Frame width\n    frame_height: Frame height\n    bg_color: Background color\n\nReturns:\n    List of frames",
            "is_async": false,
            "complexity": 14
          },
          {
            "name": "create_path_from_points",
            "line_number": 160,
            "parameters": [
              "points",
              "num_frames",
              "easing"
            ],
            "defaults": 2,
            "decorators": [],
            "docstring": "Create a smooth path through multiple points.\n\nArgs:\n    points: List of (x, y) waypoints\n    num_frames: Total number of frames\n    easing: Easing between points\n\nReturns:\n    List of (x, y) positions for each frame",
            "is_async": false,
            "complexity": 5
          },
          {
            "name": "apply_trail_effect",
            "line_number": 199,
            "parameters": [
              "frames",
              "trail_length",
              "fade_alpha"
            ],
            "defaults": 2,
            "decorators": [],
            "docstring": "Add motion trail effect to moving object.\n\nArgs:\n    frames: List of frames with moving object\n    trail_length: Number of previous frames to blend\n    fade_alpha: Opacity of trail frames\n\nReturns:\n    List of frames with trail effect",
            "is_async": false,
            "complexity": 3
          }
        ],
        "classes": [],
        "imports": [
          {
            "type": "import",
            "modules": [
              "sys"
            ],
            "line_number": 8
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 9
          },
          {
            "type": "import",
            "modules": [
              "math"
            ],
            "line_number": 10
          },
          {
            "type": "from_import",
            "module": "core.gif_builder",
            "names": [
              "GIFBuilder"
            ],
            "level": 0,
            "line_number": 14
          },
          {
            "type": "from_import",
            "module": "core.frame_composer",
            "names": [
              "create_blank_frame",
              "draw_circle",
              "draw_emoji_enhanced"
            ],
            "level": 0,
            "line_number": 15
          },
          {
            "type": "from_import",
            "module": "core.easing",
            "names": [
              "interpolate",
              "calculate_arc_motion"
            ],
            "level": 0,
            "line_number": 16
          },
          {
            "type": "from_import",
            "module": "PIL",
            "names": [
              "Image",
              "ImageChops"
            ],
            "level": 0,
            "line_number": 212
          },
          {
            "type": "import",
            "modules": [
              "numpy"
            ],
            "line_number": 213
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 22,
          "function_count": 3,
          "class_count": 0,
          "import_count": 8,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Name.create_blank_frame(name='create_blank_frame')",
              "type": "Uninferable"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.motion_params l.77 at 0x2579b7a72d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.calculate_arc_motion(name='calculate_arc_motion')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.motion_params l.82 at 0x2579b7a7ad0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.motion_params l.83 at 0x2579b7a7f50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.motion_params l.84 at 0x2579b7b4250>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.motion_params l.85 at 0x2579b7b4510>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.motion_params l.95 at 0x2579b7b5610>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.motion_params l.96 at 0x2579b7b58d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.motion_params l.122 at 0x2579b7c4110>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.draw_circle(name='draw_circle')",
              "type": "Uninferable"
            },
            {
              "function": "Name.draw_emoji_enhanced(name='draw_emoji_enhanced')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.object_data l.152 at 0x2579b7c7450>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.enumerate(name='enumerate')",
              "type": "Instance of builtins.enumerate"
            },
            {
              "function": "Attribute.copy(attrname='copy',\n               expr=<Name.frame l.219 at 0x2579b7cbd50>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Attribute.array(attrname='array',\n                expr=<Name.np l.229 at 0x2579b7d0890>)",
              "type": "Instance of .ndarray"
            },
            {
              "function": "Attribute.array(attrname='array',\n                expr=<Name.np l.230 at 0x2579b7d0bd0>)",
              "type": "Instance of .ndarray"
            },
            {
              "function": "Attribute.fromarray(attrname='fromarray',\n                    expr=<Name.Image l.233 at 0x2579b7d1290>)",
              "type": "Instance of PIL.Image.Image"
            },
            {
              "function": "Attribute.astype(attrname='astype',\n                 expr=<Name.blended l.233 at 0x2579b7d12d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.GIFBuilder(name='GIFBuilder')",
              "type": "Uninferable"
            },
            {
              "function": "Name.create_move_animation(name='create_move_animation')",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.add_frames(attrname='add_frames',\n                     expr=<Name.builder l.255 at 0x2579b7d2810>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.save(attrname='save',\n               expr=<Name.builder l.256 at 0x2579b7d2990>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.clear(attrname='clear',\n                expr=<Name.builder l.259 at 0x2579b7d2c10>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.create_move_animation(name='create_move_animation')",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.add_frames(attrname='add_frames',\n                     expr=<Name.builder l.270 at 0x2579b7d3790>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.save(attrname='save',\n               expr=<Name.builder l.271 at 0x2579b7d3910>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.clear(attrname='clear',\n                expr=<Name.builder l.274 at 0x2579b7d3b10>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.create_move_animation(name='create_move_animation')",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.add_frames(attrname='add_frames',\n                     expr=<Name.builder l.290 at 0x2579b7dc990>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.save(attrname='save',\n               expr=<Name.builder l.291 at 0x2579b7dcad0>)",
              "type": "Uninferable"
            }
          ],
          "unresolved_imports": [
            "sys",
            "math",
            "numpy"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\slack-gif-creator\\templates\\pulse.py",
        "language": "python",
        "file_size": 8616,
        "line_count": 269,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "create_pulse_animation",
            "line_number": 20,
            "parameters": [
              "object_type",
              "object_data",
              "num_frames",
              "pulse_type",
              "scale_range",
              "pulses",
              "center_pos",
              "frame_width",
              "frame_height",
              "bg_color"
            ],
            "defaults": 10,
            "decorators": [],
            "docstring": "Create pulsing/scaling animation.\n\nArgs:\n    object_type: 'emoji', 'circle', 'text'\n    object_data: Object configuration\n    num_frames: Number of frames\n    pulse_type: Type of pulsing motion\n    scale_range: (min_scale, max_scale) tuple\n    pulses: Number of pulses in animation\n    center_pos: Center position\n    frame_width: Frame width\n    frame_height: Frame height\n    bg_color: Background color\n\nReturns:\n    List of frames",
            "is_async": false,
            "complexity": 18
          },
          {
            "name": "create_attention_pulse",
            "line_number": 156,
            "parameters": [
              "emoji",
              "num_frames",
              "frame_size",
              "bg_color"
            ],
            "defaults": 4,
            "decorators": [],
            "docstring": "Create attention-grabbing pulse (good for emoji GIFs).\n\nArgs:\n    emoji: Emoji to pulse\n    num_frames: Number of frames\n    frame_size: Frame size (square)\n    bg_color: Background color\n\nReturns:\n    List of frames optimized for emoji size",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "create_breathing_animation",
            "line_number": 188,
            "parameters": [
              "object_type",
              "object_data",
              "num_frames",
              "breaths",
              "scale_range",
              "frame_width",
              "frame_height",
              "bg_color"
            ],
            "defaults": 8,
            "decorators": [],
            "docstring": "Create slow, calming breathing animation (in and out).\n\nArgs:\n    object_type: Type of object\n    object_data: Object configuration\n    num_frames: Number of frames\n    breaths: Number of breathing cycles\n    scale_range: Min/max scale\n    frame_width: Frame width\n    frame_height: Frame height\n    bg_color: Background color\n\nReturns:\n    List of frames",
            "is_async": false,
            "complexity": 2
          }
        ],
        "classes": [],
        "imports": [
          {
            "type": "import",
            "modules": [
              "sys"
            ],
            "line_number": 8
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 9
          },
          {
            "type": "import",
            "modules": [
              "math"
            ],
            "line_number": 10
          },
          {
            "type": "from_import",
            "module": "PIL",
            "names": [
              "Image"
            ],
            "level": 0,
            "line_number": 14
          },
          {
            "type": "from_import",
            "module": "core.gif_builder",
            "names": [
              "GIFBuilder"
            ],
            "level": 0,
            "line_number": 15
          },
          {
            "type": "from_import",
            "module": "core.frame_composer",
            "names": [
              "create_blank_frame",
              "draw_emoji_enhanced",
              "draw_circle"
            ],
            "level": 0,
            "line_number": 16
          },
          {
            "type": "from_import",
            "module": "core.easing",
            "names": [
              "interpolate"
            ],
            "level": 0,
            "line_number": 17
          },
          {
            "type": "from_import",
            "module": "core.typography",
            "names": [
              "draw_text_with_outline"
            ],
            "level": 0,
            "line_number": 137
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 21,
          "function_count": 3,
          "class_count": 0,
          "import_count": 8,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Name.create_blank_frame(name='create_blank_frame')",
              "type": "Uninferable"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.draw_emoji_enhanced(name='draw_emoji_enhanced')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.object_data l.123 at 0x2579b9ef810>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.draw_circle(name='draw_circle')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.object_data l.138 at 0x2579b9f4810>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.draw_text_with_outline(name='draw_text_with_outline')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.object_data l.142 at 0x2579b9f4d90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.object_data l.145 at 0x2579b9f4f90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.object_data l.146 at 0x2579b9f5390>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.create_pulse_animation(name='create_pulse_animation')",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Name.create_pulse_animation(name='create_pulse_animation')",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Name.GIFBuilder(name='GIFBuilder')",
              "type": "Uninferable"
            },
            {
              "function": "Name.create_pulse_animation(name='create_pulse_animation')",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.add_frames(attrname='add_frames',\n                     expr=<Name.builder l.246 at 0x2579b9f9fd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.save(attrname='save',\n               expr=<Name.builder l.247 at 0x2579b9fa150>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.clear(attrname='clear',\n                expr=<Name.builder l.250 at 0x2579b9fa3d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.create_pulse_animation(name='create_pulse_animation')",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.add_frames(attrname='add_frames',\n                     expr=<Name.builder l.259 at 0x2579b9facd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.save(attrname='save',\n               expr=<Name.builder l.260 at 0x2579b9fae50>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.GIFBuilder(name='GIFBuilder')",
              "type": "Uninferable"
            },
            {
              "function": "Name.create_attention_pulse(name='create_attention_pulse')",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.add_frames(attrname='add_frames',\n                     expr=<Name.builder l.265 at 0x2579b9fb650>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.save(attrname='save',\n               expr=<Name.builder l.266 at 0x2579b9fb810>)",
              "type": "Uninferable"
            }
          ],
          "unresolved_imports": [
            "sys",
            "math"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\slack-gif-creator\\templates\\shake.py",
        "language": "python",
        "file_size": 3731,
        "line_count": 127,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "create_shake_animation",
            "line_number": 19,
            "parameters": [
              "object_type",
              "object_data",
              "num_frames",
              "shake_intensity",
              "center_x",
              "center_y",
              "direction",
              "frame_width",
              "frame_height",
              "bg_color"
            ],
            "defaults": 10,
            "decorators": [],
            "docstring": "Create frames for a shaking animation.\n\nArgs:\n    object_type: 'circle', 'emoji', 'text', or 'custom'\n    object_data: Data for the object\n    num_frames: Number of frames\n    shake_intensity: Maximum shake displacement in pixels\n    center_x: Center X position\n    center_y: Center Y position\n    direction: 'horizontal', 'vertical', or 'both'\n    frame_width: Frame width\n    frame_height: Frame height\n    bg_color: Background color\n\nReturns:\n    List of frames",
            "is_async": false,
            "complexity": 10
          }
        ],
        "classes": [],
        "imports": [
          {
            "type": "import",
            "modules": [
              "sys"
            ],
            "line_number": 8
          },
          {
            "type": "import",
            "modules": [
              "math"
            ],
            "line_number": 9
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 10
          },
          {
            "type": "from_import",
            "module": "core.gif_builder",
            "names": [
              "GIFBuilder"
            ],
            "level": 0,
            "line_number": 14
          },
          {
            "type": "from_import",
            "module": "core.frame_composer",
            "names": [
              "create_blank_frame",
              "draw_circle",
              "draw_emoji",
              "draw_text"
            ],
            "level": 0,
            "line_number": 15
          },
          {
            "type": "from_import",
            "module": "core.easing",
            "names": [
              "ease_out_quad"
            ],
            "level": 0,
            "line_number": 16
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 10,
          "function_count": 1,
          "class_count": 0,
          "import_count": 6,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Name.create_blank_frame(name='create_blank_frame')",
              "type": "Uninferable"
            },
            {
              "function": "Name.ease_out_quad(name='ease_out_quad')",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.draw_emoji(name='draw_emoji')",
              "type": "Uninferable"
            },
            {
              "function": "Name.draw_text(name='draw_text')",
              "type": "Uninferable"
            },
            {
              "function": "Name.draw_circle(name='draw_circle')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.object_data l.103 at 0x2579b664690>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.object_data l.104 at 0x2579b664410>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.GIFBuilder(name='GIFBuilder')",
              "type": "Uninferable"
            },
            {
              "function": "Name.create_shake_animation(name='create_shake_animation')",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.add_frames(attrname='add_frames',\n                     expr=<Name.builder l.126 at 0x2579b65c9d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.save(attrname='save',\n               expr=<Name.builder l.127 at 0x2579b65c950>)",
              "type": "Uninferable"
            }
          ],
          "unresolved_imports": [
            "sys",
            "math"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\slack-gif-creator\\templates\\slide.py",
        "language": "python",
        "file_size": 9343,
        "line_count": 292,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "create_slide_animation",
            "line_number": 19,
            "parameters": [
              "object_type",
              "object_data",
              "num_frames",
              "direction",
              "slide_type",
              "easing",
              "overshoot",
              "final_pos",
              "frame_width",
              "frame_height",
              "bg_color"
            ],
            "defaults": 11,
            "decorators": [],
            "docstring": "Create slide animation.\n\nArgs:\n    object_type: 'emoji', 'text'\n    object_data: Object configuration\n    num_frames: Number of frames\n    direction: Direction of slide\n    slide_type: Type of slide (in/out/across)\n    easing: Easing function\n    overshoot: Add overshoot/bounce at end\n    final_pos: Final position (None = center)\n    frame_width: Frame width\n    frame_height: Frame height\n    bg_color: Background color\n\nReturns:\n    List of frames",
            "is_async": false,
            "complexity": 19
          },
          {
            "name": "create_multi_slide",
            "line_number": 140,
            "parameters": [
              "objects",
              "num_frames",
              "stagger_delay",
              "frame_width",
              "frame_height",
              "bg_color"
            ],
            "defaults": 5,
            "decorators": [],
            "docstring": "Create animation with multiple objects sliding in sequence.\n\nArgs:\n    objects: List of object configs with 'type', 'data', 'direction', 'final_pos'\n    num_frames: Number of frames\n    stagger_delay: Frames between each object starting\n    frame_width: Frame width\n    frame_height: Frame height\n    bg_color: Background color\n\nReturns:\n    List of frames",
            "is_async": false,
            "complexity": 11
          }
        ],
        "classes": [],
        "imports": [
          {
            "type": "import",
            "modules": [
              "sys"
            ],
            "line_number": 8
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 9
          },
          {
            "type": "from_import",
            "module": "PIL",
            "names": [
              "Image"
            ],
            "level": 0,
            "line_number": 13
          },
          {
            "type": "from_import",
            "module": "core.gif_builder",
            "names": [
              "GIFBuilder"
            ],
            "level": 0,
            "line_number": 14
          },
          {
            "type": "from_import",
            "module": "core.frame_composer",
            "names": [
              "create_blank_frame",
              "draw_emoji_enhanced"
            ],
            "level": 0,
            "line_number": 15
          },
          {
            "type": "from_import",
            "module": "core.easing",
            "names": [
              "interpolate"
            ],
            "level": 0,
            "line_number": 16
          },
          {
            "type": "from_import",
            "module": "core.typography",
            "names": [
              "draw_text_with_outline"
            ],
            "level": 0,
            "line_number": 123
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 30,
          "function_count": 2,
          "class_count": 0,
          "import_count": 7,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.object_data l.62 at 0x2579ba337d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Name.create_blank_frame(name='create_blank_frame')",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.draw_emoji_enhanced(name='draw_emoji_enhanced')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.object_data l.119 at 0x2579ba422d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.draw_text_with_outline(name='draw_text_with_outline')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.object_data l.126 at 0x2579ba429d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.object_data l.128 at 0x2579ba42d90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.object_data l.129 at 0x2579ba42f10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.object_data l.130 at 0x2579ba43210>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Name.create_blank_frame(name='create_blank_frame')",
              "type": "Uninferable"
            },
            {
              "function": "Name.enumerate(name='enumerate')",
              "type": "Instance of builtins.enumerate"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.obj l.182 at 0x2579ba49ed0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.obj l.183 at 0x2579ba4a190>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.obj l.184 at 0x2579ba4a5d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.obj l.185 at 0x2579ba4a850>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.obj l.186 at 0x2579ba4acd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.obj_data l.189 at 0x2579ba4af90>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.draw_emoji_enhanced(name='draw_emoji_enhanced')",
              "type": "Uninferable"
            },
            {
              "function": "Name.GIFBuilder(name='GIFBuilder')",
              "type": "Uninferable"
            },
            {
              "function": "Name.create_slide_animation(name='create_slide_animation')",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.add_frames(attrname='add_frames',\n                     expr=<Name.builder l.249 at 0x2579b972fd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.save(attrname='save',\n               expr=<Name.builder l.250 at 0x2579b9722d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.clear(attrname='clear',\n                expr=<Name.builder l.253 at 0x2579b65e510>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.create_slide_animation(name='create_slide_animation')",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.add_frames(attrname='add_frames',\n                     expr=<Name.builder l.262 at 0x2579ba53190>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.save(attrname='save',\n               expr=<Name.builder l.263 at 0x2579ba53310>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.clear(attrname='clear',\n                expr=<Name.builder l.266 at 0x2579ba53510>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.create_multi_slide(name='create_multi_slide')",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.add_frames(attrname='add_frames',\n                     expr=<Name.builder l.288 at 0x2579ba54a50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.save(attrname='save',\n               expr=<Name.builder l.289 at 0x2579ba54c10>)",
              "type": "Uninferable"
            }
          ],
          "unresolved_imports": [
            "sys"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\slack-gif-creator\\templates\\spin.py",
        "language": "python",
        "file_size": 9084,
        "line_count": 270,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "create_spin_animation",
            "line_number": 20,
            "parameters": [
              "object_type",
              "object_data",
              "num_frames",
              "rotation_type",
              "full_rotations",
              "easing",
              "center_pos",
              "frame_width",
              "frame_height",
              "bg_color"
            ],
            "defaults": 10,
            "decorators": [],
            "docstring": "Create spinning/rotating animation.\n\nArgs:\n    object_type: 'emoji', 'image', 'text'\n    object_data: Object configuration\n    num_frames: Number of frames\n    rotation_type: Type of rotation\n    full_rotations: Number of complete 360° rotations\n    easing: Easing function for rotation speed\n    center_pos: Center position for rotation\n    frame_width: Frame width\n    frame_height: Frame height\n    bg_color: Background color\n\nReturns:\n    List of frames",
            "is_async": false,
            "complexity": 12
          },
          {
            "name": "create_loading_spinner",
            "line_number": 149,
            "parameters": [
              "num_frames",
              "spinner_type",
              "size",
              "color",
              "frame_width",
              "frame_height",
              "bg_color"
            ],
            "defaults": 7,
            "decorators": [],
            "docstring": "Create a loading spinner animation.\n\nArgs:\n    num_frames: Number of frames\n    spinner_type: Type of spinner\n    size: Spinner size\n    color: Spinner color\n    frame_width: Frame width\n    frame_height: Frame height\n    bg_color: Background color\n\nReturns:\n    List of frames",
            "is_async": false,
            "complexity": 6
          }
        ],
        "classes": [],
        "imports": [
          {
            "type": "import",
            "modules": [
              "sys"
            ],
            "line_number": 8
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 9
          },
          {
            "type": "import",
            "modules": [
              "math"
            ],
            "line_number": 10
          },
          {
            "type": "from_import",
            "module": "PIL",
            "names": [
              "Image"
            ],
            "level": 0,
            "line_number": 14
          },
          {
            "type": "from_import",
            "module": "core.gif_builder",
            "names": [
              "GIFBuilder"
            ],
            "level": 0,
            "line_number": 15
          },
          {
            "type": "from_import",
            "module": "core.frame_composer",
            "names": [
              "create_blank_frame",
              "draw_emoji_enhanced",
              "draw_circle"
            ],
            "level": 0,
            "line_number": 16
          },
          {
            "type": "from_import",
            "module": "core.easing",
            "names": [
              "interpolate"
            ],
            "level": 0,
            "line_number": 17
          },
          {
            "type": "from_import",
            "module": "PIL",
            "names": [
              "ImageDraw"
            ],
            "level": 0,
            "line_number": 173
          },
          {
            "type": "from_import",
            "module": "core.frame_composer",
            "names": [
              "draw_emoji_enhanced"
            ],
            "level": 0,
            "line_number": 83
          },
          {
            "type": "from_import",
            "module": "core.typography",
            "names": [
              "draw_text_with_outline"
            ],
            "level": 0,
            "line_number": 101
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 18,
          "function_count": 2,
          "class_count": 0,
          "import_count": 10,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Name.create_blank_frame(name='create_blank_frame')",
              "type": "Uninferable"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Attribute.new(attrname='new',\n              expr=<Name.Image l.80 at 0x2579ba74350>)",
              "type": "Instance of PIL.Image.Image"
            },
            {
              "function": "Name.draw_emoji_enhanced(name='draw_emoji_enhanced')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.rotate(attrname='rotate',\n                 expr=<Name.emoji_canvas l.93 at 0x2579ba75110>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.paste(attrname='paste',\n                expr=<Name.frame l.98 at 0x2579ba75990>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.object_data l.103 at 0x2579ba75f50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.object_data l.104 at 0x2579ba76210>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.new(attrname='new',\n              expr=<Name.Image l.107 at 0x2579ba76710>)",
              "type": "Instance of PIL.Image.Image"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.text_canvas l.110 at 0x2579ba76c50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.paste(attrname='paste',\n                expr=<Name.text_canvas_rgb l.111 at 0x2579ba76e10>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.draw_text_with_outline(name='draw_text_with_outline')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.object_data l.117 at 0x2579ba774d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.object_data l.118 at 0x2579ba77890>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.text_canvas_rgb l.124 at 0x2579ba77dd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.getdata(attrname='getdata',\n                  expr=<Name.text_canvas l.127 at 0x2579ba77fd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.putdata(attrname='putdata',\n                  expr=<Name.text_canvas l.134 at 0x2579ba78c50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.rotate(attrname='rotate',\n                 expr=<Name.text_canvas l.137 at 0x2579ba78ed0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.frame l.140 at 0x2579ba79250>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.alpha_composite(attrname='alpha_composite',\n                          expr=<Name.Image l.141 at 0x2579ba794d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.frame_rgba l.142 at 0x2579ba79750>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Name.create_blank_frame(name='create_blank_frame')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.Draw(attrname='Draw',\n               expr=<Name.ImageDraw l.179 at 0x2579ba7b890>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Name.tuple(name='tuple')",
              "type": "Instance of builtins.tuple"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Attribute.ellipse(attrname='ellipse',\n                  expr=<Name.draw l.196 at 0x2579ba81a50>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Attribute.arc(attrname='arc',\n              expr=<Name.draw l.213 at 0x2579ba83050>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.new(attrname='new',\n              expr=<Name.Image l.218 at 0x2579ba83710>)",
              "type": "Instance of PIL.Image.Image"
            },
            {
              "function": "Name.draw_emoji_enhanced(name='draw_emoji_enhanced')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.rotate(attrname='rotate',\n                 expr=<Name.emoji_canvas l.226 at 0x2579ba88390>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.paste(attrname='paste',\n                expr=<Name.frame l.227 at 0x2579ba88690>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.GIFBuilder(name='GIFBuilder')",
              "type": "Uninferable"
            },
            {
              "function": "Name.create_spin_animation(name='create_spin_animation')",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.add_frames(attrname='add_frames',\n                     expr=<Name.builder l.248 at 0x2579ba89a10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.save(attrname='save',\n               expr=<Name.builder l.249 at 0x2579ba89b90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.clear(attrname='clear',\n                expr=<Name.builder l.252 at 0x2579ba89e10>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.create_spin_animation(name='create_spin_animation')",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.add_frames(attrname='add_frames',\n                     expr=<Name.builder l.260 at 0x2579ba8a5d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.save(attrname='save',\n               expr=<Name.builder l.261 at 0x2579ba8a750>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.GIFBuilder(name='GIFBuilder')",
              "type": "Uninferable"
            },
            {
              "function": "Name.create_loading_spinner(name='create_loading_spinner')",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.add_frames(attrname='add_frames',\n                     expr=<Name.builder l.266 at 0x2579ba8af50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.save(attrname='save',\n               expr=<Name.builder l.267 at 0x2579ba8b110>)",
              "type": "Uninferable"
            }
          ],
          "unresolved_imports": [
            "sys",
            "math"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\slack-gif-creator\\templates\\wiggle.py",
        "language": "python",
        "file_size": 10045,
        "line_count": 301,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "create_wiggle_animation",
            "line_number": 20,
            "parameters": [
              "object_type",
              "object_data",
              "num_frames",
              "wiggle_type",
              "intensity",
              "cycles",
              "center_pos",
              "frame_width",
              "frame_height",
              "bg_color"
            ],
            "defaults": 10,
            "decorators": [],
            "docstring": "Create wiggle/wobble animation.\n\nArgs:\n    object_type: 'emoji', 'text'\n    object_data: Object configuration\n    num_frames: Number of frames\n    wiggle_type: Type of wiggle motion\n    intensity: Wiggle intensity multiplier\n    cycles: Number of wiggle cycles\n    center_pos: Center position\n    frame_width: Frame width\n    frame_height: Frame height\n    bg_color: Background color\n\nReturns:\n    List of frames",
            "is_async": false,
            "complexity": 18
          },
          {
            "name": "create_excited_wiggle",
            "line_number": 233,
            "parameters": [
              "emoji",
              "num_frames",
              "frame_size"
            ],
            "defaults": 3,
            "decorators": [],
            "docstring": "Create excited wiggle for emoji GIFs.\n\nArgs:\n    emoji: Emoji to wiggle\n    num_frames: Number of frames\n    frame_size: Frame size (square)\n\nReturns:\n    List of frames",
            "is_async": false,
            "complexity": 1
          }
        ],
        "classes": [],
        "imports": [
          {
            "type": "import",
            "modules": [
              "sys"
            ],
            "line_number": 8
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 9
          },
          {
            "type": "import",
            "modules": [
              "math"
            ],
            "line_number": 10
          },
          {
            "type": "from_import",
            "module": "PIL",
            "names": [
              "Image"
            ],
            "level": 0,
            "line_number": 14
          },
          {
            "type": "from_import",
            "module": "core.gif_builder",
            "names": [
              "GIFBuilder"
            ],
            "level": 0,
            "line_number": 15
          },
          {
            "type": "from_import",
            "module": "core.frame_composer",
            "names": [
              "create_blank_frame",
              "draw_emoji_enhanced"
            ],
            "level": 0,
            "line_number": 16
          },
          {
            "type": "from_import",
            "module": "core.easing",
            "names": [
              "interpolate"
            ],
            "level": 0,
            "line_number": 17
          },
          {
            "type": "from_import",
            "module": "core.typography",
            "names": [
              "draw_text_with_outline"
            ],
            "level": 0,
            "line_number": 183
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 19,
          "function_count": 2,
          "class_count": 0,
          "import_count": 8,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Name.create_blank_frame(name='create_blank_frame')",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Attribute.new(attrname='new',\n              expr=<Name.Image l.136 at 0x2579bad0f90>)",
              "type": "Instance of PIL.Image.Image"
            },
            {
              "function": "Name.draw_emoji_enhanced(name='draw_emoji_enhanced')",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Attribute.resize(attrname='resize',\n                 expr=<Name.emoji_canvas l.150 at 0x2579bad24d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.rotate(attrname='rotate',\n                 expr=<Name.emoji_canvas l.157 at 0x2579bad2dd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.frame l.167 at 0x2579bad3a50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.paste(attrname='paste',\n                expr=<Name.frame_rgba l.168 at 0x2579bad3c10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.frame_rgba l.169 at 0x2579bad3f90>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.draw_emoji_enhanced(name='draw_emoji_enhanced')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.object_data l.179 at 0x2579bad8e10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.new(attrname='new',\n              expr=<Name.Image l.187 at 0x2579bad9590>)",
              "type": "Instance of PIL.Image.Image"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.text_canvas l.190 at 0x2579bad9a90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.paste(attrname='paste',\n                expr=<Name.text_canvas_rgb l.191 at 0x2579bad9c50>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.draw_text_with_outline(name='draw_text_with_outline')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.object_data l.195 at 0x2579bada110>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.object_data l.197 at 0x2579bada510>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.object_data l.198 at 0x2579bada750>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.object_data l.199 at 0x2579badaa50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.text_canvas_rgb l.205 at 0x2579badaf90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.getdata(attrname='getdata',\n                  expr=<Name.text_canvas l.206 at 0x2579badb1d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.putdata(attrname='putdata',\n                  expr=<Name.text_canvas l.213 at 0x2579badbdd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.rotate(attrname='rotate',\n                 expr=<Name.text_canvas l.217 at 0x2579bae0310>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Attribute.crop(attrname='crop',\n               expr=<Name.text_canvas l.222 at 0x2579bae1010>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.frame l.224 at 0x2579bae14d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.alpha_composite(attrname='alpha_composite',\n                          expr=<Name.Image l.225 at 0x2579bae1710>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.frame l.226 at 0x2579bae1990>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.create_wiggle_animation(name='create_wiggle_animation')",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Name.GIFBuilder(name='GIFBuilder')",
              "type": "Uninferable"
            },
            {
              "function": "Name.create_wiggle_animation(name='create_wiggle_animation')",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.add_frames(attrname='add_frames',\n                     expr=<Name.builder l.278 at 0x2579bae3e50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.save(attrname='save',\n               expr=<Name.builder l.279 at 0x2579bae3fd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.clear(attrname='clear',\n                expr=<Name.builder l.282 at 0x2579bae8290>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.create_wiggle_animation(name='create_wiggle_animation')",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.add_frames(attrname='add_frames',\n                     expr=<Name.builder l.291 at 0x2579bae8ad0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.save(attrname='save',\n               expr=<Name.builder l.292 at 0x2579bae8c50>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.GIFBuilder(name='GIFBuilder')",
              "type": "Uninferable"
            },
            {
              "function": "Name.create_excited_wiggle(name='create_excited_wiggle')",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.add_frames(attrname='add_frames',\n                     expr=<Name.builder l.297 at 0x2579bae9450>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.save(attrname='save',\n               expr=<Name.builder l.298 at 0x2579bae9610>)",
              "type": "Uninferable"
            }
          ],
          "unresolved_imports": [
            "sys",
            "math"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\slack-gif-creator\\templates\\zoom.py",
        "language": "python",
        "file_size": 10093,
        "line_count": 313,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "create_zoom_animation",
            "line_number": 20,
            "parameters": [
              "object_type",
              "object_data",
              "num_frames",
              "zoom_type",
              "scale_range",
              "easing",
              "add_motion_blur",
              "center_pos",
              "frame_width",
              "frame_height",
              "bg_color"
            ],
            "defaults": 11,
            "decorators": [],
            "docstring": "Create zoom animation.\n\nArgs:\n    object_type: 'emoji', 'text', 'image'\n    object_data: Object configuration\n    num_frames: Number of frames\n    zoom_type: Type of zoom effect\n    scale_range: (start_scale, end_scale) tuple\n    easing: Easing function\n    add_motion_blur: Add blur for speed effect\n    center_pos: Center position\n    frame_width: Frame width\n    frame_height: Frame height\n    bg_color: Background color\n\nReturns:\n    List of frames",
            "is_async": false,
            "complexity": 14
          },
          {
            "name": "create_explosion_zoom",
            "line_number": 151,
            "parameters": [
              "emoji",
              "num_frames",
              "frame_width",
              "frame_height",
              "bg_color"
            ],
            "defaults": 5,
            "decorators": [],
            "docstring": "Create dramatic explosion zoom effect.\n\nArgs:\n    emoji: Emoji to explode\n    num_frames: Number of frames\n    frame_width: Frame width\n    frame_height: Frame height\n    bg_color: Background color\n\nReturns:\n    List of frames",
            "is_async": false,
            "complexity": 3
          },
          {
            "name": "create_mind_blown_zoom",
            "line_number": 221,
            "parameters": [
              "emoji",
              "num_frames",
              "frame_width",
              "frame_height",
              "bg_color"
            ],
            "defaults": 5,
            "decorators": [],
            "docstring": "Create \"mind blown\" dramatic zoom with shake.\n\nArgs:\n    emoji: Emoji to use\n    num_frames: Number of frames\n    frame_width: Frame width\n    frame_height: Frame height\n    bg_color: Background color\n\nReturns:\n    List of frames",
            "is_async": false,
            "complexity": 3
          }
        ],
        "classes": [],
        "imports": [
          {
            "type": "import",
            "modules": [
              "sys"
            ],
            "line_number": 8
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 9
          },
          {
            "type": "import",
            "modules": [
              "math"
            ],
            "line_number": 10
          },
          {
            "type": "from_import",
            "module": "PIL",
            "names": [
              "Image",
              "ImageFilter"
            ],
            "level": 0,
            "line_number": 14
          },
          {
            "type": "from_import",
            "module": "core.gif_builder",
            "names": [
              "GIFBuilder"
            ],
            "level": 0,
            "line_number": 15
          },
          {
            "type": "from_import",
            "module": "core.frame_composer",
            "names": [
              "create_blank_frame",
              "draw_emoji_enhanced"
            ],
            "level": 0,
            "line_number": 16
          },
          {
            "type": "from_import",
            "module": "core.easing",
            "names": [
              "interpolate"
            ],
            "level": 0,
            "line_number": 17
          },
          {
            "type": "from_import",
            "module": "core.typography",
            "names": [
              "draw_text_with_outline"
            ],
            "level": 0,
            "line_number": 121
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 20,
          "function_count": 3,
          "class_count": 0,
          "import_count": 8,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.object_data l.59 at 0x2579bb0c350>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.object_data l.59 at 0x2579bb0c510>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.create_blank_frame(name='create_blank_frame')",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Attribute.new(attrname='new',\n              expr=<Name.Image l.95 at 0x2579bb14110>)",
              "type": "Instance of PIL.Image.Image"
            },
            {
              "function": "Name.draw_emoji_enhanced(name='draw_emoji_enhanced')",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Attribute.filter(attrname='filter',\n                 expr=<Name.emoji_canvas l.108 at 0x2579bb15810>)",
              "type": "Instance of PIL.Image.Image"
            },
            {
              "function": "Attribute.GaussianBlur(attrname='GaussianBlur',\n                       expr=<Name.ImageFilter l.108 at 0x2579bb15850>)",
              "type": "Instance of PIL.ImageFilter.GaussianBlur"
            },
            {
              "function": "Attribute.crop(attrname='crop',\n               expr=<Name.emoji_canvas l.113 at 0x2579bb16050>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.frame l.116 at 0x2579bb164d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.alpha_composite(attrname='alpha_composite',\n                          expr=<Name.Image l.117 at 0x2579bb16750>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.frame l.118 at 0x2579bb169d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Attribute.new(attrname='new',\n              expr=<Name.Image l.128 at 0x2579bb17750>)",
              "type": "Instance of PIL.Image.Image"
            },
            {
              "function": "Name.draw_text_with_outline(name='draw_text_with_outline')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.object_data l.132 at 0x2579bb17bd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.object_data l.135 at 0x2579bb1c090>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.object_data l.136 at 0x2579bb1c3d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Attribute.crop(attrname='crop',\n               expr=<Name.text_canvas l.144 at 0x2579bb1cfd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Name.create_blank_frame(name='create_blank_frame')",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Attribute.new(attrname='new',\n              expr=<Name.Image l.189 at 0x2579bb1ff90>)",
              "type": "Instance of PIL.Image.Image"
            },
            {
              "function": "Name.draw_emoji_enhanced(name='draw_emoji_enhanced')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.rotate(attrname='rotate',\n                 expr=<Name.emoji_canvas l.200 at 0x2579bb24bd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Attribute.filter(attrname='filter',\n                 expr=<Name.emoji_canvas l.205 at 0x2579bb255d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.GaussianBlur(attrname='GaussianBlur',\n                       expr=<Name.ImageFilter l.205 at 0x2579bb25610>)",
              "type": "Instance of PIL.ImageFilter.GaussianBlur"
            },
            {
              "function": "Attribute.crop(attrname='crop',\n               expr=<Name.emoji_canvas l.210 at 0x2579bb25e10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.frame l.212 at 0x2579bb262d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.alpha_composite(attrname='alpha_composite',\n                          expr=<Name.Image l.213 at 0x2579bb26550>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.frame l.214 at 0x2579bb267d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.range(name='range')",
              "type": "Instance of builtins.range"
            },
            {
              "function": "Name.interpolate(name='interpolate')",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.create_blank_frame(name='create_blank_frame')",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Attribute.new(attrname='new',\n              expr=<Name.Image l.264 at 0x2579bb31fd0>)",
              "type": "Instance of PIL.Image.Image"
            },
            {
              "function": "Name.draw_emoji_enhanced(name='draw_emoji_enhanced')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.frame l.273 at 0x2579bb32b10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.alpha_composite(attrname='alpha_composite',\n                          expr=<Name.Image l.274 at 0x2579bb32d50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.convert(attrname='convert',\n                  expr=<Name.frame l.275 at 0x2579bb32fd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.GIFBuilder(name='GIFBuilder')",
              "type": "Uninferable"
            },
            {
              "function": "Name.create_zoom_animation(name='create_zoom_animation')",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.add_frames(attrname='add_frames',\n                     expr=<Name.builder l.297 at 0x2579bb38250>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.save(attrname='save',\n               expr=<Name.builder l.298 at 0x2579bb383d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.clear(attrname='clear',\n                expr=<Name.builder l.301 at 0x2579bb38650>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.create_explosion_zoom(name='create_explosion_zoom')",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.add_frames(attrname='add_frames',\n                     expr=<Name.builder l.303 at 0x2579bb38a90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.save(attrname='save',\n               expr=<Name.builder l.304 at 0x2579bb38c50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.clear(attrname='clear',\n                expr=<Name.builder l.307 at 0x2579bb38e50>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.create_mind_blown_zoom(name='create_mind_blown_zoom')",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.add_frames(attrname='add_frames',\n                     expr=<Name.builder l.309 at 0x2579bb39290>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.save(attrname='save',\n               expr=<Name.builder l.310 at 0x2579bb39450>)",
              "type": "Uninferable"
            }
          ],
          "unresolved_imports": [
            "sys",
            "math"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\webapp-testing\\examples\\console_logging.py",
        "language": "python",
        "file_size": 1027,
        "line_count": 35,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "handle_console_message",
            "line_number": 14,
            "parameters": [
              "msg"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          }
        ],
        "classes": [],
        "imports": [
          {
            "type": "from_import",
            "module": "playwright.sync_api",
            "names": [
              "sync_playwright"
            ],
            "level": 0,
            "line_number": 1
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 1,
          "function_count": 1,
          "class_count": 0,
          "import_count": 1,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Name.sync_playwright(name='sync_playwright')",
              "type": "Instance of playwright.sync_api._context_manager.PlaywrightContextManager"
            },
            {
              "function": "Attribute.launch(attrname='launch',\n                 expr=<Attribute.chromium l.10 at 0x2579b65f1d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.new_page(attrname='new_page',\n                   expr=<Name.browser l.11 at 0x2579b65f3d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.on(attrname='on',\n             expr=<Name.page l.18 at 0x2579b708750>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.goto(attrname='goto',\n               expr=<Name.page l.21 at 0x2579b0d5850>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.wait_for_load_state(attrname='wait_for_load_state',\n                              expr=<Name.page l.22 at 0x2579b0d5ad0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.click(attrname='click',\n                expr=<Name.page l.25 at 0x2579b0d56d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.wait_for_timeout(attrname='wait_for_timeout',\n                           expr=<Name.page l.26 at 0x2579b0d5550>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.close(attrname='close',\n                expr=<Name.browser l.28 at 0x2579b0d4810>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.write(attrname='write',\n                expr=<Name.f l.32 at 0x2579b0d53d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Const.str l.32 at 0x2579b0d4a50>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            }
          ],
          "unresolved_imports": [],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\webapp-testing\\examples\\element_discovery.py",
        "language": "python",
        "file_size": 1463,
        "line_count": 40,
        "analysis_method": "python_ast",
        "functions": [],
        "classes": [],
        "imports": [
          {
            "type": "from_import",
            "module": "playwright.sync_api",
            "names": [
              "sync_playwright"
            ],
            "level": 0,
            "line_number": 1
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 0,
          "function_count": 0,
          "class_count": 0,
          "import_count": 1,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Name.sync_playwright(name='sync_playwright')",
              "type": "Instance of playwright.sync_api._context_manager.PlaywrightContextManager"
            },
            {
              "function": "Attribute.launch(attrname='launch',\n                 expr=<Attribute.chromium l.6 at 0x2579c0e7fd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.new_page(attrname='new_page',\n                   expr=<Name.browser l.7 at 0x2579c0c8650>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.goto(attrname='goto',\n               expr=<Name.page l.10 at 0x2579c0c8490>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.wait_for_load_state(attrname='wait_for_load_state',\n                              expr=<Name.page l.11 at 0x2579c0c8350>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.all(attrname='all',\n              expr=<Call l.14 at 0x2579c0c8690>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.locator(attrname='locator',\n                  expr=<Name.page l.14 at 0x2579c0c9a90>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.enumerate(name='enumerate')",
              "type": "Instance of builtins.enumerate"
            },
            {
              "function": "Attribute.is_visible(attrname='is_visible',\n                     expr=<Name.button l.17 at 0x2579c0c8c10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.inner_text(attrname='inner_text',\n                     expr=<Name.button l.17 at 0x2579c0c8b90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.all(attrname='all',\n              expr=<Call l.21 at 0x2579c0c8790>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.locator(attrname='locator',\n                  expr=<Name.page l.21 at 0x2579c0c86d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Call l.24 at 0x2579c0ca150>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.inner_text(attrname='inner_text',\n                     expr=<Name.link l.24 at 0x2579c0ca190>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get_attribute(attrname='get_attribute',\n                        expr=<Name.link l.25 at 0x2579c0ca1d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.all(attrname='all',\n              expr=<Call l.29 at 0x2579c0c9f10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.locator(attrname='locator',\n                  expr=<Name.page l.29 at 0x2579c0c9ed0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get_attribute(attrname='get_attribute',\n                        expr=<Name.input_elem l.32 at 0x2579c0cb3d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get_attribute(attrname='get_attribute',\n                        expr=<Name.input_elem l.32 at 0x2579c0cb190>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get_attribute(attrname='get_attribute',\n                        expr=<Name.input_elem l.33 at 0x2579c0cbfd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.screenshot(attrname='screenshot',\n                     expr=<Name.page l.37 at 0x2579c068210>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.close(attrname='close',\n                expr=<Name.browser l.40 at 0x2579c068b90>)",
              "type": "Uninferable"
            }
          ],
          "unresolved_imports": [],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\webapp-testing\\examples\\static_html_automation.py",
        "language": "python",
        "file_size": 953,
        "line_count": 33,
        "analysis_method": "python_ast",
        "functions": [],
        "classes": [],
        "imports": [
          {
            "type": "from_import",
            "module": "playwright.sync_api",
            "names": [
              "sync_playwright"
            ],
            "level": 0,
            "line_number": 1
          },
          {
            "type": "import",
            "modules": [
              "os"
            ],
            "line_number": 2
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 0,
          "function_count": 0,
          "class_count": 0,
          "import_count": 2,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.abspath(attrname='abspath',\n                  expr=<Attribute.path l.6 at 0x2579bab1410>)",
              "type": "Const.bytes(value=b'.',\n            kind=None)"
            },
            {
              "function": "Name.sync_playwright(name='sync_playwright')",
              "type": "Instance of playwright.sync_api._context_manager.PlaywrightContextManager"
            },
            {
              "function": "Attribute.launch(attrname='launch',\n                 expr=<Attribute.chromium l.10 at 0x2579bab4a10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.new_page(attrname='new_page',\n                   expr=<Name.browser l.11 at 0x2579a9f1c10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.goto(attrname='goto',\n               expr=<Name.page l.14 at 0x2579c11fc50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.screenshot(attrname='screenshot',\n                     expr=<Name.page l.17 at 0x2579c11eb50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.click(attrname='click',\n                expr=<Name.page l.20 at 0x2579c11f010>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.fill(attrname='fill',\n               expr=<Name.page l.21 at 0x2579c11ea10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.fill(attrname='fill',\n               expr=<Name.page l.22 at 0x2579c11ed50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.click(attrname='click',\n                expr=<Name.page l.25 at 0x2579c11e910>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.wait_for_timeout(attrname='wait_for_timeout',\n                           expr=<Name.page l.26 at 0x2579c11f790>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.screenshot(attrname='screenshot',\n                     expr=<Name.page l.29 at 0x2579c11f710>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.close(attrname='close',\n                expr=<Name.browser l.31 at 0x2579b9e6110>)",
              "type": "Uninferable"
            }
          ],
          "unresolved_imports": [
            "os"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": ".claude\\skills\\webapp-testing\\scripts\\with_server.py",
        "language": "python",
        "file_size": 3693,
        "line_count": 106,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "is_server_ready",
            "line_number": 23,
            "parameters": [
              "port",
              "timeout"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": "Wait for server to be ready by polling the port.",
            "is_async": false,
            "complexity": 3
          },
          {
            "name": "main",
            "line_number": 35,
            "parameters": [],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 10
          }
        ],
        "classes": [],
        "imports": [
          {
            "type": "import",
            "modules": [
              "subprocess"
            ],
            "line_number": 17
          },
          {
            "type": "import",
            "modules": [
              "socket"
            ],
            "line_number": 18
          },
          {
            "type": "import",
            "modules": [
              "time"
            ],
            "line_number": 19
          },
          {
            "type": "import",
            "modules": [
              "sys"
            ],
            "line_number": 20
          },
          {
            "type": "import",
            "modules": [
              "argparse"
            ],
            "line_number": 21
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 13,
          "function_count": 2,
          "class_count": 0,
          "import_count": 5,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.create_connection(attrname='create_connection',\n                            expr=<Name.socket l.28 at 0x2579c0478d0>)",
              "type": "Instance of socket.socket"
            },
            {
              "function": "Attribute.ArgumentParser(attrname='ArgumentParser',\n                         expr=<Name.argparse l.36 at 0x2579c045b50>)",
              "type": "Instance of argparse.ArgumentParser"
            },
            {
              "function": "Attribute.add_argument(attrname='add_argument',\n                       expr=<Name.parser l.37 at 0x2579c045e50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.add_argument(attrname='add_argument',\n                       expr=<Name.parser l.38 at 0x2579c0460d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.add_argument(attrname='add_argument',\n                       expr=<Name.parser l.39 at 0x2579c046590>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.add_argument(attrname='add_argument',\n                       expr=<Name.parser l.40 at 0x2579c046890>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.parse_args(attrname='parse_args',\n                     expr=<Name.parser l.42 at 0x2579c047b50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.zip(name='zip')",
              "type": "Instance of builtins.zip"
            },
            {
              "function": "Name.enumerate(name='enumerate')",
              "type": "Instance of builtins.enumerate"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Attribute.Popen(attrname='Popen',\n                expr=<Name.subprocess l.69 at 0x2579c03f450>)",
              "type": "Instance of subprocess.Popen"
            },
            {
              "function": "Name.is_server_ready(name='is_server_ready')",
              "type": "Const.bool(value=True,\n           kind=None)"
            },
            {
              "function": "Name.RuntimeError(name='RuntimeError')",
              "type": "Instance of builtins.RuntimeError"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Const.str l.87 at 0x2579c030390>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.subprocess l.88 at 0x2579c0301d0>)",
              "type": "Instance of subprocess.CompletedProcess"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Name.enumerate(name='enumerate')",
              "type": "Instance of builtins.enumerate"
            },
            {
              "function": "Attribute.terminate(attrname='terminate',\n                    expr=<Name.process l.96 at 0x2579c031dd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.wait(attrname='wait',\n               expr=<Name.process l.97 at 0x2579c031c10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.kill(attrname='kill',\n               expr=<Name.process l.99 at 0x2579c0318d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.wait(attrname='wait',\n               expr=<Name.process l.100 at 0x2579c031810>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.main(name='main')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            }
          ],
          "unresolved_imports": [
            "subprocess",
            "socket",
            "time",
            "sys",
            "argparse"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": "agents\\example_agent.py",
        "language": "python",
        "file_size": 8252,
        "line_count": 228,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "__init__",
            "line_number": 13,
            "parameters": [
              "self",
              "name",
              "description"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "__init__",
            "line_number": 19,
            "parameters": [
              "self",
              "name",
              "description",
              "task_type"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "__init__",
            "line_number": 25,
            "parameters": [
              "self",
              "name",
              "description"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "__init__",
            "line_number": 30,
            "parameters": [
              "self",
              "name",
              "description"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "__init__",
            "line_number": 37,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "__init__",
            "line_number": 76,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "__init__",
            "line_number": 122,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          }
        ],
        "classes": [
          {
            "name": "BaseAgent",
            "line_number": 11,
            "bases": [],
            "decorators": [],
            "docstring": "Base class for all agents",
            "methods": [
              "__init__"
            ],
            "method_count": 1
          },
          {
            "name": "TaskAgent",
            "line_number": 17,
            "bases": [
              "BaseAgent"
            ],
            "decorators": [],
            "docstring": "Agent for task execution",
            "methods": [
              "__init__"
            ],
            "method_count": 1
          },
          {
            "name": "ConversationalAgent",
            "line_number": 23,
            "bases": [
              "BaseAgent"
            ],
            "decorators": [],
            "docstring": "Agent for conversations",
            "methods": [
              "__init__"
            ],
            "method_count": 1
          },
          {
            "name": "DataProcessingAgent",
            "line_number": 28,
            "bases": [
              "BaseAgent"
            ],
            "decorators": [],
            "docstring": "Agent for data processing",
            "methods": [
              "__init__"
            ],
            "method_count": 1
          },
          {
            "name": "ExampleTaskAgent",
            "line_number": 34,
            "bases": [
              "TaskAgent"
            ],
            "decorators": [],
            "docstring": "Beispiel-Agent für allgemeine Aufgaben",
            "methods": [
              "__init__"
            ],
            "method_count": 1
          },
          {
            "name": "ExampleConversationalAgent",
            "line_number": 73,
            "bases": [
              "ConversationalAgent"
            ],
            "decorators": [],
            "docstring": "Beispiel-Agent für Konversationen",
            "methods": [
              "__init__"
            ],
            "method_count": 1
          },
          {
            "name": "ExampleDataAgent",
            "line_number": 119,
            "bases": [
              "DataProcessingAgent"
            ],
            "decorators": [],
            "docstring": "Beispiel-Agent für Datenverarbeitung",
            "methods": [
              "__init__"
            ],
            "method_count": 1
          }
        ],
        "imports": [
          {
            "type": "from_import",
            "module": "typing",
            "names": [
              "Dict",
              "Any",
              "Optional"
            ],
            "level": 0,
            "line_number": 7
          },
          {
            "type": "import",
            "modules": [
              "asyncio"
            ],
            "line_number": 8
          },
          {
            "type": "import",
            "modules": [
              "json"
            ],
            "line_number": 154
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 7,
          "function_count": 7,
          "class_count": 7,
          "import_count": 3,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.__init__(attrname='__init__',\n                   expr=<Call l.20 at 0x2579c293d10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.super(name='super')",
              "type": "Super.TaskAgent()"
            },
            {
              "function": "Attribute.__init__(attrname='__init__',\n                   expr=<Call l.26 at 0x2579c29b110>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.super(name='super')",
              "type": "Super.ConversationalAgent()"
            },
            {
              "function": "Attribute.__init__(attrname='__init__',\n                   expr=<Call l.31 at 0x2579c29a010>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.super(name='super')",
              "type": "Super.DataProcessingAgent()"
            },
            {
              "function": "Attribute.__init__(attrname='__init__',\n                   expr=<Call l.38 at 0x2579c298710>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.super(name='super')",
              "type": "Super.ExampleTaskAgent()"
            },
            {
              "function": "Attribute.sleep(attrname='sleep',\n                expr=<Name.asyncio l.49 at 0x2579c2999d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.task l.52 at 0x2579c29bb50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.task l.54 at 0x2579c29b690>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parameters l.56 at 0x2579c29b590>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.task l.58 at 0x2579c284a50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parameters l.59 at 0x2579c284410>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=11,\n          kind=None)"
            },
            {
              "function": "Attribute.__init__(attrname='__init__',\n                   expr=<Call l.77 at 0x2579c286590>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.super(name='super')",
              "type": "Super.ExampleConversationalAgent()"
            },
            {
              "function": "Attribute.sleep(attrname='sleep',\n                expr=<Name.asyncio l.88 at 0x2579c286c10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.task l.91 at 0x2579c286650>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.__init__(attrname='__init__',\n                   expr=<Call l.123 at 0x2579c2a6f10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.super(name='super')",
              "type": "Super.ExampleDataAgent()"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parameters l.136 at 0x2579c2b0210>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parameters l.137 at 0x2579c2b08d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.sleep(attrname='sleep',\n                expr=<Name.asyncio l.143 at 0x2579c2b0610>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.upper(attrname='upper',\n                expr=<Call l.150 at 0x2579c2b1250>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Call l.151 at 0x2579c2b1110>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.loads(attrname='loads',\n                expr=<Name.json l.157 at 0x2579c2b29d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.list(name='list')",
              "type": "Instance of builtins.list"
            },
            {
              "function": "Attribute.keys(attrname='keys',\n               expr=<Name.parsed l.161 at 0x2579c2b2490>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.type(name='type')",
              "type": "Uninferable"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.float(name='float')",
              "type": "Instance of builtins.float"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.list(name='list')",
              "type": "Instance of builtins.list"
            },
            {
              "function": "Name.set(name='set')",
              "type": "Instance of builtins.set"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.ExampleTaskAgent(name='ExampleTaskAgent')",
              "type": "Instance of .ExampleTaskAgent"
            },
            {
              "function": "Name.ExampleConversationalAgent(name='ExampleConversationalAgent')",
              "type": "Instance of .ExampleConversationalAgent"
            },
            {
              "function": "Name.ExampleDataAgent(name='ExampleDataAgent')",
              "type": "Instance of .ExampleDataAgent"
            }
          ],
          "unresolved_imports": [
            "asyncio",
            "json"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": "agents\\project_manager_agent.py",
        "language": "python",
        "file_size": 22828,
        "line_count": 535,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "__init__",
            "line_number": 20,
            "parameters": [
              "self",
              "model_manager"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_get_project_type",
            "line_number": 394,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Bestimmt den Projekttyp",
            "is_async": false,
            "complexity": 7
          },
          {
            "name": "_get_main_framework",
            "line_number": 416,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Gibt das Haupt-Framework zurück",
            "is_async": false,
            "complexity": 3
          },
          {
            "name": "_get_main_language",
            "line_number": 427,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Gibt die Haupt-Sprache zurück",
            "is_async": false,
            "complexity": 3
          },
          {
            "name": "_get_test_framework",
            "line_number": 438,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Gibt das Test-Framework zurück",
            "is_async": false,
            "complexity": 5
          },
          {
            "name": "_get_database_type",
            "line_number": 458,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Gibt den Datenbank-Typ zurück",
            "is_async": false,
            "complexity": 2
          }
        ],
        "classes": [
          {
            "name": "ProjectManagerAgent",
            "line_number": 17,
            "bases": [],
            "decorators": [],
            "docstring": "KI-Projektmanager Agent - Hauptintelligenz des Systems",
            "methods": [
              "__init__",
              "_get_project_type",
              "_get_main_framework",
              "_get_main_language",
              "_get_test_framework",
              "_get_database_type"
            ],
            "method_count": 6
          }
        ],
        "imports": [
          {
            "type": "import",
            "modules": [
              "asyncio"
            ],
            "line_number": 5
          },
          {
            "type": "import",
            "modules": [
              "json"
            ],
            "line_number": 6
          },
          {
            "type": "from_import",
            "module": "typing",
            "names": [
              "Dict",
              "Any",
              "List",
              "Optional"
            ],
            "level": 0,
            "line_number": 7
          },
          {
            "type": "from_import",
            "module": "datetime",
            "names": [
              "datetime"
            ],
            "level": 0,
            "line_number": 8
          },
          {
            "type": "import",
            "modules": [
              "logging"
            ],
            "line_number": 9
          },
          {
            "type": "from_import",
            "module": "llm.model_manager",
            "names": [
              "ModelManager"
            ],
            "level": 0,
            "line_number": 11
          },
          {
            "type": "from_import",
            "module": "llm.prompt_templates",
            "names": [
              "PromptTemplates"
            ],
            "level": 0,
            "line_number": 12
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 21,
          "function_count": 6,
          "class_count": 1,
          "import_count": 7,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.getLogger(attrname='getLogger',\n                    expr=<Name.logging l.14 at 0x2579accf1d0>)",
              "type": "Instance of logging.RootLogger"
            },
            {
              "function": "Name.PromptTemplates(name='PromptTemplates')",
              "type": "Instance of llm.prompt_templates.PromptTemplates"
            },
            {
              "function": "Attribute.initialize(attrname='initialize',\n                     expr=<Attribute.model_manager l.47 at 0x2579b243f90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.49 at 0x2579b1d0290>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.53 at 0x2579b1d0750>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.project_analysis l.59 at 0x2579b1d1390>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._create_project_summary(attrname='_create_project_summary',\n                                  expr=<Name.self l.63 at 0x2579b1d1890>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.66 at 0x2579b1d1c10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.69 at 0x2579b1d20d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.isoformat(attrname='isoformat',\n                    expr=<Call l.88 at 0x2579b1d3090>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.now(attrname='now',\n              expr=<Name.datetime l.88 at 0x2579b1d30d0>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Attribute._analyze_intent(attrname='_analyze_intent',\n                          expr=<Name.self l.92 at 0x2579b1d3410>)",
              "type": "Dict.dict(items=[ ( <Const.str l.153 at 0x2579b1d5990>,\n              <Name.detected_intent l.153 at 0x2579b1d5950>),\n            ( <Const.str l.154 at 0x2579b1d59d0>,\n              <Name.confidence l.154 at 0x2579b1d5a10>),\n            ( <Const.str l.155 at 0x2579b1d5f90>,\n              <ListComp l.155 at 0x2579b1d5ad0>)])"
            },
            {
              "function": "Attribute._handle_project_analysis_request(attrname='_handle_project_analysis_request',\n                                           expr=<Name.self l.96 at 0x2579b1d3950>)",
              "type": "Const.str(value=('❌ Kein Projekt-Kontext verfügbar. Bitte führe zuerst eine '\n           'Projekt-Analyse durch.'),\n          kind=None)"
            },
            {
              "function": "Attribute._handle_optimization_request(attrname='_handle_optimization_request',\n                                       expr=<Name.self l.98 at 0x2579b1d3e90>)",
              "type": "Const.str(value=('❌ Kein Projekt-Kontext verfügbar. Bitte führe zuerst eine '\n           'Projekt-Analyse durch.'),\n          kind=None)"
            },
            {
              "function": "Attribute._handle_testing_request(attrname='_handle_testing_request',\n                                  expr=<Name.self l.100 at 0x2579b2583d0>)",
              "type": "Const.str(value=('❌ Kein Projekt-Kontext verfügbar. Bitte führe zuerst eine '\n           'Projekt-Analyse durch.'),\n          kind=None)"
            },
            {
              "function": "Attribute._handle_security_request(attrname='_handle_security_request',\n                                   expr=<Name.self l.102 at 0x2579b2588d0>)",
              "type": "Const.str(value=('❌ Kein Projekt-Kontext verfügbar. Bitte führe zuerst eine '\n           'Projekt-Analyse durch.'),\n          kind=None)"
            },
            {
              "function": "Attribute._handle_deployment_request(attrname='_handle_deployment_request',\n                                     expr=<Name.self l.104 at 0x2579b258e10>)",
              "type": "Const.str(value=('❌ Kein Projekt-Kontext verfügbar. Bitte führe zuerst eine '\n           'Projekt-Analyse durch.'),\n          kind=None)"
            },
            {
              "function": "Attribute._handle_documentation_request(attrname='_handle_documentation_request',\n                                        expr=<Name.self l.106 at 0x2579b259310>)",
              "type": "Const.str(value=('❌ Kein Projekt-Kontext verfügbar. Bitte führe zuerst eine '\n           'Projekt-Analyse durch.'),\n          kind=None)"
            },
            {
              "function": "Attribute._handle_code_review_request(attrname='_handle_code_review_request',\n                                      expr=<Name.self l.108 at 0x2579b259810>)",
              "type": "Const.str(value=('\\n'\n           '                🔍 **Code-Review-Anfrage**\\n'\n           '\\n'\n           '                Um einen Code-Review durchzuführen, brauche '\n           'ich:\\n'\n           '                - Den Code, der überprüft werden soll\\n'\n           '                - Die Datei/Dateiname\\n'\n           '                - Den Kontext (Funktion, Klasse, etc.)\\n'\n           '\\n'\n           '                Bitte teile den Code mit mir, dann kann ich '\n           'eine detaillierte Analyse durchführen.\\n'\n           '                '),\n          kind=None)"
            },
            {
              "function": "Attribute._handle_general_chat(attrname='_handle_general_chat',\n                               expr=<Name.self l.110 at 0x2579b259b10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.isoformat(attrname='isoformat',\n                    expr=<Call l.116 at 0x2579b25a050>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.now(attrname='now',\n              expr=<Name.datetime l.116 at 0x2579b25a090>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.123 at 0x2579b25a5d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.user_message l.128 at 0x2579b25b210>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Name.intent_keywords l.144 at 0x2579b1d4850>)",
              "type": "DictItems.list(ctx=None,\n               elts=[ <Tuple.tuple l.132 at 0x257982f3990>,\n                 <Tuple.tuple l.133 at 0x2579787b650>,\n                 <Tuple.tuple l.134 at 0x2579787bf90>,\n                 <Tuple.tuple l.135 at 0x25797681f50>,\n                 <Tuple.tuple l.136 at 0x257e306c750>,\n                 <Tuple.tuple l.137 at 0x25797537bd0>,\n                 <Tuple.tuple l.138 at 0x25797535890>])"
            },
            {
              "function": "Attribute.get_template(attrname='get_template',\n                       expr=<Attribute.prompt_templates l.165 at 0x2579b1d6d50>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.project_context l.167 at 0x2579b1d6f50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.project_context l.168 at 0x2579b1d7190>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.project_context l.169 at 0x2579b1d73d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.project_context l.170 at 0x2579b1d7610>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.project_context l.171 at 0x2579b1d7850>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Const.str l.172 at 0x2579b1d7ad0>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.project_context l.172 at 0x2579b1d7c10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Const.str l.173 at 0x2579b1d7e90>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.project_context l.173 at 0x2579b1f3f90>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.project_context l.174 at 0x2579b1f3a10>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Call l.175 at 0x2579b1f3890>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.project_context l.175 at 0x2579b1f3350>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.generate_response(attrname='generate_response',\n                            expr=<Attribute.model_manager l.178 at 0x2579b1f2fd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.182 at 0x2579b1f2ad0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get_template(attrname='get_template',\n                       expr=<Attribute.prompt_templates l.192 at 0x2579b1f1910>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute._get_project_type(attrname='_get_project_type',\n                            expr=<Name.self l.194 at 0x2579b1f1810>)",
              "type": "Const.str(value='Unknown',\n          kind=None)"
            },
            {
              "function": "Attribute._get_main_framework(attrname='_get_main_framework',\n                              expr=<Name.self l.195 at 0x2579b1f13d0>)",
              "type": "Const.str(value='Unknown',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.project_context l.196 at 0x2579b1f1110>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.generate_response(attrname='generate_response',\n                            expr=<Attribute.model_manager l.204 at 0x2579b1f0e90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.208 at 0x2579b1f0910>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get_template(attrname='get_template',\n                       expr=<Attribute.prompt_templates l.218 at 0x2579b1ef790>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute._get_main_framework(attrname='_get_main_framework',\n                              expr=<Name.self l.220 at 0x2579b1ef890>)",
              "type": "Const.str(value='Unknown',\n          kind=None)"
            },
            {
              "function": "Attribute._get_test_framework(attrname='_get_test_framework',\n                              expr=<Name.self l.221 at 0x2579b1ef650>)",
              "type": "Const.str(value='Unknown',\n          kind=None)"
            },
            {
              "function": "Attribute._get_main_language(attrname='_get_main_language',\n                             expr=<Name.self l.222 at 0x2579b1ef4d0>)",
              "type": "Const.str(value='Unknown',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Call l.223 at 0x2579b1ef410>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.project_context l.223 at 0x2579b1ef150>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Const.str l.224 at 0x2579b1eefd0>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.project_context l.224 at 0x2579b1eea90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.generate_response(attrname='generate_response',\n                            expr=<Attribute.model_manager l.227 at 0x2579b1ee710>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.231 at 0x2579b1ee290>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.project_context l.241 at 0x2579b1ed1d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Const.str l.242 at 0x2579b1ecf90>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.v l.242 at 0x2579b1ecb90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get_template(attrname='get_template',\n                       expr=<Attribute.prompt_templates l.244 at 0x2579b1ec810>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute._get_project_type(attrname='_get_project_type',\n                            expr=<Name.self l.246 at 0x2579b1ec6d0>)",
              "type": "Const.str(value='Unknown',\n          kind=None)"
            },
            {
              "function": "Attribute._get_main_framework(attrname='_get_main_framework',\n                              expr=<Name.self l.247 at 0x2579b1ec3d0>)",
              "type": "Const.str(value='Unknown',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.project_context l.248 at 0x2579b1ec110>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.project_context l.249 at 0x2579b1e3e50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.generate_response(attrname='generate_response',\n                            expr=<Attribute.model_manager l.253 at 0x2579b1e3610>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.257 at 0x2579b1e35d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get_template(attrname='get_template',\n                       expr=<Attribute.prompt_templates l.267 at 0x2579b1e2590>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute._get_project_type(attrname='_get_project_type',\n                            expr=<Name.self l.269 at 0x2579b1e2390>)",
              "type": "Const.str(value='Unknown',\n          kind=None)"
            },
            {
              "function": "Attribute._get_main_framework(attrname='_get_main_framework',\n                              expr=<Name.self l.270 at 0x2579b1e2190>)",
              "type": "Const.str(value='Unknown',\n          kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.project_context l.271 at 0x2579b1e2090>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._get_database_type(attrname='_get_database_type',\n                             expr=<Name.self l.272 at 0x2579b1e1d50>)",
              "type": "Const.str(value='Unknown',\n          kind=None)"
            },
            {
              "function": "Attribute.generate_response(attrname='generate_response',\n                            expr=<Attribute.model_manager l.276 at 0x2579b1e1a90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.280 at 0x2579b1e1510>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get_template(attrname='get_template',\n                       expr=<Attribute.prompt_templates l.290 at 0x2579b1e0590>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.project_context l.292 at 0x2579b1e02d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._get_project_type(attrname='_get_project_type',\n                            expr=<Name.self l.293 at 0x2579b1e2210>)",
              "type": "Const.str(value='Unknown',\n          kind=None)"
            },
            {
              "function": "Attribute._get_main_framework(attrname='_get_main_framework',\n                              expr=<Name.self l.294 at 0x2579b1dbfd0>)",
              "type": "Const.str(value='Unknown',\n          kind=None)"
            },
            {
              "function": "Attribute.generate_response(attrname='generate_response',\n                            expr=<Attribute.model_manager l.298 at 0x2579b1dbc90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.302 at 0x2579b1db790>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get_template(attrname='get_template',\n                       expr=<Attribute.prompt_templates l.322 at 0x2579b1da4d0>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.context l.324 at 0x2579b1da7d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.context l.325 at 0x2579b1da010>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._get_main_framework(attrname='_get_main_framework',\n                              expr=<Name.self l.326 at 0x2579b1d9fd0>)",
              "type": "Const.str(value='Unknown',\n          kind=None)"
            },
            {
              "function": "Attribute._get_main_language(attrname='_get_main_language',\n                             expr=<Name.self l.327 at 0x2579b1d9d90>)",
              "type": "Const.str(value='Unknown',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.context l.328 at 0x2579b1d9c10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.generate_response(attrname='generate_response',\n                            expr=<Attribute.model_manager l.331 at 0x2579b1d9a90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.335 at 0x2579b1d9450>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get_template(attrname='get_template',\n                       expr=<Attribute.prompt_templates l.342 at 0x2579b1d8590>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.project_context l.344 at 0x2579b1d8110>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._get_project_type(attrname='_get_project_type',\n                            expr=<Name.self l.345 at 0x2579b048e90>)",
              "type": "Const.str(value='Unknown',\n          kind=None)"
            },
            {
              "function": "Attribute._get_main_framework(attrname='_get_main_framework',\n                              expr=<Name.self l.346 at 0x2579b049410>)",
              "type": "Const.str(value='Unknown',\n          kind=None)"
            },
            {
              "function": "Attribute.generate_response(attrname='generate_response',\n                            expr=<Attribute.model_manager l.355 at 0x2579b04be90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.359 at 0x2579b049b10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.project_analysis l.368 at 0x2579b04a010>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.project_analysis l.369 at 0x2579b04a450>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.project_analysis l.370 at 0x2579b04ab50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.project_analysis l.373 at 0x2579b04b390>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Const.str l.375 at 0x2579b0481d0>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.project_analysis l.378 at 0x2579b049a10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Const.str l.381 at 0x2579b04c050>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.project_analysis l.384 at 0x2579b04c350>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Const.str l.388 at 0x2579b04c990>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.391 at 0x2579b04cc90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.project_context l.399 at 0x2579b04d6d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.f l.404 at 0x2579b04dd50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.f l.405 at 0x2579b04e390>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.project_context l.421 at 0x2579b04f550>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Subscript l.423 at 0x2579b04f890>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.project_context l.432 at 0x2579b059410>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.project_context l.443 at 0x2579b05a390>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.test_coverage l.444 at 0x2579b059c90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._get_main_language(attrname='_get_main_language',\n                             expr=<Name.self l.450 at 0x2579b0586d0>)",
              "type": "Const.str(value='Unknown',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.project_context l.463 at 0x2579b05acd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.database_schema l.464 at 0x2579b05af10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.project_context l.476 at 0x2579b05a290>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.project_context l.486 at 0x2579b060790>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.project_context l.497 at 0x2579b062810>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.test_coverage l.498 at 0x2579b061090>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.511 at 0x2579b060d90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Attribute.get_current_model(attrname='get_current_model',\n                            expr=<Attribute.model_manager l.523 at 0x2579b063550>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.cleanup(attrname='cleanup',\n                  expr=<Attribute.model_manager l.529 at 0x2579b061210>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.531 at 0x2579b062210>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.534 at 0x2579b063250>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            }
          ],
          "unresolved_imports": [
            "asyncio",
            "json",
            "logging"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": "agents\\__init__.py",
        "language": "python",
        "file_size": 5119,
        "line_count": 148,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "__init__",
            "line_number": 15,
            "parameters": [
              "self",
              "name",
              "description"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "add_skill",
            "line_number": 27,
            "parameters": [
              "self",
              "skill"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Fügt einen Skill zum Agent hinzu",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "get_status",
            "line_number": 32,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Gibt den aktuellen Status des Agenten zurück",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "__init__",
            "line_number": 51,
            "parameters": [
              "self",
              "name",
              "description",
              "task_type"
            ],
            "defaults": 2,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "__init__",
            "line_number": 75,
            "parameters": [
              "self",
              "name",
              "description",
              "personality"
            ],
            "defaults": 2,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_get_timestamp",
            "line_number": 105,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Gibt den aktuellen Zeitstempel zurück",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "get_conversation_history",
            "line_number": 110,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Gibt die Konversationshistorie zurück",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "__init__",
            "line_number": 118,
            "parameters": [
              "self",
              "name",
              "description",
              "data_types"
            ],
            "defaults": 2,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 2
          }
        ],
        "classes": [
          {
            "name": "BaseAgent",
            "line_number": 12,
            "bases": [
              "ABC"
            ],
            "decorators": [],
            "docstring": "Basisklasse für alle AI-Agenten",
            "methods": [
              "__init__",
              "add_skill",
              "get_status"
            ],
            "method_count": 3
          },
          {
            "name": "TaskAgent",
            "line_number": 48,
            "bases": [
              "BaseAgent"
            ],
            "decorators": [],
            "docstring": "Agent für spezifische Aufgaben",
            "methods": [
              "__init__"
            ],
            "method_count": 1
          },
          {
            "name": "ConversationalAgent",
            "line_number": 72,
            "bases": [
              "BaseAgent"
            ],
            "decorators": [],
            "docstring": "Agent für Konversationen und Dialoge",
            "methods": [
              "__init__",
              "_get_timestamp",
              "get_conversation_history"
            ],
            "method_count": 3
          },
          {
            "name": "DataProcessingAgent",
            "line_number": 115,
            "bases": [
              "BaseAgent"
            ],
            "decorators": [],
            "docstring": "Agent für Datenverarbeitung",
            "methods": [
              "__init__"
            ],
            "method_count": 1
          }
        ],
        "imports": [
          {
            "type": "from_import",
            "module": "abc",
            "names": [
              "ABC",
              "abstractmethod"
            ],
            "level": 0,
            "line_number": 5
          },
          {
            "type": "from_import",
            "module": "typing",
            "names": [
              "Dict",
              "Any",
              "Optional",
              "List"
            ],
            "level": 0,
            "line_number": 6
          },
          {
            "type": "import",
            "modules": [
              "logging"
            ],
            "line_number": 7
          },
          {
            "type": "import",
            "modules": [
              "datetime"
            ],
            "line_number": 107
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 9,
          "function_count": 8,
          "class_count": 4,
          "import_count": 4,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.getLogger(attrname='getLogger',\n                    expr=<Name.logging l.9 at 0x2579cc565d0>)",
              "type": "Instance of logging.RootLogger"
            },
            {
              "function": "Attribute.getLogger(attrname='getLogger',\n                    expr=<Name.logging l.20 at 0x257e58f3a50>)",
              "type": "Instance of logging.RootLogger"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Attribute.logger l.30 at 0x257e58f2110>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Attribute.logger l.45 at 0x257e590c190>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.__init__(attrname='__init__',\n                   expr=<Call l.52 at 0x257e59062d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.super(name='super')",
              "type": "Super.TaskAgent()"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Attribute.logger l.57 at 0x257e5905610>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.__init__(attrname='__init__',\n                   expr=<Call l.76 at 0x257e58fca50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.super(name='super')",
              "type": "Super.ConversationalAgent()"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Attribute.logger l.82 at 0x257e58fee10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._get_timestamp(attrname='_get_timestamp',\n                         expr=<Name.self l.88 at 0x257e58ffe50>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Attribute.isoformat(attrname='isoformat',\n                    expr=<Call l.108 at 0x257e58fe150>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.now(attrname='now',\n              expr=<Attribute.datetime l.108 at 0x257e58fe110>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Attribute.__init__(attrname='__init__',\n                   expr=<Call l.119 at 0x2579c069cd0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.super(name='super')",
              "type": "Super.DataProcessingAgent()"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Attribute.logger l.125 at 0x2579c06af90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parameters l.127 at 0x2579c069750>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parameters l.128 at 0x2579c069b50>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Name.isinstance(name='isinstance')",
              "type": "Const.bool(value=True,\n           kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            }
          ],
          "unresolved_imports": [
            "logging",
            "datetime"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": "analyzers\\api_analyzer.py",
        "language": "python",
        "file_size": 32920,
        "line_count": 748,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "__init__",
            "line_number": 18,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          }
        ],
        "classes": [
          {
            "name": "APIAnalyzer",
            "line_number": 15,
            "bases": [],
            "decorators": [],
            "docstring": "Analysiert API-Endpoints und Routen",
            "methods": [
              "__init__"
            ],
            "method_count": 1
          }
        ],
        "imports": [
          {
            "type": "import",
            "modules": [
              "os"
            ],
            "line_number": 5
          },
          {
            "type": "import",
            "modules": [
              "re"
            ],
            "line_number": 6
          },
          {
            "type": "import",
            "modules": [
              "json"
            ],
            "line_number": 7
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 8
          },
          {
            "type": "from_import",
            "module": "typing",
            "names": [
              "Dict",
              "Any",
              "List",
              "Set"
            ],
            "level": 0,
            "line_number": 9
          },
          {
            "type": "import",
            "modules": [
              "logging"
            ],
            "line_number": 10
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 1,
          "function_count": 1,
          "class_count": 1,
          "import_count": 6,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.getLogger(attrname='getLogger',\n                    expr=<Name.logging l.12 at 0x2579ae5ea10>)",
              "type": "Instance of logging.RootLogger"
            },
            {
              "function": "Attribute._detect_api_framework(attrname='_detect_api_framework',\n                                expr=<Name.self l.108 at 0x2579ade4590>)",
              "type": "Const.str(value='FastAPI',\n          kind=None)"
            },
            {
              "function": "Attribute._extract_framework_endpoints(attrname='_extract_framework_endpoints',\n                                       expr=<Name.self l.113 at 0x2579ade4b10>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute._extract_openapi_spec(attrname='_extract_openapi_spec',\n                                expr=<Name.self l.117 at 0x2579ade5010>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._analyze_authentication(attrname='_analyze_authentication',\n                                  expr=<Name.self l.121 at 0x2579ade54d0>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute._analyze_middleware(attrname='_analyze_middleware',\n                              expr=<Name.self l.125 at 0x2579ade5950>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute._analyze_cors_config(attrname='_analyze_cors_config',\n                               expr=<Name.self l.129 at 0x2579ade5d90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._find_api_documentation(attrname='_find_api_documentation',\n                                  expr=<Name.self l.133 at 0x2579ade6210>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.136 at 0x2579ade6590>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.140 at 0x2579ade6dd0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.file_structure l.146 at 0x2579ade7a10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Subscript l.149 at 0x2579ade7ed0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.read(attrname='read',\n               expr=<Name.f l.154 at 0x2579ae00c10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Attribute.api_patterns l.156 at 0x2579ae02d50>)",
              "type": "DictItems.list(ctx=None,\n               elts=[ <Tuple.tuple l.20 at 0x2579ae9a910>,\n                 <Tuple.tuple l.29 at 0x2579ae9bbd0>,\n                 <Tuple.tuple l.38 at 0x2579ae9bb10>,\n                 <Tuple.tuple l.46 at 0x2579ae99b50>,\n                 <Tuple.tuple l.54 at 0x2579ae98fd0>,\n                 <Tuple.tuple l.63 at 0x2579ae9b790>])"
            },
            {
              "function": "Attribute.search(attrname='search',\n                 expr=<Name.re l.164 at 0x2579ae012d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.173 at 0x2579ae02250>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.file_structure l.181 at 0x2579ae008d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Subscript l.184 at 0x2579ae01ed0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.read(attrname='read',\n               expr=<Name.f l.189 at 0x2579ae0a350>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._extract_fastapi_endpoints(attrname='_extract_fastapi_endpoints',\n                                     expr=<Name.self l.200 at 0x2579ae0ac50>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute._extract_flask_endpoints(attrname='_extract_flask_endpoints',\n                                   expr=<Name.self l.202 at 0x2579ae09150>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute._extract_django_endpoints(attrname='_extract_django_endpoints',\n                                    expr=<Name.self l.204 at 0x2579ae09750>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute._extract_express_endpoints(attrname='_extract_express_endpoints',\n                                     expr=<Name.self l.206 at 0x2579ae0a790>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute._extract_nestjs_endpoints(attrname='_extract_nestjs_endpoints',\n                                    expr=<Name.self l.208 at 0x2579ae0b850>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute._extract_spring_endpoints(attrname='_extract_spring_endpoints',\n                                    expr=<Name.self l.210 at 0x2579ae0bd10>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.debug(attrname='debug',\n                expr=<Name.logger l.213 at 0x2579ae09490>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.219 at 0x2579ae0b890>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.finditer(attrname='finditer',\n                   expr=<Name.re l.229 at 0x2579ae148d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.upper(attrname='upper',\n                expr=<Call l.232 at 0x2579ae16b10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.match l.232 at 0x2579ae17510>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.match l.233 at 0x2579ae16610>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.match l.236 at 0x2579ae14590>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.search(attrname='search',\n                 expr=<Name.re l.237 at 0x2579ae14cd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.func_match l.238 at 0x2579ae15450>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._extract_fastapi_parameters(attrname='_extract_fastapi_parameters',\n                                      expr=<Name.self l.246 at 0x2579ae15ed0>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute._extract_fastapi_response_model(attrname='_extract_fastapi_response_model',\n                                          expr=<Name.self l.247 at 0x2579ae168d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.251 at 0x2579ae17190>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.finditer(attrname='finditer',\n                   expr=<Name.re l.262 at 0x2579ae16fd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.match l.265 at 0x2579ae15250>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.search(attrname='search',\n                 expr=<Name.re l.269 at 0x2579ae2e310>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.methods_match l.273 at 0x2579ae2c250>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Call l.274 at 0x2579ae2f490>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Name.m l.274 at 0x2579ae2f290>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Name.methods_str l.274 at 0x2579ae2d850>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.search(attrname='search',\n                 expr=<Name.re l.278 at 0x2579ae2ca10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.func_match l.279 at 0x2579ae2cf90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.upper(attrname='upper',\n                expr=<Name.method l.284 at 0x2579ae2de50>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute._extract_flask_parameters(attrname='_extract_flask_parameters',\n                                    expr=<Name.self l.288 at 0x2579ae2da50>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.292 at 0x2579ae2e6d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.finditer(attrname='finditer',\n                   expr=<Name.re l.303 at 0x2579ae2d810>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.match l.306 at 0x2579ae2f250>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.search(attrname='search',\n                 expr=<Name.re l.310 at 0x2579ae2fd50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Call l.311 at 0x2579ae34f90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.view_match l.311 at 0x2579ae34fd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.323 at 0x2579ae36fd0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.finditer(attrname='finditer',\n                   expr=<Name.re l.334 at 0x2579ae35350>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.upper(attrname='upper',\n                expr=<Call l.337 at 0x2579ae35d10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.match l.337 at 0x2579ae35cd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.match l.338 at 0x2579ae363d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.match l.341 at 0x2579ae36cd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.search(attrname='search',\n                 expr=<Name.re l.342 at 0x2579ae371d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.callback_match l.343 at 0x2579ae37f90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.callback_match l.343 at 0x2579ae37dd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._extract_express_parameters(attrname='_extract_express_parameters',\n                                      expr=<Name.self l.351 at 0x2579ae35750>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.355 at 0x2579ae36950>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.search(attrname='search',\n                 expr=<Name.re l.366 at 0x2579ae470d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.controller_match l.367 at 0x2579ae445d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.finditer(attrname='finditer',\n                   expr=<Name.re l.371 at 0x2579ae44310>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.upper(attrname='upper',\n                expr=<Call l.374 at 0x2579ae45ad0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.match l.374 at 0x2579ae45a90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.match l.375 at 0x2579ae45810>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.match l.381 at 0x2579ae46990>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.search(attrname='search',\n                 expr=<Name.re l.382 at 0x2579ae47010>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.method_func_match l.383 at 0x2579ae47610>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.395 at 0x2579ae441d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.search(attrname='search',\n                 expr=<Name.re l.406 at 0x2579add7250>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.request_mapping_match l.407 at 0x2579add5d50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.finditer(attrname='finditer',\n                   expr=<Name.re l.411 at 0x2579add7f50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.match l.414 at 0x2579add7ad0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.match l.415 at 0x2579add6710>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.upper(attrname='upper',\n                expr=<Call l.418 at 0x2579add6a10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.replace(attrname='replace',\n                  expr=<Name.mapping_type l.418 at 0x2579add5dd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.search(attrname='search',\n                 expr=<Name.re l.425 at 0x2579add6c90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.method_func_match l.426 at 0x2579add63d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.438 at 0x2579add5110>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.search(attrname='search',\n                 expr=<Name.re l.449 at 0x2579add4910>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.func_match l.452 at 0x2579add41d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Name.p l.453 at 0x2579ada7710>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Name.params_str l.453 at 0x2579ada6150>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Name.param l.457 at 0x2579ada5890>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Name.name l.458 at 0x2579ada6b50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Name.type_hint l.459 at 0x2579ada5050>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.debug(attrname='debug',\n                expr=<Name.logger l.468 at 0x2579ada7a90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.search(attrname='search',\n                 expr=<Name.re l.477 at 0x2579ada5d10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.response_match l.480 at 0x2579ada5490>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.debug(attrname='debug',\n                expr=<Name.logger l.483 at 0x2579ada4c50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.search(attrname='search',\n                 expr=<Name.re l.494 at 0x2579ada4a50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.func_match l.497 at 0x2579ad59b90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Name.p l.498 at 0x2579ad5ad10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Name.params_str l.498 at 0x2579ad59bd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.debug(attrname='debug',\n                expr=<Name.logger l.509 at 0x2579ad5acd0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.search(attrname='search',\n                 expr=<Name.re l.520 at 0x2579ad5a2d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.func_match l.523 at 0x2579ad59a90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Name.p l.524 at 0x2579ad59550>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Name.params_str l.524 at 0x2579ad58dd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.debug(attrname='debug',\n                expr=<Name.logger l.535 at 0x2579ad59c90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.file_structure l.544 at 0x2579ad27910>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Subscript l.547 at 0x2579ad27390>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Attribute.suffix l.555 at 0x2579ad26490>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.load(attrname='load',\n               expr=<Name.json l.556 at 0x2579ad25ed0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.read(attrname='read',\n               expr=<Name.f l.559 at 0x2579ad25d50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.loads(attrname='loads',\n                expr=<Name.json l.560 at 0x2579ad25e90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.debug(attrname='debug',\n                expr=<Name.logger l.565 at 0x2579ad25650>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._extract_swagger_config(attrname='_extract_swagger_config',\n                                  expr=<Name.self l.570 at 0x2579ad25090>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.573 at 0x2579ad24e90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.file_structure l.582 at 0x2579ad24710>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Subscript l.585 at 0x2579adbc3d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.read(attrname='read',\n               expr=<Name.f l.590 at 0x2579adbd150>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.content l.593 at 0x2579adbd510>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.607 at 0x2579adbdf50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.file_structure l.616 at 0x2579adbef50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Subscript l.619 at 0x2579adbf310>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Call l.624 at 0x2579ad900d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.read(attrname='read',\n               expr=<Name.f l.624 at 0x2579ad90110>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Name.auth_patterns l.636 at 0x2579ad90f10>)",
              "type": "DictItems.list(ctx=None,\n               elts=[ <Tuple.tuple l.628 at 0x2579ae7b7d0>,\n                 <Tuple.tuple l.629 at 0x2579ae78e90>,\n                 <Tuple.tuple l.630 at 0x2579ae78650>,\n                 <Tuple.tuple l.631 at 0x2579ae79b10>,\n                 <Tuple.tuple l.632 at 0x2579ae79e50>,\n                 <Tuple.tuple l.633 at 0x2579ae7a290>])"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.648 at 0x2579ad91c50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.file_structure l.657 at 0x2579ad92c50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Subscript l.660 at 0x2579ad93010>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Call l.665 at 0x2579ad93d90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.read(attrname='read',\n               expr=<Name.f l.665 at 0x2579ad93dd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Name.middleware_patterns l.677 at 0x2579ad68c50>)",
              "type": "DictItems.list(ctx=None,\n               elts=[ <Tuple.tuple l.669 at 0x2579ae7aad0>,\n                 <Tuple.tuple l.670 at 0x2579ae7a810>,\n                 <Tuple.tuple l.671 at 0x2579ae78f50>,\n                 <Tuple.tuple l.672 at 0x2579ae7aa10>,\n                 <Tuple.tuple l.673 at 0x2579ae7a6d0>,\n                 <Tuple.tuple l.674 at 0x2579ae7a910>])"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.689 at 0x2579ad69990>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.file_structure l.698 at 0x2579ad6a8d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Subscript l.701 at 0x2579ad6ac90>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.read(attrname='read',\n               expr=<Name.f l.706 at 0x2579ad6ba10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.content l.708 at 0x2579ad6bc90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.722 at 0x2579ad5c710>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.file_structure l.731 at 0x2579ad5d710>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Subscript l.734 at 0x2579ad5db50>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.745 at 0x2579ad5eb10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            }
          ],
          "unresolved_imports": [
            "os",
            "re",
            "json",
            "logging"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": "analyzers\\ast_analyzer.py",
        "language": "python",
        "file_size": 20505,
        "line_count": 519,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "__init__",
            "line_number": 18,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_check_tree_sitter",
            "line_number": 23,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Prüft ob tree-sitter verfügbar ist",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "_check_esprima",
            "line_number": 32,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Prüft ob esprima verfügbar ist",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "_check_astroid",
            "line_number": 41,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Prüft ob astroid verfügbar ist",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "_detect_language_from_extension",
            "line_number": 89,
            "parameters": [
              "self",
              "extension"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Erkennt Sprache basierend auf Dateierweiterung",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_analyze_python_function",
            "line_number": 154,
            "parameters": [
              "self",
              "node"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Analysiert eine Python-Funktion",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_analyze_python_class",
            "line_number": 167,
            "parameters": [
              "self",
              "node"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Analysiert eine Python-Klasse",
            "is_async": false,
            "complexity": 3
          },
          {
            "name": "_analyze_python_import",
            "line_number": 184,
            "parameters": [
              "self",
              "node"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Analysiert Python-Imports",
            "is_async": false,
            "complexity": 3
          },
          {
            "name": "_calculate_python_complexity",
            "line_number": 201,
            "parameters": [
              "self",
              "tree"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Berechnet Python-Komplexitäts-Metriken",
            "is_async": false,
            "complexity": 5
          },
          {
            "name": "_calculate_function_complexity",
            "line_number": 222,
            "parameters": [
              "self",
              "node"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Berechnet Cyclomatic Complexity einer Funktion",
            "is_async": false,
            "complexity": 4
          },
          {
            "name": "_find_python_issues",
            "line_number": 234,
            "parameters": [
              "self",
              "tree",
              "content"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Findet Python-Code-Issues",
            "is_async": false,
            "complexity": 6
          },
          {
            "name": "_walk_javascript_ast",
            "line_number": 329,
            "parameters": [
              "self",
              "node",
              "result"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Walkt durch JavaScript AST",
            "is_async": false,
            "complexity": 13
          },
          {
            "name": "_calculate_javascript_complexity",
            "line_number": 377,
            "parameters": [
              "self",
              "result"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Berechnet JavaScript-Komplexitäts-Metriken",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_get_decorator_name",
            "line_number": 504,
            "parameters": [
              "self",
              "node"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Extrahiert Decorator-Namen",
            "is_async": false,
            "complexity": 3
          },
          {
            "name": "_get_base_name",
            "line_number": 512,
            "parameters": [
              "self",
              "node"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Extrahiert Basis-Klassen-Namen",
            "is_async": false,
            "complexity": 3
          },
          {
            "name": "walk_astroid",
            "line_number": 469,
            "parameters": [
              "node"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Walk through astroid tree recursively",
            "is_async": false,
            "complexity": 2
          }
        ],
        "classes": [
          {
            "name": "ASTAnalyzer",
            "line_number": 15,
            "bases": [],
            "decorators": [],
            "docstring": "Echte AST-Analyse für verschiedene Programmiersprachen",
            "methods": [
              "__init__",
              "_check_tree_sitter",
              "_check_esprima",
              "_check_astroid",
              "_detect_language_from_extension",
              "_analyze_python_function",
              "_analyze_python_class",
              "_analyze_python_import",
              "_calculate_python_complexity",
              "_calculate_function_complexity",
              "_find_python_issues",
              "_walk_javascript_ast",
              "_calculate_javascript_complexity",
              "_get_decorator_name",
              "_get_base_name"
            ],
            "method_count": 15
          }
        ],
        "imports": [
          {
            "type": "import",
            "modules": [
              "os"
            ],
            "line_number": 5
          },
          {
            "type": "import",
            "modules": [
              "json"
            ],
            "line_number": 6
          },
          {
            "type": "import",
            "modules": [
              "logging"
            ],
            "line_number": 7
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 8
          },
          {
            "type": "from_import",
            "module": "typing",
            "names": [
              "Dict",
              "Any",
              "List",
              "Optional"
            ],
            "level": 0,
            "line_number": 9
          },
          {
            "type": "import",
            "modules": [
              "ast"
            ],
            "line_number": 10
          },
          {
            "type": "import",
            "modules": [
              "tree_sitter"
            ],
            "line_number": 26
          },
          {
            "type": "import",
            "modules": [
              "esprima"
            ],
            "line_number": 35
          },
          {
            "type": "import",
            "modules": [
              "astroid"
            ],
            "line_number": 44
          },
          {
            "type": "import",
            "modules": [
              "esprima"
            ],
            "line_number": 278
          },
          {
            "type": "import",
            "modules": [
              "astroid"
            ],
            "line_number": 455
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 52,
          "function_count": 16,
          "class_count": 1,
          "import_count": 11,
          "nested_depth": 0
        },
        "code_issues": [
          {
            "type": "wildcard_import",
            "severity": "medium",
            "line": 0,
            "message": "Wildcard-Import (import *) sollte vermieden werden",
            "file": "analyzers\\ast_analyzer.py"
          }
        ],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.getLogger(attrname='getLogger',\n                    expr=<Name.logging l.12 at 0x2579aea8e90>)",
              "type": "Instance of logging.RootLogger"
            },
            {
              "function": "Attribute._check_tree_sitter(attrname='_check_tree_sitter',\n                             expr=<Name.self l.19 at 0x2579ad4a3d0>)",
              "type": "Const.bool(value=True,\n           kind=None)"
            },
            {
              "function": "Attribute._check_esprima(attrname='_check_esprima',\n                         expr=<Name.self l.20 at 0x2579ad48f90>)",
              "type": "Const.bool(value=True,\n           kind=None)"
            },
            {
              "function": "Attribute._check_astroid(attrname='_check_astroid',\n                         expr=<Name.self l.21 at 0x2579ad496d0>)",
              "type": "Const.bool(value=True,\n           kind=None)"
            },
            {
              "function": "Attribute.warning(attrname='warning',\n                  expr=<Name.logger l.29 at 0x2579ad4ba50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.warning(attrname='warning',\n                  expr=<Name.logger l.38 at 0x2579ad4a790>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.warning(attrname='warning',\n                  expr=<Name.logger l.47 at 0x2579ad493d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Name.file_path_obj l.54 at 0x2579ad4ad50>)",
              "type": "Const.bool(value=False,\n           kind=None)"
            },
            {
              "function": "Attribute._detect_language_from_extension(attrname='_detect_language_from_extension',\n                                          expr=<Name.self l.59 at 0x2579ad488d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.read(attrname='read',\n               expr=<Name.f l.63 at 0x2579ad1c5d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Name.content l.69 at 0x2579ad1cd10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._analyze_python_ast(attrname='_analyze_python_ast',\n                              expr=<Name.self l.75 at 0x2579ad1d290>)",
              "type": "Dict.dict(items=[ ( <Const.str l.111 at 0x2579ad47b10>,\n              <Const.str l.111 at 0x2579ad479d0>),\n            ( <Const.str l.112 at 0x2579ad47c10>,\n              <List.list l.112 at 0x2579ad47b90>),\n            ( <Const.str l.113 at 0x2579ad47590>,\n              <List.list l.113 at 0x2579ad47c90>),\n            ( <Const.str l.114 at 0x2579ad474d0>,\n              <List.list l.114 at 0x2579ad47510>),\n            ( <Const.str l.115 at 0x2579ad47390>,\n              <Dict.dict l.115 at 0x2579ad47410>),\n            ( <Const.str l.116 at 0x2579ad47350>,\n              <List.list l.116 at 0x2579ad47490>)])"
            },
            {
              "function": "Attribute._analyze_javascript_ast(attrname='_analyze_javascript_ast',\n                                  expr=<Name.self l.77 at 0x2579ad1d890>)",
              "type": "Dict.dict(items=[ ( <Const.str l.265 at 0x2579ad38a90>,\n              <Const.str l.265 at 0x2579ad38b90>),\n            ( <Const.str l.266 at 0x2579ad38990>,\n              <List.list l.266 at 0x2579ad38ad0>),\n            ( <Const.str l.267 at 0x2579ad389d0>,\n              <List.list l.267 at 0x2579ad38e10>),\n            ( <Const.str l.268 at 0x2579ad387d0>,\n              <List.list l.268 at 0x2579ad38b10>),\n            ( <Const.str l.269 at 0x2579ad386d0>,\n              <Dict.dict l.269 at 0x2579ad38890>),\n            ( <Const.str l.270 at 0x2579ad38710>,\n              <List.list l.270 at 0x2579ad388d0>)])"
            },
            {
              "function": "Attribute._analyze_java_ast(attrname='_analyze_java_ast',\n                            expr=<Name.self l.79 at 0x2579ad1de10>)",
              "type": "Dict.dict(items=[ ( <Const.str l.389 at 0x2579acdb010>,\n              <Const.str l.389 at 0x2579acdb050>),\n            ( <Const.str l.390 at 0x2579acda490>,\n              <List.list l.390 at 0x2579acdaa90>),\n            ( <Const.str l.391 at 0x2579acda690>,\n              <List.list l.391 at 0x2579acda2d0>),\n            ( <Const.str l.392 at 0x2579acd9850>,\n              <List.list l.392 at 0x2579acda190>),\n            ( <Const.str l.393 at 0x2579acd9b50>,\n              <Dict.dict l.393 at 0x2579acd9910>)])"
            },
            {
              "function": "Attribute._analyze_generic_ast(attrname='_analyze_generic_ast',\n                               expr=<Name.self l.81 at 0x2579ad1e1d0>)",
              "type": "Dict.dict(items=[ ( <Const.str l.442 at 0x2579ad090d0>,\n              <Const.str l.442 at 0x2579ad098d0>),\n            ( <Const.str l.443 at 0x2579ad080d0>,\n              <Name.language l.443 at 0x2579ad088d0>),\n            ( <Const.str l.444 at 0x2579af341d0>,\n              <Call l.444 at 0x2579af34090>),\n            ( <Const.str l.445 at 0x2579af34450>,\n              <Call l.445 at 0x2579af34190>),\n            ( <Const.str l.446 at 0x2579af34690>,\n              <JoinedStr l.446 at 0x2579af34490>)])"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.86 at 0x2579ad1e610>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.extension l.106 at 0x2579ad1fb90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.parse(attrname='parse',\n                expr=<Name.ast l.121 at 0x2579ad47b50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.walk(attrname='walk',\n               expr=<Name.ast l.124 at 0x2579ad46c90>)",
              "type": "Generator(generator)"
            },
            {
              "function": "Attribute._analyze_python_function(attrname='_analyze_python_function',\n                                   expr=<Name.self l.126 at 0x2579ad46890>)",
              "type": "Dict.dict(items=[ ( <Const.str l.157 at 0x2579ad3f590>,\n              <Attribute.name l.157 at 0x2579ad3fa10>),\n            ( <Const.str l.158 at 0x2579ad3f950>,\n              <Attribute.lineno l.158 at 0x2579ad3f810>),\n            ( <Const.str l.159 at 0x2579ad3f390>,\n              <ListComp l.159 at 0x2579ad3f910>),\n            ( <Const.str l.160 at 0x2579ad3f1d0>,\n              <Call l.160 at 0x2579ad3ef10>),\n            ( <Const.str l.161 at 0x2579ad3ee50>,\n              <ListComp l.161 at 0x2579ad3f290>),\n            ( <Const.str l.162 at 0x2579ad3e690>,\n              <Call l.162 at 0x2579ad3ee10>),\n            ( <Const.str l.163 at 0x2579ad3e990>,\n              <Call l.163 at 0x2579ad3edd0>),\n            ( <Const.str l.164 at 0x2579ad3e890>,\n              <Call l.164 at 0x2579ad3ea90>)])"
            },
            {
              "function": "Attribute._analyze_python_class(attrname='_analyze_python_class',\n                                expr=<Name.self l.129 at 0x2579ad46790>)",
              "type": "Dict.dict(items=[ ( <Const.str l.175 at 0x2579ad3d890>,\n              <Attribute.name l.175 at 0x2579ad3d610>),\n            ( <Const.str l.176 at 0x2579ad3d4d0>,\n              <Attribute.lineno l.176 at 0x2579ad3d810>),\n            ( <Const.str l.177 at 0x2579ad3d150>,\n              <ListComp l.177 at 0x2579ad3d390>),\n            ( <Const.str l.178 at 0x2579ad3ce10>,\n              <ListComp l.178 at 0x2579ad3d250>),\n            ( <Const.str l.179 at 0x2579ad3ce50>,\n              <Call l.179 at 0x2579ad3cd10>),\n            ( <Const.str l.180 at 0x2579ad3cdd0>,\n              <Name.methods l.180 at 0x2579ad3cad0>),\n            ( <Const.str l.181 at 0x2579ad3c610>,\n              <Call l.181 at 0x2579ad3ccd0>)])"
            },
            {
              "function": "Attribute._analyze_python_import(attrname='_analyze_python_import',\n                                 expr=<Name.self l.132 at 0x2579ad45c10>)",
              "type": "Dict.dict(items=[ ( <Const.str l.188 at 0x2579ad3cc10>,\n              <Const.str l.188 at 0x2579ad3d750>),\n            ( <Const.str l.189 at 0x2579ad20350>,\n              <ListComp l.189 at 0x2579ad3c2d0>),\n            ( <Const.str l.190 at 0x2579ad20410>,\n              <Attribute.lineno l.190 at 0x2579ad202d0>)])"
            },
            {
              "function": "Attribute._calculate_python_complexity(attrname='_calculate_python_complexity',\n                                       expr=<Name.self l.136 at 0x2579ad45550>)",
              "type": "Dict.dict(items=[ ( <Const.str l.204 at 0x2579ad21690>,\n              <Const.int l.204 at 0x2579ad21650>),\n            ( <Const.str l.205 at 0x2579ad21710>,\n              <Const.int l.205 at 0x2579ad216d0>),\n            ( <Const.str l.206 at 0x2579ad21790>,\n              <Const.int l.206 at 0x2579ad21750>),\n            ( <Const.str l.207 at 0x2579ad21810>,\n              <Const.int l.207 at 0x2579ad217d0>),\n            ( <Const.str l.208 at 0x2579ad21890>,\n              <Const.int l.208 at 0x2579ad21850>)])"
            },
            {
              "function": "Attribute._find_python_issues(attrname='_find_python_issues',\n                              expr=<Name.self l.139 at 0x2579ad45010>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute._analyze_with_astroid(attrname='_analyze_with_astroid',\n                                expr=<Name.self l.143 at 0x2579ad44d50>)",
              "type": "Dict.dict(items=[])"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute._get_decorator_name(attrname='_get_decorator_name',\n                              expr=<Name.self l.161 at 0x2579ad3ef90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get_docstring(attrname='get_docstring',\n                        expr=<Name.ast l.162 at 0x2579ad3ec90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._calculate_function_complexity(attrname='_calculate_function_complexity',\n                                         expr=<Name.self l.164 at 0x2579ad3e950>)",
              "type": "Const.int(value=1,\n          kind=None)"
            },
            {
              "function": "Attribute._get_base_name(attrname='_get_base_name',\n                         expr=<Name.self l.177 at 0x2579ad3d510>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._get_decorator_name(attrname='_get_decorator_name',\n                              expr=<Name.self l.178 at 0x2579ad3d110>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get_docstring(attrname='get_docstring',\n                        expr=<Name.ast l.179 at 0x2579ad3d310>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Attribute.walk(attrname='walk',\n               expr=<Name.ast l.211 at 0x2579ad21950>)",
              "type": "Generator(generator)"
            },
            {
              "function": "Attribute._calculate_function_complexity(attrname='_calculate_function_complexity',\n                                         expr=<Name.self l.214 at 0x2579ad220d0>)",
              "type": "Const.int(value=1,\n          kind=None)"
            },
            {
              "function": "Attribute.walk(attrname='walk',\n               expr=<Name.ast l.226 at 0x2579ad23450>)",
              "type": "Generator(generator)"
            },
            {
              "function": "Attribute.walk(attrname='walk',\n               expr=<Name.ast l.240 at 0x2579ad3a9d0>)",
              "type": "Generator(generator)"
            },
            {
              "function": "Name.getattr(name='getattr')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.endswith(attrname='endswith',\n                   expr=<Name.file_path l.281 at 0x2579ad3b450>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.parseScript(attrname='parseScript',\n                      expr=<Name.esprima l.287 at 0x2579ad00410>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.parseScript(attrname='parseScript',\n                      expr=<Name.esprima l.295 at 0x2579ad00990>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.warning(attrname='warning',\n                  expr=<Name.logger l.303 at 0x2579ad00f90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.parseScript(attrname='parseScript',\n                      expr=<Name.esprima l.305 at 0x2579ad01550>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.311 at 0x2579ad01a90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._walk_javascript_ast(attrname='_walk_javascript_ast',\n                               expr=<Name.self l.318 at 0x2579ad02190>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._calculate_javascript_complexity(attrname='_calculate_javascript_complexity',\n                                           expr=<Name.self l.321 at 0x2579ad023d0>)",
              "type": "Dict.dict(items=[ ( <Const.str l.380 at 0x2579acda890>,\n              <Call l.380 at 0x2579acdaf90>),\n            ( <Const.str l.381 at 0x2579acda090>,\n              <Call l.381 at 0x2579acda7d0>),\n            ( <Const.str l.382 at 0x2579acd9dd0>,\n              <Call l.382 at 0x2579acd9fd0>),\n            ( <Const.str l.383 at 0x2579acd8d10>,\n              <BinOp l.383 at 0x2579acd99d0>)])"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.node l.331 at 0x2579ad033d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Call l.333 at 0x2579ad03850>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.node l.333 at 0x2579ad03890>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.param l.334 at 0x2579ad03c50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.node l.334 at 0x2579ad03f90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.node l.335 at 0x2579ad13e10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.node l.336 at 0x2579ad13c10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.append(attrname='append',\n                 expr=<Subscript l.338 at 0x2579ad13bd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.node l.340 at 0x2579ad13750>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Call l.342 at 0x2579ad13050>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.node l.342 at 0x2579ad132d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.node l.343 at 0x2579ad12e50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Call l.343 at 0x2579ad12c90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.node l.343 at 0x2579ad12cd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Call l.348 at 0x2579ad12310>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.node l.348 at 0x2579ad12710>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.body_item l.349 at 0x2579ad12490>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Call l.350 at 0x2579ad11ed0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.body_item l.350 at 0x2579ad11e90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.append(attrname='append',\n                 expr=<Subscript l.352 at 0x2579ad11810>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.node l.354 at 0x2579ad11750>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.node l.355 at 0x2579ad11290>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Call l.358 at 0x2579ad10e90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.node l.358 at 0x2579ad10e10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.node l.361 at 0x2579ad10990>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.spec l.363 at 0x2579ad104d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Call l.364 at 0x2579ad10150>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.spec l.364 at 0x2579ad10210>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.append(attrname='append',\n                 expr=<Subscript l.366 at 0x2579acdbc90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Name.node l.369 at 0x2579acdb850>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._walk_javascript_ast(attrname='_walk_javascript_ast',\n                               expr=<Name.self l.371 at 0x2579acdb950>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._walk_javascript_ast(attrname='_walk_javascript_ast',\n                               expr=<Name.self l.375 at 0x2579acd8f10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.result l.380 at 0x2579acdaa10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.result l.381 at 0x2579acda6d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.result l.382 at 0x2579acd9ed0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.result l.383 at 0x2579acd9c10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.result l.383 at 0x2579acd92d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Name.content l.397 at 0x2579acd9250>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.enumerate(name='enumerate')",
              "type": "Instance of builtins.enumerate"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Name.line l.400 at 0x2579ad0be10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.startswith(attrname='startswith',\n                     expr=<Name.line l.403 at 0x2579ad0bb50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.startswith(attrname='startswith',\n                     expr=<Name.line l.403 at 0x2579ad0ba90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Subscript l.404 at 0x2579ad0b810>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Name.line l.404 at 0x2579ad0b790>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.startswith(attrname='startswith',\n                     expr=<Name.line l.408 at 0x2579ad0add0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Subscript l.413 at 0x2579ad0a790>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Name.line l.413 at 0x2579ad0a850>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.startswith(attrname='startswith',\n                     expr=<Name.line l.421 at 0x2579ad0a190>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.replace(attrname='replace',\n                  expr=<Call l.422 at 0x2579ad09cd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.replace(attrname='replace',\n                  expr=<Name.line l.422 at 0x2579ad097d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Name.content l.445 at 0x2579af34310>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.parse(attrname='parse',\n                expr=<Name.astroid l.458 at 0x2579af35390>)",
              "type": "Instance of astroid.nodes.scoped_nodes.scoped_nodes.Module"
            },
            {
              "function": "Attribute.get_children(attrname='get_children',\n                       expr=<Name.node l.472 at 0x2579af360d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.walk_astroid(name='walk_astroid')",
              "type": "Generator(generator)"
            },
            {
              "function": "Name.walk_astroid(name='walk_astroid')",
              "type": "Generator(generator)"
            },
            {
              "function": "Attribute.infer(attrname='infer',\n                expr=<Name.node l.487 at 0x2579af37850>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.list(name='list')",
              "type": "Instance of builtins.list"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.501 at 0x2579af18950>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._get_decorator_name(attrname='_get_decorator_name',\n                              expr=<Name.self l.509 at 0x2579af197d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute._get_base_name(attrname='_get_base_name',\n                         expr=<Name.self l.517 at 0x2579af1a7d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            }
          ],
          "unresolved_imports": [
            "os",
            "json",
            "logging",
            "ast",
            "tree_sitter",
            "esprima",
            "astroid",
            "esprima",
            "astroid"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": "analyzers\\database_analyzer.py",
        "language": "python",
        "file_size": 28978,
        "line_count": 664,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "__init__",
            "line_number": 17,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_detect_migration_framework",
            "line_number": 546,
            "parameters": [
              "self",
              "file_path"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Erkennt das Migrations-Framework basierend auf der Datei",
            "is_async": false,
            "complexity": 6
          }
        ],
        "classes": [
          {
            "name": "DatabaseAnalyzer",
            "line_number": 14,
            "bases": [],
            "decorators": [],
            "docstring": "Analysiert Datenbank-Schemas und ORM-Models",
            "methods": [
              "__init__",
              "_detect_migration_framework"
            ],
            "method_count": 2
          }
        ],
        "imports": [
          {
            "type": "import",
            "modules": [
              "os"
            ],
            "line_number": 5
          },
          {
            "type": "import",
            "modules": [
              "re"
            ],
            "line_number": 6
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 7
          },
          {
            "type": "from_import",
            "module": "typing",
            "names": [
              "Dict",
              "Any",
              "List",
              "Set"
            ],
            "level": 0,
            "line_number": 8
          },
          {
            "type": "import",
            "modules": [
              "logging"
            ],
            "line_number": 9
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 7,
          "function_count": 2,
          "class_count": 1,
          "import_count": 5,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.getLogger(attrname='getLogger',\n                    expr=<Name.logging l.11 at 0x2579e2d7e90>)",
              "type": "Instance of logging.RootLogger"
            },
            {
              "function": "Attribute._detect_orm_framework(attrname='_detect_orm_framework',\n                                expr=<Name.self l.104 at 0x2579e317b90>)",
              "type": "Const.str(value='Prisma',\n          kind=None)"
            },
            {
              "function": "Attribute._extract_orm_models(attrname='_extract_orm_models',\n                              expr=<Name.self l.109 at 0x2579e31c150>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute._extract_sql_schema(attrname='_extract_sql_schema',\n                              expr=<Name.self l.113 at 0x2579e31c650>)",
              "type": "Dict.dict(items=[ ( <Const.str l.451 at 0x2579e3559d0>,\n              <List.list l.451 at 0x2579e355990>),\n            ( <Const.str l.452 at 0x2579e355ad0>,\n              <List.list l.452 at 0x2579e355a10>),\n            ( <Const.str l.453 at 0x2579e355b90>,\n              <List.list l.453 at 0x2579e355b50>)])"
            },
            {
              "function": "Attribute._extract_migrations(attrname='_extract_migrations',\n                              expr=<Name.self l.117 at 0x2579e31cb90>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute._analyze_relationships(attrname='_analyze_relationships',\n                                 expr=<Name.self l.121 at 0x2579e31d010>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute._detect_database_type(attrname='_detect_database_type',\n                                expr=<Name.self l.125 at 0x2579e31d550>)",
              "type": "Const.str(value='PostgreSQL',\n          kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.128 at 0x2579e31d8d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.132 at 0x2579e31e350>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.file_structure l.138 at 0x2579e31ef50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Subscript l.141 at 0x2579e31f350>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.endswith(attrname='endswith',\n                   expr=<Subscript l.145 at 0x2579e31fb10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.read(attrname='read',\n               expr=<Name.f l.151 at 0x2579e3205d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Attribute.orm_patterns l.153 at 0x2579e3208d0>)",
              "type": "DictItems.list(ctx=None,\n               elts=[ <Tuple.tuple l.19 at 0x2579e12a390>,\n                 <Tuple.tuple l.29 at 0x2579e12be10>,\n                 <Tuple.tuple l.40 at 0x2579e131550>,\n                 <Tuple.tuple l.49 at 0x2579e131610>,\n                 <Tuple.tuple l.59 at 0x2579e1315d0>])"
            },
            {
              "function": "Attribute.search(attrname='search',\n                 expr=<Name.re l.161 at 0x2579e321410>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.170 at 0x2579e321b90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.file_structure l.178 at 0x2579e322c50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Subscript l.181 at 0x2579e323010>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.read(attrname='read',\n               expr=<Name.f l.186 at 0x2579e323d90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._extract_sqlalchemy_models(attrname='_extract_sqlalchemy_models',\n                                     expr=<Name.self l.197 at 0x2579e328f10>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute._extract_django_models(attrname='_extract_django_models',\n                                 expr=<Name.self l.199 at 0x2579e3294d0>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute._extract_mongoose_models(attrname='_extract_mongoose_models',\n                                   expr=<Name.self l.201 at 0x2579e329a90>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute._extract_sequelize_models(attrname='_extract_sequelize_models',\n                                    expr=<Name.self l.203 at 0x2579e32a050>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.debug(attrname='debug',\n                expr=<Name.logger l.206 at 0x2579e32a450>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._extract_prisma_models(attrname='_extract_prisma_models',\n                                 expr=<Name.self l.211 at 0x2579e32aa90>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.217 at 0x2579e32b050>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.finditer(attrname='finditer',\n                   expr=<Name.re l.227 at 0x2579e330090>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.match l.230 at 0x2579e330490>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.search(attrname='search',\n                 expr=<Name.re l.234 at 0x2579e330990>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.table_match l.235 at 0x2579e330d90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.model_name l.235 at 0x2579e330f50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.finditer(attrname='finditer',\n                   expr=<Name.re l.240 at 0x2579e3315d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.col_match l.243 at 0x2579e331a50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.260 at 0x2579e3326d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.finditer(attrname='finditer',\n                   expr=<Name.re l.271 at 0x2579e333710>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.match l.274 at 0x2579e333b10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.search(attrname='search',\n                 expr=<Name.re l.278 at 0x2579e33c050>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.table_match l.279 at 0x2579e33c3d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.model_name l.279 at 0x2579e33c590>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.finditer(attrname='finditer',\n                   expr=<Name.re l.284 at 0x2579e33cc10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.field_match l.287 at 0x2579e33d090>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.field_match l.288 at 0x2579e33d310>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.305 at 0x2579e33df90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.finditer(attrname='finditer',\n                   expr=<Name.re l.316 at 0x2579e33ef90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.match l.319 at 0x2579e33f390>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.replace(attrname='replace',\n                  expr=<Name.schema_name l.320 at 0x2579e33f610>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.finditer(attrname='finditer',\n                   expr=<Name.re l.325 at 0x2579e33fcd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.field_match l.328 at 0x2579e3441d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.model_name l.338 at 0x2579e344ad0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.345 at 0x2579e344f90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.finditer(attrname='finditer',\n                   expr=<Name.re l.356 at 0x2579e345f90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.match l.359 at 0x2579e346390>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.finditer(attrname='finditer',\n                   expr=<Name.re l.364 at 0x2579e346a10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.field_match l.367 at 0x2579e346e90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.model_name l.377 at 0x2579e3477d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.384 at 0x2579e347c90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.file_structure l.393 at 0x2579e348cd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.endswith(attrname='endswith',\n                   expr=<Subscript l.396 at 0x2579e349050>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.read(attrname='read',\n               expr=<Name.f l.401 at 0x2579e349c10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.finditer(attrname='finditer',\n                   expr=<Name.re l.405 at 0x2579e349f90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.match l.408 at 0x2579e34a410>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.match l.409 at 0x2579e34a690>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.search(attrname='search',\n                 expr=<Name.re l.413 at 0x2579e34aa50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.map_match l.414 at 0x2579e34ad50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.model_name l.414 at 0x2579e34af10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.finditer(attrname='finditer',\n                   expr=<Name.re l.419 at 0x2579e34b450>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.field_match l.422 at 0x2579e34b850>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.field_match l.423 at 0x2579e34bad0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.debug(attrname='debug',\n                expr=<Name.logger l.440 at 0x2579e354790>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.444 at 0x2579e354c90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.file_structure l.457 at 0x2579e355e50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Subscript l.460 at 0x2579e356210>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.read(attrname='read',\n               expr=<Name.f l.465 at 0x2579e356f50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.finditer(attrname='finditer',\n                   expr=<Name.re l.469 at 0x2579e3572d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Call l.472 at 0x2579e357810>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.match l.472 at 0x2579e357850>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.match l.473 at 0x2579e357bd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.finditer(attrname='finditer',\n                   expr=<Name.re l.478 at 0x2579e358150>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.col_match l.481 at 0x2579e358590>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.col_match l.482 at 0x2579e358810>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.col_match l.483 at 0x2579e358ad0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.col_match l.483 at 0x2579e358c50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.upper(attrname='upper',\n                expr=<Name.column_constraints l.488 at 0x2579e359290>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.upper(attrname='upper',\n                expr=<Name.column_constraints l.489 at 0x2579e3594d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.debug(attrname='debug',\n                expr=<Name.logger l.499 at 0x2579e359c50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.503 at 0x2579e35a150>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.file_structure l.512 at 0x2579e35b150>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.file_structure l.513 at 0x2579e35b450>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.d l.516 at 0x2579e35bb10>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Name.migration_path l.520 at 0x2579e360050>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.rglob(attrname='rglob',\n                expr=<Name.migration_path l.521 at 0x2579e360290>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.is_file(attrname='is_file',\n                  expr=<Name.file_path l.522 at 0x2579e3605d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Attribute.suffix l.522 at 0x2579e360750>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.relative_to(attrname='relative_to',\n                      expr=<Name.file_path l.525 at 0x2579e360e90>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute._detect_migration_framework(attrname='_detect_migration_framework',\n                                      expr=<Name.self l.527 at 0x2579e361210>)",
              "type": "Const.str(value='Alembic',\n          kind=None)"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Subscript l.532 at 0x2579e3616d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.542 at 0x2579e362710>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.read(attrname='read',\n               expr=<Name.f l.550 at 0x2579e363610>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.content l.552 at 0x2579e363890>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.content l.554 at 0x2579e363bd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.content l.556 at 0x2579e363f10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.content l.558 at 0x2579e368290>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.model l.573 at 0x2579e369650>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Call l.574 at 0x2579e369a90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.column l.574 at 0x2579e369ad0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Call l.574 at 0x2579e369e10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.column l.574 at 0x2579e369e50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.model l.581 at 0x2579e36a690>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.table l.586 at 0x2579e36aad0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Call l.587 at 0x2579e36ae10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.column l.587 at 0x2579e36ae50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.598 at 0x2579e36b990>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.file_structure l.605 at 0x2579e370690>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Subscript l.609 at 0x2579e370ad0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Call l.616 at 0x2579e371990>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.read(attrname='read',\n               expr=<Name.f l.616 at 0x2579e3719d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.endswith(attrname='endswith',\n                   expr=<Subscript l.638 at 0x2579e373250>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Call l.643 at 0x2579e373d50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.read(attrname='read',\n               expr=<Name.f l.643 at 0x2579e373d90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.662 at 0x2579e3750d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            }
          ],
          "unresolved_imports": [
            "os",
            "re",
            "logging"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": "analyzers\\dependency_analyzer.py",
        "language": "python",
        "file_size": 26000,
        "line_count": 658,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "__init__",
            "line_number": 18,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_find_dependency_files",
            "line_number": 96,
            "parameters": [
              "self",
              "project_path",
              "file_structure"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Findet alle Dependency-Dateien im Projekt",
            "is_async": false,
            "complexity": 3
          },
          {
            "name": "_generate_dependency_graph",
            "line_number": 582,
            "parameters": [
              "self",
              "packages"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Generiert einen Dependency-Graph",
            "is_async": false,
            "complexity": 4
          }
        ],
        "classes": [
          {
            "name": "DependencyAnalyzer",
            "line_number": 15,
            "bases": [],
            "decorators": [],
            "docstring": "Analysiert Projekt-Abhängigkeiten",
            "methods": [
              "__init__",
              "_find_dependency_files",
              "_generate_dependency_graph"
            ],
            "method_count": 3
          }
        ],
        "imports": [
          {
            "type": "import",
            "modules": [
              "os"
            ],
            "line_number": 5
          },
          {
            "type": "import",
            "modules": [
              "json"
            ],
            "line_number": 6
          },
          {
            "type": "import",
            "modules": [
              "re"
            ],
            "line_number": 7
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 8
          },
          {
            "type": "from_import",
            "module": "typing",
            "names": [
              "Dict",
              "Any",
              "List",
              "Set"
            ],
            "level": 0,
            "line_number": 9
          },
          {
            "type": "import",
            "modules": [
              "logging"
            ],
            "line_number": 10
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 8,
          "function_count": 3,
          "class_count": 1,
          "import_count": 6,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.getLogger(attrname='getLogger',\n                    expr=<Name.logging l.12 at 0x2579e14db90>)",
              "type": "Instance of logging.RootLogger"
            },
            {
              "function": "Attribute._find_dependency_files(attrname='_find_dependency_files',\n                                 expr=<Name.self l.55 at 0x2579e3fc610>)",
              "type": "Dict.dict(items=[])"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Name.dependency_files l.58 at 0x2579e3fc9d0>)",
              "type": "DictItems.list(ctx=None,\n               elts=[])"
            },
            {
              "function": "Name.parser_func(name='parser_func')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.file_deps l.63 at 0x2579e3fd550>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.74 at 0x2579e3fe810>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Name.list(name='list')",
              "type": "List.list(ctx=None,\n          elts=[])"
            },
            {
              "function": "Name.set(name='set')",
              "type": "Set.set(elts=[])"
            },
            {
              "function": "Attribute._generate_dependency_graph(attrname='_generate_dependency_graph',\n                                     expr=<Name.self l.81 at 0x2579e3ff410>)",
              "type": "Dict.dict(items=[ ( <Const.str l.585 at 0x2579e44ff50>,\n              <List.list l.585 at 0x2579e44ff10>),\n            ( <Const.str l.586 at 0x2579e450090>,\n              <List.list l.586 at 0x2579e450050>),\n            ( <Const.str l.587 at 0x2579e4501d0>,\n              <Dict.dict l.587 at 0x2579e450110>)])"
            },
            {
              "function": "Attribute._analyze_vulnerabilities(attrname='_analyze_vulnerabilities',\n                                   expr=<Name.self l.84 at 0x2579e3ff7d0>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute._analyze_outdated_packages(attrname='_analyze_outdated_packages',\n                                     expr=<Name.self l.87 at 0x2579e3ffb50>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.89 at 0x2579e3ffd90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.93 at 0x2579e404310>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.file_structure l.100 at 0x2579e405110>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.load(attrname='load',\n               expr=<Name.json l.114 at 0x2579e406f10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Call l.119 at 0x2579e407350>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.data l.119 at 0x2579e4073d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Call l.129 at 0x2579e407d90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.data l.129 at 0x2579e407d50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._check_npm_vulnerabilities(attrname='_check_npm_vulnerabilities',\n                                     expr=<Name.self l.141 at 0x2579e40c8d0>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute._check_npm_outdated(attrname='_check_npm_outdated',\n                              expr=<Name.self l.142 at 0x2579e40ca90>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.146 at 0x2579e40cdd0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Name.line l.156 at 0x2579e40e050>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.startswith(attrname='startswith',\n                     expr=<Name.line l.157 at 0x2579e40e350>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.match(attrname='match',\n                expr=<Name.re l.159 at 0x2579e40e610>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.groups(attrname='groups',\n                 expr=<Name.match l.161 at 0x2579e40ead0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._check_pip_vulnerabilities(attrname='_check_pip_vulnerabilities',\n                                     expr=<Name.self l.182 at 0x2579e40fa90>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute._check_pip_outdated(attrname='_check_pip_outdated',\n                              expr=<Name.self l.183 at 0x2579e40fc50>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.187 at 0x2579e40ff50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.read(attrname='read',\n               expr=<Name.f l.197 at 0x2579e411110>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Name.content l.203 at 0x2579e411590>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Name.line l.204 at 0x2579e411850>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.startswith(attrname='startswith',\n                     expr=<Name.line l.214 at 0x2579e412210>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.startswith(attrname='startswith',\n                     expr=<Name.line l.220 at 0x2579e412a10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Name.line l.221 at 0x2579e412d90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Name.name l.222 at 0x2579e413050>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Call l.223 at 0x2579e413250>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Name.version l.223 at 0x2579e413290>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._check_pip_vulnerabilities(attrname='_check_pip_vulnerabilities',\n                                     expr=<Name.self l.236 at 0x2579e413e10>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute._check_pip_outdated(attrname='_check_pip_outdated',\n                              expr=<Name.self l.237 at 0x2579e413fd0>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.241 at 0x2579e41c310>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.read(attrname='read',\n               expr=<Name.f l.251 at 0x2579e41d410>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Name.content l.256 at 0x2579e41d750>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Name.line l.257 at 0x2579e41da10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.startswith(attrname='startswith',\n                     expr=<Name.line l.262 at 0x2579e41de50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.startswith(attrname='startswith',\n                     expr=<Name.line l.266 at 0x2579e41e410>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Name.line l.267 at 0x2579e41e790>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Name.name l.268 at 0x2579e41ea50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Call l.269 at 0x2579e41ec50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Name.version l.269 at 0x2579e41ec90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._check_pip_vulnerabilities(attrname='_check_pip_vulnerabilities',\n                                     expr=<Name.self l.282 at 0x2579e41f6d0>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute._check_pip_outdated(attrname='_check_pip_outdated',\n                              expr=<Name.self l.283 at 0x2579e41f890>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.287 at 0x2579e41fb90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.load(attrname='load',\n               expr=<Name.json l.294 at 0x2579e420b90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Call l.299 at 0x2579e420fd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.data l.299 at 0x2579e421050>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Call l.309 at 0x2579e421a10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.data l.309 at 0x2579e4219d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.326 at 0x2579e422790>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Name.line l.336 at 0x2579e423a10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.startswith(attrname='startswith',\n                     expr=<Name.line l.337 at 0x2579e423c10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.startswith(attrname='startswith',\n                     expr=<Name.line l.337 at 0x2579e423d90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Name.line l.339 at 0x2579e428090>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Subscript l.341 at 0x2579e428550>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Const.str l.346 at 0x2579e428c10>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.search(attrname='search',\n                 expr=<Name.re l.347 at 0x2579e428fd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.group(attrname='group',\n                expr=<Name.version_match l.349 at 0x2579e429350>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.367 at 0x2579e429fd0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.read(attrname='read',\n               expr=<Name.f l.376 at 0x2579e42b0d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Name.content l.381 at 0x2579e42b3d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Name.line l.382 at 0x2579e42b690>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.startswith(attrname='startswith',\n                     expr=<Name.line l.387 at 0x2579e42bad0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.startswith(attrname='startswith',\n                     expr=<Name.line l.391 at 0x2579e4300d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Name.line l.392 at 0x2579e430450>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Name.name l.393 at 0x2579e430710>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Call l.394 at 0x2579e430910>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Name.version l.394 at 0x2579e430950>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.412 at 0x2579e4315d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Name.line l.422 at 0x2579e432850>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.startswith(attrname='startswith',\n                     expr=<Name.line l.423 at 0x2579e432a50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.startswith(attrname='startswith',\n                     expr=<Name.line l.423 at 0x2579e432bd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Name.line l.425 at 0x2579e432e90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.446 at 0x2579e4380d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.read(attrname='read',\n               expr=<Name.f l.455 at 0x2579e439210>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.findall(attrname='findall',\n                  expr=<Name.re l.459 at 0x2579e439590>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Name.version l.465 at 0x2579e43a050>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.479 at 0x2579e43a890>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.read(attrname='read',\n               expr=<Name.f l.488 at 0x2579e43b9d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.findall(attrname='findall',\n                  expr=<Name.re l.492 at 0x2579e43bd50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Name.dependency l.496 at 0x2579e440510>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.513 at 0x2579e441150>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.append(attrname='append',\n                 expr=<Subscript l.605 at 0x2579e451250>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.append(attrname='append',\n                 expr=<Subscript l.619 at 0x2579e452910>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Name.managers l.622 at 0x2579e452d50>)",
              "type": "DictItems.list(ctx=None,\n               elts=[])"
            },
            {
              "function": "Attribute._check_npm_vulnerabilities(attrname='_check_npm_vulnerabilities',\n                                     expr=<Name.self l.624 at 0x2579e453110>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute._check_pip_vulnerabilities(attrname='_check_pip_vulnerabilities',\n                                     expr=<Name.self l.626 at 0x2579e453690>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.append(attrname='append',\n                 expr=<Subscript l.644 at 0x2579e458f50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Name.managers l.647 at 0x2579e459390>)",
              "type": "DictItems.list(ctx=None,\n               elts=[])"
            },
            {
              "function": "Attribute._check_npm_outdated(attrname='_check_npm_outdated',\n                              expr=<Name.self l.649 at 0x2579e459750>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute._check_pip_outdated(attrname='_check_pip_outdated',\n                              expr=<Name.self l.651 at 0x2579e459cd0>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            }
          ],
          "unresolved_imports": [
            "os",
            "json",
            "re",
            "logging"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": "analyzers\\framework_detector.py",
        "language": "python",
        "file_size": 24163,
        "line_count": 557,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "__init__",
            "line_number": 17,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_get_framework_type",
            "line_number": 423,
            "parameters": [
              "self",
              "framework_name"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Bestimmt den Typ eines Frameworks",
            "is_async": false,
            "complexity": 8
          },
          {
            "name": "_deduplicate_and_prioritize",
            "line_number": 450,
            "parameters": [
              "self",
              "frameworks"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Entfernt Duplikate und priorisiert Frameworks",
            "is_async": false,
            "complexity": 4
          },
          {
            "name": "get_framework_info",
            "line_number": 477,
            "parameters": [
              "self",
              "framework_name"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Gibt detaillierte Informationen über ein Framework zurück",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_get_framework_description",
            "line_number": 489,
            "parameters": [
              "self",
              "framework_name"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Gibt eine Beschreibung des Frameworks zurück",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_get_framework_website",
            "line_number": 512,
            "parameters": [
              "self",
              "framework_name"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Gibt die Website des Frameworks zurück",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_get_framework_docs",
            "line_number": 535,
            "parameters": [
              "self",
              "framework_name"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Gibt die Dokumentation des Frameworks zurück",
            "is_async": false,
            "complexity": 1
          }
        ],
        "classes": [
          {
            "name": "FrameworkDetector",
            "line_number": 14,
            "bases": [],
            "decorators": [],
            "docstring": "Erkennt Frameworks und Libraries in einem Projekt",
            "methods": [
              "__init__",
              "_get_framework_type",
              "_deduplicate_and_prioritize",
              "get_framework_info",
              "_get_framework_description",
              "_get_framework_website",
              "_get_framework_docs"
            ],
            "method_count": 7
          }
        ],
        "imports": [
          {
            "type": "import",
            "modules": [
              "os"
            ],
            "line_number": 5
          },
          {
            "type": "import",
            "modules": [
              "json"
            ],
            "line_number": 6
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 7
          },
          {
            "type": "from_import",
            "module": "typing",
            "names": [
              "Dict",
              "Any",
              "List",
              "Set"
            ],
            "level": 0,
            "line_number": 8
          },
          {
            "type": "import",
            "modules": [
              "logging"
            ],
            "line_number": 9
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 17,
          "function_count": 7,
          "class_count": 1,
          "import_count": 5,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.getLogger(attrname='getLogger',\n                    expr=<Name.logging l.11 at 0x2579e0dbb50>)",
              "type": "Instance of logging.RootLogger"
            },
            {
              "function": "Attribute._detect_by_config_files(attrname='_detect_by_config_files',\n                                  expr=<Name.self l.206 at 0x2579e48e1d0>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute._detect_by_structure(attrname='_detect_by_structure',\n                               expr=<Name.self l.210 at 0x2579e48e690>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute._detect_by_code_patterns(attrname='_detect_by_code_patterns',\n                                   expr=<Name.self l.214 at 0x2579e48eb50>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute._detect_by_dependencies(attrname='_detect_by_dependencies',\n                                  expr=<Name.self l.218 at 0x2579e48f050>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute._deduplicate_and_prioritize(attrname='_deduplicate_and_prioritize',\n                                      expr=<Name.self l.222 at 0x2579e48f4d0>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.224 at 0x2579e48f650>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.228 at 0x2579e48ff10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.file_structure l.236 at 0x2579e4a8f90>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute._get_framework_type(attrname='_get_framework_type',\n                              expr=<Name.self l.245 at 0x2579e4a9d10>)",
              "type": "Const.str(value='Frontend',\n          kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.252 at 0x2579e4aa250>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.file_structure l.261 at 0x2579e4ab250>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.file_structure l.262 at 0x2579e4ab550>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Attribute.framework_indicators l.264 at 0x2579e4ab910>)",
              "type": "DictItems.list(ctx=None,\n               elts=[ <Tuple.tuple l.21 at 0x2579e3bdad0>,\n                 <Tuple.tuple l.27 at 0x2579e3bd910>,\n                 <Tuple.tuple l.32 at 0x2579e3bfe50>,\n                 <Tuple.tuple l.36 at 0x2579e3bfa50>,\n                 <Tuple.tuple l.42 at 0x2579e3bfa90>,\n                 <Tuple.tuple l.48 at 0x2579e3bfb10>,\n                 <Tuple.tuple l.54 at 0x2579e3bfb50>,\n                 <Tuple.tuple l.60 at 0x2579e3bfb90>,\n                 <Tuple.tuple l.66 at 0x2579e3bf890>,\n                 <Tuple.tuple l.72 at 0x2579e3bfad0>,\n                 <Tuple.tuple l.79 at 0x2579e3bf8d0>,\n                 <Tuple.tuple l.84 at 0x2579e3bf910>,\n                 <Tuple.tuple l.88 at 0x2579e3bf950>,\n                 <Tuple.tuple l.94 at 0x2579e3bf990>,\n                 <Tuple.tuple l.99 at 0x2579e3bf9d0>,\n                 <Tuple.tuple l.104 at 0x2579e3bf7d0>,\n                 <Tuple.tuple l.109 at 0x2579e3bf790>,\n                 <Tuple.tuple l.115 at 0x2579e3be690>,\n                 <Tuple.tuple l.119 at 0x2579e3be710>,\n                 <Tuple.tuple l.124 at 0x2579e3be750>,\n                 <Tuple.tuple l.131 at 0x2579e3be6d0>,\n                 <Tuple.tuple l.135 at 0x2579e3be590>,\n                 <Tuple.tuple l.139 at 0x2579e3be650>,\n                 <Tuple.tuple l.145 at 0x2579e3be5d0>,\n                 <Tuple.tuple l.150 at 0x2579e3be610>,\n                 <Tuple.tuple l.155 at 0x2579e3be550>])"
            },
            {
              "function": "Attribute._get_framework_type(attrname='_get_framework_type',\n                              expr=<Name.self l.285 at 0x2579e4adbd0>)",
              "type": "Const.str(value='Frontend',\n          kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.292 at 0x2579e4ae290>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.file_structure l.301 at 0x2579e4af290>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Attribute.framework_indicators l.303 at 0x2579e4af650>)",
              "type": "DictItems.list(ctx=None,\n               elts=[ <Tuple.tuple l.21 at 0x2579e39e750>,\n                 <Tuple.tuple l.27 at 0x2579e39d950>,\n                 <Tuple.tuple l.32 at 0x2579e39e210>,\n                 <Tuple.tuple l.36 at 0x2579e39d7d0>,\n                 <Tuple.tuple l.42 at 0x2579e39d750>,\n                 <Tuple.tuple l.48 at 0x2579e39e1d0>,\n                 <Tuple.tuple l.54 at 0x2579e39d790>,\n                 <Tuple.tuple l.60 at 0x2579e39da10>,\n                 <Tuple.tuple l.66 at 0x2579e39e4d0>,\n                 <Tuple.tuple l.72 at 0x2579e39ef90>,\n                 <Tuple.tuple l.79 at 0x2579e39e490>,\n                 <Tuple.tuple l.84 at 0x2579e39e550>,\n                 <Tuple.tuple l.88 at 0x2579e39d9d0>,\n                 <Tuple.tuple l.94 at 0x2579e39c750>,\n                 <Tuple.tuple l.99 at 0x2579e39c650>,\n                 <Tuple.tuple l.104 at 0x2579e39c310>,\n                 <Tuple.tuple l.109 at 0x2579e39c5d0>,\n                 <Tuple.tuple l.115 at 0x2579e39c510>,\n                 <Tuple.tuple l.119 at 0x2579e39c190>,\n                 <Tuple.tuple l.124 at 0x2579e39c210>,\n                 <Tuple.tuple l.131 at 0x2579e39c250>,\n                 <Tuple.tuple l.135 at 0x2579e39c610>,\n                 <Tuple.tuple l.139 at 0x2579e39c150>,\n                 <Tuple.tuple l.145 at 0x2579e39c790>,\n                 <Tuple.tuple l.150 at 0x2579e39c690>,\n                 <Tuple.tuple l.155 at 0x2579e39c410>])"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Subscript l.311 at 0x2579e4affd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute._file_contains_pattern(attrname='_file_contains_pattern',\n                                 expr=<Name.self l.313 at 0x2579e4b0910>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Subscript l.322 at 0x2579e4b1590>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute._file_contains_pattern(attrname='_file_contains_pattern',\n                                 expr=<Name.self l.324 at 0x2579e4b1dd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._get_framework_type(attrname='_get_framework_type',\n                              expr=<Name.self l.332 at 0x2579e4b2990>)",
              "type": "Const.str(value='Frontend',\n          kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.339 at 0x2579e4b3050>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Name.package_json_path l.350 at 0x2579e4bc2d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.load(attrname='load',\n               expr=<Name.json l.353 at 0x2579e4bcb50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.package_data l.355 at 0x2579e4bcdd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.package_data l.356 at 0x2579e4bd0d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Attribute.framework_indicators l.359 at 0x2579e4bd710>)",
              "type": "DictItems.list(ctx=None,\n               elts=[ <Tuple.tuple l.21 at 0x2579a901d90>,\n                 <Tuple.tuple l.27 at 0x257e3227a50>,\n                 <Tuple.tuple l.32 at 0x257e44427d0>,\n                 <Tuple.tuple l.36 at 0x25798401c50>,\n                 <Tuple.tuple l.42 at 0x25798eecc50>,\n                 <Tuple.tuple l.48 at 0x257de0c62d0>,\n                 <Tuple.tuple l.54 at 0x2579a974390>,\n                 <Tuple.tuple l.60 at 0x2579e39e610>,\n                 <Tuple.tuple l.66 at 0x2579e39db90>,\n                 <Tuple.tuple l.72 at 0x2579b4875d0>,\n                 <Tuple.tuple l.79 at 0x2579e39e5d0>,\n                 <Tuple.tuple l.84 at 0x2579e39d090>,\n                 <Tuple.tuple l.88 at 0x2579e39de10>,\n                 <Tuple.tuple l.94 at 0x2579e39dd50>,\n                 <Tuple.tuple l.99 at 0x2579e39e890>,\n                 <Tuple.tuple l.104 at 0x2579e39efd0>,\n                 <Tuple.tuple l.109 at 0x2579e39e590>,\n                 <Tuple.tuple l.115 at 0x2579e39e790>,\n                 <Tuple.tuple l.119 at 0x2579e39cdd0>,\n                 <Tuple.tuple l.124 at 0x2579e39ea10>,\n                 <Tuple.tuple l.131 at 0x2579e39e910>,\n                 <Tuple.tuple l.135 at 0x2579e39e9d0>,\n                 <Tuple.tuple l.139 at 0x2579e39ea50>,\n                 <Tuple.tuple l.145 at 0x2579e39f990>,\n                 <Tuple.tuple l.150 at 0x2579e39f590>,\n                 <Tuple.tuple l.155 at 0x2579e39ea90>])"
            },
            {
              "function": "Attribute._get_framework_type(attrname='_get_framework_type',\n                              expr=<Name.self l.365 at 0x2579e4be090>)",
              "type": "Const.str(value='Frontend',\n          kind=None)"
            },
            {
              "function": "Attribute.debug(attrname='debug',\n                expr=<Name.logger l.373 at 0x2579e4be710>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Name.requirements_path l.377 at 0x2579e4bec50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Call l.380 at 0x2579e4bf3d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.read(attrname='read',\n               expr=<Name.f l.380 at 0x2579e4bf410>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Name.python_frameworks l.396 at 0x2579e4bfed0>)",
              "type": "DictItems.list(ctx=None,\n               elts=[ <Tuple.tuple l.383 at 0x2579e39fe90>,\n                 <Tuple.tuple l.384 at 0x2579e39ed10>,\n                 <Tuple.tuple l.385 at 0x2579e0423d0>,\n                 <Tuple.tuple l.386 at 0x2579b471c10>,\n                 <Tuple.tuple l.387 at 0x2579b472990>,\n                 <Tuple.tuple l.388 at 0x2579b489ad0>,\n                 <Tuple.tuple l.389 at 0x2579b48ba90>,\n                 <Tuple.tuple l.390 at 0x2579a2da310>,\n                 <Tuple.tuple l.391 at 0x257d736a8d0>,\n                 <Tuple.tuple l.392 at 0x257e31d6590>,\n                 <Tuple.tuple l.393 at 0x2579de61510>])"
            },
            {
              "function": "Attribute._get_framework_type(attrname='_get_framework_type',\n                              expr=<Name.self l.400 at 0x2579e4c04d0>)",
              "type": "Const.str(value='Frontend',\n          kind=None)"
            },
            {
              "function": "Attribute.debug(attrname='debug',\n                expr=<Name.logger l.407 at 0x2579e4c0950>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.410 at 0x2579e4c0d50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.read(attrname='read',\n               expr=<Name.f l.418 at 0x2579e4c1cd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.pattern l.419 at 0x2579e4c1e90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.content l.419 at 0x2579e4c2050>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.append(attrname='append',\n                 expr=<Subscript l.458 at 0x2579e4c9b90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Name.framework_groups l.462 at 0x2579e4ca150>)",
              "type": "DictItems.list(ctx=None,\n               elts=[])"
            },
            {
              "function": "Name.list(name='list')",
              "type": "Instance of builtins.list"
            },
            {
              "function": "Name.set(name='set')",
              "type": "Instance of builtins.set"
            },
            {
              "function": "Attribute._get_framework_type(attrname='_get_framework_type',\n                              expr=<Name.self l.481 at 0x2579e4d4550>)",
              "type": "Const.str(value='Frontend',\n          kind=None)"
            },
            {
              "function": "Attribute._get_framework_description(attrname='_get_framework_description',\n                                     expr=<Name.self l.482 at 0x2579e4d4710>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._get_framework_website(attrname='_get_framework_website',\n                                 expr=<Name.self l.483 at 0x2579e4d48d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._get_framework_docs(attrname='_get_framework_docs',\n                              expr=<Name.self l.484 at 0x2579e4d4a90>)",
              "type": "Uninferable"
            }
          ],
          "unresolved_imports": [
            "os",
            "json",
            "logging"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": "analyzers\\language_detector.py",
        "language": "python",
        "file_size": 13105,
        "line_count": 320,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "__init__",
            "line_number": 16,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_get_language_by_extension",
            "line_number": 116,
            "parameters": [
              "self",
              "extension"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Gibt die Sprache basierend auf der Dateierweiterung zurück",
            "is_async": false,
            "complexity": 3
          },
          {
            "name": "_filter_and_prioritize",
            "line_number": 243,
            "parameters": [
              "self",
              "languages",
              "file_structure"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Filtert und priorisiert die erkannten Sprachen",
            "is_async": false,
            "complexity": 6
          },
          {
            "name": "get_language_info",
            "line_number": 272,
            "parameters": [
              "self",
              "language"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Gibt Informationen über eine Sprache zurück",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_get_language_type",
            "line_number": 283,
            "parameters": [
              "self",
              "language"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Bestimmt den Typ einer Sprache",
            "is_async": false,
            "complexity": 5
          },
          {
            "name": "_get_language_description",
            "line_number": 301,
            "parameters": [
              "self",
              "language"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Gibt eine Beschreibung der Sprache zurück",
            "is_async": false,
            "complexity": 1
          }
        ],
        "classes": [
          {
            "name": "LanguageDetector",
            "line_number": 13,
            "bases": [],
            "decorators": [],
            "docstring": "Erkennt Programmiersprachen in einem Projekt",
            "methods": [
              "__init__",
              "_get_language_by_extension",
              "_filter_and_prioritize",
              "get_language_info",
              "_get_language_type",
              "_get_language_description"
            ],
            "method_count": 6
          }
        ],
        "imports": [
          {
            "type": "import",
            "modules": [
              "os"
            ],
            "line_number": 5
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 6
          },
          {
            "type": "from_import",
            "module": "typing",
            "names": [
              "Dict",
              "Any",
              "List",
              "Set"
            ],
            "level": 0,
            "line_number": 7
          },
          {
            "type": "import",
            "modules": [
              "logging"
            ],
            "line_number": 8
          },
          {
            "type": "import",
            "modules": [
              "json"
            ],
            "line_number": 177
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 17,
          "function_count": 6,
          "class_count": 1,
          "import_count": 5,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.getLogger(attrname='getLogger',\n                    expr=<Name.logging l.10 at 0x2579cc57490>)",
              "type": "Instance of logging.RootLogger"
            },
            {
              "function": "Name.set(name='set')",
              "type": "Set.set(elts=[])"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.file_structure l.85 at 0x2579e4dd410>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Name.file_types l.86 at 0x2579e4dd7d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._get_language_by_extension(attrname='_get_language_by_extension',\n                                     expr=<Name.self l.87 at 0x2579e4dda50>)",
              "type": "Const.str(value='Python',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.file_structure l.92 at 0x2579e4de050>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute._detect_by_structure(attrname='_detect_by_structure',\n                               expr=<Name.self l.99 at 0x2579e4ded90>)",
              "type": "Set.set(elts=[])"
            },
            {
              "function": "Attribute._detect_by_content(attrname='_detect_by_content',\n                             expr=<Name.self l.103 at 0x2579e4df290>)",
              "type": "Set.set(elts=[])"
            },
            {
              "function": "Attribute._filter_and_prioritize(attrname='_filter_and_prioritize',\n                                 expr=<Name.self l.107 at 0x2579e4df710>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.109 at 0x2579e4df8d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.113 at 0x2579e4dfed0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.extension l.118 at 0x2579e5008d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Attribute.language_extensions l.120 at 0x2579e500b90>)",
              "type": "DictItems.list(ctx=None,\n               elts=[ <Tuple.tuple l.19 at 0x2579c060210>,\n                 <Tuple.tuple l.20 at 0x2579c060250>,\n                 <Tuple.tuple l.21 at 0x2579c061350>,\n                 <Tuple.tuple l.22 at 0x2579c0615d0>,\n                 <Tuple.tuple l.23 at 0x2579c061290>,\n                 <Tuple.tuple l.24 at 0x2579c062450>,\n                 <Tuple.tuple l.25 at 0x2579c060110>,\n                 <Tuple.tuple l.26 at 0x2579c060350>,\n                 <Tuple.tuple l.27 at 0x2579c060410>,\n                 <Tuple.tuple l.28 at 0x2579c060190>,\n                 <Tuple.tuple l.29 at 0x2579c061390>,\n                 <Tuple.tuple l.30 at 0x2579c060850>,\n                 <Tuple.tuple l.31 at 0x2579c061090>,\n                 <Tuple.tuple l.32 at 0x2579c0600d0>,\n                 <Tuple.tuple l.33 at 0x2579c060450>,\n                 <Tuple.tuple l.34 at 0x2579c060f10>,\n                 <Tuple.tuple l.35 at 0x2579c061150>,\n                 <Tuple.tuple l.36 at 0x2579c060bd0>,\n                 <Tuple.tuple l.37 at 0x2579c062690>,\n                 <Tuple.tuple l.38 at 0x2579c063810>,\n                 <Tuple.tuple l.39 at 0x2579c061650>,\n                 <Tuple.tuple l.40 at 0x2579c061050>,\n                 <Tuple.tuple l.41 at 0x2579c062650>,\n                 <Tuple.tuple l.42 at 0x2579c061310>,\n                 <Tuple.tuple l.43 at 0x2579c061110>,\n                 <Tuple.tuple l.44 at 0x2579c060b50>,\n                 <Tuple.tuple l.45 at 0x2579c060310>,\n                 <Tuple.tuple l.46 at 0x2579c060dd0>,\n                 <Tuple.tuple l.47 at 0x2579c061690>,\n                 <Tuple.tuple l.48 at 0x2579c061a90>,\n                 <Tuple.tuple l.49 at 0x2579c060510>])"
            },
            {
              "function": "Name.set(name='set')",
              "type": "Set.set(elts=[])"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.file_structure l.131 at 0x2579e501d10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.file_structure l.132 at 0x2579e502010>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.164 at 0x2579e48a090>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.set(name='set')",
              "type": "Set.set(elts=[])"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Name.package_json_path l.175 at 0x2579e48b250>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.load(attrname='load',\n               expr=<Name.json l.179 at 0x2579e48bb90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.package_data l.182 at 0x2579e48be10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.package_data l.183 at 0x2579e504150>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.debug(attrname='debug',\n                expr=<Name.logger l.200 at 0x2579e505c50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Name.requirements_path l.204 at 0x2579e506190>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Call l.207 at 0x2579e506910>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.read(attrname='read',\n               expr=<Name.f l.207 at 0x2579e506950>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.debug(attrname='debug',\n                expr=<Name.logger l.219 at 0x2579e507a90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Name.dockerfile_path l.223 at 0x2579e510050>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Call l.226 at 0x2579e5107d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.read(attrname='read',\n               expr=<Name.f l.226 at 0x2579e510810>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.debug(attrname='debug',\n                expr=<Name.logger l.236 at 0x2579e511550>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.239 at 0x2579e511950>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.set(name='set')",
              "type": "Set.set(elts=[])"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.file_structure l.253 at 0x2579e512d50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.file_types l.260 at 0x2579e513850>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.list(name='list')",
              "type": "Instance of builtins.list"
            },
            {
              "function": "Name.set(name='set')",
              "type": "Set.set(elts=[])"
            },
            {
              "function": "Attribute._get_language_type(attrname='_get_language_type',\n                             expr=<Name.self l.277 at 0x2579e515510>)",
              "type": "Const.str(value='Frontend',\n          kind=None)"
            },
            {
              "function": "Attribute._get_language_description(attrname='_get_language_description',\n                                    expr=<Name.self l.278 at 0x2579e5156d0>)",
              "type": "Uninferable"
            }
          ],
          "unresolved_imports": [
            "os",
            "logging",
            "json"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": "analyzers\\project_analyzer.py",
        "language": "python",
        "file_size": 44990,
        "line_count": 959,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "__init__",
            "line_number": 26,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_calculate_ast_complexity_summary",
            "line_number": 311,
            "parameters": [
              "self",
              "analyzed_files"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Berechnet Komplexitäts-Summary aus AST-Analyse",
            "is_async": false,
            "complexity": 4
          },
          {
            "name": "_parse_lizard_output",
            "line_number": 540,
            "parameters": [
              "self",
              "output_lines"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Parst Lizard Text-Output für Metriken",
            "is_async": false,
            "complexity": 13
          },
          {
            "name": "_calculate_quality_score",
            "line_number": 586,
            "parameters": [
              "self",
              "metrics"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Berechnet einen Gesamt-Quality-Score (0-100)",
            "is_async": false,
            "complexity": 13
          },
          {
            "name": "get_analysis_results",
            "line_number": 952,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Gibt die aktuellen Analyse-Ergebnisse zurück",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "is_analysis_complete",
            "line_number": 956,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Prüft ob die Analyse abgeschlossen ist",
            "is_async": false,
            "complexity": 1
          }
        ],
        "classes": [
          {
            "name": "ProjectAnalyzer",
            "line_number": 23,
            "bases": [],
            "decorators": [],
            "docstring": "Hauptklasse für die Projekt-Analyse",
            "methods": [
              "__init__",
              "_calculate_ast_complexity_summary",
              "_parse_lizard_output",
              "_calculate_quality_score",
              "get_analysis_results",
              "is_analysis_complete"
            ],
            "method_count": 6
          }
        ],
        "imports": [
          {
            "type": "import",
            "modules": [
              "os"
            ],
            "line_number": 5
          },
          {
            "type": "import",
            "modules": [
              "json"
            ],
            "line_number": 6
          },
          {
            "type": "import",
            "modules": [
              "asyncio"
            ],
            "line_number": 7
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 8
          },
          {
            "type": "from_import",
            "module": "typing",
            "names": [
              "Dict",
              "Any",
              "List",
              "Optional"
            ],
            "level": 0,
            "line_number": 9
          },
          {
            "type": "from_import",
            "module": "datetime",
            "names": [
              "datetime"
            ],
            "level": 0,
            "line_number": 10
          },
          {
            "type": "import",
            "modules": [
              "logging"
            ],
            "line_number": 11
          },
          {
            "type": "from_import",
            "module": "language_detector",
            "names": [
              "LanguageDetector"
            ],
            "level": 1,
            "line_number": 13
          },
          {
            "type": "from_import",
            "module": "framework_detector",
            "names": [
              "FrameworkDetector"
            ],
            "level": 1,
            "line_number": 14
          },
          {
            "type": "from_import",
            "module": "dependency_analyzer",
            "names": [
              "DependencyAnalyzer"
            ],
            "level": 1,
            "line_number": 15
          },
          {
            "type": "from_import",
            "module": "database_analyzer",
            "names": [
              "DatabaseAnalyzer"
            ],
            "level": 1,
            "line_number": 16
          },
          {
            "type": "from_import",
            "module": "api_analyzer",
            "names": [
              "APIAnalyzer"
            ],
            "level": 1,
            "line_number": 17
          },
          {
            "type": "from_import",
            "module": "ast_analyzer",
            "names": [
              "ASTAnalyzer"
            ],
            "level": 1,
            "line_number": 18
          },
          {
            "type": "import",
            "modules": [
              "subprocess"
            ],
            "line_number": 432
          },
          {
            "type": "import",
            "modules": [
              "json"
            ],
            "line_number": 433
          },
          {
            "type": "import",
            "modules": [
              "subprocess"
            ],
            "line_number": 498
          },
          {
            "type": "import",
            "modules": [
              "json"
            ],
            "line_number": 499
          },
          {
            "type": "import",
            "modules": [
              "subprocess"
            ],
            "line_number": 657
          },
          {
            "type": "import",
            "modules": [
              "json"
            ],
            "line_number": 658
          },
          {
            "type": "import",
            "modules": [
              "re"
            ],
            "line_number": 739
          },
          {
            "type": "import",
            "modules": [
              "re"
            ],
            "line_number": 788
          },
          {
            "type": "import",
            "modules": [
              "re"
            ],
            "line_number": 557
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 33,
          "function_count": 6,
          "class_count": 1,
          "import_count": 22,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.getLogger(attrname='getLogger',\n                    expr=<Name.logging l.20 at 0x2579e5adad0>)",
              "type": "Instance of logging.RootLogger"
            },
            {
              "function": "Name.LanguageDetector(name='LanguageDetector')",
              "type": "Uninferable"
            },
            {
              "function": "Name.FrameworkDetector(name='FrameworkDetector')",
              "type": "Uninferable"
            },
            {
              "function": "Name.DependencyAnalyzer(name='DependencyAnalyzer')",
              "type": "Uninferable"
            },
            {
              "function": "Name.DatabaseAnalyzer(name='DatabaseAnalyzer')",
              "type": "Uninferable"
            },
            {
              "function": "Name.APIAnalyzer(name='APIAnalyzer')",
              "type": "Uninferable"
            },
            {
              "function": "Name.ASTAnalyzer(name='ASTAnalyzer')",
              "type": "Uninferable"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.isoformat(attrname='isoformat',\n                    expr=<Call l.52 at 0x2579e614990>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.now(attrname='now',\n              expr=<Name.datetime l.52 at 0x2579e614a50>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Attribute._update_progress(attrname='_update_progress',\n                           expr=<Name.self l.58 at 0x2579e615b10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._scan_files(attrname='_scan_files',\n                      expr=<Name.self l.59 at 0x2579e66dd10>)",
              "type": "Dict.dict(items=[ ( <Const.str l.127 at 0x2579e67c410>,\n              <List.list l.127 at 0x2579e67c3d0>),\n            ( <Const.str l.128 at 0x2579e67c510>,\n              <List.list l.128 at 0x2579e67c450>),\n            ( <Const.str l.129 at 0x2579e67c650>,\n              <Dict.dict l.129 at 0x2579e67c590>),\n            ( <Const.str l.130 at 0x2579e67c690>,\n              <List.list l.130 at 0x2579e67c610>)])"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.file_structure l.61 at 0x2579e66e290>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._update_progress(attrname='_update_progress',\n                           expr=<Name.self l.64 at 0x2579e66e5d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.detect_languages(attrname='detect_languages',\n                           expr=<Attribute.language_detector l.65 at 0x2579e66e910>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._update_progress(attrname='_update_progress',\n                           expr=<Name.self l.69 at 0x2579e66ed50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.detect_frameworks(attrname='detect_frameworks',\n                            expr=<Attribute.framework_detector l.70 at 0x2579e66f050>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._update_progress(attrname='_update_progress',\n                           expr=<Name.self l.74 at 0x2579e66f450>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.analyze_dependencies(attrname='analyze_dependencies',\n                               expr=<Attribute.dependency_analyzer l.75 at 0x2579e66f750>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.dependencies l.77 at 0x2579e66fd50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._update_progress(attrname='_update_progress',\n                           expr=<Name.self l.80 at 0x2579e678050>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.extract_endpoints(attrname='extract_endpoints',\n                            expr=<Attribute.api_analyzer l.81 at 0x2579e678350>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._update_progress(attrname='_update_progress',\n                           expr=<Name.self l.85 at 0x2579e678790>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.extract_schema(attrname='extract_schema',\n                         expr=<Attribute.database_analyzer l.86 at 0x2579e678a90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._update_progress(attrname='_update_progress',\n                           expr=<Name.self l.90 at 0x2579e678ed0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._perform_ast_analysis(attrname='_perform_ast_analysis',\n                                expr=<Name.self l.91 at 0x2579e6791d0>)",
              "type": "Dict.dict(items=[ ( <Const.str l.224 at 0x2579e68ff50>,\n              <List.list l.224 at 0x2579e68ff10>),\n            ( <Const.str l.225 at 0x2579e690090>,\n              <Const.int l.225 at 0x2579e690050>),\n            ( <Const.str l.226 at 0x2579e690110>,\n              <Const.int l.226 at 0x2579e6900d0>),\n            ( <Const.str l.227 at 0x2579e690190>,\n              <Const.int l.227 at 0x2579e690150>),\n            ( <Const.str l.228 at 0x2579e6902d0>,\n              <Call l.228 at 0x2579e6901d0>),\n            ( <Const.str l.229 at 0x2579e6903d0>,\n              <Dict.dict l.229 at 0x2579e690290>),\n            ( <Const.str l.230 at 0x2579e690410>,\n              <List.list l.230 at 0x2579e690390>)])"
            },
            {
              "function": "Attribute._update_progress(attrname='_update_progress',\n                           expr=<Name.self l.95 at 0x2579e6795d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._calculate_metrics(attrname='_calculate_metrics',\n                             expr=<Name.self l.96 at 0x2579e6798d0>)",
              "type": "Dict.dict(items=[ ( <Const.str l.366 at 0x2579e6af150>,\n              <Const.int l.366 at 0x2579e6af110>),\n            ( <Const.str l.367 at 0x2579e6af1d0>,\n              <Const.int l.367 at 0x2579e6af190>),\n            ( <Const.str l.368 at 0x2579e6af550>,\n              <Call l.368 at 0x2579e6af210>),\n            ( <Const.str l.369 at 0x2579e6af8d0>,\n              <Call l.369 at 0x2579e6af590>),\n            ( <Const.str l.370 at 0x2579e6af950>,\n              <List.list l.370 at 0x2579e6af910>),\n            ( <Const.str l.371 at 0x2579e6afa50>,\n              <List.list l.371 at 0x2579e6af990>),\n            ( <Const.str l.372 at 0x2579e6afb90>,\n              <Dict.dict l.372 at 0x2579e6afad0>),\n            ( <Const.str l.373 at 0x2579e6afd10>,\n              <Dict.dict l.373 at 0x2579e6afc50>),\n            ( <Const.str l.374 at 0x2579e6afe10>,\n              <Dict.dict l.374 at 0x2579e6afd50>),\n            ( <Const.str l.375 at 0x2579e6afe50>,\n              <Const.int l.375 at 0x2579e6af0d0>)])"
            },
            {
              "function": "Attribute._update_progress(attrname='_update_progress',\n                           expr=<Name.self l.100 at 0x2579e679d10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._security_scan(attrname='_security_scan',\n                         expr=<Name.self l.101 at 0x2579e67a010>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute._update_progress(attrname='_update_progress',\n                           expr=<Name.self l.105 at 0x2579e67a410>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._analyze_test_coverage(attrname='_analyze_test_coverage',\n                                 expr=<Name.self l.106 at 0x2579e67a710>)",
              "type": "Dict.dict(items=[ ( <Const.str l.822 at 0x2579e705850>,\n              <Const.int l.822 at 0x2579e705810>),\n            ( <Const.str l.823 at 0x2579e7058d0>,\n              <List.list l.823 at 0x2579e705890>),\n            ( <Const.str l.824 at 0x2579e7059d0>,\n              <List.list l.824 at 0x2579e705910>),\n            ( <Const.str l.825 at 0x2579e705a90>,\n              <List.list l.825 at 0x2579e705a50>)])"
            },
            {
              "function": "Attribute._update_progress(attrname='_update_progress',\n                           expr=<Name.self l.110 at 0x2579e67ab10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._generate_reports(attrname='_generate_reports',\n                            expr=<Name.self l.114 at 0x2579e67af10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.119 at 0x2579e67b390>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Name.list(name='list')",
              "type": "Instance of builtins.list"
            },
            {
              "function": "Attribute.rglob(attrname='rglob',\n                expr=<Name.project_root l.159 at 0x2579e67db50>)",
              "type": "Generator(generator)"
            },
            {
              "function": "Attribute.is_file(attrname='is_file',\n                  expr=<Name.p l.160 at 0x2579e67e210>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.is_file(attrname='is_file',\n                  expr=<Name.file_path l.174 at 0x2579e67ef50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.stat(attrname='stat',\n               expr=<Name.file_path l.177 at 0x2579e67f2d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.is_file(attrname='is_file',\n                  expr=<Name.file_path l.186 at 0x2579e67fe90>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.relative_to(attrname='relative_to',\n                      expr=<Name.file_path l.188 at 0x2579e68c410>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.stat(attrname='stat',\n               expr=<Name.file_path l.189 at 0x2579e68c610>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.isoformat(attrname='isoformat',\n                    expr=<Call l.191 at 0x2579e68c890>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.fromtimestamp(attrname='fromtimestamp',\n                        expr=<Name.datetime l.191 at 0x2579e68c8d0>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Attribute.stat(attrname='stat',\n               expr=<Name.file_path l.191 at 0x2579e68ca10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Attribute.suffix l.195 at 0x2579e68cd50>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Attribute._update_progress(attrname='_update_progress',\n                           expr=<Name.self l.203 at 0x2579e68e050>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.relative_to(attrname='relative_to',\n                      expr=<Name.file_path l.207 at 0x2579e68e610>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.is_dir(attrname='is_dir',\n                 expr=<Name.file_path l.213 at 0x2579e68e9d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.relative_to(attrname='relative_to',\n                      expr=<Name.file_path l.214 at 0x2579e68edd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.217 at 0x2579e68f1d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.set(name='set')",
              "type": "Set.set(elts=[])"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.file_structure l.239 at 0x2579e690c90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Subscript l.240 at 0x2579e691050>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Attribute._update_progress(attrname='_update_progress',\n                           expr=<Name.self l.262 at 0x2579e6a02d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.analyze_file(attrname='analyze_file',\n                       expr=<Attribute.ast_analyzer l.273 at 0x2579e6a0e50>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_result l.279 at 0x2579e6a16d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_result l.280 at 0x2579e6a1b50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_result l.281 at 0x2579e6a1f90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_result l.282 at 0x2579e6a2390>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_result l.285 at 0x2579e6a26d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.debug(attrname='debug',\n                expr=<Name.logger l.291 at 0x2579e6a30d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.list(name='list')",
              "type": "List.list(ctx=None,\n          elts=[])"
            },
            {
              "function": "Attribute._calculate_ast_complexity_summary(attrname='_calculate_ast_complexity_summary',\n                                            expr=<Name.self l.298 at 0x2579e6a38d0>)",
              "type": "Dict.dict(items=[ ( <Const.str l.314 at 0x2579e699f50>,\n              <Call l.314 at 0x2579e699dd0>),\n            ( <Const.str l.315 at 0x2579e699f90>,\n              <Const.int l.315 at 0x2579e699f10>),\n            ( <Const.str l.316 at 0x2579e69a010>,\n              <Const.int l.316 at 0x2579e699fd0>),\n            ( <Const.str l.317 at 0x2579e69a090>,\n              <Const.int l.317 at 0x2579e69a050>),\n            ( <Const.str l.318 at 0x2579e69a110>,\n              <List.list l.318 at 0x2579e69a0d0>),\n            ( <Const.str l.319 at 0x2579e69a2d0>,\n              <Dict.dict l.319 at 0x2579e69a210>)])"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.x l.301 at 0x2579e6984d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.303 at 0x2579e6987d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.306 at 0x2579e698dd0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.file_analysis l.331 at 0x2579e69acd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.file_analysis l.332 at 0x2579e69afd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.file_analysis l.333 at 0x2579e69b2d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.file_analysis l.334 at 0x2579e69b610>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.complexity_metrics l.338 at 0x2579e69bd10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.complexity_metrics l.343 at 0x2579e6ac2d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.file_analysis l.345 at 0x2579e6ac8d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.complexity_metrics l.346 at 0x2579e6acad0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.file_structure l.368 at 0x2579e6af350>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.file_structure l.369 at 0x2579e6af6d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._calculate_basic_metrics(attrname='_calculate_basic_metrics',\n                                   expr=<Name.self l.380 at 0x2579e6b4090>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._calculate_radon_metrics(attrname='_calculate_radon_metrics',\n                                   expr=<Name.self l.383 at 0x2579e6b4310>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._calculate_lizard_metrics(attrname='_calculate_lizard_metrics',\n                                    expr=<Name.self l.386 at 0x2579e6b4550>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._calculate_quality_score(attrname='_calculate_quality_score',\n                                   expr=<Name.self l.389 at 0x2579e6b4850>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.392 at 0x2579e6b4b90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.file_structure l.400 at 0x2579e6b5d90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Subscript l.401 at 0x2579e6b6090>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.readlines(attrname='readlines',\n                    expr=<Name.f l.405 at 0x2579e6b6f10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.append(attrname='append',\n                 expr=<Subscript l.409 at 0x2579e6b7250>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.sort(attrname='sort',\n               expr=<Subscript l.418 at 0x2579e6b7990>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.file_structure l.422 at 0x2579e6b8490>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Name.file_types l.424 at 0x2579e6b8910>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Subscript l.438 at 0x2579e6ba250>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.subprocess l.446 at 0x2579e6baed0>)",
              "type": "Instance of subprocess.CompletedProcess"
            },
            {
              "function": "Attribute.loads(attrname='loads',\n                expr=<Name.json l.451 at 0x2579e6bb710>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.file_data l.458 at 0x2579e6bbed0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.func_data l.459 at 0x2579e6c8290>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.warning(attrname='warning',\n                  expr=<Name.logger l.466 at 0x2579e6c8b50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.subprocess l.470 at 0x2579e6c9010>)",
              "type": "Instance of subprocess.CompletedProcess"
            },
            {
              "function": "Attribute.loads(attrname='loads',\n                expr=<Name.json l.475 at 0x2579e6c9810>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.warning(attrname='warning',\n                  expr=<Name.logger l.490 at 0x2579e6ca990>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.493 at 0x2579e6cadd0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.subprocess l.502 at 0x2579e6cbb10>)",
              "type": "Instance of subprocess.CompletedProcess"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Attribute.stdout l.509 at 0x2579e6cc3d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._parse_lizard_output(attrname='_parse_lizard_output',\n                               expr=<Name.self l.512 at 0x2579e6cc8d0>)",
              "type": "Dict.dict(items=[ ( <Const.str l.543 at 0x2579e6cf990>,\n              <Const.int l.543 at 0x2579e6cf950>),\n            ( <Const.str l.544 at 0x2579e6cfa10>,\n              <Const.int l.544 at 0x2579e6cf9d0>),\n            ( <Const.str l.545 at 0x2579e6cfa90>,\n              <Const.int l.545 at 0x2579e6cfa50>),\n            ( <Const.str l.546 at 0x2579e6cfb10>,\n              <Const.int l.546 at 0x2579e6cfad0>),\n            ( <Const.str l.547 at 0x2579e6cfb90>,\n              <Const.int l.547 at 0x2579e6cfb50>),\n            ( <Const.str l.548 at 0x2579e6cfc50>,\n              <Const.int l.548 at 0x2579e6cfc10>),\n            ( <Const.str l.549 at 0x2579e6cfd10>,\n              <List.list l.549 at 0x2579e6cfcd0>)])"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parsed_metrics l.517 at 0x2579e6cce10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parsed_metrics l.518 at 0x2579e6cd110>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parsed_metrics l.519 at 0x2579e6cd450>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parsed_metrics l.523 at 0x2579e6cd890>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parsed_metrics l.524 at 0x2579e6cda90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parsed_metrics l.525 at 0x2579e6cdcd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parsed_metrics l.529 at 0x2579e6cdfd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.warning(attrname='warning',\n                  expr=<Name.logger l.533 at 0x2579e6ce450>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.warning(attrname='warning',\n                  expr=<Name.logger l.536 at 0x2579e6cea50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.538 at 0x2579e6cee10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.findall(attrname='findall',\n                  expr=<Name.re l.558 at 0x2579e6d0590>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.float(name='float')",
              "type": "Instance of builtins.float"
            },
            {
              "function": "Name.float(name='float')",
              "type": "Instance of builtins.float"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Name.int(name='int')",
              "type": "Instance of builtins.int"
            },
            {
              "function": "Attribute.debug(attrname='debug',\n                expr=<Name.logger l.582 at 0x2579e6d33d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.metrics l.592 at 0x2579e6dc150>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.metrics l.599 at 0x2579e6dce10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Call l.608 at 0x2579e6dd9d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.metrics l.608 at 0x2579e6dda10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.metrics l.617 at 0x2579e6dea50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.metrics l.618 at 0x2579e6dedd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.627 at 0x2579e6dfb90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._run_safety_scan(attrname='_run_safety_scan',\n                           expr=<Name.self l.636 at 0x2579e6e0c10>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute._scan_hardcoded_secrets(attrname='_scan_hardcoded_secrets',\n                                  expr=<Name.self l.640 at 0x2579e6e1090>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute._scan_code_security_issues(attrname='_scan_code_security_issues',\n                                     expr=<Name.self l.644 at 0x2579e6e1510>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.648 at 0x2579e6e1a50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Name.requirements_path l.662 at 0x2579e6e2bd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.subprocess l.666 at 0x2579e6e2f50>)",
              "type": "Instance of subprocess.CompletedProcess"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.672 at 0x2579e6e3790>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.loads(attrname='loads',\n                expr=<Name.json l.676 at 0x2579e6e3c50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Name.safety_data l.679 at 0x2579e6f0250>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.vuln l.686 at 0x2579e6f0c90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.vuln l.687 at 0x2579e6f0ed0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.vuln l.688 at 0x2579e6f1110>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.vuln l.696 at 0x2579e6f1b90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.vuln l.697 at 0x2579e6f1dd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.vuln l.698 at 0x2579e6f2010>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.vuln l.699 at 0x2579e6f2250>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Attribute.stdout l.704 at 0x2579e6f27d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.line l.706 at 0x2579e6f2d10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.line l.706 at 0x2579e6f2f50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Name.line l.711 at 0x2579e6f3510>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.warning(attrname='warning',\n                  expr=<Name.logger l.716 at 0x2579e6f3950>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.warning(attrname='warning',\n                  expr=<Name.logger l.718 at 0x2579e6f3b50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.720 at 0x2579e6f3e50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Subscript l.742 at 0x2579e6f5750>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.read(attrname='read',\n               expr=<Name.f l.746 at 0x2579e6f6790>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Name.content l.747 at 0x2579e6f69d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.enumerate(name='enumerate')",
              "type": "Instance of builtins.enumerate"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Name.secret_patterns l.750 at 0x2579e6f70d0>)",
              "type": "DictItems.list(ctx=None,\n               elts=[ <Tuple.tuple l.731 at 0x2579e62a190>,\n                 <Tuple.tuple l.732 at 0x2579e629a50>,\n                 <Tuple.tuple l.733 at 0x2579e629cd0>,\n                 <Tuple.tuple l.734 at 0x2579e62a250>,\n                 <Tuple.tuple l.735 at 0x2579e6299d0>,\n                 <Tuple.tuple l.736 at 0x2579e6292d0>])"
            },
            {
              "function": "Attribute.search(attrname='search',\n                 expr=<Name.re l.751 at 0x2579e6f7290>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.765 at 0x2579e6ec1d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Subscript l.791 at 0x2579e6edc90>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.read(attrname='read',\n               expr=<Name.f l.795 at 0x2579e6eec50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Name.content l.796 at 0x2579e6eee90>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.enumerate(name='enumerate')",
              "type": "Instance of builtins.enumerate"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Name.dangerous_patterns l.799 at 0x2579e6ef590>)",
              "type": "DictItems.list(ctx=None,\n               elts=[ <Tuple.tuple l.776 at 0x2579e624ad0>,\n                 <Tuple.tuple l.777 at 0x2579e625250>,\n                 <Tuple.tuple l.778 at 0x2579e625710>,\n                 <Tuple.tuple l.779 at 0x2579e625750>,\n                 <Tuple.tuple l.780 at 0x2579e6256d0>,\n                 <Tuple.tuple l.781 at 0x2579e625150>,\n                 <Tuple.tuple l.782 at 0x2579e6251d0>,\n                 <Tuple.tuple l.783 at 0x2579e625210>,\n                 <Tuple.tuple l.784 at 0x2579e625190>,\n                 <Tuple.tuple l.785 at 0x2579e625650>])"
            },
            {
              "function": "Attribute.search(attrname='search',\n                 expr=<Name.re l.800 at 0x2579e6ef750>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.815 at 0x2579e704ad0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.file_structure l.833 at 0x2579e7060d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Attribute.name l.834 at 0x2579e706450>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Name.set(name='set')",
              "type": "Set.set(elts=[])"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.file_structure l.842 at 0x2579e707310>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Subscript l.843 at 0x2579e707590>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.read(attrname='read',\n               expr=<Name.f l.847 at 0x2579e70c350>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.list(name='list')",
              "type": "List.list(ctx=None,\n          elts=[])"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.file_structure l.858 at 0x2579e70d6d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Subscript l.859 at 0x2579e70d950>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.863 at 0x2579e70e410>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.mkdir(attrname='mkdir',\n                expr=<Name.output_dir l.872 at 0x2579e70f0d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.dump(attrname='dump',\n               expr=<Name.json l.877 at 0x2579e70f850>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._generate_markdown_report(attrname='_generate_markdown_report',\n                                    expr=<Name.self l.881 at 0x2579e70fd50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.883 at 0x2579e70ff10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.886 at 0x2579e708390>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.write(attrname='write',\n                expr=<Name.f l.892 at 0x2579e709090>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.write(attrname='write',\n                expr=<Name.f l.893 at 0x2579e709450>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.write(attrname='write',\n                expr=<Name.f l.896 at 0x2579e709810>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.write(attrname='write',\n                expr=<Name.f l.897 at 0x2579e7099d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.write(attrname='write',\n                expr=<Name.f l.898 at 0x2579e709e90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.write(attrname='write',\n                expr=<Name.f l.899 at 0x2579e70a490>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.write(attrname='write',\n                expr=<Name.f l.900 at 0x2579e70a910>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.write(attrname='write',\n                expr=<Name.f l.905 at 0x2579e70b350>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.write(attrname='write',\n                expr=<Name.f l.907 at 0x2579e70b650>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.write(attrname='write',\n                expr=<Name.f l.908 at 0x2579e70b990>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.write(attrname='write',\n                expr=<Name.f l.913 at 0x2579e70bf50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.write(attrname='write',\n                expr=<Name.f l.915 at 0x2579e71c290>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.framework l.915 at 0x2579e71c490>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.framework l.915 at 0x2579e71c6d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.write(attrname='write',\n                expr=<Name.f l.916 at 0x2579e71c9d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.write(attrname='write',\n                expr=<Name.f l.921 at 0x2579e71cfd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.write(attrname='write',\n                expr=<Name.f l.923 at 0x2579e71d2d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.upper(attrname='upper',\n                expr=<Call l.923 at 0x2579e71d4d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.issue l.923 at 0x2579e71d550>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.issue l.923 at 0x2579e71d810>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.write(attrname='write',\n                expr=<Name.f l.924 at 0x2579e71db10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.write(attrname='write',\n                expr=<Name.f l.926 at 0x2579e71dd10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.write(attrname='write',\n                expr=<Name.f l.931 at 0x2579e71e2d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.write(attrname='write',\n                expr=<Name.f l.932 at 0x2579e71e490>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.test_coverage l.932 at 0x2579e71e690>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.write(attrname='write',\n                expr=<Name.f l.933 at 0x2579e71ea10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Const.str l.933 at 0x2579e71ebd0>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.test_coverage l.933 at 0x2579e71ed10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.write(attrname='write',\n                expr=<Name.f l.934 at 0x2579e71f010>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.test_coverage l.934 at 0x2579e71f310>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.937 at 0x2579e71f710>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.progress_callback(attrname='progress_callback',\n                            expr=<Name.self l.942 at 0x2579e720210>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.946 at 0x2579e720690>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.948 at 0x2579e720e10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.950 at 0x2579e7214d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.copy(attrname='copy',\n               expr=<Attribute.analysis_results l.954 at 0x2579e721e90>)",
              "type": "Dict.dict(items=[])"
            }
          ],
          "unresolved_imports": [
            "os",
            "json",
            "asyncio",
            "logging",
            "subprocess",
            "json",
            "subprocess",
            "json",
            "re",
            "subprocess",
            "json",
            "re",
            "re"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": "analyzers\\__init__.py",
        "language": "python",
        "file_size": 505,
        "line_count": 20,
        "analysis_method": "python_ast",
        "functions": [],
        "classes": [],
        "imports": [
          {
            "type": "from_import",
            "module": "project_analyzer",
            "names": [
              "ProjectAnalyzer"
            ],
            "level": 1,
            "line_number": 5
          },
          {
            "type": "from_import",
            "module": "language_detector",
            "names": [
              "LanguageDetector"
            ],
            "level": 1,
            "line_number": 6
          },
          {
            "type": "from_import",
            "module": "framework_detector",
            "names": [
              "FrameworkDetector"
            ],
            "level": 1,
            "line_number": 7
          },
          {
            "type": "from_import",
            "module": "dependency_analyzer",
            "names": [
              "DependencyAnalyzer"
            ],
            "level": 1,
            "line_number": 8
          },
          {
            "type": "from_import",
            "module": "database_analyzer",
            "names": [
              "DatabaseAnalyzer"
            ],
            "level": 1,
            "line_number": 9
          },
          {
            "type": "from_import",
            "module": "api_analyzer",
            "names": [
              "APIAnalyzer"
            ],
            "level": 1,
            "line_number": 10
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 0,
          "function_count": 0,
          "class_count": 0,
          "import_count": 6,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [],
          "unresolved_imports": [],
          "code_smells": []
        }
      },
      {
        "file_path": "commands\\__init__.py",
        "language": "python",
        "file_size": 12726,
        "line_count": 386,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "__init__",
            "line_number": 17,
            "parameters": [
              "self",
              "name",
              "description"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "get_info",
            "line_number": 29,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Gibt Informationen über den Command zurück",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "__init__",
            "line_number": 47,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "__init__",
            "line_number": 104,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "__init__",
            "line_number": 207,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "__init__",
            "line_number": 291,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          }
        ],
        "classes": [
          {
            "name": "BaseCommand",
            "line_number": 14,
            "bases": [
              "ABC"
            ],
            "decorators": [],
            "docstring": "Basisklasse für alle Commands",
            "methods": [
              "__init__",
              "get_info"
            ],
            "method_count": 2
          },
          {
            "name": "SystemInfoCommand",
            "line_number": 44,
            "bases": [
              "BaseCommand"
            ],
            "decorators": [],
            "docstring": "Command für Systeminformationen",
            "methods": [
              "__init__"
            ],
            "method_count": 1
          },
          {
            "name": "FileOperationCommand",
            "line_number": 101,
            "bases": [
              "BaseCommand"
            ],
            "decorators": [],
            "docstring": "Command für Dateioperationen",
            "methods": [
              "__init__"
            ],
            "method_count": 1
          },
          {
            "name": "NetworkCommand",
            "line_number": 204,
            "bases": [
              "BaseCommand"
            ],
            "decorators": [],
            "docstring": "Command für Netzwerkoperationen",
            "methods": [
              "__init__"
            ],
            "method_count": 1
          },
          {
            "name": "DatabaseCommand",
            "line_number": 288,
            "bases": [
              "BaseCommand"
            ],
            "decorators": [],
            "docstring": "Command für Datenbankoperationen",
            "methods": [
              "__init__"
            ],
            "method_count": 1
          }
        ],
        "imports": [
          {
            "type": "from_import",
            "module": "abc",
            "names": [
              "ABC",
              "abstractmethod"
            ],
            "level": 0,
            "line_number": 5
          },
          {
            "type": "from_import",
            "module": "typing",
            "names": [
              "Dict",
              "Any",
              "Optional",
              "List"
            ],
            "level": 0,
            "line_number": 6
          },
          {
            "type": "import",
            "modules": [
              "logging"
            ],
            "line_number": 7
          },
          {
            "type": "import",
            "modules": [
              "subprocess"
            ],
            "line_number": 8
          },
          {
            "type": "import",
            "modules": [
              "asyncio"
            ],
            "line_number": 9
          },
          {
            "type": "import",
            "modules": [
              "platform"
            ],
            "line_number": 65
          },
          {
            "type": "import",
            "modules": [
              "psutil"
            ],
            "line_number": 66
          },
          {
            "type": "import",
            "modules": [
              "os"
            ],
            "line_number": 149
          },
          {
            "type": "import",
            "modules": [
              "os"
            ],
            "line_number": 163
          },
          {
            "type": "import",
            "modules": [
              "shutil"
            ],
            "line_number": 175
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 6,
          "function_count": 6,
          "class_count": 5,
          "import_count": 10,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.getLogger(attrname='getLogger',\n                    expr=<Name.logging l.11 at 0x2579e659850>)",
              "type": "Instance of logging.RootLogger"
            },
            {
              "function": "Attribute.getLogger(attrname='getLogger',\n                    expr=<Name.logging l.22 at 0x2579e65ad90>)",
              "type": "Instance of logging.RootLogger"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Attribute.logger l.41 at 0x2579e65d3d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.__init__(attrname='__init__',\n                   expr=<Call l.48 at 0x2579e65d150>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.super(name='super')",
              "type": "Super.SystemInfoCommand()"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.params l.60 at 0x2579e65e850>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.params l.61 at 0x2579e65f810>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Attribute.logger l.63 at 0x2579e65f510>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.platform(attrname='platform',\n                   expr=<Name.platform l.69 at 0x2579e66c8d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.system(attrname='system',\n                 expr=<Name.platform l.70 at 0x2579e66c490>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.processor(attrname='processor',\n                    expr=<Name.platform l.71 at 0x2579e722950>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.python_version(attrname='python_version',\n                         expr=<Name.platform l.72 at 0x2579e722b10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.node(attrname='node',\n               expr=<Name.platform l.73 at 0x2579e722cd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.virtual_memory(attrname='virtual_memory',\n                         expr=<Name.psutil l.77 at 0x2579e723050>)",
              "type": "Instance of psutil._pslinux.svmem"
            },
            {
              "function": "Attribute.disk_usage(attrname='disk_usage',\n                     expr=<Name.psutil l.86 at 0x2579e723990>)",
              "type": "Instance of psutil._common.sdiskusage"
            },
            {
              "function": "Attribute.__init__(attrname='__init__',\n                   expr=<Call l.105 at 0x2579e580f10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.super(name='super')",
              "type": "Super.FileOperationCommand()"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parameters l.121 at 0x2579e582410>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parameters l.122 at 0x2579e582690>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Attribute.logger l.127 at 0x2579e582c10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.read(attrname='read',\n               expr=<Name.f l.132 at 0x2579e5839d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.splitlines(attrname='splitlines',\n                     expr=<Name.content l.136 at 0x2579e583f90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parameters l.140 at 0x2579e56c490>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.write(attrname='write',\n                expr=<Name.f l.142 at 0x2579e56c9d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.encode(attrname='encode',\n                 expr=<Name.content l.144 at 0x2579e56ce10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.isdir(attrname='isdir',\n                expr=<Attribute.path l.150 at 0x2579e56d350>)",
              "type": "Const.bool(value=False,\n           kind=None)"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Attribute.path l.164 at 0x2579e56e250>)",
              "type": "Const.bool(value=False,\n           kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parameters l.171 at 0x2579e56ef10>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.copy2(attrname='copy2',\n                expr=<Name.shutil l.176 at 0x2579e56f450>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.__init__(attrname='__init__',\n                   expr=<Call l.208 at 0x2579e558110>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.super(name='super')",
              "type": "Super.NetworkCommand()"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parameters l.224 at 0x2579e55b890>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parameters l.225 at 0x2579e55bfd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parameters l.226 at 0x2579e55be10>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Attribute.logger l.231 at 0x2579e55b450>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.sleep(attrname='sleep',\n                expr=<Name.asyncio l.236 at 0x2579e55a450>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.sleep(attrname='sleep',\n                expr=<Name.asyncio l.247 at 0x2579e58c150>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parameters l.257 at 0x2579e58cb90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.sleep(attrname='sleep',\n                expr=<Name.asyncio l.259 at 0x2579e58cdd0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.__init__(attrname='__init__',\n                   expr=<Call l.292 at 0x2579e58ead0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.super(name='super')",
              "type": "Super.DatabaseCommand()"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parameters l.308 at 0x2579e58ff50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parameters l.309 at 0x2579e53c210>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Attribute.logger l.314 at 0x2579e53c790>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.sleep(attrname='sleep',\n                expr=<Name.asyncio l.317 at 0x2579e53cbd0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parameters l.331 at 0x2579e53ded0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parameters l.340 at 0x2579e53e890>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parameters l.341 at 0x2579e53eb90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parameters l.350 at 0x2579e53f510>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.SystemInfoCommand(name='SystemInfoCommand')",
              "type": "Instance of .SystemInfoCommand"
            },
            {
              "function": "Name.FileOperationCommand(name='FileOperationCommand')",
              "type": "Instance of .FileOperationCommand"
            },
            {
              "function": "Name.NetworkCommand(name='NetworkCommand')",
              "type": "Instance of .NetworkCommand"
            },
            {
              "function": "Name.DatabaseCommand(name='DatabaseCommand')",
              "type": "Instance of .DatabaseCommand"
            },
            {
              "function": "Attribute.values(attrname='values',\n                 expr=<Name.commands l.381 at 0x2579e539610>)",
              "type": "DictValues.list(ctx=None,\n                elts=[ <Call l.375 at 0x2579e5382d0>,\n                  <Call l.376 at 0x2579e5380d0>,\n                  <Call l.377 at 0x2579e538250>,\n                  <Call l.378 at 0x2579e539250>])"
            },
            {
              "function": "Attribute.initialize(attrname='initialize',\n                     expr=<Name.command l.382 at 0x2579e539290>)",
              "type": "Uninferable"
            }
          ],
          "unresolved_imports": [
            "logging",
            "subprocess",
            "asyncio",
            "platform",
            "psutil",
            "os",
            "os",
            "shutil"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": "generators\\agent_generator.py",
        "language": "python",
        "file_size": 15489,
        "line_count": 389,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "__init__",
            "line_number": 17,
            "parameters": [
              "self",
              "model_manager"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_load_agent_templates",
            "line_number": 22,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Lädt Agent-Templates für verschiedene Projekt-Typen",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_determine_required_agents",
            "line_number": 76,
            "parameters": [
              "self",
              "analysis_results"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Bestimmt welche Agent-Typen basierend auf der Analyse benötigt werden",
            "is_async": false,
            "complexity": 11
          },
          {
            "name": "_has_test_frameworks",
            "line_number": 113,
            "parameters": [
              "self",
              "dependencies"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Prüft ob Test-Frameworks vorhanden sind",
            "is_async": false,
            "complexity": 6
          },
          {
            "name": "_has_deployment_files",
            "line_number": 124,
            "parameters": [
              "self",
              "analysis_results"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Prüft ob Deployment-Dateien vorhanden sind",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_get_agent_role",
            "line_number": 194,
            "parameters": [
              "self",
              "agent_type"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Gibt die Rolle des Agents zurück",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_get_agent_goal",
            "line_number": 207,
            "parameters": [
              "self",
              "agent_type"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Gibt das Ziel des Agents zurück",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_get_required_skills",
            "line_number": 220,
            "parameters": [
              "self",
              "agent_type"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Gibt die benötigten Skills des Agents zurück",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_get_backend_agent_template",
            "line_number": 233,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Template für Backend-Agent",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_get_generic_agent_template",
            "line_number": 311,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Template für generischen Agent",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_get_frontend_agent_template",
            "line_number": 372,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_get_database_agent_template",
            "line_number": 375,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_get_api_agent_template",
            "line_number": 378,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_get_test_agent_template",
            "line_number": 381,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_get_security_agent_template",
            "line_number": 384,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_get_deployment_agent_template",
            "line_number": 387,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          }
        ],
        "classes": [
          {
            "name": "AgentGenerator",
            "line_number": 16,
            "bases": [],
            "decorators": [],
            "docstring": null,
            "methods": [
              "__init__",
              "_load_agent_templates",
              "_determine_required_agents",
              "_has_test_frameworks",
              "_has_deployment_files",
              "_get_agent_role",
              "_get_agent_goal",
              "_get_required_skills",
              "_get_backend_agent_template",
              "_get_generic_agent_template",
              "_get_frontend_agent_template",
              "_get_database_agent_template",
              "_get_api_agent_template",
              "_get_test_agent_template",
              "_get_security_agent_template",
              "_get_deployment_agent_template"
            ],
            "method_count": 16
          }
        ],
        "imports": [
          {
            "type": "import",
            "modules": [
              "os"
            ],
            "line_number": 5
          },
          {
            "type": "import",
            "modules": [
              "json"
            ],
            "line_number": 6
          },
          {
            "type": "import",
            "modules": [
              "logging"
            ],
            "line_number": 7
          },
          {
            "type": "from_import",
            "module": "typing",
            "names": [
              "Dict",
              "List",
              "Any",
              "Optional"
            ],
            "level": 0,
            "line_number": 8
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 9
          },
          {
            "type": "from_import",
            "module": "llm.model_manager",
            "names": [
              "ModelManager"
            ],
            "level": 0,
            "line_number": 10
          },
          {
            "type": "from_import",
            "module": "llm.prompt_templates",
            "names": [
              "AGENT_GENERATION_PROMPT"
            ],
            "level": 0,
            "line_number": 11
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 31,
          "function_count": 16,
          "class_count": 1,
          "import_count": 7,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.getLogger(attrname='getLogger',\n                    expr=<Name.logging l.13 at 0x2579e51ce10>)",
              "type": "Instance of logging.RootLogger"
            },
            {
              "function": "Attribute._load_agent_templates(attrname='_load_agent_templates',\n                                expr=<Name.self l.20 at 0x25799f6a510>)",
              "type": "Dict.dict(items=[ ( <Const.str l.25 at 0x2579a5a3290>,\n              <Call l.25 at 0x2579a4941d0>),\n            ( <Const.str l.26 at 0x2579a5a3d90>,\n              <Call l.26 at 0x2579a5a3dd0>),\n            ( <Const.str l.27 at 0x25799ccb290>,\n              <Call l.27 at 0x2579a5a3f90>),\n            ( <Const.str l.28 at 0x2579a03bc90>,\n              <Call l.28 at 0x25799cc9910>),\n            ( <Const.str l.29 at 0x2579a03aa50>,\n              <Call l.29 at 0x2579a03ab90>),\n            ( <Const.str l.30 at 0x2579a03a4d0>,\n              <Call l.30 at 0x2579a03b6d0>),\n            ( <Const.str l.31 at 0x25799e2cd90>,\n              <Call l.31 at 0x2579a039710>)])"
            },
            {
              "function": "Attribute._get_backend_agent_template(attrname='_get_backend_agent_template',\n                                      expr=<Name.self l.25 at 0x2579a497c50>)",
              "type": "Const.str(value=('\"\"\"\\n'\n           '{agent_class} - Automatisch generierter Backend-Agent\\n'\n           '\"\"\"\\n'\n           '\\n'\n           'import asyncio\\n'\n           'import logging\\n'\n           'from typing import Dict, List, Any, Optional\\n'\n           'from pathlib import Path\\n'\n           '\\n'\n           'logger = logging.getLogger(__name__)\\n'\n           '\\n'\n           '\\n'\n           'class {agent_class}:\\n'\n           '    def __init__(self, project_path: str):\\n'\n           '        self.project_path = Path(project_path)\\n'\n           '        self.project_name = \"{project_name}\"\\n'\n           '        self.agent_type = \"backend\"\\n'\n           '\\n'\n           '    async def initialize(self):\\n'\n           '        \"\"\"Initialisiert den Agent\"\"\"\\n'\n           '        logger.info(f\"🚀 Initializing {self.agent_type} agent '\n           'for project: {self.project_name}\")\\n'\n           '\\n'\n           '    async def analyze_backend(self, **kwargs) -> Dict[str, '\n           'Any]:\\n'\n           '        \"\"\"Analysiert das Backend des Projekts\"\"\"\\n'\n           '        logger.info(\"🔍 Starting backend analysis...\")\\n'\n           '\\n'\n           '        results = {{\\n'\n           '            \"backend_files\": 0,\\n'\n           '            \"api_endpoints\": 0,\\n'\n           '            \"performance_issues\": [],\\n'\n           '            \"optimization_suggestions\": []\\n'\n           '        }}\\n'\n           '\\n'\n           '        try:\\n'\n           '            # Analysiere Backend-Dateien\\n'\n           '            backend_files = '\n           'list(self.project_path.rglob(\"*.py\")) + '\n           'list(self.project_path.rglob(\"*.js\"))\\n'\n           '            results[\"backend_files\"] = len(backend_files)\\n'\n           '\\n'\n           '            # Generierte Implementation vom LLM\\n'\n           '            {generated_implementation}\\n'\n           '\\n'\n           '            logger.info(f\"✅ Backend analysis completed: '\n           '{results}\")\\n'\n           '\\n'\n           '        except Exception as e:\\n'\n           '            logger.error(f\"❌ Error in backend analysis: '\n           '{e}\")\\n'\n           '            results[\"error\"] = str(e)\\n'\n           '\\n'\n           '        return results\\n'\n           '\\n'\n           '    async def optimize_performance(self, **kwargs) -> '\n           'Dict[str, Any]:\\n'\n           '        \"\"\"Optimiert die Backend-Performance\"\"\"\\n'\n           '        logger.info(\"⚡ Starting performance '\n           'optimization...\")\\n'\n           '\\n'\n           '        optimizations = []\\n'\n           '\\n'\n           '        # Einfache Optimierungen\\n'\n           '        optimizations.append(\"Consider using async/await for '\n           'I/O operations\")\\n'\n           '        optimizations.append(\"Review database query '\n           'performance\")\\n'\n           '        optimizations.append(\"Implement caching for '\n           'frequently accessed data\")\\n'\n           '\\n'\n           '        logger.info(f\"✅ Performance optimization completed: '\n           '{len(optimizations)} suggestions\")\\n'\n           '        return {{\"optimizations\": optimizations}}\\n'\n           '\\n'\n           '    async def get_status(self) -> Dict[str, Any]:\\n'\n           '        \"\"\"Gibt den Status des Agents zurück\"\"\"\\n'\n           '        return {{\\n'\n           '            \"agent_type\": self.agent_type,\\n'\n           '            \"status\": \"active\",\\n'\n           '            \"project_name\": self.project_name\\n'\n           '        }}\\n'\n           '\\n'\n           '    async def cleanup(self):\\n'\n           '        \"\"\"Bereinigt Ressourcen\"\"\"\\n'\n           '        logger.info(f\"🧹 Cleaning up {self.agent_type} '\n           'agent\")\\n'),\n          kind=None)"
            },
            {
              "function": "Attribute._get_frontend_agent_template(attrname='_get_frontend_agent_template',\n                                       expr=<Name.self l.26 at 0x2579a5a3a50>)",
              "type": "Const.str(value=('\"\"\"\\n'\n           '{agent_class} - Automatisch generierter Agent\\n'\n           '\"\"\"\\n'\n           '\\n'\n           'import asyncio\\n'\n           'import logging\\n'\n           'from typing import Dict, List, Any, Optional\\n'\n           'from pathlib import Path\\n'\n           '\\n'\n           'logger = logging.getLogger(__name__)\\n'\n           '\\n'\n           '\\n'\n           'class {agent_class}:\\n'\n           '    def __init__(self, project_path: str):\\n'\n           '        self.project_path = Path(project_path)\\n'\n           '        self.project_name = \"{project_name}\"\\n'\n           '        self.agent_type = \"generic\"\\n'\n           '\\n'\n           '    async def initialize(self):\\n'\n           '        \"\"\"Initialisiert den Agent\"\"\"\\n'\n           '        logger.info(f\"🚀 Initializing {self.agent_type} agent '\n           'for project: {self.project_name}\")\\n'\n           '\\n'\n           '    async def execute(self, **kwargs) -> Dict[str, Any]:\\n'\n           '        \"\"\"Führt den Agent aus\"\"\"\\n'\n           '        logger.info(f\"🔧 Starting {self.agent_type} agent '\n           'execution\")\\n'\n           '\\n'\n           '        results = {{\\n'\n           '            \"agent_type\": self.agent_type,\\n'\n           '            \"execution_successful\": True,\\n'\n           '            \"output\": \"Agent executed successfully\"\\n'\n           '        }}\\n'\n           '\\n'\n           '        try:\\n'\n           '            # Generierte Implementation vom LLM\\n'\n           '            {generated_implementation}\\n'\n           '\\n'\n           '            logger.info(f\"✅ {self.agent_type} agent completed '\n           'successfully\")\\n'\n           '\\n'\n           '        except Exception as e:\\n'\n           '            logger.error(f\"❌ Error in {self.agent_type} '\n           'agent: {e}\")\\n'\n           '            results[\"error\"] = str(e)\\n'\n           '            results[\"execution_successful\"] = False\\n'\n           '\\n'\n           '        return results\\n'\n           '\\n'\n           '    async def get_status(self) -> Dict[str, Any]:\\n'\n           '        \"\"\"Gibt den Status des Agents zurück\"\"\"\\n'\n           '        return {{\\n'\n           '            \"agent_type\": self.agent_type,\\n'\n           '            \"status\": \"active\",\\n'\n           '            \"project_name\": self.project_name\\n'\n           '        }}\\n'\n           '\\n'\n           '    async def cleanup(self):\\n'\n           '        \"\"\"Bereinigt Ressourcen\"\"\"\\n'\n           '        logger.info(f\"🧹 Cleaning up {self.agent_type} '\n           'agent\")\\n'),\n          kind=None)"
            },
            {
              "function": "Attribute._get_database_agent_template(attrname='_get_database_agent_template',\n                                       expr=<Name.self l.27 at 0x2579a5a21d0>)",
              "type": "Const.str(value=('\"\"\"\\n'\n           '{agent_class} - Automatisch generierter Agent\\n'\n           '\"\"\"\\n'\n           '\\n'\n           'import asyncio\\n'\n           'import logging\\n'\n           'from typing import Dict, List, Any, Optional\\n'\n           'from pathlib import Path\\n'\n           '\\n'\n           'logger = logging.getLogger(__name__)\\n'\n           '\\n'\n           '\\n'\n           'class {agent_class}:\\n'\n           '    def __init__(self, project_path: str):\\n'\n           '        self.project_path = Path(project_path)\\n'\n           '        self.project_name = \"{project_name}\"\\n'\n           '        self.agent_type = \"generic\"\\n'\n           '\\n'\n           '    async def initialize(self):\\n'\n           '        \"\"\"Initialisiert den Agent\"\"\"\\n'\n           '        logger.info(f\"🚀 Initializing {self.agent_type} agent '\n           'for project: {self.project_name}\")\\n'\n           '\\n'\n           '    async def execute(self, **kwargs) -> Dict[str, Any]:\\n'\n           '        \"\"\"Führt den Agent aus\"\"\"\\n'\n           '        logger.info(f\"🔧 Starting {self.agent_type} agent '\n           'execution\")\\n'\n           '\\n'\n           '        results = {{\\n'\n           '            \"agent_type\": self.agent_type,\\n'\n           '            \"execution_successful\": True,\\n'\n           '            \"output\": \"Agent executed successfully\"\\n'\n           '        }}\\n'\n           '\\n'\n           '        try:\\n'\n           '            # Generierte Implementation vom LLM\\n'\n           '            {generated_implementation}\\n'\n           '\\n'\n           '            logger.info(f\"✅ {self.agent_type} agent completed '\n           'successfully\")\\n'\n           '\\n'\n           '        except Exception as e:\\n'\n           '            logger.error(f\"❌ Error in {self.agent_type} '\n           'agent: {e}\")\\n'\n           '            results[\"error\"] = str(e)\\n'\n           '            results[\"execution_successful\"] = False\\n'\n           '\\n'\n           '        return results\\n'\n           '\\n'\n           '    async def get_status(self) -> Dict[str, Any]:\\n'\n           '        \"\"\"Gibt den Status des Agents zurück\"\"\"\\n'\n           '        return {{\\n'\n           '            \"agent_type\": self.agent_type,\\n'\n           '            \"status\": \"active\",\\n'\n           '            \"project_name\": self.project_name\\n'\n           '        }}\\n'\n           '\\n'\n           '    async def cleanup(self):\\n'\n           '        \"\"\"Bereinigt Ressourcen\"\"\"\\n'\n           '        logger.info(f\"🧹 Cleaning up {self.agent_type} '\n           'agent\")\\n'),\n          kind=None)"
            },
            {
              "function": "Attribute._get_api_agent_template(attrname='_get_api_agent_template',\n                                  expr=<Name.self l.28 at 0x25799acb550>)",
              "type": "Const.str(value=('\"\"\"\\n'\n           '{agent_class} - Automatisch generierter Agent\\n'\n           '\"\"\"\\n'\n           '\\n'\n           'import asyncio\\n'\n           'import logging\\n'\n           'from typing import Dict, List, Any, Optional\\n'\n           'from pathlib import Path\\n'\n           '\\n'\n           'logger = logging.getLogger(__name__)\\n'\n           '\\n'\n           '\\n'\n           'class {agent_class}:\\n'\n           '    def __init__(self, project_path: str):\\n'\n           '        self.project_path = Path(project_path)\\n'\n           '        self.project_name = \"{project_name}\"\\n'\n           '        self.agent_type = \"generic\"\\n'\n           '\\n'\n           '    async def initialize(self):\\n'\n           '        \"\"\"Initialisiert den Agent\"\"\"\\n'\n           '        logger.info(f\"🚀 Initializing {self.agent_type} agent '\n           'for project: {self.project_name}\")\\n'\n           '\\n'\n           '    async def execute(self, **kwargs) -> Dict[str, Any]:\\n'\n           '        \"\"\"Führt den Agent aus\"\"\"\\n'\n           '        logger.info(f\"🔧 Starting {self.agent_type} agent '\n           'execution\")\\n'\n           '\\n'\n           '        results = {{\\n'\n           '            \"agent_type\": self.agent_type,\\n'\n           '            \"execution_successful\": True,\\n'\n           '            \"output\": \"Agent executed successfully\"\\n'\n           '        }}\\n'\n           '\\n'\n           '        try:\\n'\n           '            # Generierte Implementation vom LLM\\n'\n           '            {generated_implementation}\\n'\n           '\\n'\n           '            logger.info(f\"✅ {self.agent_type} agent completed '\n           'successfully\")\\n'\n           '\\n'\n           '        except Exception as e:\\n'\n           '            logger.error(f\"❌ Error in {self.agent_type} '\n           'agent: {e}\")\\n'\n           '            results[\"error\"] = str(e)\\n'\n           '            results[\"execution_successful\"] = False\\n'\n           '\\n'\n           '        return results\\n'\n           '\\n'\n           '    async def get_status(self) -> Dict[str, Any]:\\n'\n           '        \"\"\"Gibt den Status des Agents zurück\"\"\"\\n'\n           '        return {{\\n'\n           '            \"agent_type\": self.agent_type,\\n'\n           '            \"status\": \"active\",\\n'\n           '            \"project_name\": self.project_name\\n'\n           '        }}\\n'\n           '\\n'\n           '    async def cleanup(self):\\n'\n           '        \"\"\"Bereinigt Ressourcen\"\"\"\\n'\n           '        logger.info(f\"🧹 Cleaning up {self.agent_type} '\n           'agent\")\\n'),\n          kind=None)"
            },
            {
              "function": "Attribute._get_test_agent_template(attrname='_get_test_agent_template',\n                                   expr=<Name.self l.29 at 0x2579a038310>)",
              "type": "Const.str(value=('\"\"\"\\n'\n           '{agent_class} - Automatisch generierter Agent\\n'\n           '\"\"\"\\n'\n           '\\n'\n           'import asyncio\\n'\n           'import logging\\n'\n           'from typing import Dict, List, Any, Optional\\n'\n           'from pathlib import Path\\n'\n           '\\n'\n           'logger = logging.getLogger(__name__)\\n'\n           '\\n'\n           '\\n'\n           'class {agent_class}:\\n'\n           '    def __init__(self, project_path: str):\\n'\n           '        self.project_path = Path(project_path)\\n'\n           '        self.project_name = \"{project_name}\"\\n'\n           '        self.agent_type = \"generic\"\\n'\n           '\\n'\n           '    async def initialize(self):\\n'\n           '        \"\"\"Initialisiert den Agent\"\"\"\\n'\n           '        logger.info(f\"🚀 Initializing {self.agent_type} agent '\n           'for project: {self.project_name}\")\\n'\n           '\\n'\n           '    async def execute(self, **kwargs) -> Dict[str, Any]:\\n'\n           '        \"\"\"Führt den Agent aus\"\"\"\\n'\n           '        logger.info(f\"🔧 Starting {self.agent_type} agent '\n           'execution\")\\n'\n           '\\n'\n           '        results = {{\\n'\n           '            \"agent_type\": self.agent_type,\\n'\n           '            \"execution_successful\": True,\\n'\n           '            \"output\": \"Agent executed successfully\"\\n'\n           '        }}\\n'\n           '\\n'\n           '        try:\\n'\n           '            # Generierte Implementation vom LLM\\n'\n           '            {generated_implementation}\\n'\n           '\\n'\n           '            logger.info(f\"✅ {self.agent_type} agent completed '\n           'successfully\")\\n'\n           '\\n'\n           '        except Exception as e:\\n'\n           '            logger.error(f\"❌ Error in {self.agent_type} '\n           'agent: {e}\")\\n'\n           '            results[\"error\"] = str(e)\\n'\n           '            results[\"execution_successful\"] = False\\n'\n           '\\n'\n           '        return results\\n'\n           '\\n'\n           '    async def get_status(self) -> Dict[str, Any]:\\n'\n           '        \"\"\"Gibt den Status des Agents zurück\"\"\"\\n'\n           '        return {{\\n'\n           '            \"agent_type\": self.agent_type,\\n'\n           '            \"status\": \"active\",\\n'\n           '            \"project_name\": self.project_name\\n'\n           '        }}\\n'\n           '\\n'\n           '    async def cleanup(self):\\n'\n           '        \"\"\"Bereinigt Ressourcen\"\"\"\\n'\n           '        logger.info(f\"🧹 Cleaning up {self.agent_type} '\n           'agent\")\\n'),\n          kind=None)"
            },
            {
              "function": "Attribute._get_security_agent_template(attrname='_get_security_agent_template',\n                                       expr=<Name.self l.30 at 0x2579a0394d0>)",
              "type": "Const.str(value=('\"\"\"\\n'\n           '{agent_class} - Automatisch generierter Agent\\n'\n           '\"\"\"\\n'\n           '\\n'\n           'import asyncio\\n'\n           'import logging\\n'\n           'from typing import Dict, List, Any, Optional\\n'\n           'from pathlib import Path\\n'\n           '\\n'\n           'logger = logging.getLogger(__name__)\\n'\n           '\\n'\n           '\\n'\n           'class {agent_class}:\\n'\n           '    def __init__(self, project_path: str):\\n'\n           '        self.project_path = Path(project_path)\\n'\n           '        self.project_name = \"{project_name}\"\\n'\n           '        self.agent_type = \"generic\"\\n'\n           '\\n'\n           '    async def initialize(self):\\n'\n           '        \"\"\"Initialisiert den Agent\"\"\"\\n'\n           '        logger.info(f\"🚀 Initializing {self.agent_type} agent '\n           'for project: {self.project_name}\")\\n'\n           '\\n'\n           '    async def execute(self, **kwargs) -> Dict[str, Any]:\\n'\n           '        \"\"\"Führt den Agent aus\"\"\"\\n'\n           '        logger.info(f\"🔧 Starting {self.agent_type} agent '\n           'execution\")\\n'\n           '\\n'\n           '        results = {{\\n'\n           '            \"agent_type\": self.agent_type,\\n'\n           '            \"execution_successful\": True,\\n'\n           '            \"output\": \"Agent executed successfully\"\\n'\n           '        }}\\n'\n           '\\n'\n           '        try:\\n'\n           '            # Generierte Implementation vom LLM\\n'\n           '            {generated_implementation}\\n'\n           '\\n'\n           '            logger.info(f\"✅ {self.agent_type} agent completed '\n           'successfully\")\\n'\n           '\\n'\n           '        except Exception as e:\\n'\n           '            logger.error(f\"❌ Error in {self.agent_type} '\n           'agent: {e}\")\\n'\n           '            results[\"error\"] = str(e)\\n'\n           '            results[\"execution_successful\"] = False\\n'\n           '\\n'\n           '        return results\\n'\n           '\\n'\n           '    async def get_status(self) -> Dict[str, Any]:\\n'\n           '        \"\"\"Gibt den Status des Agents zurück\"\"\"\\n'\n           '        return {{\\n'\n           '            \"agent_type\": self.agent_type,\\n'\n           '            \"status\": \"active\",\\n'\n           '            \"project_name\": self.project_name\\n'\n           '        }}\\n'\n           '\\n'\n           '    async def cleanup(self):\\n'\n           '        \"\"\"Bereinigt Ressourcen\"\"\"\\n'\n           '        logger.info(f\"🧹 Cleaning up {self.agent_type} '\n           'agent\")\\n'),\n          kind=None)"
            },
            {
              "function": "Attribute._get_deployment_agent_template(attrname='_get_deployment_agent_template',\n                                         expr=<Name.self l.31 at 0x25799e2edd0>)",
              "type": "Const.str(value=('\"\"\"\\n'\n           '{agent_class} - Automatisch generierter Agent\\n'\n           '\"\"\"\\n'\n           '\\n'\n           'import asyncio\\n'\n           'import logging\\n'\n           'from typing import Dict, List, Any, Optional\\n'\n           'from pathlib import Path\\n'\n           '\\n'\n           'logger = logging.getLogger(__name__)\\n'\n           '\\n'\n           '\\n'\n           'class {agent_class}:\\n'\n           '    def __init__(self, project_path: str):\\n'\n           '        self.project_path = Path(project_path)\\n'\n           '        self.project_name = \"{project_name}\"\\n'\n           '        self.agent_type = \"generic\"\\n'\n           '\\n'\n           '    async def initialize(self):\\n'\n           '        \"\"\"Initialisiert den Agent\"\"\"\\n'\n           '        logger.info(f\"🚀 Initializing {self.agent_type} agent '\n           'for project: {self.project_name}\")\\n'\n           '\\n'\n           '    async def execute(self, **kwargs) -> Dict[str, Any]:\\n'\n           '        \"\"\"Führt den Agent aus\"\"\"\\n'\n           '        logger.info(f\"🔧 Starting {self.agent_type} agent '\n           'execution\")\\n'\n           '\\n'\n           '        results = {{\\n'\n           '            \"agent_type\": self.agent_type,\\n'\n           '            \"execution_successful\": True,\\n'\n           '            \"output\": \"Agent executed successfully\"\\n'\n           '        }}\\n'\n           '\\n'\n           '        try:\\n'\n           '            # Generierte Implementation vom LLM\\n'\n           '            {generated_implementation}\\n'\n           '\\n'\n           '            logger.info(f\"✅ {self.agent_type} agent completed '\n           'successfully\")\\n'\n           '\\n'\n           '        except Exception as e:\\n'\n           '            logger.error(f\"❌ Error in {self.agent_type} '\n           'agent: {e}\")\\n'\n           '            results[\"error\"] = str(e)\\n'\n           '            results[\"execution_successful\"] = False\\n'\n           '\\n'\n           '        return results\\n'\n           '\\n'\n           '    async def get_status(self) -> Dict[str, Any]:\\n'\n           '        \"\"\"Gibt den Status des Agents zurück\"\"\"\\n'\n           '        return {{\\n'\n           '            \"agent_type\": self.agent_type,\\n'\n           '            \"status\": \"active\",\\n'\n           '            \"project_name\": self.project_name\\n'\n           '        }}\\n'\n           '\\n'\n           '    async def cleanup(self):\\n'\n           '        \"\"\"Bereinigt Ressourcen\"\"\"\\n'\n           '        logger.info(f\"🧹 Cleaning up {self.agent_type} '\n           'agent\")\\n'),\n          kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.37 at 0x25799e2cfd0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.39 at 0x25799e2da50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._determine_required_agents(attrname='_determine_required_agents',\n                                     expr=<Name.self l.43 at 0x25799cae710>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.46 at 0x25799caf890>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._generate_agent_code(attrname='_generate_agent_code',\n                               expr=<Name.self l.48 at 0x25799cadb50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._save_agent_file(attrname='_save_agent_file',\n                           expr=<Name.self l.55 at 0x25799cafa10>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.67 at 0x25799bd0390>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.73 at 0x257ff8f9410>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.81 at 0x25799493b50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.90 at 0x257984e4050>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.95 at 0x2579b15dbd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.100 at 0x2579b15cf10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._has_test_frameworks(attrname='_has_test_frameworks',\n                               expr=<Name.self l.101 at 0x2579b15e790>)",
              "type": "Const.bool(value=True,\n           kind=None)"
            },
            {
              "function": "Attribute._has_deployment_files(attrname='_has_deployment_files',\n                                expr=<Name.self l.108 at 0x2579b15c990>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Name.dependencies l.117 at 0x2579b15d910>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.dep l.120 at 0x2579b15fc50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.127 at 0x2579b15d550>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.structure l.130 at 0x2579b15e350>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._get_generic_agent_template(attrname='_get_generic_agent_template',\n                                      expr=<Name.self l.136 at 0x25799986a50>)",
              "type": "Const.str(value=('\"\"\"\\n'\n           '{agent_class} - Automatisch generierter Agent\\n'\n           '\"\"\"\\n'\n           '\\n'\n           'import asyncio\\n'\n           'import logging\\n'\n           'from typing import Dict, List, Any, Optional\\n'\n           'from pathlib import Path\\n'\n           '\\n'\n           'logger = logging.getLogger(__name__)\\n'\n           '\\n'\n           '\\n'\n           'class {agent_class}:\\n'\n           '    def __init__(self, project_path: str):\\n'\n           '        self.project_path = Path(project_path)\\n'\n           '        self.project_name = \"{project_name}\"\\n'\n           '        self.agent_type = \"generic\"\\n'\n           '\\n'\n           '    async def initialize(self):\\n'\n           '        \"\"\"Initialisiert den Agent\"\"\"\\n'\n           '        logger.info(f\"🚀 Initializing {self.agent_type} agent '\n           'for project: {self.project_name}\")\\n'\n           '\\n'\n           '    async def execute(self, **kwargs) -> Dict[str, Any]:\\n'\n           '        \"\"\"Führt den Agent aus\"\"\"\\n'\n           '        logger.info(f\"🔧 Starting {self.agent_type} agent '\n           'execution\")\\n'\n           '\\n'\n           '        results = {{\\n'\n           '            \"agent_type\": self.agent_type,\\n'\n           '            \"execution_successful\": True,\\n'\n           '            \"output\": \"Agent executed successfully\"\\n'\n           '        }}\\n'\n           '\\n'\n           '        try:\\n'\n           '            # Generierte Implementation vom LLM\\n'\n           '            {generated_implementation}\\n'\n           '\\n'\n           '            logger.info(f\"✅ {self.agent_type} agent completed '\n           'successfully\")\\n'\n           '\\n'\n           '        except Exception as e:\\n'\n           '            logger.error(f\"❌ Error in {self.agent_type} '\n           'agent: {e}\")\\n'\n           '            results[\"error\"] = str(e)\\n'\n           '            results[\"execution_successful\"] = False\\n'\n           '\\n'\n           '        return results\\n'\n           '\\n'\n           '    async def get_status(self) -> Dict[str, Any]:\\n'\n           '        \"\"\"Gibt den Status des Agents zurück\"\"\"\\n'\n           '        return {{\\n'\n           '            \"agent_type\": self.agent_type,\\n'\n           '            \"status\": \"active\",\\n'\n           '            \"project_name\": self.project_name\\n'\n           '        }}\\n'\n           '\\n'\n           '    async def cleanup(self):\\n'\n           '        \"\"\"Bereinigt Ressourcen\"\"\"\\n'\n           '        logger.info(f\"🧹 Cleaning up {self.agent_type} '\n           'agent\")\\n'),\n          kind=None)"
            },
            {
              "function": "Attribute.format(attrname='format',\n                 expr=<Name.AGENT_GENERATION_PROMPT l.139 at 0x25798577750>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.dumps(attrname='dumps',\n                expr=<Name.json l.140 at 0x257995d8f50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._get_agent_role(attrname='_get_agent_role',\n                          expr=<Name.self l.142 at 0x25799da61d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._get_agent_goal(attrname='_get_agent_goal',\n                          expr=<Name.self l.143 at 0x2579a56a510>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._get_required_skills(attrname='_get_required_skills',\n                               expr=<Name.self l.144 at 0x2579a8bc8d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get_model(attrname='get_model',\n                    expr=<Attribute.model_manager l.148 at 0x2579a8bcb90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.generate_response(attrname='generate_response',\n                            expr=<Name.model l.149 at 0x2579a8bcc10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.title(attrname='title',\n                expr=<Name.agent_type l.152 at 0x2579a8bcb50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.format(attrname='format',\n                 expr=<Name.template l.153 at 0x2579aa60dd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.163 at 0x2579aa62e50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.title(attrname='title',\n                expr=<Name.agent_type l.165 at 0x2579aa615d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._get_generic_agent_template(attrname='_get_generic_agent_template',\n                                      expr=<Name.self l.166 at 0x2579aa62510>)",
              "type": "Const.str(value=('\"\"\"\\n'\n           '{agent_class} - Automatisch generierter Agent\\n'\n           '\"\"\"\\n'\n           '\\n'\n           'import asyncio\\n'\n           'import logging\\n'\n           'from typing import Dict, List, Any, Optional\\n'\n           'from pathlib import Path\\n'\n           '\\n'\n           'logger = logging.getLogger(__name__)\\n'\n           '\\n'\n           '\\n'\n           'class {agent_class}:\\n'\n           '    def __init__(self, project_path: str):\\n'\n           '        self.project_path = Path(project_path)\\n'\n           '        self.project_name = \"{project_name}\"\\n'\n           '        self.agent_type = \"generic\"\\n'\n           '\\n'\n           '    async def initialize(self):\\n'\n           '        \"\"\"Initialisiert den Agent\"\"\"\\n'\n           '        logger.info(f\"🚀 Initializing {self.agent_type} agent '\n           'for project: {self.project_name}\")\\n'\n           '\\n'\n           '    async def execute(self, **kwargs) -> Dict[str, Any]:\\n'\n           '        \"\"\"Führt den Agent aus\"\"\"\\n'\n           '        logger.info(f\"🔧 Starting {self.agent_type} agent '\n           'execution\")\\n'\n           '\\n'\n           '        results = {{\\n'\n           '            \"agent_type\": self.agent_type,\\n'\n           '            \"execution_successful\": True,\\n'\n           '            \"output\": \"Agent executed successfully\"\\n'\n           '        }}\\n'\n           '\\n'\n           '        try:\\n'\n           '            # Generierte Implementation vom LLM\\n'\n           '            {generated_implementation}\\n'\n           '\\n'\n           '            logger.info(f\"✅ {self.agent_type} agent completed '\n           'successfully\")\\n'\n           '\\n'\n           '        except Exception as e:\\n'\n           '            logger.error(f\"❌ Error in {self.agent_type} '\n           'agent: {e}\")\\n'\n           '            results[\"error\"] = str(e)\\n'\n           '            results[\"execution_successful\"] = False\\n'\n           '\\n'\n           '        return results\\n'\n           '\\n'\n           '    async def get_status(self) -> Dict[str, Any]:\\n'\n           '        \"\"\"Gibt den Status des Agents zurück\"\"\"\\n'\n           '        return {{\\n'\n           '            \"agent_type\": self.agent_type,\\n'\n           '            \"status\": \"active\",\\n'\n           '            \"project_name\": self.project_name\\n'\n           '        }}\\n'\n           '\\n'\n           '    async def cleanup(self):\\n'\n           '        \"\"\"Bereinigt Ressourcen\"\"\"\\n'\n           '        logger.info(f\"🧹 Cleaning up {self.agent_type} '\n           'agent\")\\n'),\n          kind=None)"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.mkdir(attrname='mkdir',\n                expr=<Name.generated_dir l.178 at 0x2579aa63690>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.write(attrname='write',\n                expr=<Name.f l.186 at 0x2579aa61bd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.191 at 0x2579aa61f10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._get_generic_agent_template(attrname='_get_generic_agent_template',\n                                      expr=<Name.self l.373 at 0x25799bcae90>)",
              "type": "Const.str(value=('\"\"\"\\n'\n           '{agent_class} - Automatisch generierter Agent\\n'\n           '\"\"\"\\n'\n           '\\n'\n           'import asyncio\\n'\n           'import logging\\n'\n           'from typing import Dict, List, Any, Optional\\n'\n           'from pathlib import Path\\n'\n           '\\n'\n           'logger = logging.getLogger(__name__)\\n'\n           '\\n'\n           '\\n'\n           'class {agent_class}:\\n'\n           '    def __init__(self, project_path: str):\\n'\n           '        self.project_path = Path(project_path)\\n'\n           '        self.project_name = \"{project_name}\"\\n'\n           '        self.agent_type = \"generic\"\\n'\n           '\\n'\n           '    async def initialize(self):\\n'\n           '        \"\"\"Initialisiert den Agent\"\"\"\\n'\n           '        logger.info(f\"🚀 Initializing {self.agent_type} agent '\n           'for project: {self.project_name}\")\\n'\n           '\\n'\n           '    async def execute(self, **kwargs) -> Dict[str, Any]:\\n'\n           '        \"\"\"Führt den Agent aus\"\"\"\\n'\n           '        logger.info(f\"🔧 Starting {self.agent_type} agent '\n           'execution\")\\n'\n           '\\n'\n           '        results = {{\\n'\n           '            \"agent_type\": self.agent_type,\\n'\n           '            \"execution_successful\": True,\\n'\n           '            \"output\": \"Agent executed successfully\"\\n'\n           '        }}\\n'\n           '\\n'\n           '        try:\\n'\n           '            # Generierte Implementation vom LLM\\n'\n           '            {generated_implementation}\\n'\n           '\\n'\n           '            logger.info(f\"✅ {self.agent_type} agent completed '\n           'successfully\")\\n'\n           '\\n'\n           '        except Exception as e:\\n'\n           '            logger.error(f\"❌ Error in {self.agent_type} '\n           'agent: {e}\")\\n'\n           '            results[\"error\"] = str(e)\\n'\n           '            results[\"execution_successful\"] = False\\n'\n           '\\n'\n           '        return results\\n'\n           '\\n'\n           '    async def get_status(self) -> Dict[str, Any]:\\n'\n           '        \"\"\"Gibt den Status des Agents zurück\"\"\"\\n'\n           '        return {{\\n'\n           '            \"agent_type\": self.agent_type,\\n'\n           '            \"status\": \"active\",\\n'\n           '            \"project_name\": self.project_name\\n'\n           '        }}\\n'\n           '\\n'\n           '    async def cleanup(self):\\n'\n           '        \"\"\"Bereinigt Ressourcen\"\"\"\\n'\n           '        logger.info(f\"🧹 Cleaning up {self.agent_type} '\n           'agent\")\\n'),\n          kind=None)"
            },
            {
              "function": "Attribute._get_generic_agent_template(attrname='_get_generic_agent_template',\n                                      expr=<Name.self l.376 at 0x25799bcaa10>)",
              "type": "Const.str(value=('\"\"\"\\n'\n           '{agent_class} - Automatisch generierter Agent\\n'\n           '\"\"\"\\n'\n           '\\n'\n           'import asyncio\\n'\n           'import logging\\n'\n           'from typing import Dict, List, Any, Optional\\n'\n           'from pathlib import Path\\n'\n           '\\n'\n           'logger = logging.getLogger(__name__)\\n'\n           '\\n'\n           '\\n'\n           'class {agent_class}:\\n'\n           '    def __init__(self, project_path: str):\\n'\n           '        self.project_path = Path(project_path)\\n'\n           '        self.project_name = \"{project_name}\"\\n'\n           '        self.agent_type = \"generic\"\\n'\n           '\\n'\n           '    async def initialize(self):\\n'\n           '        \"\"\"Initialisiert den Agent\"\"\"\\n'\n           '        logger.info(f\"🚀 Initializing {self.agent_type} agent '\n           'for project: {self.project_name}\")\\n'\n           '\\n'\n           '    async def execute(self, **kwargs) -> Dict[str, Any]:\\n'\n           '        \"\"\"Führt den Agent aus\"\"\"\\n'\n           '        logger.info(f\"🔧 Starting {self.agent_type} agent '\n           'execution\")\\n'\n           '\\n'\n           '        results = {{\\n'\n           '            \"agent_type\": self.agent_type,\\n'\n           '            \"execution_successful\": True,\\n'\n           '            \"output\": \"Agent executed successfully\"\\n'\n           '        }}\\n'\n           '\\n'\n           '        try:\\n'\n           '            # Generierte Implementation vom LLM\\n'\n           '            {generated_implementation}\\n'\n           '\\n'\n           '            logger.info(f\"✅ {self.agent_type} agent completed '\n           'successfully\")\\n'\n           '\\n'\n           '        except Exception as e:\\n'\n           '            logger.error(f\"❌ Error in {self.agent_type} '\n           'agent: {e}\")\\n'\n           '            results[\"error\"] = str(e)\\n'\n           '            results[\"execution_successful\"] = False\\n'\n           '\\n'\n           '        return results\\n'\n           '\\n'\n           '    async def get_status(self) -> Dict[str, Any]:\\n'\n           '        \"\"\"Gibt den Status des Agents zurück\"\"\"\\n'\n           '        return {{\\n'\n           '            \"agent_type\": self.agent_type,\\n'\n           '            \"status\": \"active\",\\n'\n           '            \"project_name\": self.project_name\\n'\n           '        }}\\n'\n           '\\n'\n           '    async def cleanup(self):\\n'\n           '        \"\"\"Bereinigt Ressourcen\"\"\"\\n'\n           '        logger.info(f\"🧹 Cleaning up {self.agent_type} '\n           'agent\")\\n'),\n          kind=None)"
            },
            {
              "function": "Attribute._get_generic_agent_template(attrname='_get_generic_agent_template',\n                                      expr=<Name.self l.379 at 0x2579aa4b810>)",
              "type": "Const.str(value=('\"\"\"\\n'\n           '{agent_class} - Automatisch generierter Agent\\n'\n           '\"\"\"\\n'\n           '\\n'\n           'import asyncio\\n'\n           'import logging\\n'\n           'from typing import Dict, List, Any, Optional\\n'\n           'from pathlib import Path\\n'\n           '\\n'\n           'logger = logging.getLogger(__name__)\\n'\n           '\\n'\n           '\\n'\n           'class {agent_class}:\\n'\n           '    def __init__(self, project_path: str):\\n'\n           '        self.project_path = Path(project_path)\\n'\n           '        self.project_name = \"{project_name}\"\\n'\n           '        self.agent_type = \"generic\"\\n'\n           '\\n'\n           '    async def initialize(self):\\n'\n           '        \"\"\"Initialisiert den Agent\"\"\"\\n'\n           '        logger.info(f\"🚀 Initializing {self.agent_type} agent '\n           'for project: {self.project_name}\")\\n'\n           '\\n'\n           '    async def execute(self, **kwargs) -> Dict[str, Any]:\\n'\n           '        \"\"\"Führt den Agent aus\"\"\"\\n'\n           '        logger.info(f\"🔧 Starting {self.agent_type} agent '\n           'execution\")\\n'\n           '\\n'\n           '        results = {{\\n'\n           '            \"agent_type\": self.agent_type,\\n'\n           '            \"execution_successful\": True,\\n'\n           '            \"output\": \"Agent executed successfully\"\\n'\n           '        }}\\n'\n           '\\n'\n           '        try:\\n'\n           '            # Generierte Implementation vom LLM\\n'\n           '            {generated_implementation}\\n'\n           '\\n'\n           '            logger.info(f\"✅ {self.agent_type} agent completed '\n           'successfully\")\\n'\n           '\\n'\n           '        except Exception as e:\\n'\n           '            logger.error(f\"❌ Error in {self.agent_type} '\n           'agent: {e}\")\\n'\n           '            results[\"error\"] = str(e)\\n'\n           '            results[\"execution_successful\"] = False\\n'\n           '\\n'\n           '        return results\\n'\n           '\\n'\n           '    async def get_status(self) -> Dict[str, Any]:\\n'\n           '        \"\"\"Gibt den Status des Agents zurück\"\"\"\\n'\n           '        return {{\\n'\n           '            \"agent_type\": self.agent_type,\\n'\n           '            \"status\": \"active\",\\n'\n           '            \"project_name\": self.project_name\\n'\n           '        }}\\n'\n           '\\n'\n           '    async def cleanup(self):\\n'\n           '        \"\"\"Bereinigt Ressourcen\"\"\"\\n'\n           '        logger.info(f\"🧹 Cleaning up {self.agent_type} '\n           'agent\")\\n'),\n          kind=None)"
            },
            {
              "function": "Attribute._get_generic_agent_template(attrname='_get_generic_agent_template',\n                                      expr=<Name.self l.382 at 0x25799bbfa10>)",
              "type": "Const.str(value=('\"\"\"\\n'\n           '{agent_class} - Automatisch generierter Agent\\n'\n           '\"\"\"\\n'\n           '\\n'\n           'import asyncio\\n'\n           'import logging\\n'\n           'from typing import Dict, List, Any, Optional\\n'\n           'from pathlib import Path\\n'\n           '\\n'\n           'logger = logging.getLogger(__name__)\\n'\n           '\\n'\n           '\\n'\n           'class {agent_class}:\\n'\n           '    def __init__(self, project_path: str):\\n'\n           '        self.project_path = Path(project_path)\\n'\n           '        self.project_name = \"{project_name}\"\\n'\n           '        self.agent_type = \"generic\"\\n'\n           '\\n'\n           '    async def initialize(self):\\n'\n           '        \"\"\"Initialisiert den Agent\"\"\"\\n'\n           '        logger.info(f\"🚀 Initializing {self.agent_type} agent '\n           'for project: {self.project_name}\")\\n'\n           '\\n'\n           '    async def execute(self, **kwargs) -> Dict[str, Any]:\\n'\n           '        \"\"\"Führt den Agent aus\"\"\"\\n'\n           '        logger.info(f\"🔧 Starting {self.agent_type} agent '\n           'execution\")\\n'\n           '\\n'\n           '        results = {{\\n'\n           '            \"agent_type\": self.agent_type,\\n'\n           '            \"execution_successful\": True,\\n'\n           '            \"output\": \"Agent executed successfully\"\\n'\n           '        }}\\n'\n           '\\n'\n           '        try:\\n'\n           '            # Generierte Implementation vom LLM\\n'\n           '            {generated_implementation}\\n'\n           '\\n'\n           '            logger.info(f\"✅ {self.agent_type} agent completed '\n           'successfully\")\\n'\n           '\\n'\n           '        except Exception as e:\\n'\n           '            logger.error(f\"❌ Error in {self.agent_type} '\n           'agent: {e}\")\\n'\n           '            results[\"error\"] = str(e)\\n'\n           '            results[\"execution_successful\"] = False\\n'\n           '\\n'\n           '        return results\\n'\n           '\\n'\n           '    async def get_status(self) -> Dict[str, Any]:\\n'\n           '        \"\"\"Gibt den Status des Agents zurück\"\"\"\\n'\n           '        return {{\\n'\n           '            \"agent_type\": self.agent_type,\\n'\n           '            \"status\": \"active\",\\n'\n           '            \"project_name\": self.project_name\\n'\n           '        }}\\n'\n           '\\n'\n           '    async def cleanup(self):\\n'\n           '        \"\"\"Bereinigt Ressourcen\"\"\"\\n'\n           '        logger.info(f\"🧹 Cleaning up {self.agent_type} '\n           'agent\")\\n'),\n          kind=None)"
            },
            {
              "function": "Attribute._get_generic_agent_template(attrname='_get_generic_agent_template',\n                                      expr=<Name.self l.385 at 0x25799bbce10>)",
              "type": "Const.str(value=('\"\"\"\\n'\n           '{agent_class} - Automatisch generierter Agent\\n'\n           '\"\"\"\\n'\n           '\\n'\n           'import asyncio\\n'\n           'import logging\\n'\n           'from typing import Dict, List, Any, Optional\\n'\n           'from pathlib import Path\\n'\n           '\\n'\n           'logger = logging.getLogger(__name__)\\n'\n           '\\n'\n           '\\n'\n           'class {agent_class}:\\n'\n           '    def __init__(self, project_path: str):\\n'\n           '        self.project_path = Path(project_path)\\n'\n           '        self.project_name = \"{project_name}\"\\n'\n           '        self.agent_type = \"generic\"\\n'\n           '\\n'\n           '    async def initialize(self):\\n'\n           '        \"\"\"Initialisiert den Agent\"\"\"\\n'\n           '        logger.info(f\"🚀 Initializing {self.agent_type} agent '\n           'for project: {self.project_name}\")\\n'\n           '\\n'\n           '    async def execute(self, **kwargs) -> Dict[str, Any]:\\n'\n           '        \"\"\"Führt den Agent aus\"\"\"\\n'\n           '        logger.info(f\"🔧 Starting {self.agent_type} agent '\n           'execution\")\\n'\n           '\\n'\n           '        results = {{\\n'\n           '            \"agent_type\": self.agent_type,\\n'\n           '            \"execution_successful\": True,\\n'\n           '            \"output\": \"Agent executed successfully\"\\n'\n           '        }}\\n'\n           '\\n'\n           '        try:\\n'\n           '            # Generierte Implementation vom LLM\\n'\n           '            {generated_implementation}\\n'\n           '\\n'\n           '            logger.info(f\"✅ {self.agent_type} agent completed '\n           'successfully\")\\n'\n           '\\n'\n           '        except Exception as e:\\n'\n           '            logger.error(f\"❌ Error in {self.agent_type} '\n           'agent: {e}\")\\n'\n           '            results[\"error\"] = str(e)\\n'\n           '            results[\"execution_successful\"] = False\\n'\n           '\\n'\n           '        return results\\n'\n           '\\n'\n           '    async def get_status(self) -> Dict[str, Any]:\\n'\n           '        \"\"\"Gibt den Status des Agents zurück\"\"\"\\n'\n           '        return {{\\n'\n           '            \"agent_type\": self.agent_type,\\n'\n           '            \"status\": \"active\",\\n'\n           '            \"project_name\": self.project_name\\n'\n           '        }}\\n'\n           '\\n'\n           '    async def cleanup(self):\\n'\n           '        \"\"\"Bereinigt Ressourcen\"\"\"\\n'\n           '        logger.info(f\"🧹 Cleaning up {self.agent_type} '\n           'agent\")\\n'),\n          kind=None)"
            },
            {
              "function": "Attribute._get_generic_agent_template(attrname='_get_generic_agent_template',\n                                      expr=<Name.self l.388 at 0x25799bbfe10>)",
              "type": "Const.str(value=('\"\"\"\\n'\n           '{agent_class} - Automatisch generierter Agent\\n'\n           '\"\"\"\\n'\n           '\\n'\n           'import asyncio\\n'\n           'import logging\\n'\n           'from typing import Dict, List, Any, Optional\\n'\n           'from pathlib import Path\\n'\n           '\\n'\n           'logger = logging.getLogger(__name__)\\n'\n           '\\n'\n           '\\n'\n           'class {agent_class}:\\n'\n           '    def __init__(self, project_path: str):\\n'\n           '        self.project_path = Path(project_path)\\n'\n           '        self.project_name = \"{project_name}\"\\n'\n           '        self.agent_type = \"generic\"\\n'\n           '\\n'\n           '    async def initialize(self):\\n'\n           '        \"\"\"Initialisiert den Agent\"\"\"\\n'\n           '        logger.info(f\"🚀 Initializing {self.agent_type} agent '\n           'for project: {self.project_name}\")\\n'\n           '\\n'\n           '    async def execute(self, **kwargs) -> Dict[str, Any]:\\n'\n           '        \"\"\"Führt den Agent aus\"\"\"\\n'\n           '        logger.info(f\"🔧 Starting {self.agent_type} agent '\n           'execution\")\\n'\n           '\\n'\n           '        results = {{\\n'\n           '            \"agent_type\": self.agent_type,\\n'\n           '            \"execution_successful\": True,\\n'\n           '            \"output\": \"Agent executed successfully\"\\n'\n           '        }}\\n'\n           '\\n'\n           '        try:\\n'\n           '            # Generierte Implementation vom LLM\\n'\n           '            {generated_implementation}\\n'\n           '\\n'\n           '            logger.info(f\"✅ {self.agent_type} agent completed '\n           'successfully\")\\n'\n           '\\n'\n           '        except Exception as e:\\n'\n           '            logger.error(f\"❌ Error in {self.agent_type} '\n           'agent: {e}\")\\n'\n           '            results[\"error\"] = str(e)\\n'\n           '            results[\"execution_successful\"] = False\\n'\n           '\\n'\n           '        return results\\n'\n           '\\n'\n           '    async def get_status(self) -> Dict[str, Any]:\\n'\n           '        \"\"\"Gibt den Status des Agents zurück\"\"\"\\n'\n           '        return {{\\n'\n           '            \"agent_type\": self.agent_type,\\n'\n           '            \"status\": \"active\",\\n'\n           '            \"project_name\": self.project_name\\n'\n           '        }}\\n'\n           '\\n'\n           '    async def cleanup(self):\\n'\n           '        \"\"\"Bereinigt Ressourcen\"\"\"\\n'\n           '        logger.info(f\"🧹 Cleaning up {self.agent_type} '\n           'agent\")\\n'),\n          kind=None)"
            }
          ],
          "unresolved_imports": [
            "os",
            "json",
            "logging"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": "generators\\skill_generator.py",
        "language": "python",
        "file_size": 13201,
        "line_count": 292,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "__init__",
            "line_number": 22,
            "parameters": [
              "self",
              "model_manager"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_load_skill_templates",
            "line_number": 27,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Lädt Skill-Templates für verschiedene Projekt-Typen",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_determine_required_skills",
            "line_number": 82,
            "parameters": [
              "self",
              "analysis_results"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Bestimmt welche Skill-Typen basierend auf der Analyse benötigt werden",
            "is_async": false,
            "complexity": 8
          },
          {
            "name": "_has_security_dependencies",
            "line_number": 122,
            "parameters": [
              "self",
              "dependencies"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Prüft ob Security-relevante Dependencies vorhanden sind",
            "is_async": false,
            "complexity": 6
          },
          {
            "name": "_has_test_frameworks",
            "line_number": 133,
            "parameters": [
              "self",
              "analysis_results"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Prüft ob Test-Frameworks vorhanden sind",
            "is_async": false,
            "complexity": 6
          },
          {
            "name": "_has_complex_code_structure",
            "line_number": 145,
            "parameters": [
              "self",
              "analysis_results"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Prüft ob komplexe Code-Struktur vorhanden ist",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "_has_many_dependencies",
            "line_number": 153,
            "parameters": [
              "self",
              "dependencies"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Prüft ob viele Dependencies vorhanden sind",
            "is_async": false,
            "complexity": 4
          },
          {
            "name": "_get_skill_purpose",
            "line_number": 224,
            "parameters": [
              "self",
              "skill_type"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Gibt den Zweck des Skills zurück",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_get_skill_inputs",
            "line_number": 238,
            "parameters": [
              "self",
              "skill_type"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Gibt die Eingaben des Skills zurück",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_get_skill_outputs",
            "line_number": 252,
            "parameters": [
              "self",
              "skill_type"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Gibt die Ausgaben des Skills zurück",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_get_skill_dependencies",
            "line_number": 266,
            "parameters": [
              "self",
              "skill_type",
              "analysis_results"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Gibt die Dependencies des Skills zurück",
            "is_async": false,
            "complexity": 4
          }
        ],
        "classes": [
          {
            "name": "SkillGenerator",
            "line_number": 21,
            "bases": [],
            "decorators": [],
            "docstring": null,
            "methods": [
              "__init__",
              "_load_skill_templates",
              "_determine_required_skills",
              "_has_security_dependencies",
              "_has_test_frameworks",
              "_has_complex_code_structure",
              "_has_many_dependencies",
              "_get_skill_purpose",
              "_get_skill_inputs",
              "_get_skill_outputs",
              "_get_skill_dependencies"
            ],
            "method_count": 11
          }
        ],
        "imports": [
          {
            "type": "import",
            "modules": [
              "os"
            ],
            "line_number": 5
          },
          {
            "type": "import",
            "modules": [
              "json"
            ],
            "line_number": 6
          },
          {
            "type": "import",
            "modules": [
              "logging"
            ],
            "line_number": 7
          },
          {
            "type": "from_import",
            "module": "typing",
            "names": [
              "Dict",
              "List",
              "Any",
              "Optional"
            ],
            "level": 0,
            "line_number": 8
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 9
          },
          {
            "type": "from_import",
            "module": "llm.model_manager",
            "names": [
              "ModelManager"
            ],
            "level": 0,
            "line_number": 10
          },
          {
            "type": "from_import",
            "module": "llm.prompt_templates",
            "names": [
              "SKILL_GENERATION_PROMPT"
            ],
            "level": 0,
            "line_number": 11
          },
          {
            "type": "from_import",
            "module": "skill_templates",
            "names": [
              "get_code_analysis_skill_template",
              "get_performance_optimization_skill_template",
              "get_generic_skill_template"
            ],
            "level": 1,
            "line_number": 12
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 35,
          "function_count": 11,
          "class_count": 1,
          "import_count": 8,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.getLogger(attrname='getLogger',\n                    expr=<Name.logging l.18 at 0x25799db3350>)",
              "type": "Instance of logging.RootLogger"
            },
            {
              "function": "Attribute._load_skill_templates(attrname='_load_skill_templates',\n                                expr=<Name.self l.25 at 0x2579b0aa2d0>)",
              "type": "Dict.dict(items=[ ( <Const.str l.30 at 0x2579b0a8ed0>,\n              <Call l.30 at 0x2579b0a9210>),\n            ( <Const.str l.31 at 0x2579b0a8d90>,\n              <Call l.31 at 0x2579b0a8f50>),\n            ( <Const.str l.32 at 0x2579b0a8b50>,\n              <Call l.32 at 0x2579b0a8e50>),\n            ( <Const.str l.33 at 0x2579b0a8810>,\n              <Call l.33 at 0x2579b0a8b10>),\n            ( <Const.str l.34 at 0x2579b0a8090>,\n              <Call l.34 at 0x2579b0a8710>),\n            ( <Const.str l.35 at 0x2579b0a9b10>,\n              <Call l.35 at 0x2579b0a8450>),\n            ( <Const.str l.36 at 0x2579b0aaa90>,\n              <Call l.36 at 0x2579b0a9b90>),\n            ( <Const.str l.37 at 0x2579b0a9250>,\n              <Call l.37 at 0x2579b0a9f90>)])"
            },
            {
              "function": "Name.get_code_analysis_skill_template(name='get_code_analysis_skill_template')",
              "type": "Uninferable"
            },
            {
              "function": "Name.get_performance_optimization_skill_template(name='get_performance_optimization_skill_template')",
              "type": "Uninferable"
            },
            {
              "function": "Name.get_generic_skill_template(name='get_generic_skill_template')",
              "type": "Uninferable"
            },
            {
              "function": "Name.get_generic_skill_template(name='get_generic_skill_template')",
              "type": "Uninferable"
            },
            {
              "function": "Name.get_generic_skill_template(name='get_generic_skill_template')",
              "type": "Uninferable"
            },
            {
              "function": "Name.get_generic_skill_template(name='get_generic_skill_template')",
              "type": "Uninferable"
            },
            {
              "function": "Name.get_generic_skill_template(name='get_generic_skill_template')",
              "type": "Uninferable"
            },
            {
              "function": "Name.get_generic_skill_template(name='get_generic_skill_template')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.43 at 0x2579b0a85d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.45 at 0x2579b0ab550>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._determine_required_skills(attrname='_determine_required_skills',\n                                     expr=<Name.self l.49 at 0x2579b0a9c50>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.52 at 0x2579b0a84d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._generate_skill_code(attrname='_generate_skill_code',\n                               expr=<Name.self l.54 at 0x2579b0aba90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._save_skill_file(attrname='_save_skill_file',\n                           expr=<Name.self l.61 at 0x2579b0a9850>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.73 at 0x2579aa5b950>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.79 at 0x257973bfe90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.90 at 0x2579aa52fd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.keys(attrname='keys',\n               expr=<Name.frameworks l.91 at 0x2579aa53910>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.95 at 0x2579aa53790>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._has_security_dependencies(attrname='_has_security_dependencies',\n                                     expr=<Name.self l.96 at 0x2579aa53e90>)",
              "type": "Const.bool(value=True,\n           kind=None)"
            },
            {
              "function": "Attribute._has_test_frameworks(attrname='_has_test_frameworks',\n                               expr=<Name.self l.100 at 0x2579babed90>)",
              "type": "Const.bool(value=True,\n           kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.104 at 0x2579babf810>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._has_complex_code_structure(attrname='_has_complex_code_structure',\n                                      expr=<Name.self l.109 at 0x2579babf410>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._has_many_dependencies(attrname='_has_many_dependencies',\n                                 expr=<Name.self l.113 at 0x2579babfb90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Name.dependencies l.126 at 0x2579babe7d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.dep l.129 at 0x2579babcc10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.135 at 0x2579ba83e10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Name.dependencies l.138 at 0x2579ba83ad0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.dep l.141 at 0x2579ba82a90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.147 at 0x2579ba83550>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.148 at 0x2579ba80910>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Name.dependencies l.157 at 0x2579ba81f50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.format(attrname='format',\n                 expr=<Name.SKILL_GENERATION_PROMPT l.170 at 0x2579ba78850>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.dumps(attrname='dumps',\n                expr=<Name.json l.171 at 0x2579ba7a850>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._get_skill_purpose(attrname='_get_skill_purpose',\n                             expr=<Name.self l.173 at 0x2579ba7ab90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._get_skill_inputs(attrname='_get_skill_inputs',\n                            expr=<Name.self l.174 at 0x2579ba7b9d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._get_skill_outputs(attrname='_get_skill_outputs',\n                             expr=<Name.self l.175 at 0x2579ba7aa10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._get_skill_dependencies(attrname='_get_skill_dependencies',\n                                  expr=<Name.self l.176 at 0x2579ba7a510>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get_model(attrname='get_model',\n                    expr=<Attribute.model_manager l.180 at 0x2579ba7b3d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.generate_response(attrname='generate_response',\n                            expr=<Name.model l.181 at 0x2579ba7be90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.format(attrname='format',\n                 expr=<Name.template l.184 at 0x2579ba79990>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.title(attrname='title',\n                expr=<Name.skill_type l.186 at 0x2579ba7af50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.194 at 0x2579ba7ac50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.title(attrname='title',\n                expr=<Name.skill_type l.198 at 0x2579ba79450>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.mkdir(attrname='mkdir',\n                expr=<Name.generated_dir l.208 at 0x2579ba782d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.write(attrname='write',\n                expr=<Name.f l.216 at 0x2579b9f9a90>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.221 at 0x2579b9fa8d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.284 at 0x2579b901590>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.keys(attrname='keys',\n               expr=<Name.frameworks l.285 at 0x2579b901a90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.framework l.286 at 0x2579b901e10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.append(attrname='append',\n                 expr=<Name.deps l.287 at 0x2579b901c10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.framework l.287 at 0x2579b902550>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.framework l.288 at 0x2579b901fd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.append(attrname='append',\n                 expr=<Name.deps l.289 at 0x2579b900a90>)",
              "type": "Uninferable"
            }
          ],
          "unresolved_imports": [
            "os",
            "json",
            "logging"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": "generators\\skill_templates.py",
        "language": "python",
        "file_size": 13428,
        "line_count": 385,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "get_code_analysis_skill_template",
            "line_number": 5,
            "parameters": [],
            "defaults": 0,
            "decorators": [],
            "docstring": "Template für Code-Analysis-Skill",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "get_performance_optimization_skill_template",
            "line_number": 171,
            "parameters": [],
            "defaults": 0,
            "decorators": [],
            "docstring": "Template für Performance-Optimization-Skill",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "get_generic_skill_template",
            "line_number": 332,
            "parameters": [],
            "defaults": 0,
            "decorators": [],
            "docstring": "Template für generischen Skill",
            "is_async": false,
            "complexity": 1
          }
        ],
        "classes": [],
        "imports": [],
        "complexity_metrics": {
          "cyclomatic_complexity": 3,
          "function_count": 3,
          "class_count": 0,
          "import_count": 0,
          "nested_depth": 0
        },
        "code_issues": [
          {
            "type": "wildcard_import",
            "severity": "medium",
            "line": 0,
            "message": "Wildcard-Import (import *) sollte vermieden werden",
            "file": "generators\\skill_templates.py"
          }
        ],
        "astroid_analysis": {
          "inferred_types": [],
          "unresolved_imports": [],
          "code_smells": []
        }
      },
      {
        "file_path": "generators\\workflow_generator.py",
        "language": "python",
        "file_size": 41991,
        "line_count": 1126,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "__init__",
            "line_number": 17,
            "parameters": [
              "self",
              "model_manager"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_load_workflow_templates",
            "line_number": 22,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Lädt Workflow-Templates für verschiedene Projekt-Typen",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_determine_required_workflows",
            "line_number": 75,
            "parameters": [
              "self",
              "analysis_results"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Bestimmt welche Workflow-Typen basierend auf der Analyse benötigt werden",
            "is_async": false,
            "complexity": 6
          },
          {
            "name": "_has_deployment_configs",
            "line_number": 106,
            "parameters": [
              "self",
              "analysis_results"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Prüft ob Deployment-Configs vorhanden sind",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_has_security_dependencies",
            "line_number": 113,
            "parameters": [
              "self",
              "dependencies"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Prüft ob Security-relevante Dependencies vorhanden sind",
            "is_async": false,
            "complexity": 6
          },
          {
            "name": "_get_project_frameworks",
            "line_number": 184,
            "parameters": [
              "self",
              "analysis_results"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Gibt die erkannten Frameworks zurück",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_get_project_dependencies",
            "line_number": 189,
            "parameters": [
              "self",
              "analysis_results"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Gibt die wichtigsten Dependencies zurück",
            "is_async": false,
            "complexity": 4
          },
          {
            "name": "_get_testing_workflow_template",
            "line_number": 200,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Template für Testing-Workflow",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_get_build_workflow_template",
            "line_number": 402,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Template für Build-Workflow",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_get_deployment_workflow_template",
            "line_number": 574,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Template für Deployment-Workflow",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_get_ci_cd_workflow_template",
            "line_number": 687,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Template für CI/CD-Workflow",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_get_security_workflow_template",
            "line_number": 846,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Template für Security-Workflow",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_get_performance_workflow_template",
            "line_number": 959,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Template für Performance-Workflow",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_get_generic_workflow_template",
            "line_number": 1073,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Template für generischen Workflow",
            "is_async": false,
            "complexity": 1
          }
        ],
        "classes": [
          {
            "name": "WorkflowGenerator",
            "line_number": 16,
            "bases": [],
            "decorators": [],
            "docstring": null,
            "methods": [
              "__init__",
              "_load_workflow_templates",
              "_determine_required_workflows",
              "_has_deployment_configs",
              "_has_security_dependencies",
              "_get_project_frameworks",
              "_get_project_dependencies",
              "_get_testing_workflow_template",
              "_get_build_workflow_template",
              "_get_deployment_workflow_template",
              "_get_ci_cd_workflow_template",
              "_get_security_workflow_template",
              "_get_performance_workflow_template",
              "_get_generic_workflow_template"
            ],
            "method_count": 14
          }
        ],
        "imports": [
          {
            "type": "import",
            "modules": [
              "os"
            ],
            "line_number": 5
          },
          {
            "type": "import",
            "modules": [
              "json"
            ],
            "line_number": 6
          },
          {
            "type": "import",
            "modules": [
              "logging"
            ],
            "line_number": 7
          },
          {
            "type": "from_import",
            "module": "typing",
            "names": [
              "Dict",
              "List",
              "Any",
              "Optional"
            ],
            "level": 0,
            "line_number": 8
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 9
          },
          {
            "type": "from_import",
            "module": "llm.model_manager",
            "names": [
              "ModelManager"
            ],
            "level": 0,
            "line_number": 10
          },
          {
            "type": "from_import",
            "module": "llm.prompt_templates",
            "names": [
              "WORKFLOW_GENERATION_PROMPT"
            ],
            "level": 0,
            "line_number": 11
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 27,
          "function_count": 14,
          "class_count": 1,
          "import_count": 7,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.getLogger(attrname='getLogger',\n                    expr=<Name.logging l.13 at 0x2579b932850>)",
              "type": "Instance of logging.RootLogger"
            },
            {
              "function": "Attribute._load_workflow_templates(attrname='_load_workflow_templates',\n                                   expr=<Name.self l.20 at 0x2579b930210>)",
              "type": "Dict.dict(items=[ ( <Const.str l.25 at 0x2579b932610>,\n              <Call l.25 at 0x2579b931650>),\n            ( <Const.str l.26 at 0x2579b932450>,\n              <Call l.26 at 0x2579b932510>),\n            ( <Const.str l.27 at 0x2579b9322d0>,\n              <Call l.27 at 0x2579b932390>),\n            ( <Const.str l.28 at 0x2579b931fd0>,\n              <Call l.28 at 0x2579b931f10>),\n            ( <Const.str l.29 at 0x2579b932e50>,\n              <Call l.29 at 0x2579b932150>),\n            ( <Const.str l.30 at 0x2579b932c90>,\n              <Call l.30 at 0x2579b932d90>)])"
            },
            {
              "function": "Attribute._get_testing_workflow_template(attrname='_get_testing_workflow_template',\n                                         expr=<Name.self l.25 at 0x2579b931e10>)",
              "type": "Const.str(value=('\"\"\"\\n'\n           '{workflow_class} - Automatisch generierter Testing-Workflow\\n'\n           '\"\"\"\\n'\n           '\\n'\n           'import asyncio\\n'\n           'import logging\\n'\n           'import subprocess\\n'\n           'from typing import Dict, List, Any, Optional\\n'\n           'from pathlib import Path\\n'\n           'import json\\n'\n           '\\n'\n           'logger = logging.getLogger(__name__)\\n'\n           '\\n'\n           '\\n'\n           'class {workflow_class}:\\n'\n           '    def __init__(self, project_path: str):\\n'\n           '        self.project_path = Path(project_path)\\n'\n           '        self.project_name = \"{project_name}\"\\n'\n           '        self.workflow_type = \"testing\"\\n'\n           '        self.test_frameworks = '\n           'self._detect_test_frameworks()\\n'\n           '\\n'\n           '    def _detect_test_frameworks(self) -> List[str]:\\n'\n           '        \"\"\"Erkennt verfügbare Test-Frameworks\"\"\"\\n'\n           '        frameworks = []\\n'\n           '\\n'\n           '        # Python\\n'\n           '        if (self.project_path / '\n           '\"requirements.txt\").exists():\\n'\n           '            with open(self.project_path / \"requirements.txt\", '\n           \"'r') as f:\\n\"\n           '                content = f.read()\\n'\n           \"                if 'pytest' in content:\\n\"\n           \"                    frameworks.append('pytest')\\n\"\n           \"                if 'unittest' in content:\\n\"\n           \"                    frameworks.append('unittest')\\n\"\n           '\\n'\n           '        # Node.js\\n'\n           '        if (self.project_path / \"package.json\").exists():\\n'\n           '            with open(self.project_path / \"package.json\", '\n           \"'r') as f:\\n\"\n           '                package_data = json.load(f)\\n'\n           \"                deps = package_data.get('dependencies', {{}}) \"\n           \"| package_data.get('devDependencies', {{}})\\n\"\n           \"                if 'jest' in deps:\\n\"\n           \"                    frameworks.append('jest')\\n\"\n           \"                if 'mocha' in deps:\\n\"\n           \"                    frameworks.append('mocha')\\n\"\n           \"                if 'vitest' in deps:\\n\"\n           \"                    frameworks.append('vitest')\\n\"\n           '\\n'\n           '        return frameworks\\n'\n           '\\n'\n           '    async def execute(self) -> Dict[str, Any]:\\n'\n           '        \"\"\"Führt den Testing-Workflow aus\"\"\"\\n'\n           '        logger.info(f\"🧪 Starting testing workflow for '\n           '{{self.project_name}}\")\\n'\n           '\\n'\n           '        results = {{\\n'\n           '            \"workflow_type\": \"testing\",\\n'\n           '            \"frameworks_detected\": self.test_frameworks,\\n'\n           '            \"tests_run\": 0,\\n'\n           '            \"tests_passed\": 0,\\n'\n           '            \"tests_failed\": 0,\\n'\n           '            \"coverage_percentage\": 0,\\n'\n           '            \"execution_time\": 0\\n'\n           '        }}\\n'\n           '\\n'\n           '        try:\\n'\n           '            # Führe Tests für jedes erkannte Framework aus\\n'\n           '            for framework in self.test_frameworks:\\n'\n           '                framework_results = await '\n           'self._run_framework_tests(framework)\\n'\n           '                results.update(framework_results)\\n'\n           '\\n'\n           '            # Generiere Coverage-Report\\n'\n           '            coverage_results = await '\n           'self._generate_coverage_report()\\n'\n           '            results.update(coverage_results)\\n'\n           '\\n'\n           '            logger.info(f\"✅ Testing workflow completed: '\n           \"{{results['tests_passed']}} passed, \"\n           '{{results[\\'tests_failed\\']}} failed\")\\n'\n           '\\n'\n           '        except Exception as e:\\n'\n           '            logger.error(f\"❌ Error in testing workflow: '\n           '{{e}}\")\\n'\n           '            results[\"error\"] = str(e)\\n'\n           '\\n'\n           '        return results\\n'\n           '\\n'\n           '    async def _run_framework_tests(self, framework: str) -> '\n           'Dict[str, Any]:\\n'\n           '        \"\"\"Führt Tests für ein spezifisches Framework aus\"\"\"\\n'\n           '        logger.info(f\"🔧 Running {{framework}} tests...\")\\n'\n           '\\n'\n           '        results = {{\"tests_run\": 0, \"tests_passed\": 0, '\n           '\"tests_failed\": 0}}\\n'\n           '\\n'\n           '        try:\\n'\n           \"            if framework == 'pytest':\\n\"\n           '                result = subprocess.run(\\n'\n           '                    [\"python\", \"-m\", \"pytest\", \"-v\", '\n           '\"--tb=short\"],\\n'\n           '                    cwd=self.project_path,\\n'\n           '                    capture_output=True,\\n'\n           '                    text=True,\\n'\n           '                    timeout=120\\n'\n           '                )\\n'\n           '                results[\"tests_run\"] = '\n           'self._parse_pytest_output(result.stdout)\\n'\n           '                results[\"tests_passed\"] = result.returncode '\n           '== 0\\n'\n           '\\n'\n           \"            elif framework == 'jest':\\n\"\n           '                result = subprocess.run(\\n'\n           '                    [\"npm\", \"test\"],\\n'\n           '                    cwd=self.project_path,\\n'\n           '                    capture_output=True,\\n'\n           '                    text=True,\\n'\n           '                    timeout=120\\n'\n           '                )\\n'\n           '                results[\"tests_run\"] = '\n           'self._parse_jest_output(result.stdout)\\n'\n           '                results[\"tests_passed\"] = result.returncode '\n           '== 0\\n'\n           '\\n'\n           \"            elif framework == 'mocha':\\n\"\n           '                result = subprocess.run(\\n'\n           '                    [\"npm\", \"test\"],\\n'\n           '                    cwd=self.project_path,\\n'\n           '                    capture_output=True,\\n'\n           '                    text=True,\\n'\n           '                    timeout=120\\n'\n           '                )\\n'\n           '                results[\"tests_run\"] = '\n           'self._parse_mocha_output(result.stdout)\\n'\n           '                results[\"tests_passed\"] = result.returncode '\n           '== 0\\n'\n           '\\n'\n           '        except subprocess.TimeoutExpired:\\n'\n           '            logger.warning(f\"⚠️ {{framework}} tests timed '\n           'out\")\\n'\n           '            results[\"error\"] = \"Tests timed out\"\\n'\n           '        except Exception as e:\\n'\n           '            logger.error(f\"❌ Error running {{framework}} '\n           'tests: {{e}}\")\\n'\n           '            results[\"error\"] = str(e)\\n'\n           '\\n'\n           '        return results\\n'\n           '\\n'\n           '    def _parse_pytest_output(self, output: str) -> int:\\n'\n           '        \"\"\"Parst pytest Output\"\"\"\\n'\n           \"        lines = output.split('\\\\n')\\n\"\n           '        for line in lines:\\n'\n           \"            if 'passed' in line and 'failed' in line:\\n\"\n           '                # Extrahiere Anzahl der Tests\\n'\n           '                import re\\n'\n           \"                match = re.search(r'(\\\\d+) passed', line)\\n\"\n           '                if match:\\n'\n           '                    return int(match.group(1))\\n'\n           '        return 0\\n'\n           '\\n'\n           '    def _parse_jest_output(self, output: str) -> int:\\n'\n           '        \"\"\"Parst Jest Output\"\"\"\\n'\n           \"        lines = output.split('\\\\n')\\n\"\n           '        for line in lines:\\n'\n           \"            if 'Tests:' in line:\\n\"\n           '                import re\\n'\n           \"                match = re.search(r'(\\\\d+) passed', line)\\n\"\n           '                if match:\\n'\n           '                    return int(match.group(1))\\n'\n           '        return 0\\n'\n           '\\n'\n           '    def _parse_mocha_output(self, output: str) -> int:\\n'\n           '        \"\"\"Parst Mocha Output\"\"\"\\n'\n           \"        lines = output.split('\\\\n')\\n\"\n           '        for line in lines:\\n'\n           \"            if 'passing' in line:\\n\"\n           '                import re\\n'\n           \"                match = re.search(r'(\\\\d+) passing', line)\\n\"\n           '                if match:\\n'\n           '                    return int(match.group(1))\\n'\n           '        return 0\\n'\n           '\\n'\n           '    async def _generate_coverage_report(self) -> Dict[str, '\n           'Any]:\\n'\n           '        \"\"\"Generiert Coverage-Report\"\"\"\\n'\n           '        logger.info(\"📊 Generating coverage report...\")\\n'\n           '\\n'\n           '        coverage_results = {{\"coverage_percentage\": 0, '\n           '\"coverage_details\": {{}}}}\\n'\n           '\\n'\n           '        try:\\n'\n           '            # Versuche pytest-cov\\n'\n           '            result = subprocess.run(\\n'\n           '                [\"python\", \"-m\", \"pytest\", \"--cov=.\", '\n           '\"--cov-report=json\"],\\n'\n           '                cwd=self.project_path,\\n'\n           '                capture_output=True,\\n'\n           '                text=True,\\n'\n           '                timeout=60\\n'\n           '            )\\n'\n           '\\n'\n           '            if result.returncode == 0:\\n'\n           '                # Lese Coverage-Daten\\n'\n           '                coverage_file = self.project_path / '\n           '\"coverage.json\"\\n'\n           '                if coverage_file.exists():\\n'\n           \"                    with open(coverage_file, 'r') as f:\\n\"\n           '                        coverage_data = json.load(f)\\n'\n           '                        '\n           'coverage_results[\"coverage_percentage\"] = '\n           'coverage_data.get(\"totals\", {{}}).get(\"percent_covered\", 0)\\n'\n           '\\n'\n           '        except Exception as e:\\n'\n           '            logger.warning(f\"⚠️ Could not generate coverage '\n           'report: {{e}}\")\\n'\n           '\\n'\n           '        return coverage_results\\n'\n           '\\n'\n           '    # Generierte Workflow-Schritte vom LLM\\n'\n           '    {generated_steps}\\n'\n           '\\n'\n           '    async def cleanup(self):\\n'\n           '        \"\"\"Bereinigt Ressourcen\"\"\"\\n'\n           '        logger.info(f\"🧹 Cleaning up {workflow_class}\")\\n'),\n          kind=None)"
            },
            {
              "function": "Attribute._get_build_workflow_template(attrname='_get_build_workflow_template',\n                                       expr=<Name.self l.26 at 0x2579b932410>)",
              "type": "Const.str(value=('\"\"\"\\n'\n           '{workflow_class} - Automatisch generierter Build-Workflow\\n'\n           '\"\"\"\\n'\n           '\\n'\n           'import asyncio\\n'\n           'import logging\\n'\n           'import subprocess\\n'\n           'from typing import Dict, List, Any, Optional\\n'\n           'from pathlib import Path\\n'\n           'import json\\n'\n           '\\n'\n           'logger = logging.getLogger(__name__)\\n'\n           '\\n'\n           '\\n'\n           'class {workflow_class}:\\n'\n           '    def __init__(self, project_path: str):\\n'\n           '        self.project_path = Path(project_path)\\n'\n           '        self.project_name = \"{project_name}\"\\n'\n           '        self.workflow_type = \"build\"\\n'\n           '        self.build_tools = self._detect_build_tools()\\n'\n           '\\n'\n           '    def _detect_build_tools(self) -> List[str]:\\n'\n           '        \"\"\"Erkennt verfügbare Build-Tools\"\"\"\\n'\n           '        tools = []\\n'\n           '\\n'\n           '        # Node.js Build-Tools\\n'\n           '        if (self.project_path / \"package.json\").exists():\\n'\n           '            with open(self.project_path / \"package.json\", '\n           \"'r') as f:\\n\"\n           '                package_data = json.load(f)\\n'\n           \"                deps = package_data.get('dependencies', {{}}) \"\n           \"| package_data.get('devDependencies', {{}})\\n\"\n           '\\n'\n           \"                if 'webpack' in deps:\\n\"\n           \"                    tools.append('webpack')\\n\"\n           \"                if 'vite' in deps:\\n\"\n           \"                    tools.append('vite')\\n\"\n           \"                if 'rollup' in deps:\\n\"\n           \"                    tools.append('rollup')\\n\"\n           \"                if 'parcel' in deps:\\n\"\n           \"                    tools.append('parcel')\\n\"\n           '\\n'\n           '        # Python Build-Tools\\n'\n           '        if (self.project_path / \"setup.py\").exists():\\n'\n           \"            tools.append('setuptools')\\n\"\n           '        if (self.project_path / \"pyproject.toml\").exists():\\n'\n           \"            tools.append('poetry')\\n\"\n           '\\n'\n           '        return tools\\n'\n           '\\n'\n           '    async def execute(self) -> Dict[str, Any]:\\n'\n           '        \"\"\"Führt den Build-Workflow aus\"\"\"\\n'\n           '        logger.info(f\"🔨 Starting build workflow for '\n           '{{self.project_name}}\")\\n'\n           '\\n'\n           '        results = {{\\n'\n           '            \"workflow_type\": \"build\",\\n'\n           '            \"build_tools_detected\": self.build_tools,\\n'\n           '            \"build_successful\": False,\\n'\n           '            \"build_output\": \"\",\\n'\n           '            \"bundle_size\": 0,\\n'\n           '            \"execution_time\": 0\\n'\n           '        }}\\n'\n           '\\n'\n           '        try:\\n'\n           '            # Führe Build für jedes erkannte Tool aus\\n'\n           '            for tool in self.build_tools:\\n'\n           '                tool_results = await '\n           'self._run_build_tool(tool)\\n'\n           '                results.update(tool_results)\\n'\n           '\\n'\n           '            # Analysiere Bundle-Größe\\n'\n           '            bundle_analysis = await '\n           'self._analyze_bundle_size()\\n'\n           '            results.update(bundle_analysis)\\n'\n           '\\n'\n           '            logger.info(f\"✅ Build workflow completed: '\n           \"{{'successful' if results['build_successful'] else \"\n           '\\'failed\\'}}\")\\n'\n           '\\n'\n           '        except Exception as e:\\n'\n           '            logger.error(f\"❌ Error in build workflow: '\n           '{{e}}\")\\n'\n           '            results[\"error\"] = str(e)\\n'\n           '\\n'\n           '        return results\\n'\n           '\\n'\n           '    async def _run_build_tool(self, tool: str) -> Dict[str, '\n           'Any]:\\n'\n           '        \"\"\"Führt Build für ein spezifisches Tool aus\"\"\"\\n'\n           '        logger.info(f\"🔧 Running {{tool}} build...\")\\n'\n           '\\n'\n           '        results = {{\"build_successful\": False, '\n           '\"build_output\": \"\"}}\\n'\n           '\\n'\n           '        try:\\n'\n           \"            if tool == 'webpack':\\n\"\n           '                result = subprocess.run(\\n'\n           '                    [\"npm\", \"run\", \"build\"],\\n'\n           '                    cwd=self.project_path,\\n'\n           '                    capture_output=True,\\n'\n           '                    text=True,\\n'\n           '                    timeout=300\\n'\n           '                )\\n'\n           '                results[\"build_output\"] = result.stdout + '\n           'result.stderr\\n'\n           '                results[\"build_successful\"] = '\n           'result.returncode == 0\\n'\n           '\\n'\n           \"            elif tool == 'vite':\\n\"\n           '                result = subprocess.run(\\n'\n           '                    [\"npm\", \"run\", \"build\"],\\n'\n           '                    cwd=self.project_path,\\n'\n           '                    capture_output=True,\\n'\n           '                    text=True,\\n'\n           '                    timeout=300\\n'\n           '                )\\n'\n           '                results[\"build_output\"] = result.stdout + '\n           'result.stderr\\n'\n           '                results[\"build_successful\"] = '\n           'result.returncode == 0\\n'\n           '\\n'\n           \"            elif tool == 'setuptools':\\n\"\n           '                result = subprocess.run(\\n'\n           '                    [\"python\", \"setup.py\", \"build\"],\\n'\n           '                    cwd=self.project_path,\\n'\n           '                    capture_output=True,\\n'\n           '                    text=True,\\n'\n           '                    timeout=300\\n'\n           '                )\\n'\n           '                results[\"build_output\"] = result.stdout + '\n           'result.stderr\\n'\n           '                results[\"build_successful\"] = '\n           'result.returncode == 0\\n'\n           '\\n'\n           '        except subprocess.TimeoutExpired:\\n'\n           '            logger.warning(f\"⚠️ {{tool}} build timed out\")\\n'\n           '            results[\"error\"] = \"Build timed out\"\\n'\n           '        except Exception as e:\\n'\n           '            logger.error(f\"❌ Error running {{tool}} build: '\n           '{{e}}\")\\n'\n           '            results[\"error\"] = str(e)\\n'\n           '\\n'\n           '        return results\\n'\n           '\\n'\n           '    async def _analyze_bundle_size(self) -> Dict[str, Any]:\\n'\n           '        \"\"\"Analysiert Bundle-Größe\"\"\"\\n'\n           '        logger.info(\"📦 Analyzing bundle size...\")\\n'\n           '\\n'\n           '        bundle_results = {{\"bundle_size\": 0, \"bundle_files\": '\n           '[]}}\\n'\n           '\\n'\n           '        try:\\n'\n           '            # Finde Build-Output-Ordner\\n'\n           \"            build_dirs = ['dist', 'build', 'out', 'public']\\n\"\n           '\\n'\n           '            for build_dir in build_dirs:\\n'\n           '                build_path = self.project_path / build_dir\\n'\n           '                if build_path.exists():\\n'\n           '                    total_size = 0\\n'\n           '                    files = []\\n'\n           '\\n'\n           '                    for file_path in build_path.rglob(\"*\"):\\n'\n           '                        if file_path.is_file():\\n'\n           '                            file_size = '\n           'file_path.stat().st_size\\n'\n           '                            total_size += file_size\\n'\n           '                            files.append({{\\n'\n           '                                \"name\": '\n           'str(file_path.relative_to(build_path)),\\n'\n           '                                \"size\": file_size\\n'\n           '                            }})\\n'\n           '\\n'\n           '                    bundle_results[\"bundle_size\"] = '\n           'total_size\\n'\n           '                    bundle_results[\"bundle_files\"] = files\\n'\n           '                    break\\n'\n           '\\n'\n           '        except Exception as e:\\n'\n           '            logger.warning(f\"⚠️ Could not analyze bundle '\n           'size: {{e}}\")\\n'\n           '\\n'\n           '        return bundle_results\\n'\n           '\\n'\n           '    # Generierte Workflow-Schritte vom LLM\\n'\n           '    {generated_steps}\\n'\n           '\\n'\n           '    async def cleanup(self):\\n'\n           '        \"\"\"Bereinigt Ressourcen\"\"\"\\n'\n           '        logger.info(f\"🧹 Cleaning up {workflow_class}\")\\n'),\n          kind=None)"
            },
            {
              "function": "Attribute._get_deployment_workflow_template(attrname='_get_deployment_workflow_template',\n                                            expr=<Name.self l.27 at 0x2579b932250>)",
              "type": "Const.str(value=('\"\"\"\\n'\n           '{workflow_class} - Automatisch generierter '\n           'Deployment-Workflow\\n'\n           '\"\"\"\\n'\n           '\\n'\n           'import asyncio\\n'\n           'import logging\\n'\n           'import subprocess\\n'\n           'from typing import Dict, List, Any, Optional\\n'\n           'from pathlib import Path\\n'\n           'import yaml\\n'\n           '\\n'\n           'logger = logging.getLogger(__name__)\\n'\n           '\\n'\n           '\\n'\n           'class {workflow_class}:\\n'\n           '    def __init__(self, project_path: str):\\n'\n           '        self.project_path = Path(project_path)\\n'\n           '        self.project_name = \"{project_name}\"\\n'\n           '        self.workflow_type = \"deployment\"\\n'\n           '        self.deployment_configs = '\n           'self._detect_deployment_configs()\\n'\n           '\\n'\n           '    def _detect_deployment_configs(self) -> List[str]:\\n'\n           '        \"\"\"Erkennt verfügbare Deployment-Configs\"\"\"\\n'\n           '        configs = []\\n'\n           '\\n'\n           '        if (self.project_path / \"Dockerfile\").exists():\\n'\n           \"            configs.append('docker')\\n\"\n           '\\n'\n           '        if (self.project_path / '\n           '\"docker-compose.yml\").exists():\\n'\n           \"            configs.append('docker-compose')\\n\"\n           '\\n'\n           '        if any((self.project_path / \"k8s\").exists(), '\n           '(self.project_path / \"kubernetes\").exists()):\\n'\n           \"            configs.append('kubernetes')\\n\"\n           '\\n'\n           '        return configs\\n'\n           '\\n'\n           '    async def execute(self) -> Dict[str, Any]:\\n'\n           '        \"\"\"Führt den Deployment-Workflow aus\"\"\"\\n'\n           '        logger.info(f\"🚀 Starting deployment workflow for '\n           '{{self.project_name}}\")\\n'\n           '\\n'\n           '        results = {{\\n'\n           '            \"workflow_type\": \"deployment\",\\n'\n           '            \"deployment_configs_detected\": '\n           'self.deployment_configs,\\n'\n           '            \"deployment_successful\": False,\\n'\n           '            \"deployment_output\": \"\",\\n'\n           '            \"deployment_url\": \"\",\\n'\n           '            \"execution_time\": 0\\n'\n           '        }}\\n'\n           '\\n'\n           '        try:\\n'\n           '            # Führe Deployment für jede erkannte Config aus\\n'\n           '            for config in self.deployment_configs:\\n'\n           '                config_results = await '\n           'self._run_deployment_config(config)\\n'\n           '                results.update(config_results)\\n'\n           '\\n'\n           '            logger.info(f\"✅ Deployment workflow completed: '\n           \"{{'successful' if results['deployment_successful'] else \"\n           '\\'failed\\'}}\")\\n'\n           '\\n'\n           '        except Exception as e:\\n'\n           '            logger.error(f\"❌ Error in deployment workflow: '\n           '{{e}}\")\\n'\n           '            results[\"error\"] = str(e)\\n'\n           '\\n'\n           '        return results\\n'\n           '\\n'\n           '    async def _run_deployment_config(self, config: str) -> '\n           'Dict[str, Any]:\\n'\n           '        \"\"\"Führt Deployment für eine spezifische Config '\n           'aus\"\"\"\\n'\n           '        logger.info(f\"🔧 Running {{config}} deployment...\")\\n'\n           '\\n'\n           '        results = {{\"deployment_successful\": False, '\n           '\"deployment_output\": \"\"}}\\n'\n           '\\n'\n           '        try:\\n'\n           \"            if config == 'docker':\\n\"\n           '                # Docker Build\\n'\n           '                build_result = subprocess.run(\\n'\n           '                    [\"docker\", \"build\", \"-t\", '\n           'f\"{{self.project_name}}:latest\", \".\"],\\n'\n           '                    cwd=self.project_path,\\n'\n           '                    capture_output=True,\\n'\n           '                    text=True,\\n'\n           '                    timeout=300\\n'\n           '                )\\n'\n           '                results[\"deployment_output\"] = '\n           'build_result.stdout + build_result.stderr\\n'\n           '                results[\"deployment_successful\"] = '\n           'build_result.returncode == 0\\n'\n           '\\n'\n           \"            elif config == 'docker-compose':\\n\"\n           '                # Docker Compose Up\\n'\n           '                compose_result = subprocess.run(\\n'\n           '                    [\"docker-compose\", \"up\", \"-d\"],\\n'\n           '                    cwd=self.project_path,\\n'\n           '                    capture_output=True,\\n'\n           '                    text=True,\\n'\n           '                    timeout=300\\n'\n           '                )\\n'\n           '                results[\"deployment_output\"] = '\n           'compose_result.stdout + compose_result.stderr\\n'\n           '                results[\"deployment_successful\"] = '\n           'compose_result.returncode == 0\\n'\n           '\\n'\n           '        except subprocess.TimeoutExpired:\\n'\n           '            logger.warning(f\"⚠️ {{config}} deployment timed '\n           'out\")\\n'\n           '            results[\"error\"] = \"Deployment timed out\"\\n'\n           '        except Exception as e:\\n'\n           '            logger.error(f\"❌ Error running {{config}} '\n           'deployment: {{e}}\")\\n'\n           '            results[\"error\"] = str(e)\\n'\n           '\\n'\n           '        return results\\n'\n           '\\n'\n           '    # Generierte Workflow-Schritte vom LLM\\n'\n           '    {generated_steps}\\n'\n           '\\n'\n           '    async def cleanup(self):\\n'\n           '        \"\"\"Bereinigt Ressourcen\"\"\"\\n'\n           '        logger.info(f\"🧹 Cleaning up {workflow_class}\")\\n'),\n          kind=None)"
            },
            {
              "function": "Attribute._get_ci_cd_workflow_template(attrname='_get_ci_cd_workflow_template',\n                                       expr=<Name.self l.28 at 0x2579b931e90>)",
              "type": "Const.str(value=('\"\"\"\\n'\n           '{workflow_class} - Automatisch generierter CI/CD-Workflow\\n'\n           '\"\"\"\\n'\n           '\\n'\n           'import asyncio\\n'\n           'import logging\\n'\n           'from typing import Dict, List, Any, Optional\\n'\n           'from pathlib import Path\\n'\n           'import yaml\\n'\n           '\\n'\n           'logger = logging.getLogger(__name__)\\n'\n           '\\n'\n           '\\n'\n           'class {workflow_class}:\\n'\n           '    def __init__(self, project_path: str):\\n'\n           '        self.project_path = Path(project_path)\\n'\n           '        self.project_name = \"{project_name}\"\\n'\n           '        self.workflow_type = \"ci_cd\"\\n'\n           '        self.ci_platforms = self._detect_ci_platforms()\\n'\n           '\\n'\n           '    def _detect_ci_platforms(self) -> List[str]:\\n'\n           '        \"\"\"Erkennt verfügbare CI-Platforms\"\"\"\\n'\n           '        platforms = []\\n'\n           '\\n'\n           '        if (self.project_path / '\n           '\".github/workflows\").exists():\\n'\n           \"            platforms.append('github_actions')\\n\"\n           '\\n'\n           '        if (self.project_path / \".gitlab-ci.yml\").exists():\\n'\n           \"            platforms.append('gitlab_ci')\\n\"\n           '\\n'\n           '        if (self.project_path / \".circleci\").exists():\\n'\n           \"            platforms.append('circleci')\\n\"\n           '\\n'\n           '        return platforms\\n'\n           '\\n'\n           '    async def execute(self) -> Dict[str, Any]:\\n'\n           '        \"\"\"Führt den CI/CD-Workflow aus\"\"\"\\n'\n           '        logger.info(f\"🔄 Starting CI/CD workflow for '\n           '{{self.project_name}}\")\\n'\n           '\\n'\n           '        results = {{\\n'\n           '            \"workflow_type\": \"ci_cd\",\\n'\n           '            \"ci_platforms_detected\": self.ci_platforms,\\n'\n           '            \"workflows_generated\": [],\\n'\n           '            \"execution_time\": 0\\n'\n           '        }}\\n'\n           '\\n'\n           '        try:\\n'\n           '            # Generiere CI/CD-Configs\\n'\n           '            for platform in self.ci_platforms:\\n'\n           '                config_results = await '\n           'self._generate_ci_config(platform)\\n'\n           '                '\n           'results[\"workflows_generated\"].extend(config_results)\\n'\n           '\\n'\n           '            logger.info(f\"✅ CI/CD workflow completed: '\n           \"{{len(results['workflows_generated'])}} configs \"\n           'generated\")\\n'\n           '\\n'\n           '        except Exception as e:\\n'\n           '            logger.error(f\"❌ Error in CI/CD workflow: '\n           '{{e}}\")\\n'\n           '            results[\"error\"] = str(e)\\n'\n           '\\n'\n           '        return results\\n'\n           '\\n'\n           '    async def _generate_ci_config(self, platform: str) -> '\n           'List[str]:\\n'\n           '        \"\"\"Generiert CI-Config für eine spezifische '\n           'Platform\"\"\"\\n'\n           '        logger.info(f\"🔧 Generating {{platform}} config...\")\\n'\n           '\\n'\n           '        generated_configs = []\\n'\n           '\\n'\n           '        try:\\n'\n           \"            if platform == 'github_actions':\\n\"\n           '                config_path = await '\n           'self._create_github_actions_workflow()\\n'\n           '                if config_path:\\n'\n           '                    generated_configs.append(config_path)\\n'\n           '\\n'\n           \"            elif platform == 'gitlab_ci':\\n\"\n           '                config_path = await '\n           'self._create_gitlab_ci_config()\\n'\n           '                if config_path:\\n'\n           '                    generated_configs.append(config_path)\\n'\n           '\\n'\n           '        except Exception as e:\\n'\n           '            logger.error(f\"❌ Error generating {{platform}} '\n           'config: {{e}}\")\\n'\n           '\\n'\n           '        return generated_configs\\n'\n           '\\n'\n           '    async def _create_github_actions_workflow(self) -> '\n           'Optional[str]:\\n'\n           '        \"\"\"Erstellt GitHub Actions Workflow\"\"\"\\n'\n           '        try:\\n'\n           '            workflow_dir = self.project_path / \".github\" / '\n           '\"workflows\"\\n'\n           '            workflow_dir.mkdir(parents=True, exist_ok=True)\\n'\n           '\\n'\n           '            workflow_file = workflow_dir / \"ci.yml\"\\n'\n           '\\n'\n           '            workflow_content = {{\\n'\n           '                \"name\": \"CI/CD Pipeline\",\\n'\n           '                \"on\": [\"push\", \"pull_request\"],\\n'\n           '                \"jobs\": {{\\n'\n           '                    \"test\": {{\\n'\n           '                        \"runs-on\": \"ubuntu-latest\",\\n'\n           '                        \"steps\": [\\n'\n           '                            {{\"uses\": '\n           '\"actions/checkout@v3\"}},\\n'\n           '                            {{\"name\": \"Set up Python\", '\n           '\"uses\": \"actions/setup-python@v4\", \"with\": '\n           '{{\"python-version\": \"3.11\"}}}},\\n'\n           '                            {{\"name\": \"Install dependencies\", '\n           '\"run\": \"pip install -r requirements.txt\"}},\\n'\n           '                            {{\"name\": \"Run tests\", \"run\": '\n           '\"pytest\"}},\\n'\n           '                            {{\"name\": \"Build\", \"run\": \"python '\n           'setup.py build\"}}\\n'\n           '                        ]\\n'\n           '                    }}\\n'\n           '                }}\\n'\n           '            }}\\n'\n           '\\n'\n           \"            with open(workflow_file, 'w') as f:\\n\"\n           '                yaml.dump(workflow_content, f, '\n           'default_flow_style=False)\\n'\n           '\\n'\n           '            return str(workflow_file)\\n'\n           '\\n'\n           '        except Exception as e:\\n'\n           '            logger.error(f\"❌ Error creating GitHub Actions '\n           'workflow: {{e}}\")\\n'\n           '            return None\\n'\n           '\\n'\n           '    async def _create_gitlab_ci_config(self) -> '\n           'Optional[str]:\\n'\n           '        \"\"\"Erstellt GitLab CI Config\"\"\"\\n'\n           '        try:\\n'\n           '            config_file = self.project_path / '\n           '\".gitlab-ci.yml\"\\n'\n           '\\n'\n           '            config_content = {{\\n'\n           '                \"stages\": [\"test\", \"build\", \"deploy\"],\\n'\n           '                \"test\": {{\\n'\n           '                    \"stage\": \"test\",\\n'\n           '                    \"image\": \"python:3.11\",\\n'\n           '                    \"script\": [\\n'\n           '                        \"pip install -r requirements.txt\",\\n'\n           '                        \"pytest\"\\n'\n           '                    ]\\n'\n           '                }},\\n'\n           '                \"build\": {{\\n'\n           '                    \"stage\": \"build\",\\n'\n           '                    \"image\": \"python:3.11\",\\n'\n           '                    \"script\": [\\n'\n           '                        \"python setup.py build\"\\n'\n           '                    ]\\n'\n           '                }}\\n'\n           '            }}\\n'\n           '\\n'\n           \"            with open(config_file, 'w') as f:\\n\"\n           '                yaml.dump(config_content, f, '\n           'default_flow_style=False)\\n'\n           '\\n'\n           '            return str(config_file)\\n'\n           '\\n'\n           '        except Exception as e:\\n'\n           '            logger.error(f\"❌ Error creating GitLab CI config: '\n           '{{e}}\")\\n'\n           '            return None\\n'\n           '\\n'\n           '    # Generierte Workflow-Schritte vom LLM\\n'\n           '    {generated_steps}\\n'\n           '\\n'\n           '    async def cleanup(self):\\n'\n           '        \"\"\"Bereinigt Ressourcen\"\"\"\\n'\n           '        logger.info(f\"🧹 Cleaning up {workflow_class}\")\\n'),\n          kind=None)"
            },
            {
              "function": "Attribute._get_security_workflow_template(attrname='_get_security_workflow_template',\n                                          expr=<Name.self l.29 at 0x2579b9329d0>)",
              "type": "Const.str(value=('\"\"\"\\n'\n           '{workflow_class} - Automatisch generierter Security-Workflow\\n'\n           '\"\"\"\\n'\n           '\\n'\n           'import asyncio\\n'\n           'import logging\\n'\n           'import subprocess\\n'\n           'from typing import Dict, List, Any, Optional\\n'\n           'from pathlib import Path\\n'\n           '\\n'\n           'logger = logging.getLogger(__name__)\\n'\n           '\\n'\n           '\\n'\n           'class {workflow_class}:\\n'\n           '    def __init__(self, project_path: str):\\n'\n           '        self.project_path = Path(project_path)\\n'\n           '        self.project_name = \"{project_name}\"\\n'\n           '        self.workflow_type = \"security\"\\n'\n           '        self.security_tools = self._detect_security_tools()\\n'\n           '\\n'\n           '    def _detect_security_tools(self) -> List[str]:\\n'\n           '        \"\"\"Erkennt verfügbare Security-Tools\"\"\"\\n'\n           '        tools = []\\n'\n           '\\n'\n           '        # Python Security Tools\\n'\n           '        if (self.project_path / '\n           '\"requirements.txt\").exists():\\n'\n           '            with open(self.project_path / \"requirements.txt\", '\n           \"'r') as f:\\n\"\n           '                content = f.read()\\n'\n           \"                if 'safety' in content:\\n\"\n           \"                    tools.append('safety')\\n\"\n           \"                if 'bandit' in content:\\n\"\n           \"                    tools.append('bandit')\\n\"\n           '\\n'\n           '        # Node.js Security Tools\\n'\n           '        if (self.project_path / \"package.json\").exists():\\n'\n           \"            tools.append('npm_audit')\\n\"\n           '\\n'\n           '        return tools\\n'\n           '\\n'\n           '    async def execute(self) -> Dict[str, Any]:\\n'\n           '        \"\"\"Führt den Security-Workflow aus\"\"\"\\n'\n           '        logger.info(f\"🔒 Starting security workflow for '\n           '{{self.project_name}}\")\\n'\n           '\\n'\n           '        results = {{\\n'\n           '            \"workflow_type\": \"security\",\\n'\n           '            \"security_tools_detected\": self.security_tools,\\n'\n           '            \"vulnerabilities_found\": 0,\\n'\n           '            \"security_issues\": [],\\n'\n           '            \"execution_time\": 0\\n'\n           '        }}\\n'\n           '\\n'\n           '        try:\\n'\n           '            # Führe Security-Scans aus\\n'\n           '            for tool in self.security_tools:\\n'\n           '                tool_results = await '\n           'self._run_security_tool(tool)\\n'\n           '                results.update(tool_results)\\n'\n           '\\n'\n           '            logger.info(f\"✅ Security workflow completed: '\n           \"{{results['vulnerabilities_found']}} vulnerabilities \"\n           'found\")\\n'\n           '\\n'\n           '        except Exception as e:\\n'\n           '            logger.error(f\"❌ Error in security workflow: '\n           '{{e}}\")\\n'\n           '            results[\"error\"] = str(e)\\n'\n           '\\n'\n           '        return results\\n'\n           '\\n'\n           '    async def _run_security_tool(self, tool: str) -> '\n           'Dict[str, Any]:\\n'\n           '        \"\"\"Führt Security-Scan für ein spezifisches Tool '\n           'aus\"\"\"\\n'\n           '        logger.info(f\"🔧 Running {{tool}} security scan...\")\\n'\n           '\\n'\n           '        results = {{\"vulnerabilities_found\": 0, '\n           '\"security_issues\": []}}\\n'\n           '\\n'\n           '        try:\\n'\n           \"            if tool == 'safety':\\n\"\n           '                result = subprocess.run(\\n'\n           '                    [\"safety\", \"check\", \"-r\", '\n           '\"requirements.txt\"],\\n'\n           '                    cwd=self.project_path,\\n'\n           '                    capture_output=True,\\n'\n           '                    text=True,\\n'\n           '                    timeout=60\\n'\n           '                )\\n'\n           '                if result.returncode != 0:\\n'\n           '                    results[\"vulnerabilities_found\"] += 1\\n'\n           '                    '\n           'results[\"security_issues\"].append(f\"Safety check failed: '\n           '{{result.stdout}}\")\\n'\n           '\\n'\n           \"            elif tool == 'npm_audit':\\n\"\n           '                result = subprocess.run(\\n'\n           '                    [\"npm\", \"audit\"],\\n'\n           '                    cwd=self.project_path,\\n'\n           '                    capture_output=True,\\n'\n           '                    text=True,\\n'\n           '                    timeout=60\\n'\n           '                )\\n'\n           '                if \"found 0 vulnerabilities\" not in '\n           'result.stdout:\\n'\n           '                    results[\"vulnerabilities_found\"] += 1\\n'\n           '                    results[\"security_issues\"].append(f\"NPM '\n           'audit found issues: {{result.stdout}}\")\\n'\n           '\\n'\n           '        except subprocess.TimeoutExpired:\\n'\n           '            logger.warning(f\"⚠️ {{tool}} security scan timed '\n           'out\")\\n'\n           '        except Exception as e:\\n'\n           '            logger.error(f\"❌ Error running {{tool}} security '\n           'scan: {{e}}\")\\n'\n           '\\n'\n           '        return results\\n'\n           '\\n'\n           '    # Generierte Workflow-Schritte vom LLM\\n'\n           '    {generated_steps}\\n'\n           '\\n'\n           '    async def cleanup(self):\\n'\n           '        \"\"\"Bereinigt Ressourcen\"\"\"\\n'\n           '        logger.info(f\"🧹 Cleaning up {workflow_class}\")\\n'),\n          kind=None)"
            },
            {
              "function": "Attribute._get_performance_workflow_template(attrname='_get_performance_workflow_template',\n                                             expr=<Name.self l.30 at 0x2579b932cd0>)",
              "type": "Const.str(value=('\"\"\"\\n'\n           '{workflow_class} - Automatisch generierter '\n           'Performance-Workflow\\n'\n           '\"\"\"\\n'\n           '\\n'\n           'import asyncio\\n'\n           'import logging\\n'\n           'import subprocess\\n'\n           'from typing import Dict, List, Any, Optional\\n'\n           'from pathlib import Path\\n'\n           'import time\\n'\n           '\\n'\n           'logger = logging.getLogger(__name__)\\n'\n           '\\n'\n           '\\n'\n           'class {workflow_class}:\\n'\n           '    def __init__(self, project_path: str):\\n'\n           '        self.project_path = Path(project_path)\\n'\n           '        self.project_name = \"{project_name}\"\\n'\n           '        self.workflow_type = \"performance\"\\n'\n           '        self.performance_tools = '\n           'self._detect_performance_tools()\\n'\n           '\\n'\n           '    def _detect_performance_tools(self) -> List[str]:\\n'\n           '        \"\"\"Erkennt verfügbare Performance-Tools\"\"\"\\n'\n           '        tools = []\\n'\n           '\\n'\n           '        # Python Performance Tools\\n'\n           '        if (self.project_path / '\n           '\"requirements.txt\").exists():\\n'\n           '            with open(self.project_path / \"requirements.txt\", '\n           \"'r') as f:\\n\"\n           '                content = f.read()\\n'\n           \"                if 'pytest-benchmark' in content:\\n\"\n           \"                    tools.append('pytest_benchmark')\\n\"\n           \"                if 'memory_profiler' in content:\\n\"\n           \"                    tools.append('memory_profiler')\\n\"\n           '\\n'\n           '        # Node.js Performance Tools\\n'\n           '        if (self.project_path / \"package.json\").exists():\\n'\n           \"            tools.append('node_performance')\\n\"\n           '\\n'\n           '        return tools\\n'\n           '\\n'\n           '    async def execute(self) -> Dict[str, Any]:\\n'\n           '        \"\"\"Führt den Performance-Workflow aus\"\"\"\\n'\n           '        logger.info(f\"⚡ Starting performance workflow for '\n           '{{self.project_name}}\")\\n'\n           '\\n'\n           '        results = {{\\n'\n           '            \"workflow_type\": \"performance\",\\n'\n           '            \"performance_tools_detected\": '\n           'self.performance_tools,\\n'\n           '            \"performance_metrics\": {{}},\\n'\n           '            \"bottlenecks_found\": [],\\n'\n           '            \"execution_time\": 0\\n'\n           '        }}\\n'\n           '\\n'\n           '        try:\\n'\n           '            # Führe Performance-Tests aus\\n'\n           '            for tool in self.performance_tools:\\n'\n           '                tool_results = await '\n           'self._run_performance_tool(tool)\\n'\n           '                results.update(tool_results)\\n'\n           '\\n'\n           '            logger.info(f\"✅ Performance workflow completed: '\n           '{{len(results[\\'bottlenecks_found\\'])}} bottlenecks found\")\\n'\n           '\\n'\n           '        except Exception as e:\\n'\n           '            logger.error(f\"❌ Error in performance workflow: '\n           '{{e}}\")\\n'\n           '            results[\"error\"] = str(e)\\n'\n           '\\n'\n           '        return results\\n'\n           '\\n'\n           '    async def _run_performance_tool(self, tool: str) -> '\n           'Dict[str, Any]:\\n'\n           '        \"\"\"Führt Performance-Test für ein spezifisches Tool '\n           'aus\"\"\"\\n'\n           '        logger.info(f\"🔧 Running {{tool}} performance '\n           'test...\")\\n'\n           '\\n'\n           '        results = {{\"performance_metrics\": {{}}, '\n           '\"bottlenecks_found\": []}}\\n'\n           '\\n'\n           '        try:\\n'\n           \"            if tool == 'pytest_benchmark':\\n\"\n           '                result = subprocess.run(\\n'\n           '                    [\"python\", \"-m\", \"pytest\", '\n           '\"--benchmark-only\"],\\n'\n           '                    cwd=self.project_path,\\n'\n           '                    capture_output=True,\\n'\n           '                    text=True,\\n'\n           '                    timeout=120\\n'\n           '                )\\n'\n           '                if result.returncode == 0:\\n'\n           '                    '\n           'results[\"performance_metrics\"][\"benchmark_results\"] = '\n           'result.stdout\\n'\n           '\\n'\n           \"            elif tool == 'node_performance':\\n\"\n           '                # Einfacher Node.js Performance-Test\\n'\n           '                start_time = time.time()\\n'\n           '                result = subprocess.run(\\n'\n           '                    [\"node\", \"--version\"],\\n'\n           '                    cwd=self.project_path,\\n'\n           '                    capture_output=True,\\n'\n           '                    text=True,\\n'\n           '                    timeout=30\\n'\n           '                )\\n'\n           '                end_time = time.time()\\n'\n           '                '\n           'results[\"performance_metrics\"][\"node_startup_time\"] = '\n           'end_time - start_time\\n'\n           '\\n'\n           '        except subprocess.TimeoutExpired:\\n'\n           '            logger.warning(f\"⚠️ {{tool}} performance test '\n           'timed out\")\\n'\n           '        except Exception as e:\\n'\n           '            logger.error(f\"❌ Error running {{tool}} '\n           'performance test: {{e}}\")\\n'\n           '\\n'\n           '        return results\\n'\n           '\\n'\n           '    # Generierte Workflow-Schritte vom LLM\\n'\n           '    {generated_steps}\\n'\n           '\\n'\n           '    async def cleanup(self):\\n'\n           '        \"\"\"Bereinigt Ressourcen\"\"\"\\n'\n           '        logger.info(f\"🧹 Cleaning up {workflow_class}\")\\n'),\n          kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.36 at 0x2579b930ad0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.38 at 0x2579b931550>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._determine_required_workflows(attrname='_determine_required_workflows',\n                                        expr=<Name.self l.42 at 0x2579b933810>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.45 at 0x2579b933d10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._generate_workflow_code(attrname='_generate_workflow_code',\n                                  expr=<Name.self l.47 at 0x2579b911690>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._save_workflow_file(attrname='_save_workflow_file',\n                              expr=<Name.self l.54 at 0x2579b912a90>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.66 at 0x2579b910490>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.72 at 0x2579b911210>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.83 at 0x2579b912610>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.keys(attrname='keys',\n               expr=<Name.frameworks l.84 at 0x2579b911b10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._has_deployment_configs(attrname='_has_deployment_configs',\n                                  expr=<Name.self l.88 at 0x2579b912f90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<BinOp l.92 at 0x2579b913e10>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.92 at 0x2579b910750>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.96 at 0x2579b830750>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._has_security_dependencies(attrname='_has_security_dependencies',\n                                     expr=<Name.self l.97 at 0x2579b8319d0>)",
              "type": "Const.bool(value=True,\n           kind=None)"
            },
            {
              "function": "Attribute.keys(attrname='keys',\n               expr=<Name.frameworks l.101 at 0x2579b831b90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.108 at 0x2579b830b90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Name.dependencies l.117 at 0x2579b833ad0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.dep l.120 at 0x2579b831f50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._get_generic_workflow_template(attrname='_get_generic_workflow_template',\n                                         expr=<Name.self l.128 at 0x2579b7fb810>)",
              "type": "Const.str(value=('\"\"\"\\n'\n           '{workflow_class} - Automatisch generierter Workflow\\n'\n           '\"\"\"\\n'\n           '\\n'\n           'import asyncio\\n'\n           'import logging\\n'\n           'from typing import Dict, List, Any, Optional\\n'\n           'from pathlib import Path\\n'\n           '\\n'\n           'logger = logging.getLogger(__name__)\\n'\n           '\\n'\n           '\\n'\n           'class {workflow_class}:\\n'\n           '    def __init__(self, project_path: str):\\n'\n           '        self.project_path = Path(project_path)\\n'\n           '        self.project_name = \"{project_name}\"\\n'\n           '        self.workflow_type = \"generic\"\\n'\n           '\\n'\n           '    async def execute(self) -> Dict[str, Any]:\\n'\n           '        \"\"\"Führt den Workflow aus\"\"\"\\n'\n           '        logger.info(f\"🔄 Starting generic workflow for '\n           '{{self.project_name}}\")\\n'\n           '\\n'\n           '        results = {{\\n'\n           '            \"workflow_type\": \"generic\",\\n'\n           '            \"execution_successful\": True,\\n'\n           '            \"execution_time\": 0\\n'\n           '        }}\\n'\n           '\\n'\n           '        try:\\n'\n           '            # Generische Workflow-Logik\\n'\n           '            logger.info(\"🔧 Executing generic workflow '\n           'steps...\")\\n'\n           '\\n'\n           '            # Simuliere Workflow-Ausführung\\n'\n           '            await asyncio.sleep(1)\\n'\n           '\\n'\n           '            logger.info(f\"✅ Generic workflow completed '\n           'successfully\")\\n'\n           '\\n'\n           '        except Exception as e:\\n'\n           '            logger.error(f\"❌ Error in generic workflow: '\n           '{{e}}\")\\n'\n           '            results[\"error\"] = str(e)\\n'\n           '            results[\"execution_successful\"] = False\\n'\n           '\\n'\n           '        return results\\n'\n           '\\n'\n           '    # Generierte Workflow-Schritte vom LLM\\n'\n           '    {generated_steps}\\n'\n           '\\n'\n           '    async def cleanup(self):\\n'\n           '        \"\"\"Bereinigt Ressourcen\"\"\"\\n'\n           '        logger.info(f\"🧹 Cleaning up {workflow_class}\")\\n'),\n          kind=None)"
            },
            {
              "function": "Attribute.format(attrname='format',\n                 expr=<Name.WORKFLOW_GENERATION_PROMPT l.131 at 0x2579b7f9890>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.dumps(attrname='dumps',\n                expr=<Name.json l.132 at 0x2579b7fae90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._get_project_frameworks(attrname='_get_project_frameworks',\n                                  expr=<Name.self l.135 at 0x2579b7f9110>)",
              "type": "Instance of builtins.list"
            },
            {
              "function": "Attribute._get_project_dependencies(attrname='_get_project_dependencies',\n                                    expr=<Name.self l.136 at 0x2579b7fb7d0>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.get_model(attrname='get_model',\n                    expr=<Attribute.model_manager l.140 at 0x2579b7fa950>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.generate_response(attrname='generate_response',\n                            expr=<Name.model l.141 at 0x2579b7f8590>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.format(attrname='format',\n                 expr=<Name.template l.144 at 0x2579b7f8ed0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.title(attrname='title',\n                expr=<Name.project_name l.146 at 0x2579b7f9610>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.title(attrname='title',\n                expr=<Name.workflow_type l.146 at 0x2579b7f9410>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.154 at 0x2579b7fa750>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._get_generic_workflow_template(attrname='_get_generic_workflow_template',\n                                         expr=<Name.self l.156 at 0x2579b7fab50>)",
              "type": "Const.str(value=('\"\"\"\\n'\n           '{workflow_class} - Automatisch generierter Workflow\\n'\n           '\"\"\"\\n'\n           '\\n'\n           'import asyncio\\n'\n           'import logging\\n'\n           'from typing import Dict, List, Any, Optional\\n'\n           'from pathlib import Path\\n'\n           '\\n'\n           'logger = logging.getLogger(__name__)\\n'\n           '\\n'\n           '\\n'\n           'class {workflow_class}:\\n'\n           '    def __init__(self, project_path: str):\\n'\n           '        self.project_path = Path(project_path)\\n'\n           '        self.project_name = \"{project_name}\"\\n'\n           '        self.workflow_type = \"generic\"\\n'\n           '\\n'\n           '    async def execute(self) -> Dict[str, Any]:\\n'\n           '        \"\"\"Führt den Workflow aus\"\"\"\\n'\n           '        logger.info(f\"🔄 Starting generic workflow for '\n           '{{self.project_name}}\")\\n'\n           '\\n'\n           '        results = {{\\n'\n           '            \"workflow_type\": \"generic\",\\n'\n           '            \"execution_successful\": True,\\n'\n           '            \"execution_time\": 0\\n'\n           '        }}\\n'\n           '\\n'\n           '        try:\\n'\n           '            # Generische Workflow-Logik\\n'\n           '            logger.info(\"🔧 Executing generic workflow '\n           'steps...\")\\n'\n           '\\n'\n           '            # Simuliere Workflow-Ausführung\\n'\n           '            await asyncio.sleep(1)\\n'\n           '\\n'\n           '            logger.info(f\"✅ Generic workflow completed '\n           'successfully\")\\n'\n           '\\n'\n           '        except Exception as e:\\n'\n           '            logger.error(f\"❌ Error in generic workflow: '\n           '{{e}}\")\\n'\n           '            results[\"error\"] = str(e)\\n'\n           '            results[\"execution_successful\"] = False\\n'\n           '\\n'\n           '        return results\\n'\n           '\\n'\n           '    # Generierte Workflow-Schritte vom LLM\\n'\n           '    {generated_steps}\\n'\n           '\\n'\n           '    async def cleanup(self):\\n'\n           '        \"\"\"Bereinigt Ressourcen\"\"\"\\n'\n           '        logger.info(f\"🧹 Cleaning up {workflow_class}\")\\n'),\n          kind=None)"
            },
            {
              "function": "Attribute.title(attrname='title',\n                expr=<Name.project_name l.158 at 0x2579b7fbc50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.title(attrname='title',\n                expr=<Name.workflow_type l.158 at 0x2579b7fbb10>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.mkdir(attrname='mkdir',\n                expr=<Name.generated_dir l.168 at 0x2579b7fb1d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.write(attrname='write',\n                expr=<Name.f l.176 at 0x2579b7b6b10>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.181 at 0x2579b7b6e50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.186 at 0x2579b7b6450>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.list(name='list')",
              "type": "Instance of builtins.list"
            },
            {
              "function": "Attribute.keys(attrname='keys',\n               expr=<Name.frameworks l.187 at 0x2579b7b6710>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.191 at 0x2579b7b6110>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Name.dependencies l.194 at 0x2579b7b6290>)",
              "type": "Uninferable"
            }
          ],
          "unresolved_imports": [
            "os",
            "json",
            "logging"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": "generators\\__init__.py",
        "language": "python",
        "file_size": 22,
        "line_count": 3,
        "analysis_method": "python_ast",
        "functions": [],
        "classes": [],
        "imports": [],
        "complexity_metrics": {
          "cyclomatic_complexity": 0,
          "function_count": 0,
          "class_count": 0,
          "import_count": 0,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [],
          "unresolved_imports": [],
          "code_smells": []
        }
      },
      {
        "file_path": "hooks\\__init__.py",
        "language": "python",
        "file_size": 13705,
        "line_count": 379,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "__init__",
            "line_number": 17,
            "parameters": [
              "self",
              "name",
              "description"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "register_callback",
            "line_number": 30,
            "parameters": [
              "self",
              "callback"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Registriert einen Callback für den Hook",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "get_info",
            "line_number": 35,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Gibt Informationen über den Hook zurück",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "__init__",
            "line_number": 54,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "__init__",
            "line_number": 118,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "__init__",
            "line_number": 194,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "__init__",
            "line_number": 288,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          }
        ],
        "classes": [
          {
            "name": "BaseHook",
            "line_number": 14,
            "bases": [
              "ABC"
            ],
            "decorators": [],
            "docstring": "Basisklasse für alle Hooks",
            "methods": [
              "__init__",
              "register_callback",
              "get_info"
            ],
            "method_count": 3
          },
          {
            "name": "StartupHook",
            "line_number": 51,
            "bases": [
              "BaseHook"
            ],
            "decorators": [],
            "docstring": "Hook für System-Startup-Events",
            "methods": [
              "__init__"
            ],
            "method_count": 1
          },
          {
            "name": "ErrorHook",
            "line_number": 115,
            "bases": [
              "BaseHook"
            ],
            "decorators": [],
            "docstring": "Hook für Error-Handling",
            "methods": [
              "__init__"
            ],
            "method_count": 1
          },
          {
            "name": "PerformanceHook",
            "line_number": 191,
            "bases": [
              "BaseHook"
            ],
            "decorators": [],
            "docstring": "Hook für Performance-Monitoring",
            "methods": [
              "__init__"
            ],
            "method_count": 1
          },
          {
            "name": "SecurityHook",
            "line_number": 285,
            "bases": [
              "BaseHook"
            ],
            "decorators": [],
            "docstring": "Hook für Security-Events",
            "methods": [
              "__init__"
            ],
            "method_count": 1
          }
        ],
        "imports": [
          {
            "type": "from_import",
            "module": "abc",
            "names": [
              "ABC",
              "abstractmethod"
            ],
            "level": 0,
            "line_number": 5
          },
          {
            "type": "from_import",
            "module": "typing",
            "names": [
              "Dict",
              "Any",
              "Optional",
              "List",
              "Callable"
            ],
            "level": 0,
            "line_number": 6
          },
          {
            "type": "import",
            "modules": [
              "logging"
            ],
            "line_number": 7
          },
          {
            "type": "import",
            "modules": [
              "asyncio"
            ],
            "line_number": 8
          },
          {
            "type": "from_import",
            "module": "datetime",
            "names": [
              "datetime"
            ],
            "level": 0,
            "line_number": 9
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 7,
          "function_count": 7,
          "class_count": 5,
          "import_count": 5,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.getLogger(attrname='getLogger',\n                    expr=<Name.logging l.11 at 0x2579b359510>)",
              "type": "Instance of logging.RootLogger"
            },
            {
              "function": "Attribute.getLogger(attrname='getLogger',\n                    expr=<Name.logging l.22 at 0x2579b358350>)",
              "type": "Instance of logging.RootLogger"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Attribute.logger l.33 at 0x2579b35bfd0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Attribute.logger l.48 at 0x2579b311090>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.__init__(attrname='__init__',\n                   expr=<Call l.55 at 0x2579b313750>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.super(name='super')",
              "type": "Super.StartupHook()"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Attribute.logger l.63 at 0x2579b311b10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.isoformat(attrname='isoformat',\n                    expr=<Call l.68 at 0x2579b312990>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.now(attrname='now',\n              expr=<Name.datetime l.68 at 0x2579b312850>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.data l.74 at 0x2579b313b10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.isoformat(attrname='isoformat',\n                    expr=<Call l.78 at 0x2579b311750>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.now(attrname='now',\n              expr=<Name.datetime l.78 at 0x2579b311850>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.data l.83 at 0x2579b313b50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.isoformat(attrname='isoformat',\n                    expr=<Call l.87 at 0x2579b336ed0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.now(attrname='now',\n              expr=<Name.datetime l.87 at 0x2579b337690>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Attribute.isoformat(attrname='isoformat',\n                    expr=<Call l.94 at 0x2579b336410>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.now(attrname='now',\n              expr=<Name.datetime l.94 at 0x2579b3365d0>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Attribute.iscoroutinefunction(attrname='iscoroutinefunction',\n                              expr=<Name.asyncio l.101 at 0x2579b3357d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.callback(name='callback')",
              "type": "Uninferable"
            },
            {
              "function": "Name.callback(name='callback')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Attribute.logger l.106 at 0x2579b334710>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.__init__(attrname='__init__',\n                   expr=<Call l.119 at 0x2579b336050>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.super(name='super')",
              "type": "Super.ErrorHook()"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Attribute.logger l.129 at 0x2579b3370d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.data l.131 at 0x2579afcf9d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.isoformat(attrname='isoformat',\n                    expr=<Call l.140 at 0x2579b295dd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.now(attrname='now',\n              expr=<Name.datetime l.140 at 0x2579b295c90>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.type(name='type')",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.isoformat(attrname='isoformat',\n                    expr=<Call l.151 at 0x2579b294650>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.now(attrname='now',\n              expr=<Name.datetime l.151 at 0x2579b294610>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Attribute.isoformat(attrname='isoformat',\n                    expr=<Call l.161 at 0x2579b295a10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.now(attrname='now',\n              expr=<Name.datetime l.161 at 0x2579b295ad0>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Attribute.isoformat(attrname='isoformat',\n                    expr=<Call l.169 at 0x2579b296d10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.now(attrname='now',\n              expr=<Name.datetime l.169 at 0x2579b296cd0>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Attribute.iscoroutinefunction(attrname='iscoroutinefunction',\n                              expr=<Name.asyncio l.177 at 0x2579b297950>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.callback(name='callback')",
              "type": "Uninferable"
            },
            {
              "function": "Name.callback(name='callback')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Attribute.logger l.182 at 0x2579b296090>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.__init__(attrname='__init__',\n                   expr=<Call l.195 at 0x2579b0d0190>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.super(name='super')",
              "type": "Super.PerformanceHook()"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Attribute.logger l.208 at 0x2579b0d0cd0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.data l.211 at 0x2579b0d13d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.isoformat(attrname='isoformat',\n                    expr=<Call l.225 at 0x2579b174150>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.now(attrname='now',\n              expr=<Name.datetime l.225 at 0x2579b174310>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Attribute.copy(attrname='copy',\n               expr=<Attribute.metrics l.226 at 0x2579b174650>)",
              "type": "Dict.dict(items=[ ( <Const.str l.201 at 0x2579b0d0b50>,\n              <Const.int l.201 at 0x2579b0d0c50>),\n            ( <Const.str l.202 at 0x2579b0d05d0>,\n              <Const.int l.202 at 0x2579b0d16d0>),\n            ( <Const.str l.203 at 0x2579b0d0ed0>,\n              <Const.float l.203 at 0x2579b0d03d0>)])"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.data l.230 at 0x2579b175e10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.isoformat(attrname='isoformat',\n                    expr=<Call l.242 at 0x2579b175690>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.now(attrname='now',\n              expr=<Name.datetime l.242 at 0x2579b175590>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.data l.247 at 0x2579b176b10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.isoformat(attrname='isoformat',\n                    expr=<Call l.257 at 0x2579b175410>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.now(attrname='now',\n              expr=<Name.datetime l.257 at 0x2579b174dd0>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Attribute.isoformat(attrname='isoformat',\n                    expr=<Call l.264 at 0x2579b174b90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.now(attrname='now',\n              expr=<Name.datetime l.264 at 0x2579b174b10>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Attribute.iscoroutinefunction(attrname='iscoroutinefunction',\n                              expr=<Name.asyncio l.271 at 0x2579b16d6d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.callback(name='callback')",
              "type": "Uninferable"
            },
            {
              "function": "Name.callback(name='callback')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Attribute.logger l.276 at 0x2579b16e1d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.__init__(attrname='__init__',\n                   expr=<Call l.289 at 0x2579b16d190>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.super(name='super')",
              "type": "Super.SecurityHook()"
            },
            {
              "function": "Attribute.warning(attrname='warning',\n                  expr=<Attribute.logger l.298 at 0x2579b16efd0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.data l.300 at 0x2579b16d090>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.isoformat(attrname='isoformat',\n                    expr=<Call l.307 at 0x2579b16d250>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.now(attrname='now',\n              expr=<Name.datetime l.307 at 0x2579b16d0d0>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Attribute.iscoroutinefunction(attrname='iscoroutinefunction',\n                              expr=<Name.asyncio l.348 at 0x2579b165510>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.callback(name='callback')",
              "type": "Uninferable"
            },
            {
              "function": "Name.callback(name='callback')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Attribute.logger l.353 at 0x2579b166e10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.StartupHook(name='StartupHook')",
              "type": "Instance of .StartupHook"
            },
            {
              "function": "Name.ErrorHook(name='ErrorHook')",
              "type": "Instance of .ErrorHook"
            },
            {
              "function": "Name.PerformanceHook(name='PerformanceHook')",
              "type": "Instance of .PerformanceHook"
            },
            {
              "function": "Name.SecurityHook(name='SecurityHook')",
              "type": "Instance of .SecurityHook"
            },
            {
              "function": "Attribute.values(attrname='values',\n                 expr=<Name.hooks l.374 at 0x2579b167710>)",
              "type": "DictValues.list(ctx=None,\n                elts=[ <Call l.368 at 0x2579b1667d0>,\n                  <Call l.369 at 0x2579b166990>,\n                  <Call l.370 at 0x2579b166550>,\n                  <Call l.371 at 0x2579b167850>])"
            },
            {
              "function": "Attribute.initialize(attrname='initialize',\n                     expr=<Name.hook l.375 at 0x2579b167910>)",
              "type": "Uninferable"
            }
          ],
          "unresolved_imports": [
            "logging",
            "asyncio"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": "llm\\api_models.py",
        "language": "python",
        "file_size": 20701,
        "line_count": 495,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "__init__",
            "line_number": 17,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          }
        ],
        "classes": [
          {
            "name": "APIModelManager",
            "line_number": 14,
            "bases": [],
            "decorators": [],
            "docstring": "Manager für API-basierte LLM-Modelle",
            "methods": [
              "__init__"
            ],
            "method_count": 1
          }
        ],
        "imports": [
          {
            "type": "import",
            "modules": [
              "os"
            ],
            "line_number": 5
          },
          {
            "type": "import",
            "modules": [
              "asyncio"
            ],
            "line_number": 6
          },
          {
            "type": "import",
            "modules": [
              "aiohttp"
            ],
            "line_number": 7
          },
          {
            "type": "from_import",
            "module": "typing",
            "names": [
              "Dict",
              "Any",
              "List",
              "Optional",
              "AsyncGenerator"
            ],
            "level": 0,
            "line_number": 8
          },
          {
            "type": "import",
            "modules": [
              "logging"
            ],
            "line_number": 9
          },
          {
            "type": "import",
            "modules": [
              "json"
            ],
            "line_number": 331
          },
          {
            "type": "import",
            "modules": [
              "json"
            ],
            "line_number": 385
          },
          {
            "type": "import",
            "modules": [
              "json"
            ],
            "line_number": 439
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 1,
          "function_count": 1,
          "class_count": 1,
          "import_count": 8,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.getLogger(attrname='getLogger',\n                    expr=<Name.logging l.11 at 0x2579c293cd0>)",
              "type": "Instance of logging.RootLogger"
            },
            {
              "function": "Attribute.getenv(attrname='getenv',\n                 expr=<Name.os l.19 at 0x2579c242590>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.getenv(attrname='getenv',\n                 expr=<Name.os l.20 at 0x2579c242e50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.getenv(attrname='getenv',\n                 expr=<Name.os l.21 at 0x2579c241950>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._load_available_models(attrname='_load_available_models',\n                                 expr=<Name.self l.79 at 0x2579ba0bd10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.81 at 0x2579ba0bbd0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.84 at 0x257df87e410>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Attribute.default_models l.90 at 0x2579a9a0c10>)",
              "type": "DictItems.list(ctx=None,\n               elts=[ <Tuple.tuple l.35 at 0x2579e5be0d0>,\n                 <Tuple.tuple l.41 at 0x2579b52e910>,\n                 <Tuple.tuple l.46 at 0x2579b52f810>])"
            },
            {
              "function": "Attribute.get_available_models(attrname='get_available_models',\n                               expr=<Name.self l.109 at 0x2579c0c86d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get_model_info(attrname='get_model_info',\n                         expr=<Name.self l.128 at 0x2579c0ca050>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute._generate_openai_response(attrname='_generate_openai_response',\n                                    expr=<Name.self l.135 at 0x2579c068090>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._generate_anthropic_response(attrname='_generate_anthropic_response',\n                                       expr=<Name.self l.137 at 0x2579c068950>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._generate_google_response(attrname='_generate_google_response',\n                                    expr=<Name.self l.139 at 0x2579c0e5710>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.144 at 0x2579c0e6bd0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get_model_config(attrname='get_model_config',\n                           expr=<Name.self l.150 at 0x2579c0e6050>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.config l.157 at 0x2579ba556d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.config l.158 at 0x2579ba55650>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.config l.159 at 0x2579ba56890>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.config l.160 at 0x2579bae1c90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.config l.161 at 0x2579bae2c50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.ClientSession(attrname='ClientSession',\n                        expr=<Name.aiohttp l.169 at 0x2579bae2a90>)",
              "type": "Instance of aiohttp.client.ClientSession"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Name.session l.170 at 0x2579bae3d90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.json(attrname='json',\n               expr=<Name.response l.177 at 0x2579bae25d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.text(attrname='text',\n               expr=<Name.response l.180 at 0x2579bae1ed0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Exception(name='Exception')",
              "type": "Instance of builtins.Exception"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.184 at 0x2579bae2290>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get_model_config(attrname='get_model_config',\n                           expr=<Name.self l.190 at 0x2579bae1710>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.config l.194 at 0x2579bae1850>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.config l.195 at 0x2579bae1610>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.config l.196 at 0x2579bae0cd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.ClientSession(attrname='ClientSession',\n                        expr=<Name.aiohttp l.208 at 0x2579ba88850>)",
              "type": "Instance of aiohttp.client.ClientSession"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Name.session l.209 at 0x2579ba88690>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.json(attrname='json',\n               expr=<Name.response l.216 at 0x2579ba88410>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.text(attrname='text',\n               expr=<Name.response l.219 at 0x2579ba8a710>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Exception(name='Exception')",
              "type": "Instance of builtins.Exception"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.223 at 0x2579ba8a490>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get_model_config(attrname='get_model_config',\n                           expr=<Name.self l.229 at 0x2579ba8b090>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.config l.240 at 0x2579ba88bd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.config l.241 at 0x2579ba8abd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.config l.242 at 0x2579ba89010>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.config l.243 at 0x2579bab23d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.ClientSession(attrname='ClientSession',\n                        expr=<Name.aiohttp l.251 at 0x2579bab09d0>)",
              "type": "Instance of aiohttp.client.ClientSession"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Name.session l.252 at 0x2579ba28210>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.json(attrname='json',\n               expr=<Name.response l.259 at 0x2579ba28110>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.text(attrname='text',\n               expr=<Name.response l.262 at 0x2579badbb50>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Exception(name='Exception')",
              "type": "Instance of builtins.Exception"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.266 at 0x2579badb7d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get_model_info(attrname='get_model_info',\n                         expr=<Name.self l.272 at 0x2579badbf90>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute._generate_openai_streaming_response(attrname='_generate_openai_streaming_response',\n                                              expr=<Name.self l.279 at 0x2579bad8fd0>)",
              "type": "AsyncGenerator(async_generator)"
            },
            {
              "function": "Attribute._generate_anthropic_streaming_response(attrname='_generate_anthropic_streaming_response',\n                                                 expr=<Name.self l.282 at 0x2579bad8b10>)",
              "type": "AsyncGenerator(async_generator)"
            },
            {
              "function": "Attribute._generate_google_streaming_response(attrname='_generate_google_streaming_response',\n                                              expr=<Name.self l.285 at 0x2579badb450>)",
              "type": "AsyncGenerator(async_generator)"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.291 at 0x2579badb250>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get_model_config(attrname='get_model_config',\n                           expr=<Name.self l.297 at 0x2579bad8cd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.config l.304 at 0x2579babb090>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.config l.305 at 0x2579bab8b10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.config l.306 at 0x2579babad90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.ClientSession(attrname='ClientSession',\n                        expr=<Name.aiohttp l.315 at 0x2579bab8c50>)",
              "type": "Instance of aiohttp.client.ClientSession"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Name.session l.316 at 0x2579babb510>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.decode(attrname='decode',\n                 expr=<Name.line l.325 at 0x2579ba19550>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.startswith(attrname='startswith',\n                     expr=<Name.line_str l.326 at 0x2579ba18290>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Name.data_str l.328 at 0x2579ba6b610>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.loads(attrname='loads',\n                expr=<Name.json l.332 at 0x2579ba6a450>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Subscript l.334 at 0x2579ba6a050>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.text(attrname='text',\n               expr=<Name.response l.340 at 0x2579ba69790>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Exception(name='Exception')",
              "type": "Instance of builtins.Exception"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.344 at 0x2579ba6b7d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get_model_config(attrname='get_model_config',\n                           expr=<Name.self l.350 at 0x2579ba69210>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.config l.354 at 0x2579ba68b50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.config l.355 at 0x2579ba68490>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.config l.356 at 0x2579ba68890>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.ClientSession(attrname='ClientSession',\n                        expr=<Name.aiohttp l.369 at 0x2579ba27210>)",
              "type": "Instance of aiohttp.client.ClientSession"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Name.session l.370 at 0x2579ba74c10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.decode(attrname='decode',\n                 expr=<Name.line l.379 at 0x2579ba74350>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.startswith(attrname='startswith',\n                     expr=<Name.line_str l.380 at 0x2579ba769d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Name.data_str l.382 at 0x2579ba75750>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.loads(attrname='loads',\n                expr=<Name.json l.386 at 0x2579ba76c10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.text(attrname='text',\n               expr=<Name.response l.393 at 0x2579ba77e10>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Exception(name='Exception')",
              "type": "Instance of builtins.Exception"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.397 at 0x2579ba756d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get_model_config(attrname='get_model_config',\n                           expr=<Name.self l.403 at 0x2579ba76310>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.config l.414 at 0x2579ba63890>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.config l.415 at 0x2579ba63410>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.config l.416 at 0x2579ba62d90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.config l.417 at 0x2579ba637d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.ClientSession(attrname='ClientSession',\n                        expr=<Name.aiohttp l.425 at 0x2579ba63a90>)",
              "type": "Instance of aiohttp.client.ClientSession"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Name.session l.426 at 0x2579ba62010>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.decode(attrname='decode',\n                 expr=<Name.line l.435 at 0x2579b9ed090>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.startswith(attrname='startswith',\n                     expr=<Name.line_str l.436 at 0x2579b9ece50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.loads(attrname='loads',\n                expr=<Name.json l.440 at 0x2579b9eca10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.text(attrname='text',\n               expr=<Name.response l.450 at 0x2579b9eca50>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Exception(name='Exception')",
              "type": "Instance of builtins.Exception"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.454 at 0x2579b9ef6d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Attribute.api_keys l.468 at 0x2579b9f6990>)",
              "type": "DictItems.list(ctx=None,\n               elts=[ <Tuple.tuple l.19 at 0x2579b9b0e10>,\n                 <Tuple.tuple l.20 at 0x2579b9b0e90>,\n                 <Tuple.tuple l.21 at 0x2579e5b1c90>])"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.481 at 0x2579b9f7990>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.491 at 0x2579b9f7210>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.494 at 0x2579b9f7890>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            }
          ],
          "unresolved_imports": [
            "os",
            "asyncio",
            "aiohttp",
            "logging",
            "json",
            "json",
            "json"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": "llm\\claude_flow_integration.py",
        "language": "python",
        "file_size": 16631,
        "line_count": 529,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "__init__",
            "line_number": 29,
            "parameters": [
              "self",
              "swarm_dir"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          }
        ],
        "classes": [
          {
            "name": "ClaudeFlowIntegration",
            "line_number": 17,
            "bases": [],
            "decorators": [],
            "docstring": "Integration with Claude-Flow agent orchestration platform\n\nFeatures:\n- Multi-agent swarm coordination (84.8% SWE-Bench solve rate)\n- ReasoningBank persistent memory with semantic search\n- 100 MCP tools for automation\n- 64 specialized agents\n- 32.3% token reduction, 2.8-4.4x speed improvement",
            "methods": [
              "__init__"
            ],
            "method_count": 1
          }
        ],
        "imports": [
          {
            "type": "import",
            "modules": [
              "subprocess"
            ],
            "line_number": 7
          },
          {
            "type": "import",
            "modules": [
              "json"
            ],
            "line_number": 8
          },
          {
            "type": "import",
            "modules": [
              "logging"
            ],
            "line_number": 9
          },
          {
            "type": "from_import",
            "module": "typing",
            "names": [
              "Dict",
              "List",
              "Any",
              "Optional"
            ],
            "level": 0,
            "line_number": 10
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 11
          },
          {
            "type": "import",
            "modules": [
              "asyncio"
            ],
            "line_number": 12
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 1,
          "function_count": 1,
          "class_count": 1,
          "import_count": 6,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.getLogger(attrname='getLogger',\n                    expr=<Name.logging l.14 at 0x2579b14a790>)",
              "type": "Instance of logging.RootLogger"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.mkdir(attrname='mkdir',\n                expr=<Attribute.swarm_dir l.31 at 0x2579b149290>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.subprocess l.39 at 0x2579b148a90>)",
              "type": "Instance of subprocess.CompletedProcess"
            },
            {
              "function": "Attribute.warning(attrname='warning',\n                  expr=<Name.logger l.47 at 0x25799ceff50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.48 at 0x2579a294550>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.subprocess l.52 at 0x2579b905510>)",
              "type": "Instance of subprocess.CompletedProcess"
            },
            {
              "function": "Attribute.warning(attrname='warning',\n                  expr=<Name.logger l.60 at 0x2579b906890>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.subprocess l.64 at 0x2579b906b90>)",
              "type": "Instance of subprocess.CompletedProcess"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.73 at 0x2579b906910>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.74 at 0x2579b907050>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Attribute.stdout l.74 at 0x2579b906dd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.75 at 0x2579b906e10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Attribute.stdout l.75 at 0x2579b907550>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.warning(attrname='warning',\n                  expr=<Name.logger l.78 at 0x2579b9065d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.79 at 0x2579b907b10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.83 at 0x2579b905bd0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.84 at 0x2579b905990>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.87 at 0x2579b905250>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.subprocess l.112 at 0x2579b8f1390>)",
              "type": "Instance of subprocess.CompletedProcess"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.127 at 0x2579b8f25d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Const.str l.154 at 0x2579b8f3150>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.subprocess l.156 at 0x2579b8f3c10>)",
              "type": "Instance of subprocess.CompletedProcess"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.172 at 0x2579b52fc10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.175 at 0x2579b52e910>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.subprocess l.201 at 0x2579b54dfd0>)",
              "type": "Instance of subprocess.CompletedProcess"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.217 at 0x2579b54dd90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.subprocess l.255 at 0x2579aa35910>)",
              "type": "Instance of subprocess.CompletedProcess"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.271 at 0x2579aa364d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.subprocess l.301 at 0x2579aa374d0>)",
              "type": "Instance of subprocess.CompletedProcess"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.317 at 0x2579b7fc8d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.subprocess l.328 at 0x2579b7fc310>)",
              "type": "Instance of subprocess.CompletedProcess"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Attribute.memory_db l.340 at 0x2579b7fee90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.344 at 0x2579b7ff1d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.subprocess l.377 at 0x2579b7fce10>)",
              "type": "Instance of subprocess.CompletedProcess"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.392 at 0x2579b6eb110>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Attribute.swarm_dir l.407 at 0x2579b6e9a10>)",
              "type": "Const.bool(value=False,\n           kind=None)"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Attribute.memory_db l.408 at 0x2579b6e8cd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.subprocess l.414 at 0x2579b6e8710>)",
              "type": "Instance of subprocess.CompletedProcess"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Attribute.stdout l.422 at 0x2579b6e9090>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.subprocess l.427 at 0x2579b6eb750>)",
              "type": "Instance of subprocess.CompletedProcess"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Attribute.stdout l.435 at 0x2579b6e9d50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.subprocess l.439 at 0x2579b7c5410>)",
              "type": "Instance of subprocess.CompletedProcess"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Attribute.stdout l.447 at 0x2579b7c6290>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.subprocess l.464 at 0x2579b7c7a10>)",
              "type": "Instance of subprocess.CompletedProcess"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.478 at 0x2579b7c77d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.execute_task(attrname='execute_task',\n                       expr=<Name.self l.505 at 0x2579c061090>)",
              "type": "Dict.dict(items=[ ( <Const.str l.165 at 0x2579b8f3d90>,\n              <Compare l.165 at 0x2579b8f29d0>),\n            ( <Const.str l.166 at 0x2579b5e5810>,\n              <Attribute.stdout l.166 at 0x2579b8f36d0>),\n            ( <Const.str l.167 at 0x2579aabbe10>,\n              <IfExp l.167 at 0x2579d108f10>),\n            ( <Const.str l.168 at 0x2579b52c450>,\n              <Name.task l.168 at 0x2579aabb050>)])"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Const.str l.506 at 0x2579c0635d0>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.511 at 0x2579c060d90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.ClaudeFlowIntegration(name='ClaudeFlowIntegration')",
              "type": "Instance of .ClaudeFlowIntegration"
            },
            {
              "function": "Attribute.initialize(attrname='initialize',\n                     expr=<Name._claude_flow_instance l.525 at 0x2579b7cac50>)",
              "type": "Const.bool(value=False,\n           kind=None)"
            }
          ],
          "unresolved_imports": [
            "subprocess",
            "json",
            "logging",
            "asyncio"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": "llm\\local_models.py",
        "language": "python",
        "file_size": 18742,
        "line_count": 455,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "__init__",
            "line_number": 18,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          }
        ],
        "classes": [
          {
            "name": "LocalModelManager",
            "line_number": 15,
            "bases": [],
            "decorators": [],
            "docstring": "Manager für lokale LLM-Modelle",
            "methods": [
              "__init__"
            ],
            "method_count": 1
          }
        ],
        "imports": [
          {
            "type": "import",
            "modules": [
              "os"
            ],
            "line_number": 5
          },
          {
            "type": "import",
            "modules": [
              "asyncio"
            ],
            "line_number": 6
          },
          {
            "type": "import",
            "modules": [
              "json"
            ],
            "line_number": 7
          },
          {
            "type": "import",
            "modules": [
              "aiohttp"
            ],
            "line_number": 8
          },
          {
            "type": "from_import",
            "module": "typing",
            "names": [
              "Dict",
              "Any",
              "List",
              "Optional",
              "AsyncGenerator"
            ],
            "level": 0,
            "line_number": 9
          },
          {
            "type": "import",
            "modules": [
              "logging"
            ],
            "line_number": 10
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 1,
          "function_count": 1,
          "class_count": 1,
          "import_count": 6,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.getLogger(attrname='getLogger',\n                    expr=<Name.logging l.12 at 0x2579985e150>)",
              "type": "Instance of logging.RootLogger"
            },
            {
              "function": "Attribute.getenv(attrname='getenv',\n                 expr=<Name.os l.19 at 0x2579b1ad6d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.getenv(attrname='getenv',\n                 expr=<Name.os l.20 at 0x2579b1adfd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.getenv(attrname='getenv',\n                 expr=<Name.os l.21 at 0x2579b1ae010>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.expanduser(attrname='expanduser',\n                     expr=<Attribute.path l.21 at 0x2579b1ae550>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._check_services(attrname='_check_services',\n                          expr=<Name.self l.39 at 0x2579b1ad750>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._load_available_models(attrname='_load_available_models',\n                                 expr=<Name.self l.42 at 0x2579b1acc90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.44 at 0x2579b1ada50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.47 at 0x2579b1aedd0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._check_ollama(attrname='_check_ollama',\n                        expr=<Name.self l.52 at 0x2579b3207d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._check_lmstudio(attrname='_check_lmstudio',\n                          expr=<Name.self l.53 at 0x2579b323710>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._check_gpt4all(attrname='_check_gpt4all',\n                         expr=<Name.self l.54 at 0x2579b323910>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.57 at 0x2579b322a90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Attribute.services l.57 at 0x2579b323190>)",
              "type": "DictItems.list(ctx=None,\n               elts=[ <Tuple.tuple l.52 at 0x2579b489e90>,\n                 <Tuple.tuple l.53 at 0x2579b488610>,\n                 <Tuple.tuple l.54 at 0x2579e627b10>])"
            },
            {
              "function": "Attribute.ClientSession(attrname='ClientSession',\n                        expr=<Name.aiohttp l.62 at 0x2579b404290>)",
              "type": "Instance of aiohttp.client.ClientSession"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.session l.63 at 0x2579b405d90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.ClientSession(attrname='ClientSession',\n                        expr=<Name.aiohttp l.71 at 0x2579b404fd0>)",
              "type": "Instance of aiohttp.client.ClientSession"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.session l.72 at 0x2579b404e10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Attribute.path l.80 at 0x2579b405710>)",
              "type": "Const.bool(value=False,\n           kind=None)"
            },
            {
              "function": "Attribute._get_ollama_models(attrname='_get_ollama_models',\n                             expr=<Name.self l.90 at 0x2579b3d0e10>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute._get_lmstudio_models(attrname='_get_lmstudio_models',\n                               expr=<Name.self l.95 at 0x2579b3d0490>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute._get_gpt4all_models(attrname='_get_gpt4all_models',\n                              expr=<Name.self l.100 at 0x2579b3d0b10>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.ClientSession(attrname='ClientSession',\n                        expr=<Name.aiohttp l.108 at 0x2579b3d29d0>)",
              "type": "Instance of aiohttp.client.ClientSession"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.session l.109 at 0x2579b3d3690>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.json(attrname='json',\n               expr=<Name.response l.111 at 0x2579b3d3e50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.data l.113 at 0x2579b3d0110>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.model_info l.118 at 0x2579b3d2810>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.model_info l.119 at 0x2579b3d3310>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.127 at 0x2579b3b0c90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.ClientSession(attrname='ClientSession',\n                        expr=<Name.aiohttp l.136 at 0x2579b3b06d0>)",
              "type": "Instance of aiohttp.client.ClientSession"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.session l.137 at 0x2579b3b3610>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.json(attrname='json',\n               expr=<Name.response l.139 at 0x2579b3b0410>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.data l.141 at 0x2579b3b10d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.153 at 0x2579b3b2550>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.endswith(attrname='endswith',\n                   expr=<Name.file_name l.163 at 0x2579b3b1490>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.endswith(attrname='endswith',\n                   expr=<Name.file_name l.163 at 0x2579b3b19d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.splitext(attrname='splitext',\n                   expr=<Attribute.path l.164 at 0x2579b3b2990>)",
              "type": "Tuple.tuple(ctx=<Context.Load: 1>,\n            elts=[ <Subscript l.139 at 0x257db551850>,\n              <Subscript l.139 at 0x257db550510>])"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Attribute.path l.168 at 0x2579b3b15d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Attribute.path l.171 at 0x2579b3aca90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.176 at 0x2579b3aead0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get_available_models(attrname='get_available_models',\n                               expr=<Name.self l.186 at 0x2579b3acf10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get_model_info(attrname='get_model_info',\n                         expr=<Name.self l.205 at 0x2579b3adcd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute._generate_ollama_response(attrname='_generate_ollama_response',\n                                    expr=<Name.self l.212 at 0x2579b131e50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._generate_lmstudio_response(attrname='_generate_lmstudio_response',\n                                      expr=<Name.self l.214 at 0x2579b130fd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._generate_gpt4all_response(attrname='_generate_gpt4all_response',\n                                     expr=<Name.self l.216 at 0x2579b132fd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.221 at 0x2579b130810>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get_model_config(attrname='get_model_config',\n                           expr=<Name.self l.227 at 0x2579b127a50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.config l.234 at 0x2579b126950>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.config l.235 at 0x2579b127850>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.config l.236 at 0x2579b126ed0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.config l.237 at 0x2579b126390>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.ClientSession(attrname='ClientSession',\n                        expr=<Name.aiohttp l.241 at 0x2579b124f50>)",
              "type": "Instance of aiohttp.client.ClientSession"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Name.session l.242 at 0x2579b03b150>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.json(attrname='json',\n               expr=<Name.response l.248 at 0x2579b039c90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.data l.249 at 0x2579b03bc50>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Exception(name='Exception')",
              "type": "Instance of builtins.Exception"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.254 at 0x2579b03add0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get_model_config(attrname='get_model_config',\n                           expr=<Name.self l.260 at 0x2579b325890>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.config l.267 at 0x2579b326290>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.config l.268 at 0x2579b325f10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.ClientSession(attrname='ClientSession',\n                        expr=<Name.aiohttp l.272 at 0x2579b327750>)",
              "type": "Instance of aiohttp.client.ClientSession"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Name.session l.273 at 0x2579b326d90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.json(attrname='json',\n               expr=<Name.response l.279 at 0x2579b327890>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Exception(name='Exception')",
              "type": "Instance of builtins.Exception"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.285 at 0x2579b324a90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.296 at 0x2579b3258d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get_model_info(attrname='get_model_info',\n                         expr=<Name.self l.302 at 0x2579b12ea90>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute._generate_ollama_streaming_response(attrname='_generate_ollama_streaming_response',\n                                              expr=<Name.self l.309 at 0x2579b13f790>)",
              "type": "AsyncGenerator(async_generator)"
            },
            {
              "function": "Attribute._generate_lmstudio_streaming_response(attrname='_generate_lmstudio_streaming_response',\n                                                expr=<Name.self l.312 at 0x2579b13fed0>)",
              "type": "AsyncGenerator(async_generator)"
            },
            {
              "function": "Attribute._generate_gpt4all_streaming_response(attrname='_generate_gpt4all_streaming_response',\n                                               expr=<Name.self l.315 at 0x2579b13f290>)",
              "type": "AsyncGenerator(async_generator)"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.321 at 0x2579b13c1d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get_model_config(attrname='get_model_config',\n                           expr=<Name.self l.327 at 0x2579b13f5d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.config l.334 at 0x2579b13dc90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.config l.335 at 0x2579b13db50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.config l.336 at 0x2579b13f010>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.config l.337 at 0x2579b13ec90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.ClientSession(attrname='ClientSession',\n                        expr=<Name.aiohttp l.341 at 0x2579b2245d0>)",
              "type": "Instance of aiohttp.client.ClientSession"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Name.session l.342 at 0x2579b2258d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.loads(attrname='loads',\n                expr=<Name.json l.351 at 0x2579b225750>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.decode(attrname='decode',\n                 expr=<Name.line l.351 at 0x2579b226810>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Exception(name='Exception')",
              "type": "Instance of builtins.Exception"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.360 at 0x2579b224210>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get_model_config(attrname='get_model_config',\n                           expr=<Name.self l.366 at 0x2579b226450>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.config l.373 at 0x2579b10d790>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.config l.374 at 0x2579b10c790>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.ClientSession(attrname='ClientSession',\n                        expr=<Name.aiohttp l.378 at 0x2579b10ebd0>)",
              "type": "Instance of aiohttp.client.ClientSession"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Name.session l.379 at 0x2579b10c590>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.decode(attrname='decode',\n                 expr=<Name.line l.388 at 0x2579b10c1d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.startswith(attrname='startswith',\n                     expr=<Name.line_str l.389 at 0x2579b10ff50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Name.data_str l.391 at 0x2579b10c350>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.loads(attrname='loads',\n                expr=<Name.json l.393 at 0x2579b10f250>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Subscript l.395 at 0x2579b10fb50>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.Exception(name='Exception')",
              "type": "Instance of builtins.Exception"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.404 at 0x2579b2d1b10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Name.response l.413 at 0x2579b2d0410>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.sleep(attrname='sleep',\n                expr=<Name.asyncio l.415 at 0x2579b2d0b10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.418 at 0x2579b2d1510>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._check_services(attrname='_check_services',\n                          expr=<Name.self l.432 at 0x2579b2d3e90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.values(attrname='values',\n                 expr=<Attribute.services l.434 at 0x2579b2d3cd0>)",
              "type": "DictValues.list(ctx=None,\n                elts=[ <Await l.52 at 0x2579b1ac190>,\n                  <Await l.53 at 0x2579b323050>,\n                  <Await l.54 at 0x2579b323ed0>])"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.441 at 0x2579b2d1e50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.451 at 0x2579b31d890>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.454 at 0x2579b31e810>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            }
          ],
          "unresolved_imports": [
            "os",
            "asyncio",
            "json",
            "aiohttp",
            "logging"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": "llm\\model_manager.py",
        "language": "python",
        "file_size": 10500,
        "line_count": 285,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "__init__",
            "line_number": 20,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "get_current_model",
            "line_number": 243,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Gibt das aktuelle Modell zurück",
            "is_async": false,
            "complexity": 1
          }
        ],
        "classes": [
          {
            "name": "ModelManager",
            "line_number": 17,
            "bases": [],
            "decorators": [],
            "docstring": "Hauptklasse für LLM-Modell-Management",
            "methods": [
              "__init__",
              "get_current_model"
            ],
            "method_count": 2
          }
        ],
        "imports": [
          {
            "type": "import",
            "modules": [
              "os"
            ],
            "line_number": 5
          },
          {
            "type": "import",
            "modules": [
              "asyncio"
            ],
            "line_number": 6
          },
          {
            "type": "from_import",
            "module": "typing",
            "names": [
              "Dict",
              "Any",
              "Optional",
              "List",
              "Union"
            ],
            "level": 0,
            "line_number": 7
          },
          {
            "type": "import",
            "modules": [
              "logging"
            ],
            "line_number": 8
          },
          {
            "type": "from_import",
            "module": "abc",
            "names": [
              "ABC",
              "abstractmethod"
            ],
            "level": 0,
            "line_number": 9
          },
          {
            "type": "from_import",
            "module": "local_models",
            "names": [
              "LocalModelManager"
            ],
            "level": 1,
            "line_number": 11
          },
          {
            "type": "from_import",
            "module": "api_models",
            "names": [
              "APIModelManager"
            ],
            "level": 1,
            "line_number": 12
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 2,
          "function_count": 2,
          "class_count": 1,
          "import_count": 7,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.getLogger(attrname='getLogger',\n                    expr=<Name.logging l.14 at 0x2579b973ed0>)",
              "type": "Instance of logging.RootLogger"
            },
            {
              "function": "Name.LocalModelManager(name='LocalModelManager')",
              "type": "Uninferable"
            },
            {
              "function": "Name.APIModelManager(name='APIModelManager')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.initialize(attrname='initialize',\n                     expr=<Attribute.local_manager l.31 at 0x2579b2b7090>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.initialize(attrname='initialize',\n                     expr=<Attribute.api_manager l.34 at 0x2579b2b5390>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.set_default_model(attrname='set_default_model',\n                            expr=<Name.self l.37 at 0x2579b2b65d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.39 at 0x2579b2b5e50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.42 at 0x2579b2b4550>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get_available_models(attrname='get_available_models',\n                               expr=<Attribute.local_manager l.49 at 0x2579b2b6b90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get_available_models(attrname='get_available_models',\n                               expr=<Attribute.api_manager l.50 at 0x2579b2b6490>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get_model_config(attrname='get_model_config',\n                           expr=<Attribute.local_manager l.56 at 0x2579b2b5c90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get_model_config(attrname='get_model_config',\n                           expr=<Attribute.api_manager l.60 at 0x2579b2b47d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.warning(attrname='warning',\n                  expr=<Name.logger l.62 at 0x2579b2b4ed0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.65 at 0x2579b2b5890>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get_available_models(attrname='get_available_models',\n                               expr=<Attribute.local_manager l.78 at 0x2579b2a1d10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.is_model_available(attrname='is_model_available',\n                             expr=<Attribute.local_manager l.85 at 0x2579b2a0250>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get_model_config(attrname='get_model_config',\n                           expr=<Attribute.local_manager l.88 at 0x2579b2a2790>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.89 at 0x2579b2a0a90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.is_model_available(attrname='is_model_available',\n                             expr=<Attribute.api_manager l.94 at 0x2579b2a06d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get_model_config(attrname='get_model_config',\n                           expr=<Attribute.api_manager l.97 at 0x2579b2a3810>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.98 at 0x2579b2a2950>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.106 at 0x2579b2a3690>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.generate_response(attrname='generate_response',\n                            expr=<Attribute.local_manager l.125 at 0x2579b2a2510>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.generate_response(attrname='generate_response',\n                            expr=<Attribute.api_manager l.129 at 0x2579b0d5890>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.136 at 0x2579b0d4cd0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.generate_streaming_response(attrname='generate_streaming_response',\n                                      expr=<Attribute.local_manager l.155 at 0x2579b144cd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.generate_streaming_response(attrname='generate_streaming_response',\n                                      expr=<Attribute.api_manager l.160 at 0x2579b144fd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.168 at 0x2579b1453d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get_available_models(attrname='get_available_models',\n                               expr=<Attribute.local_manager l.174 at 0x2579b144950>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get_available_models(attrname='get_available_models',\n                               expr=<Attribute.api_manager l.175 at 0x2579b146210>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.183 at 0x2579b144590>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get_available_models(attrname='get_available_models',\n                               expr=<Attribute.local_manager l.190 at 0x2579b309f10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get_model_info(attrname='get_model_info',\n                         expr=<Attribute.local_manager l.197 at 0x2579b3096d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get_model_info(attrname='get_model_info',\n                         expr=<Attribute.api_manager l.199 at 0x2579b31ea90>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.204 at 0x2579b31f590>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get_available_models(attrname='get_available_models',\n                               expr=<Attribute.local_manager l.211 at 0x2579b31e1d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.generate_response(attrname='generate_response',\n                            expr=<Attribute.local_manager l.220 at 0x2579b31c890>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.generate_response(attrname='generate_response',\n                            expr=<Attribute.api_manager l.222 at 0x2579b18f910>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.235 at 0x2579b18dd50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.health_check(attrname='health_check',\n                       expr=<Attribute.local_manager l.255 at 0x2579b18ea10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.health_check(attrname='health_check',\n                       expr=<Attribute.api_manager l.256 at 0x2579b18ef10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get_current_model(attrname='get_current_model',\n                            expr=<Name.self l.257 at 0x2579b18e790>)",
              "type": "Dict.dict(items=[ ( <Const.str l.246 at 0x2579b18f110>,\n              <Attribute.current_model l.246 at 0x2579b18c150>),\n            ( <Const.str l.247 at 0x2579b18f990>,\n              <Attribute.model_type l.247 at 0x2579b18ffd0>),\n            ( <Const.str l.248 at 0x2579b18fa10>,\n              <Attribute.model_config l.248 at 0x2579b18e8d0>)])"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.270 at 0x2579b18f410>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.cleanup(attrname='cleanup',\n                  expr=<Attribute.local_manager l.279 at 0x257996e7750>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.cleanup(attrname='cleanup',\n                  expr=<Attribute.api_manager l.280 at 0x257996e77d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.281 at 0x257996e5510>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.284 at 0x2579ad57550>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            }
          ],
          "unresolved_imports": [
            "os",
            "asyncio",
            "logging"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": "llm\\prompt_templates.py",
        "language": "python",
        "file_size": 17692,
        "line_count": 671,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "__init__",
            "line_number": 95,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "get_template",
            "line_number": 107,
            "parameters": [
              "self",
              "template_name"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Gibt einen Prompt-Template zurück",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "_get_project_analysis_template",
            "line_number": 115,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Template für Projekt-Analyse",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_get_code_review_template",
            "line_number": 174,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Template für Code-Review",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_get_optimization_template",
            "line_number": 225,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Template für Optimierungsvorschläge",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_get_test_generation_template",
            "line_number": 283,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Template für Test-Generierung",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_get_documentation_template",
            "line_number": 357,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Template für Dokumentation",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_get_security_analysis_template",
            "line_number": 423,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Template für Security-Analyse",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_get_deployment_plan_template",
            "line_number": 493,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Template für Deployment-Plan",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_get_chat_response_template",
            "line_number": 566,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Template für Chat-Antworten",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "get_custom_template",
            "line_number": 608,
            "parameters": [
              "self",
              "task",
              "context"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Erstellt einen benutzerdefinierten Template",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "list_templates",
            "line_number": 635,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Gibt alle verfügbaren Templates zurück",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "get_template_info",
            "line_number": 639,
            "parameters": [
              "self",
              "template_name"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Gibt Informationen über ein Template zurück",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "_get_template_description",
            "line_number": 657,
            "parameters": [
              "self",
              "template_name"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Gibt eine Beschreibung des Templates zurück",
            "is_async": false,
            "complexity": 1
          }
        ],
        "classes": [
          {
            "name": "PromptTemplates",
            "line_number": 92,
            "bases": [],
            "decorators": [],
            "docstring": "Sammlung von Prompt-Templates für verschiedene Aufgaben",
            "methods": [
              "__init__",
              "get_template",
              "_get_project_analysis_template",
              "_get_code_review_template",
              "_get_optimization_template",
              "_get_test_generation_template",
              "_get_documentation_template",
              "_get_security_analysis_template",
              "_get_deployment_plan_template",
              "_get_chat_response_template",
              "get_custom_template",
              "list_templates",
              "get_template_info",
              "_get_template_description"
            ],
            "method_count": 14
          }
        ],
        "imports": [
          {
            "type": "from_import",
            "module": "typing",
            "names": [
              "Dict",
              "Any",
              "List"
            ],
            "level": 0,
            "line_number": 5
          },
          {
            "type": "import",
            "modules": [
              "json"
            ],
            "line_number": 6
          },
          {
            "type": "import",
            "modules": [
              "re"
            ],
            "line_number": 647
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 16,
          "function_count": 14,
          "class_count": 1,
          "import_count": 3,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute._get_project_analysis_template(attrname='_get_project_analysis_template',\n                                         expr=<Name.self l.97 at 0x2579e3ea710>)",
              "type": "Const.str(value=('\\n'\n           'Du bist ein erfahrener Software-Architekt und '\n           'Projekt-Analyst. Analysiere das folgende Projekt und erstelle '\n           'eine umfassende Übersicht.\\n'\n           '\\n'\n           '**Projekt-Informationen:**\\n'\n           '- Name: {project_name}\\n'\n           '- Pfad: {project_path}\\n'\n           '- Dateien: {file_count}\\n'\n           '- Zeilen Code: {lines_of_code}\\n'\n           '- Dependencies: {dependency_count}\\n'\n           '\\n'\n           '**Erkannte Technologien:**\\n'\n           '{technologies}\\n'\n           '\\n'\n           '**Erkannte Frameworks:**\\n'\n           '{frameworks}\\n'\n           '\\n'\n           '**API-Endpoints:**\\n'\n           '{api_endpoints}\\n'\n           '\\n'\n           '**Datenbank-Schema:**\\n'\n           '{database_schema}\\n'\n           '\\n'\n           '**Bitte erstelle eine Analyse mit folgenden Aspekten:**\\n'\n           '\\n'\n           '1. **Projekt-Übersicht:**\\n'\n           '   - Projekttyp und Hauptzweck\\n'\n           '   - Architektur-Pattern\\n'\n           '   - Technologie-Stack-Bewertung\\n'\n           '\\n'\n           '2. **Code-Qualität:**\\n'\n           '   - Stärken und Schwächen\\n'\n           '   - Code-Organisation\\n'\n           '   - Best Practices\\n'\n           '\\n'\n           '3. **Performance-Bewertung:**\\n'\n           '   - Potentielle Bottlenecks\\n'\n           '   - Optimierungsmöglichkeiten\\n'\n           '   - Skalierbarkeit\\n'\n           '\\n'\n           '4. **Security-Analyse:**\\n'\n           '   - Identifizierte Risiken\\n'\n           '   - Sicherheitslücken\\n'\n           '   - Empfohlene Maßnahmen\\n'\n           '\\n'\n           '5. **Wartbarkeit:**\\n'\n           '   - Code-Komplexität\\n'\n           '   - Dokumentation\\n'\n           '   - Test-Coverage\\n'\n           '\\n'\n           '6. **Empfohlene Verbesserungen:**\\n'\n           '   - Priorisierte Liste\\n'\n           '   - Implementierungsaufwand\\n'\n           '   - Erwarteter Nutzen\\n'\n           '\\n'\n           'Antworte strukturiert und detailliert. Verwende '\n           'Markdown-Formatierung für bessere Lesbarkeit.\\n'),\n          kind=None)"
            },
            {
              "function": "Attribute._get_code_review_template(attrname='_get_code_review_template',\n                                    expr=<Name.self l.98 at 0x2579e3ea690>)",
              "type": "Const.str(value=('\\n'\n           'Du bist ein Senior-Entwickler und führst ein Code-Review '\n           'durch. Analysiere den folgenden Code und gib konstruktives '\n           'Feedback.\\n'\n           '\\n'\n           '**Code-Kontext:**\\n'\n           '- Datei: {file_path}\\n'\n           '- Funktion: {function_name}\\n'\n           '- Framework: {framework}\\n'\n           '- Sprache: {language}\\n'\n           '\\n'\n           '**Code:**\\n'\n           '```{language}\\n'\n           '{code}\\n'\n           '```\\n'\n           '\\n'\n           '**Bitte bewerte folgende Aspekte:**\\n'\n           '\\n'\n           '1. **Funktionalität:**\\n'\n           '   - Korrektheit der Logik\\n'\n           '   - Edge Cases\\n'\n           '   - Fehlerbehandlung\\n'\n           '\\n'\n           '2. **Code-Qualität:**\\n'\n           '   - Lesbarkeit und Verständlichkeit\\n'\n           '   - Namenskonventionen\\n'\n           '   - Code-Duplikation\\n'\n           '\\n'\n           '3. **Performance:**\\n'\n           '   - Effizienz der Algorithmen\\n'\n           '   - Speicherverbrauch\\n'\n           '   - Optimierungsmöglichkeiten\\n'\n           '\\n'\n           '4. **Best Practices:**\\n'\n           '   - Framework-spezifische Konventionen\\n'\n           '   - Design Patterns\\n'\n           '   - SOLID-Prinzipien\\n'\n           '\\n'\n           '5. **Security:**\\n'\n           '   - Sicherheitslücken\\n'\n           '   - Input-Validierung\\n'\n           '   - Datenexposition\\n'\n           '\\n'\n           '6. **Verbesserungsvorschläge:**\\n'\n           '   - Konkrete Änderungen\\n'\n           '   - Alternative Implementierungen\\n'\n           '   - Refactoring-Empfehlungen\\n'\n           '\\n'\n           'Gib spezifisches, konstruktives Feedback mit Code-Beispielen '\n           'wo nötig.\\n'),\n          kind=None)"
            },
            {
              "function": "Attribute._get_optimization_template(attrname='_get_optimization_template',\n                                     expr=<Name.self l.99 at 0x2579e3ea7d0>)",
              "type": "Const.str(value=('\\n'\n           'Du bist ein Performance-Experte und Code-Optimierer. '\n           'Analysiere das Projekt und erstelle konkrete '\n           'Optimierungsvorschläge.\\n'\n           '\\n'\n           '**Projekt-Kontext:**\\n'\n           '- Typ: {project_type}\\n'\n           '- Framework: {framework}\\n'\n           '- Größe: {project_size}\\n'\n           '- Performance-Issues: {performance_issues}\\n'\n           '\\n'\n           '**Aktuelle Metriken:**\\n'\n           '- Bundle-Größe: {bundle_size}\\n'\n           '- Ladezeit: {load_time}\\n'\n           '- Memory-Usage: {memory_usage}\\n'\n           '- CPU-Usage: {cpu_usage}\\n'\n           '\\n'\n           '**Bitte erstelle Optimierungsvorschläge für:**\\n'\n           '\\n'\n           '1. **Frontend-Optimierungen:**\\n'\n           '   - Bundle-Size-Reduktion\\n'\n           '   - Lazy Loading\\n'\n           '   - Caching-Strategien\\n'\n           '   - Image-Optimierung\\n'\n           '\\n'\n           '2. **Backend-Optimierungen:**\\n'\n           '   - Datenbankabfragen\\n'\n           '   - API-Performance\\n'\n           '   - Caching\\n'\n           '   - Async-Processing\\n'\n           '\\n'\n           '3. **Code-Optimierungen:**\\n'\n           '   - Algorithmus-Verbesserungen\\n'\n           '   - Memory-Management\\n'\n           '   - Code-Splitting\\n'\n           '   - Dead Code Elimination\\n'\n           '\\n'\n           '4. **Infrastruktur-Optimierungen:**\\n'\n           '   - CDN-Nutzung\\n'\n           '   - Compression\\n'\n           '   - HTTP/2\\n'\n           '   - Service-Worker\\n'\n           '\\n'\n           '5. **Monitoring & Profiling:**\\n'\n           '   - Performance-Metriken\\n'\n           '   - Bottleneck-Identifikation\\n'\n           '   - Continuous Monitoring\\n'\n           '\\n'\n           'Für jeden Vorschlag:\\n'\n           '- Beschreibung des Problems\\n'\n           '- Konkrete Lösung\\n'\n           '- Implementierungsaufwand (1-5)\\n'\n           '- Erwarteter Impact (1-5)\\n'\n           '- Code-Beispiele\\n'\n           '\\n'\n           'Priorisiere die Vorschläge nach Impact/Aufwand-Verhältnis.\\n'),\n          kind=None)"
            },
            {
              "function": "Attribute._get_test_generation_template(attrname='_get_test_generation_template',\n                                        expr=<Name.self l.100 at 0x2579ae80e10>)",
              "type": "Const.str(value=('\\n'\n           'Du bist ein Test-Experte und generierst umfassende Tests für '\n           'das Projekt.\\n'\n           '\\n'\n           '**Projekt-Kontext:**\\n'\n           '- Framework: {framework}\\n'\n           '- Test-Framework: {test_framework}\\n'\n           '- Sprache: {language}\\n'\n           '- Test-Coverage: {current_coverage}%\\n'\n           '\\n'\n           '**Zu testende Komponenten:**\\n'\n           '{components}\\n'\n           '\\n'\n           '**Bitte generiere Tests für:**\\n'\n           '\\n'\n           '1. **Unit-Tests:**\\n'\n           '   - Alle öffentlichen Funktionen\\n'\n           '   - Edge Cases\\n'\n           '   - Error-Handling\\n'\n           '   - Mocking-Strategien\\n'\n           '\\n'\n           '2. **Integration-Tests:**\\n'\n           '   - API-Endpoints\\n'\n           '   - Datenbank-Interaktionen\\n'\n           '   - Service-Integration\\n'\n           '   - External-Dependencies\\n'\n           '\\n'\n           '3. **End-to-End-Tests:**\\n'\n           '   - User-Journeys\\n'\n           '   - Critical-Paths\\n'\n           '   - Cross-Browser-Testing\\n'\n           '   - Performance-Tests\\n'\n           '\\n'\n           '4. **Test-Utilities:**\\n'\n           '   - Test-Fixtures\\n'\n           '   - Helper-Functions\\n'\n           '   - Mock-Objects\\n'\n           '   - Test-Data\\n'\n           '\\n'\n           '**Für jeden Test:**\\n'\n           '- Test-Name (deskriptiv)\\n'\n           '- Test-Description\\n'\n           '- Setup/Teardown\\n'\n           '- Assertions\\n'\n           '- Code-Implementation\\n'\n           '\\n'\n           '**Test-Struktur:**\\n'\n           '```{language}\\n'\n           '// Test-Beispiel\\n'\n           \"describe('ComponentName', () => {{\\n\"\n           '    beforeEach(() => {{\\n'\n           '        // Setup\\n'\n           '    }});\\n'\n           '\\n'\n           \"    it('should handle valid input', () => {{\\n\"\n           '        // Arrange\\n'\n           '        // Act\\n'\n           '        // Assert\\n'\n           '    }});\\n'\n           '\\n'\n           \"    it('should handle edge cases', () => {{\\n\"\n           '        // Test edge cases\\n'\n           '    }});\\n'\n           '}});\\n'\n           '```\\n'\n           '\\n'\n           'Fokussiere auf:\\n'\n           '- Hohe Test-Coverage\\n'\n           '- Lesbare Tests\\n'\n           '- Wartbare Test-Struktur\\n'\n           '- Performance-Tests\\n'),\n          kind=None)"
            },
            {
              "function": "Attribute._get_documentation_template(attrname='_get_documentation_template',\n                                      expr=<Name.self l.101 at 0x2579e377110>)",
              "type": "Const.str(value=('\\n'\n           'Du bist ein Technical Writer und erstellst umfassende '\n           'Dokumentation für das Projekt.\\n'\n           '\\n'\n           '**Projekt-Informationen:**\\n'\n           '- Name: {project_name}\\n'\n           '- Typ: {project_type}\\n'\n           '- Framework: {framework}\\n'\n           '- Zielgruppe: {target_audience}\\n'\n           '\\n'\n           '**Bitte erstelle Dokumentation für:**\\n'\n           '\\n'\n           '1. **README.md:**\\n'\n           '   - Projekt-Beschreibung\\n'\n           '   - Installation & Setup\\n'\n           '   - Quick Start Guide\\n'\n           '   - Usage Examples\\n'\n           '   - Contributing Guidelines\\n'\n           '\\n'\n           '2. **API-Dokumentation:**\\n'\n           '   - Endpoint-Übersicht\\n'\n           '   - Request/Response-Formate\\n'\n           '   - Authentication\\n'\n           '   - Error-Codes\\n'\n           '   - Code-Beispiele\\n'\n           '\\n'\n           '3. **Architektur-Dokumentation:**\\n'\n           '   - System-Übersicht\\n'\n           '   - Komponenten-Diagramm\\n'\n           '   - Datenfluss\\n'\n           '   - Design-Decisions\\n'\n           '   - Deployment-Architecture\\n'\n           '\\n'\n           '4. **Developer-Guide:**\\n'\n           '   - Development-Setup\\n'\n           '   - Code-Standards\\n'\n           '   - Testing-Guide\\n'\n           '   - Debugging-Tips\\n'\n           '   - Performance-Best-Practices\\n'\n           '\\n'\n           '5. **User-Guide:**\\n'\n           '   - Feature-Übersicht\\n'\n           '   - Step-by-Step-Anleitungen\\n'\n           '   - Screenshots/Diagrams\\n'\n           '   - FAQ\\n'\n           '   - Troubleshooting\\n'\n           '\\n'\n           '**Dokumentations-Standards:**\\n'\n           '- Klare, präzise Sprache\\n'\n           '- Code-Beispiele\\n'\n           '- Screenshots wo nötig\\n'\n           '- Aktuelle Informationen\\n'\n           '- Suchbare Struktur\\n'\n           '\\n'\n           '**Format:**\\n'\n           'Verwende Markdown mit:\\n'\n           '- Überschriften (H1-H6)\\n'\n           '- Code-Blöcke mit Syntax-Highlighting\\n'\n           '- Listen und Tabellen\\n'\n           '- Links und Referenzen\\n'\n           '- Emojis für bessere Lesbarkeit\\n'\n           '\\n'\n           'Erstelle eine vollständige, professionelle Dokumentation.\\n'),\n          kind=None)"
            },
            {
              "function": "Attribute._get_security_analysis_template(attrname='_get_security_analysis_template',\n                                          expr=<Name.self l.102 at 0x2579e375510>)",
              "type": "Const.str(value=('\\n'\n           'Du bist ein Security-Experte und führst eine umfassende '\n           'Sicherheitsanalyse durch.\\n'\n           '\\n'\n           '**Projekt-Kontext:**\\n'\n           '- Typ: {project_type}\\n'\n           '- Framework: {framework}\\n'\n           '- Dependencies: {dependency_count}\\n'\n           '- API-Endpoints: {api_count}\\n'\n           '\\n'\n           '**Identifizierte Vulnerabilities:**\\n'\n           '{vulnerabilities}\\n'\n           '\\n'\n           '**Bitte analysiere folgende Security-Aspekte:**\\n'\n           '\\n'\n           '1. **Dependency-Security:**\\n'\n           '   - Veraltete Packages\\n'\n           '   - Bekannte Vulnerabilities\\n'\n           '   - License-Compliance\\n'\n           '   - Supply-Chain-Risiken\\n'\n           '\\n'\n           '2. **Authentication & Authorization:**\\n'\n           '   - Login-Mechanismen\\n'\n           '   - Session-Management\\n'\n           '   - Role-Based-Access\\n'\n           '   - Password-Policies\\n'\n           '\\n'\n           '3. **Input-Validation:**\\n'\n           '   - SQL-Injection-Schutz\\n'\n           '   - XSS-Prevention\\n'\n           '   - CSRF-Protection\\n'\n           '   - File-Upload-Security\\n'\n           '\\n'\n           '4. **Data-Protection:**\\n'\n           '   - Encryption-at-Rest\\n'\n           '   - Encryption-in-Transit\\n'\n           '   - PII-Handling\\n'\n           '   - Data-Minimization\\n'\n           '\\n'\n           '5. **API-Security:**\\n'\n           '   - Rate-Limiting\\n'\n           '   - Input-Sanitization\\n'\n           '   - Error-Handling\\n'\n           '   - CORS-Configuration\\n'\n           '\\n'\n           '6. **Infrastructure-Security:**\\n'\n           '   - HTTPS-Enforcement\\n'\n           '   - Security-Headers\\n'\n           '   - Container-Security\\n'\n           '   - Network-Security\\n'\n           '\\n'\n           '**Für jeden Bereich:**\\n'\n           '- Aktuelle Sicherheitslage\\n'\n           '- Identifizierte Risiken\\n'\n           '- Konkrete Verbesserungen\\n'\n           '- Implementierungs-Priorität\\n'\n           '- Code-Beispiele\\n'\n           '\\n'\n           '**Security-Score:**\\n'\n           'Bewerte das Projekt auf einer Skala von 1-10 für:\\n'\n           '- Overall Security\\n'\n           '- Authentication\\n'\n           '- Data Protection\\n'\n           '- API Security\\n'\n           '- Infrastructure\\n'\n           '\\n'\n           'Erstelle einen detaillierten Security-Report mit konkreten '\n           'Handlungsempfehlungen.\\n'),\n          kind=None)"
            },
            {
              "function": "Attribute._get_deployment_plan_template(attrname='_get_deployment_plan_template',\n                                        expr=<Name.self l.103 at 0x2579af40a50>)",
              "type": "Const.str(value=('\\n'\n           'Du bist ein DevOps-Experte und erstellst einen umfassenden '\n           'Deployment-Plan.\\n'\n           '\\n'\n           '**Projekt-Kontext:**\\n'\n           '- Typ: {project_type}\\n'\n           '- Framework: {framework}\\n'\n           '- Dependencies: {dependencies}\\n'\n           '- Database: {database}\\n'\n           '- Target-Environment: {environment}\\n'\n           '\\n'\n           '**Bitte erstelle einen Deployment-Plan für:**\\n'\n           '\\n'\n           '1. **Containerisierung:**\\n'\n           '   - Dockerfile-Optimierung\\n'\n           '   - Multi-Stage-Builds\\n'\n           '   - Image-Size-Reduktion\\n'\n           '   - Security-Best-Practices\\n'\n           '\\n'\n           '2. **CI/CD-Pipeline:**\\n'\n           '   - Build-Process\\n'\n           '   - Testing-Integration\\n'\n           '   - Code-Quality-Checks\\n'\n           '   - Automated-Deployment\\n'\n           '\\n'\n           '3. **Infrastructure-as-Code:**\\n'\n           '   - Kubernetes-Manifests\\n'\n           '   - Terraform-Scripts\\n'\n           '   - Environment-Configuration\\n'\n           '   - Resource-Management\\n'\n           '\\n'\n           '4. **Monitoring & Logging:**\\n'\n           '   - Application-Monitoring\\n'\n           '   - Infrastructure-Monitoring\\n'\n           '   - Log-Aggregation\\n'\n           '   - Alerting-Setup\\n'\n           '\\n'\n           '5. **Security & Compliance:**\\n'\n           '   - Secrets-Management\\n'\n           '   - Network-Security\\n'\n           '   - Compliance-Checks\\n'\n           '   - Security-Scanning\\n'\n           '\\n'\n           '6. **Performance & Scalability:**\\n'\n           '   - Load-Balancing\\n'\n           '   - Auto-Scaling\\n'\n           '   - Caching-Strategy\\n'\n           '   - CDN-Configuration\\n'\n           '\\n'\n           '**Deployment-Strategien:**\\n'\n           '- Blue-Green-Deployment\\n'\n           '- Rolling-Updates\\n'\n           '- Canary-Releases\\n'\n           '- Rollback-Strategien\\n'\n           '\\n'\n           '**Für jeden Bereich:**\\n'\n           '- Konkrete Implementierung\\n'\n           '- Konfigurationsdateien\\n'\n           '- Best-Practices\\n'\n           '- Troubleshooting-Guide\\n'\n           '\\n'\n           '**Timeline:**\\n'\n           'Erstelle einen realistischen Deployment-Timeline mit:\\n'\n           '- Vorbereitungsphase\\n'\n           '- Testing-Phase\\n'\n           '- Staging-Deployment\\n'\n           '- Production-Deployment\\n'\n           '- Post-Deployment-Monitoring\\n'\n           '\\n'\n           'Erstelle einen production-ready Deployment-Plan mit allen '\n           'notwendigen Komponenten.\\n'),\n          kind=None)"
            },
            {
              "function": "Attribute._get_chat_response_template(attrname='_get_chat_response_template',\n                                      expr=<Name.self l.104 at 0x2579af41ad0>)",
              "type": "Const.str(value=('\\n'\n           'Du bist ein KI-Projektmanager und hilfst bei der '\n           'Projektentwicklung. Antworte hilfreich und konstruktiv.\\n'\n           '\\n'\n           '**Projekt-Kontext:**\\n'\n           '- Name: {project_name}\\n'\n           '- Typ: {project_type}\\n'\n           '- Framework: {framework}\\n'\n           '- Aktueller Status: {project_status}\\n'\n           '\\n'\n           '**User-Nachricht:**\\n'\n           '{user_message}\\n'\n           '\\n'\n           '**Verfügbare Informationen:**\\n'\n           '- Analyse-Ergebnisse: {analysis_available}\\n'\n           '- Test-Status: {test_status}\\n'\n           '- Deployment-Status: {deployment_status}\\n'\n           '- Optimierungen: {optimizations_available}\\n'\n           '\\n'\n           '**Antworte als KI-Projektmanager:**\\n'\n           '- Sei hilfreich und konstruktiv\\n'\n           '- Gib konkrete, umsetzbare Ratschläge\\n'\n           '- Verwende dein Wissen über das Projekt\\n'\n           '- Stelle relevante Fragen wenn nötig\\n'\n           '- Biete weitere Unterstützung an\\n'\n           '\\n'\n           '**Antwort-Stil:**\\n'\n           '- Professionell aber freundlich\\n'\n           '- Strukturiert und übersichtlich\\n'\n           '- Mit konkreten Beispielen\\n'\n           '- Emojis für bessere Lesbarkeit\\n'\n           '- Markdown-Formatierung\\n'\n           '\\n'\n           '**Falls du nicht genug Informationen hast:**\\n'\n           '- Frage nach mehr Details\\n'\n           '- Erkläre was du brauchst\\n'\n           '- Biete alternative Lösungsansätze\\n'\n           '\\n'\n           'Antworte direkt und hilfreich auf die User-Nachricht.\\n'),\n          kind=None)"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.format(attrname='format',\n                 expr=<Name.template l.113 at 0x2579e3e2e90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Const.str l.628 at 0x2579b7a5a10>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Name.context l.628 at 0x2579b7a7510>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.format(attrname='format',\n                 expr=<Name.base_template l.630 at 0x2579b7a4c50>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.list(name='list')",
              "type": "List.list(ctx=None,\n          elts=[ <Const.str l.0 at 0x2579e5bed10>,\n            <Const.str l.0 at 0x2579e5bf310>,\n            <Const.str l.0 at 0x2579b484110>,\n            <Const.str l.0 at 0x2579b4842d0>,\n            <Const.str l.0 at 0x2579b485350>,\n            <Const.str l.0 at 0x2579b486290>,\n            <Const.str l.0 at 0x2579b485ed0>,\n            <Const.str l.0 at 0x2579b487910>])"
            },
            {
              "function": "Attribute.keys(attrname='keys',\n               expr=<Attribute.templates l.637 at 0x2579b0bf910>)",
              "type": "DictKeys.list(ctx=None,\n              elts=[ <Const.str l.97 at 0x2579e3eb290>,\n                <Const.str l.98 at 0x2579e3e9010>,\n                <Const.str l.99 at 0x2579cb73b90>,\n                <Const.str l.100 at 0x2579c028550>,\n                <Const.str l.101 at 0x2579e376ad0>,\n                <Const.str l.102 at 0x2579e3769d0>,\n                <Const.str l.103 at 0x2579af42b90>,\n                <Const.str l.104 at 0x2579af43490>])"
            },
            {
              "function": "Attribute.findall(attrname='findall',\n                  expr=<Name.re l.648 at 0x2579b0be490>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._get_template_description(attrname='_get_template_description',\n                                    expr=<Name.self l.652 at 0x2579b0bc7d0>)",
              "type": "Uninferable"
            }
          ],
          "unresolved_imports": [
            "json",
            "re"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": "llm\\__init__.py",
        "language": "python",
        "file_size": 336,
        "line_count": 16,
        "analysis_method": "python_ast",
        "functions": [],
        "classes": [],
        "imports": [
          {
            "type": "from_import",
            "module": "model_manager",
            "names": [
              "ModelManager"
            ],
            "level": 1,
            "line_number": 5
          },
          {
            "type": "from_import",
            "module": "local_models",
            "names": [
              "LocalModelManager"
            ],
            "level": 1,
            "line_number": 6
          },
          {
            "type": "from_import",
            "module": "api_models",
            "names": [
              "APIModelManager"
            ],
            "level": 1,
            "line_number": 7
          },
          {
            "type": "from_import",
            "module": "prompt_templates",
            "names": [
              "PromptTemplates"
            ],
            "level": 1,
            "line_number": 8
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 0,
          "function_count": 0,
          "class_count": 0,
          "import_count": 4,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [],
          "unresolved_imports": [],
          "code_smells": []
        }
      },
      {
        "file_path": "mcps\\__init__.py",
        "language": "python",
        "file_size": 27974,
        "line_count": 724,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "__init__",
            "line_number": 27,
            "parameters": [
              "self",
              "name",
              "description",
              "priority"
            ],
            "defaults": 2,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "register_handler",
            "line_number": 47,
            "parameters": [
              "self",
              "event_type",
              "handler"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Registriert einen Event-Handler",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "get_info",
            "line_number": 66,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Gibt Informationen über den MCP zurück",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "__init__",
            "line_number": 92,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "__init__",
            "line_number": 300,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "__init__",
            "line_number": 541,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          }
        ],
        "classes": [
          {
            "name": "MCPStatus",
            "line_number": 15,
            "bases": [
              "Enum"
            ],
            "decorators": [],
            "docstring": "Status-Enum für MCPs",
            "methods": [],
            "method_count": 0
          },
          {
            "name": "BaseMCP",
            "line_number": 24,
            "bases": [
              "ABC"
            ],
            "decorators": [],
            "docstring": "Basisklasse für alle Modularen Kontrollpunkte (MCPs)",
            "methods": [
              "__init__",
              "register_handler",
              "get_info"
            ],
            "method_count": 3
          },
          {
            "name": "AuthenticationMCP",
            "line_number": 89,
            "bases": [
              "BaseMCP"
            ],
            "decorators": [],
            "docstring": "MCP für Authentifizierung und Autorisierung",
            "methods": [
              "__init__"
            ],
            "method_count": 1
          },
          {
            "name": "ValidationMCP",
            "line_number": 297,
            "bases": [
              "BaseMCP"
            ],
            "decorators": [],
            "docstring": "MCP für Datenvalidierung",
            "methods": [
              "__init__"
            ],
            "method_count": 1
          },
          {
            "name": "RateLimitMCP",
            "line_number": 538,
            "bases": [
              "BaseMCP"
            ],
            "decorators": [],
            "docstring": "MCP für Rate Limiting",
            "methods": [
              "__init__"
            ],
            "method_count": 1
          }
        ],
        "imports": [
          {
            "type": "from_import",
            "module": "abc",
            "names": [
              "ABC",
              "abstractmethod"
            ],
            "level": 0,
            "line_number": 5
          },
          {
            "type": "from_import",
            "module": "typing",
            "names": [
              "Dict",
              "Any",
              "Optional",
              "List",
              "Callable"
            ],
            "level": 0,
            "line_number": 6
          },
          {
            "type": "import",
            "modules": [
              "logging"
            ],
            "line_number": 7
          },
          {
            "type": "import",
            "modules": [
              "asyncio"
            ],
            "line_number": 8
          },
          {
            "type": "from_import",
            "module": "datetime",
            "names": [
              "datetime"
            ],
            "level": 0,
            "line_number": 9
          },
          {
            "type": "from_import",
            "module": "enum",
            "names": [
              "Enum"
            ],
            "level": 0,
            "line_number": 10
          },
          {
            "type": "import",
            "modules": [
              "re"
            ],
            "line_number": 406
          },
          {
            "type": "import",
            "modules": [
              "re"
            ],
            "line_number": 474
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 7,
          "function_count": 6,
          "class_count": 5,
          "import_count": 8,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.getLogger(attrname='getLogger',\n                    expr=<Name.logging l.12 at 0x2579a989d10>)",
              "type": "Instance of logging.RootLogger"
            },
            {
              "function": "Attribute.getLogger(attrname='getLogger',\n                    expr=<Name.logging l.32 at 0x2579b289490>)",
              "type": "Instance of logging.RootLogger"
            },
            {
              "function": "Attribute.append(attrname='append',\n                 expr=<Subscript l.51 at 0x2579b28b550>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Attribute.logger l.52 at 0x2579b28b7d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.iscoroutinefunction(attrname='iscoroutinefunction',\n                              expr=<Name.asyncio l.59 at 0x2579b28c950>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.handler(name='handler')",
              "type": "Uninferable"
            },
            {
              "function": "Name.handler(name='handler')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Attribute.logger l.64 at 0x2579b28d050>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.copy(attrname='copy',\n               expr=<Attribute.metrics l.73 at 0x2579b28de90>)",
              "type": "Dict.dict(items=[ ( <Const.str l.35 at 0x2579b289c50>,\n              <Const.int l.35 at 0x2579b289c10>),\n            ( <Const.str l.36 at 0x2579b289cd0>,\n              <Const.int l.36 at 0x2579b289c90>),\n            ( <Const.str l.37 at 0x2579b289d50>,\n              <Const.NoneType l.37 at 0x2579b289d10>),\n            ( <Const.str l.38 at 0x2579b289dd0>,\n              <Const.float l.38 at 0x2579b289d90>)])"
            },
            {
              "function": "Attribute.values(attrname='values',\n                 expr=<Attribute.handlers l.74 at 0x2579b28e490>)",
              "type": "DictValues.list(ctx=None,\n                elts=[])"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Attribute.logger l.81 at 0x2579b28ed50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Attribute.logger l.86 at 0x2579b28f710>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.__init__(attrname='__init__',\n                   expr=<Call l.93 at 0x2579b584210>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.super(name='super')",
              "type": "Super.AuthenticationMCP()"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.request l.109 at 0x2579b585610>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.time(attrname='time',\n               expr=<Call l.111 at 0x2579b585ad0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get_event_loop(attrname='get_event_loop',\n                         expr=<Name.asyncio l.111 at 0x2579b585b10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._handle_login(attrname='_handle_login',\n                        expr=<Name.self l.115 at 0x2579b586150>)",
              "type": "Dict.dict(items=[ ( <Const.str l.161 at 0x2579b5264d0>,\n              <Const.str l.161 at 0x2579b526490>),\n            ( <Const.str l.161 at 0x2579b526550>,\n              <Const.bool l.161 at 0x2579b526510>)])"
            },
            {
              "function": "Attribute._handle_logout(attrname='_handle_logout',\n                         expr=<Name.self l.117 at 0x2579b5865d0>)",
              "type": "Dict.dict(items=[ ( <Const.str l.202 at 0x2579b539bd0>,\n              <Const.str l.202 at 0x2579b539b90>),\n            ( <Const.str l.202 at 0x2579b539c50>,\n              <Const.bool l.202 at 0x2579b539c10>)])"
            },
            {
              "function": "Attribute._handle_validate_token(attrname='_handle_validate_token',\n                                 expr=<Name.self l.119 at 0x2579b586a10>)",
              "type": "Dict.dict(items=[ ( <Const.str l.219 at 0x2579b53b7d0>,\n              <Const.bool l.219 at 0x2579b53b790>),\n            ( <Const.str l.219 at 0x2579b53b850>,\n              <Const.str l.219 at 0x2579b53b810>)])"
            },
            {
              "function": "Attribute._handle_refresh_token(attrname='_handle_refresh_token',\n                                expr=<Name.self l.121 at 0x2579b586e50>)",
              "type": "Dict.dict(items=[ ( <Const.str l.241 at 0x2579b5a1850>,\n              <Const.str l.241 at 0x2579b5a1810>),\n            ( <Const.str l.241 at 0x2579b5a18d0>,\n              <Const.bool l.241 at 0x2579b5a1890>)])"
            },
            {
              "function": "Attribute._handle_check_permissions(attrname='_handle_check_permissions',\n                                    expr=<Name.self l.123 at 0x2579b5872d0>)",
              "type": "Dict.dict(items=[ ( <Const.str l.269 at 0x2579b5b0250>,\n              <Const.str l.269 at 0x2579b5b0210>),\n            ( <Const.str l.269 at 0x2579b5b02d0>,\n              <Const.bool l.269 at 0x2579b5b0290>)])"
            },
            {
              "function": "Attribute.time(attrname='time',\n               expr=<Call l.131 at 0x2579b587910>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get_event_loop(attrname='get_event_loop',\n                         expr=<Name.asyncio l.131 at 0x2579b587990>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.isoformat(attrname='isoformat',\n                    expr=<Call l.136 at 0x2579b524390>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.now(attrname='now',\n              expr=<Name.datetime l.136 at 0x2579b5243d0>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Attribute.logger l.147 at 0x2579b524cd0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.request l.157 at 0x2579b525c90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.request l.158 at 0x2579b525f10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.sleep(attrname='sleep',\n                expr=<Name.asyncio l.164 at 0x2579b526610>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.timestamp(attrname='timestamp',\n                    expr=<Call l.168 at 0x2579b526c90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.now(attrname='now',\n              expr=<Name.datetime l.168 at 0x2579b526d10>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Attribute.isoformat(attrname='isoformat',\n                    expr=<Call l.171 at 0x2579b527210>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.now(attrname='now',\n              expr=<Name.datetime l.171 at 0x2579b527250>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Attribute.timestamp(attrname='timestamp',\n                    expr=<Call l.172 at 0x2579b527490>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.now(attrname='now',\n              expr=<Name.datetime l.172 at 0x2579b527510>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Attribute.trigger_event(attrname='trigger_event',\n                        expr=<Name.self l.175 at 0x2579b527890>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.trigger_event(attrname='trigger_event',\n                        expr=<Name.self l.189 at 0x2579b538750>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.request l.199 at 0x2579b539810>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.trigger_event(attrname='trigger_event',\n                        expr=<Name.self l.208 at 0x2579b53a390>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.request l.216 at 0x2579b53b410>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.timestamp(attrname='timestamp',\n                    expr=<Call l.223 at 0x2579b53bd10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.now(attrname='now',\n              expr=<Name.datetime l.223 at 0x2579b53bd50>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.request l.238 at 0x2579b5a1490>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.timestamp(attrname='timestamp',\n                    expr=<Call l.245 at 0x2579b5a1f10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.now(attrname='now',\n              expr=<Name.datetime l.245 at 0x2579b5a1f90>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Attribute.isoformat(attrname='isoformat',\n                    expr=<Call l.249 at 0x2579b5a2490>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.now(attrname='now',\n              expr=<Name.datetime l.249 at 0x2579b5a24d0>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Attribute.timestamp(attrname='timestamp',\n                    expr=<Call l.250 at 0x2579b5a2710>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.now(attrname='now',\n              expr=<Name.datetime l.250 at 0x2579b5a2790>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.request l.265 at 0x2579b5a3ad0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.request l.266 at 0x2579b5a3d50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.__init__(attrname='__init__',\n                   expr=<Call l.301 at 0x2579b5b25d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.super(name='super')",
              "type": "Super.ValidationMCP()"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.request l.316 at 0x2579b5b3a10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.time(attrname='time',\n               expr=<Call l.318 at 0x2579b5b3e50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get_event_loop(attrname='get_event_loop',\n                         expr=<Name.asyncio l.318 at 0x2579b5b3e90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._validate_data(attrname='_validate_data',\n                         expr=<Name.self l.322 at 0x2579b55a350>)",
              "type": "Dict.dict(items=[ ( <Const.str l.367 at 0x2579b55ea10>,\n              <Const.bool l.367 at 0x2579b55e810>),\n            ( <Const.str l.367 at 0x2579b55ea50>,\n              <List.list l.367 at 0x2579b55e990>)])"
            },
            {
              "function": "Attribute._validate_schema(attrname='_validate_schema',\n                           expr=<Name.self l.324 at 0x2579b558e10>)",
              "type": "Dict.dict(items=[ ( <Const.str l.423 at 0x2579b567d10>,\n              <Const.bool l.423 at 0x2579b567890>),\n            ( <Const.str l.423 at 0x2579b567c90>,\n              <List.list l.423 at 0x2579b567cd0>)])"
            },
            {
              "function": "Attribute._sanitize_input(attrname='_sanitize_input',\n                          expr=<Name.self l.326 at 0x2579b558d90>)",
              "type": "Dict.dict(items=[ ( <Const.str l.465 at 0x2579b56d110>,\n              <Const.NoneType l.465 at 0x2579b56dc50>),\n            ( <Const.str l.465 at 0x2579b56c1d0>,\n              <Const.bool l.465 at 0x2579b56c7d0>)])"
            },
            {
              "function": "Attribute._check_constraints(attrname='_check_constraints',\n                             expr=<Name.self l.328 at 0x2579b559090>)",
              "type": "Dict.dict(items=[ ( <Const.str l.509 at 0x2579b572790>,\n              <Const.bool l.509 at 0x2579b5727d0>),\n            ( <Const.str l.509 at 0x2579b572d90>,\n              <List.list l.509 at 0x2579b573490>),\n            ( <Const.str l.509 at 0x2579b573010>,\n              <Const.str l.509 at 0x2579b572d50>)])"
            },
            {
              "function": "Attribute.time(attrname='time',\n               expr=<Call l.336 at 0x2579b558890>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get_event_loop(attrname='get_event_loop',\n                         expr=<Name.asyncio l.336 at 0x2579b558c90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.isoformat(attrname='isoformat',\n                    expr=<Call l.341 at 0x2579b559e50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.now(attrname='now',\n              expr=<Name.datetime l.341 at 0x2579b559d90>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Attribute.logger l.352 at 0x2579b55af10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.request l.362 at 0x2579b55aed0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.request l.363 at 0x2579b55bdd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.request l.364 at 0x2579b55c390>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.rules l.388 at 0x2579b55f450>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.rules l.389 at 0x2579b55f750>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.match(attrname='match',\n                expr=<Name.re l.407 at 0x2579b567850>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Name.list(name='list')",
              "type": "Instance of builtins.list"
            },
            {
              "function": "Attribute.keys(attrname='keys',\n               expr=<Name.rules l.414 at 0x2579b565650>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.request l.419 at 0x2579b566410>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.request l.420 at 0x2579b567390>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.schema l.431 at 0x2579b565ad0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.schema l.437 at 0x2579b56d9d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Name.data l.438 at 0x2579b56f9d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.field_schema l.441 at 0x2579b56e150>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.request l.461 at 0x2579b56e710>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.request l.462 at 0x2579b56f950>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.sub(attrname='sub',\n              expr=<Name.re l.476 at 0x2579b571dd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.replace(attrname='replace',\n                  expr=<Name.sanitized_data l.485 at 0x2579b571050>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.pattern l.492 at 0x2579b572350>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.sanitized_data l.492 at 0x2579b572010>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.replace(attrname='replace',\n                  expr=<Name.sanitized_data l.493 at 0x2579b572b90>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.request l.505 at 0x2579b570cd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.request l.506 at 0x2579b571710>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.constraint l.514 at 0x2579b571fd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.constraint l.515 at 0x2579b57d310>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.constraint l.516 at 0x2579b57e690>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Attribute.__init__(attrname='__init__',\n                   expr=<Call l.542 at 0x2579b57fad0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.super(name='super')",
              "type": "Super.RateLimitMCP()"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.request l.558 at 0x2579b4d0050>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.time(attrname='time',\n               expr=<Call l.560 at 0x2579b4d0490>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get_event_loop(attrname='get_event_loop',\n                         expr=<Name.asyncio l.560 at 0x2579b4d04d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._check_rate_limit(attrname='_check_rate_limit',\n                            expr=<Name.self l.564 at 0x2579b4d0b90>)",
              "type": "Dict.dict(items=[ ( <Const.str l.635 at 0x2579b51b450>,\n              <BoolOp l.635 at 0x2579b51b2d0>),\n            ( <Const.str l.636 at 0x2579b51b410>,\n              <Name.current_count l.636 at 0x2579b51b490>),\n            ( <Const.str l.637 at 0x2579b51b4d0>,\n              <Name.limit l.637 at 0x2579b51b510>),\n            ( <Const.str l.638 at 0x2579b51b610>,\n              <Name.window l.638 at 0x2579b51b590>),\n            ( <Const.str l.639 at 0x2579b51b690>,\n              <BinOp l.639 at 0x2579b51b5d0>),\n            ( <Const.str l.640 at 0x2579b51b810>,\n              <Name.burst_allowed l.640 at 0x2579b51b790>),\n            ( <Const.str l.641 at 0x2579b51b8d0>,\n              <Name.identifier l.641 at 0x2579b51b7d0>)])"
            },
            {
              "function": "Attribute._increment_counter(attrname='_increment_counter',\n                             expr=<Name.self l.566 at 0x2579b4d1090>)",
              "type": "Dict.dict(items=[ ( <Const.str l.660 at 0x2579b541690>,\n              <Const.bool l.660 at 0x2579b541650>),\n            ( <Const.str l.661 at 0x2579b541710>,\n              <Name.identifier l.661 at 0x2579b5416d0>),\n            ( <Const.str l.662 at 0x2579b541810>,\n              <Name.current_time l.662 at 0x2579b541790>),\n            ( <Const.str l.663 at 0x2579b541ad0>,\n              <Call l.663 at 0x2579b5417d0>)])"
            },
            {
              "function": "Attribute._reset_limits(attrname='_reset_limits',\n                        expr=<Name.self l.568 at 0x2579b4d1550>)",
              "type": "Dict.dict(items=[ ( <Const.str l.675 at 0x2579b542f50>,\n              <Const.bool l.675 at 0x2579b542f10>),\n            ( <Const.str l.675 at 0x2579b543050>,\n              <Name.identifier l.675 at 0x2579b542f90>)])"
            },
            {
              "function": "Attribute._get_rate_limit_stats(attrname='_get_rate_limit_stats',\n                                expr=<Name.self l.570 at 0x2579b4d1a10>)",
              "type": "Dict.dict(items=[ ( <Const.str l.691 at 0x2579b560d90>,\n              <Name.identifier l.691 at 0x2579b560d50>),\n            ( <Const.str l.692 at 0x2579b560dd0>,\n              <Name.current_count l.692 at 0x2579b560e10>),\n            ( <Const.str l.693 at 0x2579b560f10>,\n              <Name.burst_count l.693 at 0x2579b560e90>),\n            ( <Const.str l.694 at 0x2579b560f90>,\n              <Subscript l.694 at 0x2579b560ed0>),\n            ( <Const.str l.695 at 0x2579b561110>,\n              <Subscript l.695 at 0x2579b561090>)])"
            },
            {
              "function": "Attribute.time(attrname='time',\n               expr=<Call l.578 at 0x2579b4d2050>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get_event_loop(attrname='get_event_loop',\n                         expr=<Name.asyncio l.578 at 0x2579b4d2110>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.isoformat(attrname='isoformat',\n                    expr=<Call l.583 at 0x2579b4d2ad0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.now(attrname='now',\n              expr=<Name.datetime l.583 at 0x2579b4d2b10>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Attribute.logger l.594 at 0x2579b4d3410>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.request l.604 at 0x2579b5185d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.request l.605 at 0x2579b518890>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.request l.606 at 0x2579b518c10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.timestamp(attrname='timestamp',\n                    expr=<Call l.608 at 0x2579b518f90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.now(attrname='now',\n              expr=<Name.datetime l.608 at 0x2579b518fd0>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.request l.646 at 0x2579b540310>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.timestamp(attrname='timestamp',\n                    expr=<Call l.647 at 0x2579b5405d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.now(attrname='now',\n              expr=<Name.datetime l.647 at 0x2579b540610>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Attribute.append(attrname='append',\n                 expr=<Subscript l.652 at 0x2579b540c50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.append(attrname='append',\n                 expr=<Subscript l.657 at 0x2579b541310>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.request l.668 at 0x2579b5424d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.request l.684 at 0x2579b560110>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Attribute.values(attrname='values',\n                 expr=<Attribute.request_counts l.702 at 0x2579b561d50>)",
              "type": "DictValues.list(ctx=None,\n                elts=[])"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Name.AuthenticationMCP(name='AuthenticationMCP')",
              "type": "Instance of .AuthenticationMCP"
            },
            {
              "function": "Name.ValidationMCP(name='ValidationMCP')",
              "type": "Instance of .ValidationMCP"
            },
            {
              "function": "Name.RateLimitMCP(name='RateLimitMCP')",
              "type": "Instance of .RateLimitMCP"
            },
            {
              "function": "Attribute.values(attrname='values',\n                 expr=<Name.mcps l.719 at 0x2579b562bd0>)",
              "type": "DictValues.list(ctx=None,\n                elts=[ <Call l.714 at 0x2579b562790>,\n                  <Call l.715 at 0x2579b5628d0>,\n                  <Call l.716 at 0x2579b562a10>])"
            },
            {
              "function": "Attribute.initialize(attrname='initialize',\n                     expr=<Name.mcp l.720 at 0x2579b562e10>)",
              "type": "Uninferable"
            }
          ],
          "unresolved_imports": [
            "logging",
            "asyncio",
            "re",
            "re"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": "optimization\\optimization_engine.py",
        "language": "python",
        "file_size": 13627,
        "line_count": 330,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "__init__",
            "line_number": 15,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_parse_suggestions",
            "line_number": 94,
            "parameters": [
              "self",
              "response"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Parse LLM response into structured suggestions",
            "is_async": false,
            "complexity": 8
          },
          {
            "name": "_prioritize_suggestions",
            "line_number": 119,
            "parameters": [
              "self",
              "suggestions"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Prioritize suggestions based on impact and effort",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_calculate_impact_score",
            "line_number": 173,
            "parameters": [
              "self",
              "suggestions"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Calculate overall impact score",
            "is_async": false,
            "complexity": 3
          },
          {
            "name": "get_optimization_history",
            "line_number": 196,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Get optimization history",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "get_active_suggestions",
            "line_number": 200,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Get currently active suggestions",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "mark_suggestion_completed",
            "line_number": 204,
            "parameters": [
              "self",
              "suggestion_id"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Mark a suggestion as completed",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_create_analysis_summary",
            "line_number": 244,
            "parameters": [
              "self",
              "analysis_results"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Create a concise summary of analysis results for LLM",
            "is_async": false,
            "complexity": 7
          },
          {
            "name": "_generate_fallback_suggestions",
            "line_number": 268,
            "parameters": [
              "self",
              "analysis_results"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Generate fallback suggestions when LLM is not available",
            "is_async": false,
            "complexity": 8
          },
          {
            "name": "priority_score",
            "line_number": 122,
            "parameters": [
              "suggestion"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          }
        ],
        "classes": [
          {
            "name": "OptimizationEngine",
            "line_number": 12,
            "bases": [],
            "decorators": [],
            "docstring": "Continuous improvement and optimization engine",
            "methods": [
              "__init__",
              "_parse_suggestions",
              "_prioritize_suggestions",
              "_calculate_impact_score",
              "get_optimization_history",
              "get_active_suggestions",
              "mark_suggestion_completed",
              "_create_analysis_summary",
              "_generate_fallback_suggestions"
            ],
            "method_count": 9
          }
        ],
        "imports": [
          {
            "type": "import",
            "modules": [
              "asyncio"
            ],
            "line_number": 4
          },
          {
            "type": "from_import",
            "module": "typing",
            "names": [
              "Dict",
              "Any",
              "List"
            ],
            "level": 0,
            "line_number": 5
          },
          {
            "type": "from_import",
            "module": "datetime",
            "names": [
              "datetime"
            ],
            "level": 0,
            "line_number": 6
          },
          {
            "type": "import",
            "modules": [
              "logging"
            ],
            "line_number": 7
          },
          {
            "type": "from_import",
            "module": "llm.model_manager",
            "names": [
              "ModelManager"
            ],
            "level": 0,
            "line_number": 8
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 32,
          "function_count": 10,
          "class_count": 1,
          "import_count": 5,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.getLogger(attrname='getLogger',\n                    expr=<Name.logging l.10 at 0x2579bac8110>)",
              "type": "Instance of logging.RootLogger"
            },
            {
              "function": "Name.ModelManager(name='ModelManager')",
              "type": "Instance of llm.model_manager.ModelManager"
            },
            {
              "function": "Attribute._generate_optimization_suggestions(attrname='_generate_optimization_suggestions',\n                                             expr=<Name.self l.25 at 0x25799971450>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute._prioritize_suggestions(attrname='_prioritize_suggestions',\n                                  expr=<Name.self l.30 at 0x25799973a10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._create_optimization_plan(attrname='_create_optimization_plan',\n                                    expr=<Name.self l.33 at 0x257999735d0>)",
              "type": "Dict.dict(items=[ ( <Const.str l.142 at 0x2579b14c0d0>,\n              <Const.str l.142 at 0x2579b14d550>),\n            ( <Const.str l.143 at 0x2579b14cdd0>,\n              <Const.int l.143 at 0x2579b14f290>),\n            ( <Const.str l.144 at 0x2579b14edd0>,\n              <Const.int l.144 at 0x2579b14f010>),\n            ( <Const.str l.145 at 0x2579b14c7d0>,\n              <Const.int l.145 at 0x2579b14fed0>)])"
            },
            {
              "function": "Attribute.isoformat(attrname='isoformat',\n                    expr=<Call l.38 at 0x257999700d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.now(attrname='now',\n              expr=<Name.datetime l.38 at 0x25799972bd0>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Attribute._calculate_impact_score(attrname='_calculate_impact_score',\n                                  expr=<Name.self l.41 at 0x257999724d0>)",
              "type": "Dict.dict(items=[ ( <Const.str l.191 at 0x2579e7ea690>,\n              <IfExp l.191 at 0x2579e7ea4d0>),\n            ( <Const.str l.192 at 0x2579e7ea810>,\n              <Name.category_impacts l.192 at 0x2579e7ea7d0>),\n            ( <Const.str l.193 at 0x2579e7ea9d0>,\n              <Call l.193 at 0x2579e7ea890>)])"
            },
            {
              "function": "Attribute._create_analysis_summary(attrname='_create_analysis_summary',\n                                   expr=<Name.self l.52 at 0x25799f8b5d0>)",
              "type": "Const.str(value='No detailed metrics available',\n          kind=None)"
            },
            {
              "function": "Attribute.generate_response(attrname='generate_response',\n                            expr=<Attribute.llm_manager l.84 at 0x2579a26c350>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._parse_suggestions(attrname='_parse_suggestions',\n                             expr=<Name.self l.87 at 0x2579a26c610>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.90 at 0x2579a26df90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._generate_fallback_suggestions(attrname='_generate_fallback_suggestions',\n                                         expr=<Name.self l.92 at 0x25799f49b10>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[<Dict.dict l.322 at 0x2579e7e52d0>])"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Name.response l.100 at 0x2579a8f4c10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Name.line l.104 at 0x2579a8f5490>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.startswith(attrname='startswith',\n                     expr=<Name.line l.105 at 0x2579a8f5190>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.endswith(attrname='endswith',\n                   expr=<Name.line l.105 at 0x2579a8f5310>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Name.line l.108 at 0x2579a8f4850>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.startswith(attrname='startswith',\n                     expr=<Name.line l.109 at 0x2579a8f68d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Name.line l.110 at 0x2579a8f5590>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Call l.111 at 0x2579a8f48d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.replace(attrname='replace',\n                  expr=<Name.key l.111 at 0x2579a8f5790>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.replace(attrname='replace',\n                  expr=<Call l.112 at 0x2579a8f6590>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.key l.112 at 0x2579a8f6210>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Name.value l.112 at 0x2579a8f6d90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.suggestion l.126 at 0x2579a2c3650>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.suggestion l.127 at 0x2579a2c0c50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.suggestion l.128 at 0x2579a2c3350>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.s l.149 at 0x2579b14e790>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.s l.150 at 0x2579b535bd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.s l.151 at 0x2579b544590>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.enumerate(name='enumerate')",
              "type": "Instance of builtins.enumerate"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.s l.156 at 0x2579b4d6350>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.enumerate(name='enumerate')",
              "type": "Instance of builtins.enumerate"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.s l.160 at 0x2579b4d49d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.enumerate(name='enumerate')",
              "type": "Instance of builtins.enumerate"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.s l.164 at 0x2579e7def50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.s l.170 at 0x2579e7df890>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.s l.170 at 0x2579e7de090>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.suggestion l.180 at 0x2579e7e9290>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.suggestion l.181 at 0x2579e7e9650>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.values(attrname='values',\n                 expr=<Name.category_impacts l.187 at 0x2579e7e9f50>)",
              "type": "DictValues.list(ctx=None,\n                elts=[])"
            },
            {
              "function": "Attribute.strftime(attrname='strftime',\n                   expr=<Call l.220 at 0x2579d7f89d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.now(attrname='now',\n              expr=<Name.datetime l.220 at 0x2579d7f8a50>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Name.enumerate(name='enumerate')",
              "type": "Instance of builtins.enumerate"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.suggestion l.234 at 0x2579d7f9b10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.suggestion l.235 at 0x2579d7f9d90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.suggestion l.236 at 0x2579d7f9fd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.suggestion l.237 at 0x2579d7fa1d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.suggestion l.238 at 0x2579d7fa410>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.suggestion l.239 at 0x2579d7fa650>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Const.str l.255 at 0x2579d7fbe50>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Const.str l.266 at 0x2579b2bd2d0>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.274 at 0x2579b2be150>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.287 at 0x2579b2bf3d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.300 at 0x2579b2bff50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.coverage l.301 at 0x2579e7e4290>)",
              "type": "Uninferable"
            }
          ],
          "unresolved_imports": [
            "asyncio",
            "logging"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": "optimization\\__init__.py",
        "language": "python",
        "file_size": 23,
        "line_count": 2,
        "analysis_method": "python_ast",
        "functions": [],
        "classes": [],
        "imports": [],
        "complexity_metrics": {
          "cyclomatic_complexity": 0,
          "function_count": 0,
          "class_count": 0,
          "import_count": 0,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [],
          "unresolved_imports": [],
          "code_smells": []
        }
      },
      {
        "file_path": "orchestrator\\agent_orchestrator.py",
        "language": "python",
        "file_size": 12820,
        "line_count": 290,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "__init__",
            "line_number": 20,
            "parameters": [
              "self",
              "model_manager"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_generate_recommendations",
            "line_number": 223,
            "parameters": [
              "self",
              "analysis_results",
              "workflow_results"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Generiert Empfehlungen basierend auf den Ergebnissen",
            "is_async": false,
            "complexity": 4
          }
        ],
        "classes": [
          {
            "name": "AgentOrchestrator",
            "line_number": 19,
            "bases": [],
            "decorators": [],
            "docstring": null,
            "methods": [
              "__init__",
              "_generate_recommendations"
            ],
            "method_count": 2
          }
        ],
        "imports": [
          {
            "type": "import",
            "modules": [
              "asyncio"
            ],
            "line_number": 5
          },
          {
            "type": "import",
            "modules": [
              "logging"
            ],
            "line_number": 6
          },
          {
            "type": "from_import",
            "module": "typing",
            "names": [
              "Dict",
              "List",
              "Any",
              "Optional"
            ],
            "level": 0,
            "line_number": 7
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 8
          },
          {
            "type": "import",
            "modules": [
              "json"
            ],
            "line_number": 9
          },
          {
            "type": "from_import",
            "module": "generators.agent_generator",
            "names": [
              "AgentGenerator"
            ],
            "level": 0,
            "line_number": 11
          },
          {
            "type": "from_import",
            "module": "generators.workflow_generator",
            "names": [
              "WorkflowGenerator"
            ],
            "level": 0,
            "line_number": 12
          },
          {
            "type": "from_import",
            "module": "generators.skill_generator",
            "names": [
              "SkillGenerator"
            ],
            "level": 0,
            "line_number": 13
          },
          {
            "type": "from_import",
            "module": "llm.model_manager",
            "names": [
              "ModelManager"
            ],
            "level": 0,
            "line_number": 14
          },
          {
            "type": "import",
            "modules": [
              "importlib.util"
            ],
            "line_number": 110
          },
          {
            "type": "import",
            "modules": [
              "sys"
            ],
            "line_number": 111
          },
          {
            "type": "import",
            "modules": [
              "importlib.util"
            ],
            "line_number": 167
          },
          {
            "type": "import",
            "modules": [
              "sys"
            ],
            "line_number": 168
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 5,
          "function_count": 2,
          "class_count": 1,
          "import_count": 13,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.getLogger(attrname='getLogger',\n                    expr=<Name.logging l.16 at 0x2579b69fc50>)",
              "type": "Instance of logging.RootLogger"
            },
            {
              "function": "Name.AgentGenerator(name='AgentGenerator')",
              "type": "Instance of generators.agent_generator.AgentGenerator"
            },
            {
              "function": "Name.WorkflowGenerator(name='WorkflowGenerator')",
              "type": "Instance of generators.workflow_generator.WorkflowGenerator"
            },
            {
              "function": "Name.SkillGenerator(name='SkillGenerator')",
              "type": "Instance of generators.skill_generator.SkillGenerator"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.34 at 0x2579e7e5990>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.36 at 0x2579e7e5cd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.39 at 0x2579e7e5ed0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.generate_agents_for_project(attrname='generate_agents_for_project',\n                                      expr=<Attribute.agent_generator l.40 at 0x2579e7e61d0>)",
              "type": "Dict.dict(items=[])"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.43 at 0x2579e7e63d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.generate_workflows_for_project(attrname='generate_workflows_for_project',\n                                         expr=<Attribute.workflow_generator l.44 at 0x2579e7e66d0>)",
              "type": "Dict.dict(items=[])"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.47 at 0x2579e7e68d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.generate_skills_for_project(attrname='generate_skills_for_project',\n                                      expr=<Attribute.skill_generator l.48 at 0x2579e7e6b90>)",
              "type": "Dict.dict(items=[])"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.51 at 0x2579e7e6d90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._initialize_agents(attrname='_initialize_agents',\n                             expr=<Name.self l.52 at 0x2579e7e6f50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.55 at 0x2579e7e7110>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._execute_workflows(attrname='_execute_workflows',\n                             expr=<Name.self l.56 at 0x2579e7e73d0>)",
              "type": "Dict.dict(items=[])"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.59 at 0x2579e7e7550>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._generate_summary(attrname='_generate_summary',\n                            expr=<Name.self l.60 at 0x2579e7e7810>)",
              "type": "Dict.dict(items=[ ( <Const.str l.201 at 0x2579e80c9d0>,\n              <Call l.201 at 0x2579e80c810>),\n            ( <Const.str l.202 at 0x2579e80cbd0>,\n              <Call l.202 at 0x2579e80ca10>),\n            ( <Const.str l.203 at 0x2579e80cd90>,\n              <Call l.203 at 0x2579e80cb50>),\n            ( <Const.str l.204 at 0x2579e80cf50>,\n              <Call l.204 at 0x2579e80cd10>),\n            ( <Const.str l.205 at 0x2579e80d110>,\n              <Call l.205 at 0x2579e80ced0>),\n            ( <Const.str l.206 at 0x2579e80d290>,\n              <Call l.206 at 0x2579e80d090>),\n            ( <Const.str l.207 at 0x2579e80d8d0>,\n              <Call l.207 at 0x2579e80d250>),\n            ( <Const.str l.208 at 0x2579e80df90>,\n              <Call l.208 at 0x2579e80d990>),\n            ( <Const.str l.209 at 0x2579e80e110>,\n              <Dict.dict l.209 at 0x2579e80e050>),\n            ( <Const.str l.214 at 0x2579e80eb50>,\n              <Call l.214 at 0x2579e80c7d0>)])"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.62 at 0x2579e7e7a10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.76 at 0x2579e800450>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.85 at 0x2579e801350>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Attribute.generated_agents l.87 at 0x2579e801750>)",
              "type": "DictItems.list(ctx=None,\n               elts=[])"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.88 at 0x2579e801950>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.agent_info l.91 at 0x2579e801d10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Call l.92 at 0x2579e802050>)",
              "type": "Const.bool(value=False,\n           kind=None)"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute._load_agent_instance(attrname='_load_agent_instance',\n                               expr=<Name.self l.94 at 0x2579e8023d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.97 at 0x2579e802850>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.warning(attrname='warning',\n                  expr=<Name.logger l.99 at 0x2579e802b90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.warning(attrname='warning',\n                  expr=<Name.logger l.101 at 0x2579e802ed0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.104 at 0x2579e803310>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.spec_from_file_location(attrname='spec_from_file_location',\n                                  expr=<Attribute.util l.113 at 0x2579e803f90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.module_from_spec(attrname='module_from_spec',\n                           expr=<Attribute.util l.117 at 0x2579e804550>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.exec_module(attrname='exec_module',\n                      expr=<Attribute.loader l.119 at 0x2579e804950>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.getattr(name='getattr')",
              "type": "Uninferable"
            },
            {
              "function": "Name.hasattr(name='hasattr')",
              "type": "Uninferable"
            },
            {
              "function": "Name.attr(name='attr')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.initialize(attrname='initialize',\n                     expr=<Name.agent_instance l.130 at 0x2579e805790>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.136 at 0x2579e805bd0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Attribute.generated_workflows l.144 at 0x2579e806950>)",
              "type": "DictItems.list(ctx=None,\n               elts=[])"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.145 at 0x2579e806b50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.workflow_info l.148 at 0x2579e806f10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Call l.149 at 0x2579e807190>)",
              "type": "Const.bool(value=False,\n           kind=None)"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute._execute_workflow(attrname='_execute_workflow',\n                            expr=<Name.self l.150 at 0x2579e807550>)",
              "type": "Dict.dict(items=[ ( <Const.str l.172 at 0x2579e8098d0>,\n              <Const.str l.172 at 0x2579e809890>),\n            ( <Const.str l.172 at 0x2579e809950>,\n              <Const.str l.172 at 0x2579e809910>)])"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.152 at 0x2579e807890>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.warning(attrname='warning',\n                  expr=<Name.logger l.154 at 0x2579e807bd0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.158 at 0x2579e808390>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.spec_from_file_location(attrname='spec_from_file_location',\n                                  expr=<Attribute.util l.170 at 0x2579e809410>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.module_from_spec(attrname='module_from_spec',\n                           expr=<Attribute.util l.174 at 0x2579e809ad0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.exec_module(attrname='exec_module',\n                      expr=<Attribute.loader l.176 at 0x2579e809ed0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.getattr(name='getattr')",
              "type": "Uninferable"
            },
            {
              "function": "Name.hasattr(name='hasattr')",
              "type": "Uninferable"
            },
            {
              "function": "Name.attr(name='attr')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.execute(attrname='execute',\n                  expr=<Name.workflow_instance l.187 at 0x2579e80add0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.cleanup(attrname='cleanup',\n                  expr=<Name.workflow_instance l.188 at 0x2579e80af90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.194 at 0x2579e80b550>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.201 at 0x2579e80c890>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Attribute.values(attrname='values',\n                 expr=<Name.workflow_results l.207 at 0x2579e80d610>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.r l.207 at 0x2579e80d7d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.values(attrname='values',\n                 expr=<Name.workflow_results l.208 at 0x2579e80dcd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.r l.208 at 0x2579e80de90>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.list(name='list')",
              "type": "List.list(ctx=None,\n          elts=[])"
            },
            {
              "function": "Attribute.keys(attrname='keys',\n               expr=<Attribute.generated_agents l.210 at 0x2579e80e2d0>)",
              "type": "DictKeys.list(ctx=None,\n              elts=[])"
            },
            {
              "function": "Name.list(name='list')",
              "type": "List.list(ctx=None,\n          elts=[])"
            },
            {
              "function": "Attribute.keys(attrname='keys',\n               expr=<Attribute.generated_workflows l.211 at 0x2579e80e590>)",
              "type": "DictKeys.list(ctx=None,\n              elts=[])"
            },
            {
              "function": "Name.list(name='list')",
              "type": "List.list(ctx=None,\n          elts=[])"
            },
            {
              "function": "Attribute.keys(attrname='keys',\n               expr=<Attribute.generated_skills l.212 at 0x2579e80e850>)",
              "type": "DictKeys.list(ctx=None,\n              elts=[])"
            },
            {
              "function": "Attribute._generate_recommendations(attrname='_generate_recommendations',\n                                    expr=<Name.self l.214 at 0x2579e80ea10>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.220 at 0x2579e80ed90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.228 at 0x2579e80fe10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.231 at 0x2579e810310>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Name.workflow_results l.235 at 0x2579e810b90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.v l.235 at 0x2579e810d50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Const.str l.237 at 0x2579e811210>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Attribute.active_agents l.255 at 0x2579e8123d0>)",
              "type": "DictItems.list(ctx=None,\n               elts=[])"
            },
            {
              "function": "Name.hasattr(name='hasattr')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get_status(attrname='get_status',\n                     expr=<Name.agent_instance l.258 at 0x2579e812a50>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.275 at 0x2579e813cd0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Attribute.active_agents l.278 at 0x2579e814050>)",
              "type": "DictItems.list(ctx=None,\n               elts=[])"
            },
            {
              "function": "Name.hasattr(name='hasattr')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.cleanup(attrname='cleanup',\n                  expr=<Name.agent_instance l.281 at 0x2579e814610>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.283 at 0x2579e814950>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.286 at 0x2579e814e90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.289 at 0x2579e815150>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            }
          ],
          "unresolved_imports": [
            "asyncio",
            "logging",
            "json",
            "importlib.util",
            "sys",
            "importlib.util",
            "sys"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": "orchestrator\\workflow_orchestrator.py",
        "language": "python",
        "file_size": 3459,
        "line_count": 90,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "__init__",
            "line_number": 16,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "register_workflow",
            "line_number": 25,
            "parameters": [
              "self",
              "name",
              "workflow"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Register a workflow",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "get_workflow_status",
            "line_number": 72,
            "parameters": [
              "self",
              "workflow_id"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": "Get workflow status",
            "is_async": false,
            "complexity": 4
          },
          {
            "name": "get_available_workflows",
            "line_number": 87,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Get list of available workflows",
            "is_async": false,
            "complexity": 1
          }
        ],
        "classes": [
          {
            "name": "WorkflowOrchestrator",
            "line_number": 13,
            "bases": [],
            "decorators": [],
            "docstring": "Orchestrates and manages workflows",
            "methods": [
              "__init__",
              "register_workflow",
              "get_workflow_status",
              "get_available_workflows"
            ],
            "method_count": 4
          }
        ],
        "imports": [
          {
            "type": "import",
            "modules": [
              "asyncio"
            ],
            "line_number": 4
          },
          {
            "type": "from_import",
            "module": "typing",
            "names": [
              "Dict",
              "Any",
              "List"
            ],
            "level": 0,
            "line_number": 5
          },
          {
            "type": "from_import",
            "module": "workflows.project_analysis_workflow",
            "names": [
              "ProjectAnalysisWorkflow"
            ],
            "level": 0,
            "line_number": 6
          },
          {
            "type": "from_import",
            "module": "workflows.simple_analysis_workflow",
            "names": [
              "SimpleAnalysisWorkflow"
            ],
            "level": 0,
            "line_number": 7
          },
          {
            "type": "from_import",
            "module": "workflows.base_workflow",
            "names": [
              "BaseWorkflow"
            ],
            "level": 0,
            "line_number": 8
          },
          {
            "type": "import",
            "modules": [
              "logging"
            ],
            "line_number": 9
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 7,
          "function_count": 4,
          "class_count": 1,
          "import_count": 6,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.getLogger(attrname='getLogger',\n                    expr=<Name.logging l.11 at 0x2579a9f3c90>)",
              "type": "Instance of logging.RootLogger"
            },
            {
              "function": "Attribute.register_workflow(attrname='register_workflow',\n                            expr=<Name.self l.22 at 0x2579a561c10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.ProjectAnalysisWorkflow(name='ProjectAnalysisWorkflow')",
              "type": "Instance of workflows.project_analysis_workflow.ProjectAnalysisWorkflow"
            },
            {
              "function": "Attribute.register_workflow(attrname='register_workflow',\n                            expr=<Name.self l.23 at 0x2579a561210>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.SimpleAnalysisWorkflow(name='SimpleAnalysisWorkflow')",
              "type": "Instance of workflows.simple_analysis_workflow.SimpleAnalysisWorkflow"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.28 at 0x2579b0c8a10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.40 at 0x2579b0c9a90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.execute(attrname='execute',\n                  expr=<Name.workflow l.42 at 0x2579b0c8410>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.51 at 0x2579b0cb8d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.55 at 0x2579b0cb190>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.execute_workflow(attrname='execute_workflow',\n                           expr=<Name.self l.70 at 0x2579a2bef50>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.list(name='list')",
              "type": "List.list(ctx=None,\n          elts=[])"
            },
            {
              "function": "Attribute.keys(attrname='keys',\n               expr=<Attribute.workflows l.82 at 0x2579bac9590>)",
              "type": "DictKeys.list(ctx=None,\n              elts=[])"
            },
            {
              "function": "Name.list(name='list')",
              "type": "List.list(ctx=None,\n          elts=[])"
            },
            {
              "function": "Attribute.keys(attrname='keys',\n               expr=<Attribute.running_workflows l.83 at 0x2579d535710>)",
              "type": "DictKeys.list(ctx=None,\n              elts=[])"
            },
            {
              "function": "Name.list(name='list')",
              "type": "List.list(ctx=None,\n          elts=[])"
            },
            {
              "function": "Attribute.keys(attrname='keys',\n               expr=<Attribute.workflows l.89 at 0x2579a2c8550>)",
              "type": "DictKeys.list(ctx=None,\n              elts=[])"
            }
          ],
          "unresolved_imports": [
            "asyncio",
            "logging"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": "orchestrator\\__init__.py",
        "language": "python",
        "file_size": 23,
        "line_count": 2,
        "analysis_method": "python_ast",
        "functions": [],
        "classes": [],
        "imports": [],
        "complexity_metrics": {
          "cyclomatic_complexity": 0,
          "function_count": 0,
          "class_count": 0,
          "import_count": 0,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [],
          "unresolved_imports": [],
          "code_smells": []
        }
      },
      {
        "file_path": "output\\artifact_generator.py",
        "language": "python",
        "file_size": 7498,
        "line_count": 207,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "__init__",
            "line_number": 15,
            "parameters": [
              "self",
              "output_dir"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "generate_agent_files",
            "line_number": 20,
            "parameters": [
              "self",
              "agents"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Generate agent Python files",
            "is_async": false,
            "complexity": 4
          },
          {
            "name": "generate_skill_files",
            "line_number": 36,
            "parameters": [
              "self",
              "skills"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Generate skill Python files",
            "is_async": false,
            "complexity": 4
          },
          {
            "name": "generate_workflow_files",
            "line_number": 52,
            "parameters": [
              "self",
              "workflows"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Generate workflow Python files",
            "is_async": false,
            "complexity": 4
          },
          {
            "name": "generate_test_files",
            "line_number": 68,
            "parameters": [
              "self",
              "tests"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Generate test files",
            "is_async": false,
            "complexity": 4
          },
          {
            "name": "generate_docker_config",
            "line_number": 84,
            "parameters": [
              "self",
              "analysis_results"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Generate Docker configuration",
            "is_async": false,
            "complexity": 7
          },
          {
            "name": "generate_requirements_file",
            "line_number": 135,
            "parameters": [
              "self",
              "analysis_results"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Generate requirements.txt file",
            "is_async": false,
            "complexity": 8
          },
          {
            "name": "generate_all_artifacts",
            "line_number": 174,
            "parameters": [
              "self",
              "analysis_results",
              "agents",
              "skills",
              "workflows",
              "tests"
            ],
            "defaults": 4,
            "decorators": [],
            "docstring": "Generate all artifacts",
            "is_async": false,
            "complexity": 5
          }
        ],
        "classes": [
          {
            "name": "ArtifactGenerator",
            "line_number": 12,
            "bases": [],
            "decorators": [],
            "docstring": "Generates project artifacts (code files, configs, etc.)",
            "methods": [
              "__init__",
              "generate_agent_files",
              "generate_skill_files",
              "generate_workflow_files",
              "generate_test_files",
              "generate_docker_config",
              "generate_requirements_file",
              "generate_all_artifacts"
            ],
            "method_count": 8
          }
        ],
        "imports": [
          {
            "type": "import",
            "modules": [
              "os"
            ],
            "line_number": 4
          },
          {
            "type": "import",
            "modules": [
              "json"
            ],
            "line_number": 5
          },
          {
            "type": "from_import",
            "module": "typing",
            "names": [
              "Dict",
              "Any",
              "List"
            ],
            "level": 0,
            "line_number": 6
          },
          {
            "type": "from_import",
            "module": "datetime",
            "names": [
              "datetime"
            ],
            "level": 0,
            "line_number": 7
          },
          {
            "type": "import",
            "modules": [
              "logging"
            ],
            "line_number": 8
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 37,
          "function_count": 8,
          "class_count": 1,
          "import_count": 5,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.getLogger(attrname='getLogger',\n                    expr=<Name.logging l.10 at 0x2579b386350>)",
              "type": "Instance of logging.RootLogger"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Attribute.path l.17 at 0x2579b387410>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.makedirs(attrname='makedirs',\n                   expr=<Name.os l.18 at 0x2579b384310>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Name.agents l.24 at 0x2579b3849d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Attribute.path l.26 at 0x2579b2d71d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.agent_name l.26 at 0x2579b2d5690>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.write(attrname='write',\n                expr=<Name.f l.29 at 0x2579b2d7390>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.32 at 0x2579b2d7490>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Name.skills l.40 at 0x2579b2d6190>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Attribute.path l.42 at 0x2579b2d6f90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.skill_name l.42 at 0x2579b2d6cd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.write(attrname='write',\n                expr=<Name.f l.45 at 0x2579b2d7f50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.48 at 0x2579b2d5190>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Name.workflows l.56 at 0x2579b2dd410>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Attribute.path l.58 at 0x2579b2dfb10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.workflow_name l.58 at 0x2579b2de6d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.write(attrname='write',\n                expr=<Name.f l.61 at 0x2579b2dfa90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.64 at 0x2579b2dc110>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Name.tests l.72 at 0x2579b2de450>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Attribute.path l.74 at 0x2579b2dec90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.test_name l.74 at 0x2579b2df7d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.write(attrname='write',\n                expr=<Name.f l.77 at 0x2579b2dfe10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.80 at 0x2579b2dcf10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Attribute.path l.86 at 0x2579b2e5590>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.89 at 0x2579b2e7dd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.97 at 0x2579b2e4550>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.write(attrname='write',\n                expr=<Name.f l.130 at 0x2579b2e6250>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.132 at 0x2579b2e6950>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Attribute.path l.137 at 0x2579b2e7950>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.149 at 0x2579b2e4990>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.160 at 0x2579b2ef250>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.write(attrname='write',\n                expr=<Name.f l.169 at 0x2579b2eccd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Const.str l.169 at 0x2579b2ecc10>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.171 at 0x2579b2ed550>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.generate_agent_files(attrname='generate_agent_files',\n                               expr=<Name.self l.190 at 0x2579b2ed210>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.generate_skill_files(attrname='generate_skill_files',\n                               expr=<Name.self l.193 at 0x2579b2ee410>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.generate_workflow_files(attrname='generate_workflow_files',\n                                  expr=<Name.self l.196 at 0x2579b2ef590>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.generate_test_files(attrname='generate_test_files',\n                              expr=<Name.self l.199 at 0x2579b2ed290>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.generate_docker_config(attrname='generate_docker_config',\n                                 expr=<Name.self l.202 at 0x2579b2f4d10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.generate_requirements_file(attrname='generate_requirements_file',\n                                     expr=<Name.self l.203 at 0x2579b2f6590>)",
              "type": "Uninferable"
            }
          ],
          "unresolved_imports": [
            "os",
            "json",
            "logging"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": "output\\report_generator.py",
        "language": "python",
        "file_size": 7799,
        "line_count": 194,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "__init__",
            "line_number": 15,
            "parameters": [
              "self",
              "output_dir"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "generate_project_report",
            "line_number": 19,
            "parameters": [
              "self",
              "analysis_results",
              "agents",
              "skills",
              "workflows"
            ],
            "defaults": 3,
            "decorators": [],
            "docstring": "Generate comprehensive project report",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_generate_markdown_report",
            "line_number": 34,
            "parameters": [
              "self",
              "analysis_results",
              "agents",
              "skills",
              "workflows"
            ],
            "defaults": 3,
            "decorators": [],
            "docstring": "Generate markdown report content",
            "is_async": false,
            "complexity": 22
          },
          {
            "name": "generate_json_report",
            "line_number": 137,
            "parameters": [
              "self",
              "analysis_results",
              "agents",
              "skills",
              "workflows"
            ],
            "defaults": 3,
            "decorators": [],
            "docstring": "Generate JSON report",
            "is_async": false,
            "complexity": 4
          },
          {
            "name": "generate_summary",
            "line_number": 160,
            "parameters": [
              "self",
              "analysis_results"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Generate project summary",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_calculate_complexity_score",
            "line_number": 173,
            "parameters": [
              "self",
              "analysis_results"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Calculate project complexity score",
            "is_async": false,
            "complexity": 1
          }
        ],
        "classes": [
          {
            "name": "ReportGenerator",
            "line_number": 12,
            "bases": [],
            "decorators": [],
            "docstring": "Generates comprehensive reports from analysis results",
            "methods": [
              "__init__",
              "generate_project_report",
              "_generate_markdown_report",
              "generate_json_report",
              "generate_summary",
              "_calculate_complexity_score"
            ],
            "method_count": 6
          }
        ],
        "imports": [
          {
            "type": "import",
            "modules": [
              "json"
            ],
            "line_number": 4
          },
          {
            "type": "import",
            "modules": [
              "os"
            ],
            "line_number": 5
          },
          {
            "type": "from_import",
            "module": "datetime",
            "names": [
              "datetime"
            ],
            "level": 0,
            "line_number": 6
          },
          {
            "type": "from_import",
            "module": "typing",
            "names": [
              "Dict",
              "Any",
              "List"
            ],
            "level": 0,
            "line_number": 7
          },
          {
            "type": "import",
            "modules": [
              "logging"
            ],
            "line_number": 8
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 30,
          "function_count": 6,
          "class_count": 1,
          "import_count": 5,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.getLogger(attrname='getLogger',\n                    expr=<Name.logging l.10 at 0x2579b37b210>)",
              "type": "Instance of logging.RootLogger"
            },
            {
              "function": "Attribute.makedirs(attrname='makedirs',\n                   expr=<Name.os l.17 at 0x2579b3719d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.strftime(attrname='strftime',\n                   expr=<Call l.25 at 0x2579b372cd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.now(attrname='now',\n              expr=<Name.datetime l.25 at 0x2579b372d10>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Attribute.path l.26 at 0x2579b373050>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.write(attrname='write',\n                expr=<Name.f l.29 at 0x2579b3738d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._generate_markdown_report(attrname='_generate_markdown_report',\n                                    expr=<Name.self l.29 at 0x2579b3739d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.31 at 0x2579b373c90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.strftime(attrname='strftime',\n                   expr=<Call l.42 at 0x2579b395050>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.now(attrname='now',\n              expr=<Name.datetime l.42 at 0x2579b3950d0>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.43 at 0x2579b395350>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.44 at 0x2579b3955d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.49 at 0x2579b395810>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.50 at 0x2579b395a10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Const.str l.51 at 0x2579b395c50>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.keys(attrname='keys',\n               expr=<Call l.51 at 0x2579b395d90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.51 at 0x2579b395dd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.57 at 0x2579b396210>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Subscript l.59 at 0x2579b3966d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.63 at 0x2579b396cd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Subscript l.65 at 0x2579b397150>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.title(attrname='title',\n                expr=<Name.lang l.66 at 0x2579b397550>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.72 at 0x2579b3b4690>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.78 at 0x2579b3b7b90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Name.agents l.86 at 0x2579b3b6010>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.agent_info l.89 at 0x2579b3b4a90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.agent_info l.90 at 0x2579b3b5150>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Const.str l.91 at 0x2579b3b58d0>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.agent_info l.91 at 0x2579b3b6410>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Name.skills l.96 at 0x2579b3b70d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.skill_info l.99 at 0x2579b3b44d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.skill_info l.100 at 0x2579b3b51d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.skill_info l.101 at 0x2579b3b67d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Name.workflows l.106 at 0x2579b3b5910>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.workflow_info l.109 at 0x2579b3baa90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.workflow_info l.110 at 0x2579b3baad0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.113 at 0x2579b3b9c50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strftime(attrname='strftime',\n                   expr=<Call l.143 at 0x2579b3ba7d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.now(attrname='now',\n              expr=<Name.datetime l.143 at 0x2579b3ba690>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Attribute.path l.144 at 0x2579b3baf50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.isoformat(attrname='isoformat',\n                    expr=<Call l.147 at 0x2579b3bbdd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.now(attrname='now',\n              expr=<Name.datetime l.147 at 0x2579b3bbd90>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Attribute.dump(attrname='dump',\n               expr=<Name.json l.155 at 0x2579b3baed0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.157 at 0x2579b3bbc50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.163 at 0x2579b3c7ed0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.164 at 0x2579b3c58d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.165 at 0x2579b3c77d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.list(name='list')",
              "type": "Instance of builtins.list"
            },
            {
              "function": "Attribute.keys(attrname='keys',\n               expr=<Call l.166 at 0x2579b3c5a10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.166 at 0x2579b3c5950>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.list(name='list')",
              "type": "Instance of builtins.list"
            },
            {
              "function": "Attribute.keys(attrname='keys',\n               expr=<Call l.167 at 0x2579b3c4310>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.167 at 0x2579b3c4b10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.168 at 0x2579b3c4610>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.169 at 0x2579b3c4f90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._calculate_complexity_score(attrname='_calculate_complexity_score',\n                                      expr=<Name.self l.170 at 0x2579b3c4d90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.178 at 0x2579b3c6450>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.182 at 0x2579b3c7490>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.186 at 0x2579b3c4ad0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.analysis_results l.190 at 0x2579b3c6f50>)",
              "type": "Uninferable"
            }
          ],
          "unresolved_imports": [
            "json",
            "os",
            "logging"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": "output\\__init__.py",
        "language": "python",
        "file_size": 17,
        "line_count": 2,
        "analysis_method": "python_ast",
        "functions": [],
        "classes": [],
        "imports": [],
        "complexity_metrics": {
          "cyclomatic_complexity": 0,
          "function_count": 0,
          "class_count": 0,
          "import_count": 0,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [],
          "unresolved_imports": [],
          "code_smells": []
        }
      },
      {
        "file_path": "plugins\\__init__.py",
        "language": "python",
        "file_size": 19815,
        "line_count": 588,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "__init__",
            "line_number": 17,
            "parameters": [
              "self",
              "name",
              "description",
              "version"
            ],
            "defaults": 2,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "get_info",
            "line_number": 36,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Gibt Informationen über das Plugin zurück",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "__init__",
            "line_number": 55,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "__init__",
            "line_number": 175,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "__init__",
            "line_number": 276,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "__init__",
            "line_number": 400,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          }
        ],
        "classes": [
          {
            "name": "BasePlugin",
            "line_number": 14,
            "bases": [
              "ABC"
            ],
            "decorators": [],
            "docstring": "Basisklasse für alle Plugins",
            "methods": [
              "__init__",
              "get_info"
            ],
            "method_count": 2
          },
          {
            "name": "NotificationPlugin",
            "line_number": 52,
            "bases": [
              "BasePlugin"
            ],
            "decorators": [],
            "docstring": "Plugin für Benachrichtigungen",
            "methods": [
              "__init__"
            ],
            "method_count": 1
          },
          {
            "name": "DataExportPlugin",
            "line_number": 172,
            "bases": [
              "BasePlugin"
            ],
            "decorators": [],
            "docstring": "Plugin für Datenexport",
            "methods": [
              "__init__"
            ],
            "method_count": 1
          },
          {
            "name": "MonitoringPlugin",
            "line_number": 273,
            "bases": [
              "BasePlugin"
            ],
            "decorators": [],
            "docstring": "Plugin für System-Monitoring",
            "methods": [
              "__init__"
            ],
            "method_count": 1
          },
          {
            "name": "CachePlugin",
            "line_number": 397,
            "bases": [
              "BasePlugin"
            ],
            "decorators": [],
            "docstring": "Plugin für Caching-Funktionalität",
            "methods": [
              "__init__"
            ],
            "method_count": 1
          }
        ],
        "imports": [
          {
            "type": "from_import",
            "module": "abc",
            "names": [
              "ABC",
              "abstractmethod"
            ],
            "level": 0,
            "line_number": 5
          },
          {
            "type": "from_import",
            "module": "typing",
            "names": [
              "Dict",
              "Any",
              "Optional",
              "List"
            ],
            "level": 0,
            "line_number": 6
          },
          {
            "type": "import",
            "modules": [
              "logging"
            ],
            "line_number": 7
          },
          {
            "type": "import",
            "modules": [
              "asyncio"
            ],
            "line_number": 8
          },
          {
            "type": "from_import",
            "module": "datetime",
            "names": [
              "datetime"
            ],
            "level": 0,
            "line_number": 9
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 6,
          "function_count": 6,
          "class_count": 5,
          "import_count": 5,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.getLogger(attrname='getLogger',\n                    expr=<Name.logging l.11 at 0x2579b9cc350>)",
              "type": "Instance of logging.RootLogger"
            },
            {
              "function": "Attribute.getLogger(attrname='getLogger',\n                    expr=<Name.logging l.22 at 0x2579b9cdfd0>)",
              "type": "Instance of logging.RootLogger"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Attribute.logger l.49 at 0x2579b96cc10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.__init__(attrname='__init__',\n                   expr=<Call l.56 at 0x2579b96d750>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.super(name='super')",
              "type": "Super.NotificationPlugin()"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Attribute.logger l.71 at 0x2579b96e750>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.sleep(attrname='sleep',\n                expr=<Name.asyncio l.74 at 0x2579b96e9d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Attribute.logger l.77 at 0x2579b96ecd0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Attribute.logger l.81 at 0x2579b96f110>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Attribute.logger l.90 at 0x2579b8f4310>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._send_email(attrname='_send_email',\n                      expr=<Name.self l.93 at 0x2579b8f4810>)",
              "type": "Dict.dict(items=[ ( <Const.str l.114 at 0x2579b8f6ad0>,\n              <Attribute.name l.114 at 0x2579b8f6a10>),\n            ( <Const.str l.115 at 0x2579b8f6a90>,\n              <Const.str l.115 at 0x2579b8f6b10>),\n            ( <Const.str l.116 at 0x2579b8f6c10>,\n              <Dict.dict l.116 at 0x2579b8f6b50>),\n            ( <Const.str l.122 at 0x2579b8f7210>,\n              <Const.str l.122 at 0x2579b8f71d0>)])"
            },
            {
              "function": "Attribute._send_webhook(attrname='_send_webhook',\n                        expr=<Name.self l.95 at 0x2579b8f4bd0>)",
              "type": "Dict.dict(items=[ ( <Const.str l.137 at 0x2579b9b4650>,\n              <Attribute.name l.137 at 0x2579b9b4590>),\n            ( <Const.str l.138 at 0x2579b9b4610>,\n              <Const.str l.138 at 0x2579b9b4690>),\n            ( <Const.str l.139 at 0x2579b9b4790>,\n              <Dict.dict l.139 at 0x2579b9b46d0>),\n            ( <Const.str l.145 at 0x2579b9b4a50>,\n              <Const.str l.145 at 0x2579b9b4a10>)])"
            },
            {
              "function": "Attribute._send_slack(attrname='_send_slack',\n                      expr=<Name.self l.97 at 0x2579b8f4f90>)",
              "type": "Dict.dict(items=[ ( <Const.str l.160 at 0x2579b9b5f10>,\n              <Attribute.name l.160 at 0x2579b9b5e50>),\n            ( <Const.str l.161 at 0x2579b9b5ed0>,\n              <Const.str l.161 at 0x2579b9b5f50>),\n            ( <Const.str l.162 at 0x2579b9b6050>,\n              <Dict.dict l.162 at 0x2579b9b5f90>),\n            ( <Const.str l.168 at 0x2579b9b6510>,\n              <Const.str l.168 at 0x2579b9b64d0>)])"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parameters l.103 at 0x2579b8f5d10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parameters l.104 at 0x2579b8f5f90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parameters l.105 at 0x2579b8f6250>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.sleep(attrname='sleep',\n                expr=<Name.asyncio l.111 at 0x2579b8f6750>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.timestamp(attrname='timestamp',\n                    expr=<Call l.120 at 0x2579b8f6f90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.now(attrname='now',\n              expr=<Name.datetime l.120 at 0x2579b8f7010>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parameters l.127 at 0x2579b8f7b10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parameters l.128 at 0x2579b8f7d90>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.sleep(attrname='sleep',\n                expr=<Name.asyncio l.134 at 0x2579b9b4310>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parameters l.150 at 0x2579b9b5410>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parameters l.151 at 0x2579b9b56d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.sleep(attrname='sleep',\n                expr=<Name.asyncio l.157 at 0x2579b9b5bd0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.isoformat(attrname='isoformat',\n                    expr=<Call l.166 at 0x2579b9b62d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.now(attrname='now',\n              expr=<Name.datetime l.166 at 0x2579b9b6310>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Attribute.__init__(attrname='__init__',\n                   expr=<Call l.176 at 0x2579b9b6d50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.super(name='super')",
              "type": "Super.DataExportPlugin()"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Attribute.logger l.191 at 0x2579b9b7f10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.sleep(attrname='sleep',\n                expr=<Name.asyncio l.194 at 0x2579b99c190>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Attribute.logger l.197 at 0x2579b99c490>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Attribute.logger l.201 at 0x2579b99c8d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Attribute.logger l.210 at 0x2579b99d990>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._export_data(attrname='_export_data',\n                       expr=<Name.self l.213 at 0x2579b99de50>)",
              "type": "Dict.dict(items=[ ( <Const.str l.238 at 0x2579b8d0810>,\n              <Attribute.name l.238 at 0x2579b8d0950>),\n            ( <Const.str l.239 at 0x2579b8d0090>,\n              <Const.str l.239 at 0x2579b8d0850>),\n            ( <Const.str l.240 at 0x2579b8d0910>,\n              <Dict.dict l.240 at 0x2579b8d0150>),\n            ( <Const.str l.247 at 0x2579b8d04d0>,\n              <Const.str l.247 at 0x2579b8d0510>)])"
            },
            {
              "function": "Attribute._export_report(attrname='_export_report',\n                         expr=<Name.self l.215 at 0x2579b99e210>)",
              "type": "Dict.dict(items=[ ( <Const.str l.260 at 0x2579b8d2a50>,\n              <Attribute.name l.260 at 0x2579b8d2950>),\n            ( <Const.str l.261 at 0x2579b8d2a10>,\n              <Const.str l.261 at 0x2579b8d2a90>),\n            ( <Const.str l.262 at 0x2579b8d2790>,\n              <Dict.dict l.262 at 0x2579b8d26d0>),\n            ( <Const.str l.269 at 0x2579b8d3bd0>,\n              <Const.str l.269 at 0x2579b8d3b50>)])"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parameters l.221 at 0x2579b99f010>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parameters l.222 at 0x2579b99f290>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parameters l.223 at 0x2579b99f550>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strftime(attrname='strftime',\n                   expr=<Call l.223 at 0x2579b99f790>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.now(attrname='now',\n              expr=<Name.datetime l.223 at 0x2579b99f810>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.sleep(attrname='sleep',\n                expr=<Name.asyncio l.232 at 0x2579b8d3050>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Attribute.encode(attrname='encode',\n                 expr=<Call l.235 at 0x2579b8d3710>)",
              "type": "Const.bytes(value=b'',\n            kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parameters l.252 at 0x2579b8d1250>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parameters l.253 at 0x2579b8d2050>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parameters l.254 at 0x2579b8d1d50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.sleep(attrname='sleep',\n                expr=<Name.asyncio l.257 at 0x2579b8d2d10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.isoformat(attrname='isoformat',\n                    expr=<Call l.267 at 0x2579b8d3e50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.now(attrname='now',\n              expr=<Name.datetime l.267 at 0x2579b8d3d10>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Attribute.__init__(attrname='__init__',\n                   expr=<Call l.277 at 0x2579b8d1c90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.super(name='super')",
              "type": "Super.MonitoringPlugin()"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Attribute.logger l.297 at 0x2579b8dcad0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.sleep(attrname='sleep',\n                expr=<Name.asyncio l.300 at 0x2579b8dea90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Attribute.logger l.303 at 0x2579b8dc810>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Attribute.logger l.307 at 0x2579b8dcf10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Attribute.logger l.313 at 0x2579b8de3d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._collect_metrics(attrname='_collect_metrics',\n                           expr=<Name.self l.316 at 0x2579b8dec90>)",
              "type": "Dict.dict(items=[ ( <Const.str l.346 at 0x2579b7d2010>,\n              <Attribute.name l.346 at 0x2579b7d3a90>),\n            ( <Const.str l.347 at 0x2579b7d3ad0>,\n              <Const.str l.347 at 0x2579b7d2090>),\n            ( <Const.str l.348 at 0x2579b7d2690>,\n              <Name.metrics l.348 at 0x2579b7d2510>),\n            ( <Const.str l.349 at 0x2579b7d2710>,\n              <Const.str l.349 at 0x2579b7d2610>)])"
            },
            {
              "function": "Attribute._check_alerts(attrname='_check_alerts',\n                        expr=<Name.self l.318 at 0x2579b8dfa10>)",
              "type": "Dict.dict(items=[ ( <Const.str l.371 at 0x2579b7d0a90>,\n              <Attribute.name l.371 at 0x2579b7d10d0>),\n            ( <Const.str l.372 at 0x2579b7d0ed0>,\n              <Const.str l.372 at 0x2579b7d1490>),\n            ( <Const.str l.373 at 0x2579b7d0f50>,\n              <Dict.dict l.373 at 0x2579b7d13d0>),\n            ( <Const.str l.378 at 0x2579b7e8110>,\n              <Const.str l.378 at 0x2579b7e8210>)])"
            },
            {
              "function": "Attribute._get_metrics_history(attrname='_get_metrics_history',\n                               expr=<Name.self l.320 at 0x2579b8df650>)",
              "type": "Dict.dict(items=[ ( <Const.str l.386 at 0x2579b7ebdd0>,\n              <Attribute.name l.386 at 0x2579b7eb5d0>),\n            ( <Const.str l.387 at 0x2579b7eb3d0>,\n              <Const.str l.387 at 0x2579b7ebd10>),\n            ( <Const.str l.388 at 0x2579b7e98d0>,\n              <Dict.dict l.388 at 0x2579b7ebbd0>),\n            ( <Const.str l.393 at 0x2579b7e8dd0>,\n              <Const.str l.393 at 0x2579b7e8d90>)])"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.sleep(attrname='sleep',\n                expr=<Name.asyncio l.327 at 0x2579b8dfcd0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.isoformat(attrname='isoformat',\n                    expr=<Call l.330 at 0x2579b7d20d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.now(attrname='now',\n              expr=<Name.datetime l.330 at 0x2579b7d2110>)",
              "type": "Instance of datetime.datetime"
            },
            {
              "function": "Attribute.append(attrname='append',\n                 expr=<Attribute.metrics_history l.339 at 0x2579b7d3110>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.sleep(attrname='sleep',\n                expr=<Name.asyncio l.355 at 0x2579b7d1a50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parameters l.383 at 0x2579b7ebc90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.__init__(attrname='__init__',\n                   expr=<Call l.401 at 0x2579b7ea3d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.super(name='super')",
              "type": "Super.CachePlugin()"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Attribute.logger l.423 at 0x2579b7eacd0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.sleep(attrname='sleep',\n                expr=<Name.asyncio l.426 at 0x2579b7eb850>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Attribute.logger l.429 at 0x2579b7e84d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Attribute.logger l.433 at 0x2579b7ec450>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Attribute.logger l.442 at 0x2579b7ed590>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._get_cache(attrname='_get_cache',\n                     expr=<Name.self l.445 at 0x2579b7eda50>)",
              "type": "Dict.dict(items=[ ( <Const.str l.467 at 0x2579b87c2d0>,\n              <Attribute.name l.467 at 0x2579b87c210>),\n            ( <Const.str l.468 at 0x2579b87c290>,\n              <Const.str l.468 at 0x2579b87c310>),\n            ( <Const.str l.469 at 0x2579b87c490>,\n              <Dict.dict l.469 at 0x2579b87c350>),\n            ( <Const.str l.474 at 0x2579b87c7d0>,\n              <Const.str l.474 at 0x2579b87c790>)])"
            },
            {
              "function": "Attribute._set_cache(attrname='_set_cache',\n                     expr=<Name.self l.447 at 0x2579b7ede10>)",
              "type": "Dict.dict(items=[ ( <Const.str l.504 at 0x2579b87ec50>,\n              <Attribute.name l.504 at 0x2579b87eb90>),\n            ( <Const.str l.505 at 0x2579b87ec10>,\n              <Const.str l.505 at 0x2579b87ec90>),\n            ( <Const.str l.506 at 0x2579b87ee50>,\n              <Dict.dict l.506 at 0x2579b87ecd0>),\n            ( <Const.str l.512 at 0x2579b87f190>,\n              <Const.str l.512 at 0x2579b87f150>)])"
            },
            {
              "function": "Attribute._delete_cache(attrname='_delete_cache',\n                        expr=<Name.self l.449 at 0x2579b7ee250>)",
              "type": "Dict.dict(items=[ ( <Const.str l.528 at 0x2579b828910>,\n              <Attribute.name l.528 at 0x2579b828850>),\n            ( <Const.str l.529 at 0x2579b8288d0>,\n              <Const.str l.529 at 0x2579b828950>),\n            ( <Const.str l.530 at 0x2579b828b10>,\n              <Dict.dict l.530 at 0x2579b828990>),\n            ( <Const.str l.534 at 0x2579b828cd0>,\n              <Const.str l.534 at 0x2579b828c50>)])"
            },
            {
              "function": "Attribute._clear_cache(attrname='_clear_cache',\n                       expr=<Name.self l.451 at 0x2579b7ee690>)",
              "type": "Dict.dict(items=[ ( <Const.str l.543 at 0x2579b829d10>,\n              <Attribute.name l.543 at 0x2579b829c50>),\n            ( <Const.str l.544 at 0x2579b829cd0>,\n              <Const.str l.544 at 0x2579b829d50>),\n            ( <Const.str l.545 at 0x2579b829ed0>,\n              <Dict.dict l.545 at 0x2579b829d90>),\n            ( <Const.str l.549 at 0x2579b82a090>,\n              <Const.str l.549 at 0x2579b82a050>)])"
            },
            {
              "function": "Attribute._get_stats(attrname='_get_stats',\n                     expr=<Name.self l.453 at 0x2579b7eead0>)",
              "type": "Dict.dict(items=[ ( <Const.str l.558 at 0x2579b82b410>,\n              <Attribute.name l.558 at 0x2579b82b350>),\n            ( <Const.str l.559 at 0x2579b82b3d0>,\n              <Const.str l.559 at 0x2579b82b450>),\n            ( <Const.str l.560 at 0x2579b82b610>,\n              <Dict.dict l.560 at 0x2579b82b490>),\n            ( <Const.str l.565 at 0x2579b82bc90>,\n              <Const.str l.565 at 0x2579b82bc50>)])"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parameters l.459 at 0x2579b7ef8d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parameters l.491 at 0x2579b87dad0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parameters l.492 at 0x2579b87dd50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parameters l.493 at 0x2579b87dfd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.parameters l.517 at 0x2579b87fc10>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Attribute.copy(attrname='copy',\n               expr=<Attribute.cache_stats l.562 at 0x2579b82b8d0>)",
              "type": "Dict.dict(items=[ ( <Const.str l.414 at 0x2579b7eb810>,\n              <Const.int l.414 at 0x2579b7eb950>),\n            ( <Const.str l.415 at 0x2579b7eb8d0>,\n              <Const.int l.415 at 0x2579b7eb790>),\n            ( <Const.str l.416 at 0x2579b7e8890>,\n              <Const.int l.416 at 0x2579b7ebf90>),\n            ( <Const.str l.417 at 0x2579b7e8590>,\n              <Const.int l.417 at 0x2579b7e8410>)])"
            },
            {
              "function": "Name.NotificationPlugin(name='NotificationPlugin')",
              "type": "Instance of .NotificationPlugin"
            },
            {
              "function": "Name.DataExportPlugin(name='DataExportPlugin')",
              "type": "Instance of .DataExportPlugin"
            },
            {
              "function": "Name.MonitoringPlugin(name='MonitoringPlugin')",
              "type": "Instance of .MonitoringPlugin"
            },
            {
              "function": "Name.CachePlugin(name='CachePlugin')",
              "type": "Instance of .CachePlugin"
            },
            {
              "function": "Attribute.values(attrname='values',\n                 expr=<Name.plugins l.581 at 0x2579b810a50>)",
              "type": "DictValues.list(ctx=None,\n                elts=[ <Call l.575 at 0x2579b8104d0>,\n                  <Call l.576 at 0x2579b810610>,\n                  <Call l.577 at 0x2579b810750>,\n                  <Call l.578 at 0x2579b810890>])"
            },
            {
              "function": "Attribute.initialize(attrname='initialize',\n                     expr=<Name.plugin l.582 at 0x2579b810d90>)",
              "type": "Uninferable"
            }
          ],
          "unresolved_imports": [
            "logging",
            "asyncio"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": "routes\\agent_routes.py",
        "language": "python",
        "file_size": 3850,
        "line_count": 126,
        "analysis_method": "python_ast",
        "functions": [],
        "classes": [
          {
            "name": "ChatRequest",
            "line_number": 17,
            "bases": [
              "BaseModel"
            ],
            "decorators": [],
            "docstring": "Request model for chat",
            "methods": [],
            "method_count": 0
          }
        ],
        "imports": [
          {
            "type": "import",
            "modules": [
              "logging"
            ],
            "line_number": 6
          },
          {
            "type": "from_import",
            "module": "typing",
            "names": [
              "Dict",
              "Any",
              "Optional"
            ],
            "level": 0,
            "line_number": 7
          },
          {
            "type": "from_import",
            "module": "fastapi",
            "names": [
              "APIRouter",
              "HTTPException"
            ],
            "level": 0,
            "line_number": 8
          },
          {
            "type": "from_import",
            "module": "pydantic",
            "names": [
              "BaseModel"
            ],
            "level": 0,
            "line_number": 9
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 0,
          "function_count": 0,
          "class_count": 1,
          "import_count": 4,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.getLogger(attrname='getLogger',\n                    expr=<Name.logging l.11 at 0x2579a2cbd10>)",
              "type": "Instance of logging.RootLogger"
            },
            {
              "function": "Name.APIRouter(name='APIRouter')",
              "type": "Instance of fastapi.routing.APIRouter"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Name.router l.23 at 0x2579b2e8d10>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Name.HTTPException(name='HTTPException')",
              "type": "Instance of fastapi.exceptions.HTTPException"
            },
            {
              "function": "Attribute.chat(attrname='chat',\n               expr=<Name.project_manager_agent l.33 at 0x2579b2e9d10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.45 at 0x2579b2e94d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.HTTPException(name='HTTPException')",
              "type": "Instance of fastapi.exceptions.HTTPException"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Name.router l.49 at 0x2579b802710>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Name.HTTPException(name='HTTPException')",
              "type": "Instance of fastapi.exceptions.HTTPException"
            },
            {
              "function": "Attribute.generate_from_analysis(attrname='generate_from_analysis',\n                                 expr=<Name.agent_generator l.60 at 0x2579b37b790>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.71 at 0x2579b37b3d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.HTTPException(name='HTTPException')",
              "type": "Instance of fastapi.exceptions.HTTPException"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.router l.75 at 0x2579b0c3510>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.loaded_modules l.79 at 0x2579b0c1e10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Name.agents l.82 at 0x2579e629e10>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.type(name='type')",
              "type": "Uninferable"
            },
            {
              "function": "Name.getattr(name='getattr')",
              "type": "Uninferable"
            },
            {
              "function": "Name.hasattr(name='hasattr')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get_status(attrname='get_status',\n                     expr=<Name.agent l.89 at 0x2579b631910>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.98 at 0x2579b384b10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.HTTPException(name='HTTPException')",
              "type": "Instance of fastapi.exceptions.HTTPException"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.router l.102 at 0x2579b377f90>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Name.HTTPException(name='HTTPException')",
              "type": "Instance of fastapi.exceptions.HTTPException"
            },
            {
              "function": "Attribute.analyze_and_optimize(attrname='analyze_and_optimize',\n                               expr=<Name.optimization_engine l.113 at 0x2579b6700d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.optimizations l.117 at 0x2579b673650>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.optimizations l.118 at 0x2579b60afd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.optimizations l.119 at 0x2579b608590>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.123 at 0x257ff8e58d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.HTTPException(name='HTTPException')",
              "type": "Instance of fastapi.exceptions.HTTPException"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            }
          ],
          "unresolved_imports": [
            "logging"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": "routes\\analysis_routes.py",
        "language": "python",
        "file_size": 5426,
        "line_count": 158,
        "analysis_method": "python_ast",
        "functions": [],
        "classes": [
          {
            "name": "ProjectAnalysisRequest",
            "line_number": 23,
            "bases": [
              "BaseModel"
            ],
            "decorators": [],
            "docstring": "Request model for project analysis",
            "methods": [],
            "method_count": 0
          }
        ],
        "imports": [
          {
            "type": "import",
            "modules": [
              "os"
            ],
            "line_number": 6
          },
          {
            "type": "import",
            "modules": [
              "logging"
            ],
            "line_number": 7
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 8
          },
          {
            "type": "from_import",
            "module": "typing",
            "names": [
              "Dict",
              "Any"
            ],
            "level": 0,
            "line_number": 9
          },
          {
            "type": "from_import",
            "module": "fastapi",
            "names": [
              "APIRouter",
              "HTTPException"
            ],
            "level": 0,
            "line_number": 10
          },
          {
            "type": "from_import",
            "module": "pydantic",
            "names": [
              "BaseModel"
            ],
            "level": 0,
            "line_number": 11
          },
          {
            "type": "import",
            "modules": [
              "asyncio"
            ],
            "line_number": 38
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 0,
          "function_count": 0,
          "class_count": 1,
          "import_count": 7,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.getLogger(attrname='getLogger',\n                    expr=<Name.logging l.13 at 0x2579b59da10>)",
              "type": "Instance of logging.RootLogger"
            },
            {
              "function": "Name.APIRouter(name='APIRouter')",
              "type": "Instance of fastapi.routing.APIRouter"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Name.router l.28 at 0x2579b36e310>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Name.HTTPException(name='HTTPException')",
              "type": "Instance of fastapi.exceptions.HTTPException"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Attribute.path l.45 at 0x2579b9a2ad0>)",
              "type": "Const.bool(value=False,\n           kind=None)"
            },
            {
              "function": "Name.HTTPException(name='HTTPException')",
              "type": "Instance of fastapi.exceptions.HTTPException"
            },
            {
              "function": "Name.ensure_components_initialized(name='ensure_components_initialized')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.58 at 0x2579b9a6b90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.execute_workflow(attrname='execute_workflow',\n                           expr=<Name.workflow_orchestrator l.59 at 0x2579b9a5e10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.result l.65 at 0x2579b9a45d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.global_analysis_results_setter(name='global_analysis_results_setter')",
              "type": "Uninferable"
            },
            {
              "function": "Name.global_current_project_setter(name='global_current_project_setter')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.74 at 0x2579b9a4a50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.75 at 0x2579b9a5090>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.list(name='list')",
              "type": "Instance of builtins.list"
            },
            {
              "function": "Attribute.keys(attrname='keys',\n               expr=<Name._stored_analysis_results l.75 at 0x2579b9a7e90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.78 at 0x2579b9a7d50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.create_task(attrname='create_task',\n                      expr=<Name.asyncio l.81 at 0x2579b9a77d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.run_analysis_and_store(name='run_analysis_and_store')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.90 at 0x2579b9a6810>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.HTTPException(name='HTTPException')",
              "type": "Instance of fastapi.exceptions.HTTPException"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.router l.94 at 0x2579b9a5a90>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Name.HTTPException(name='HTTPException')",
              "type": "Instance of fastapi.exceptions.HTTPException"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.router l.112 at 0x2579b9a5f10>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Name.reports_dir l.117 at 0x2579b9b9a10>)",
              "type": "Const.bool(value=False,\n           kind=None)"
            },
            {
              "function": "Attribute.glob(attrname='glob',\n               expr=<Name.reports_dir l.121 at 0x2579b9ba410>)",
              "type": "Generator(generator)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.stat(attrname='stat',\n               expr=<Name.file_path l.125 at 0x2579b9bb490>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.stat(attrname='stat',\n               expr=<Name.file_path l.126 at 0x2579b9b8810>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.131 at 0x2579b9b9790>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.HTTPException(name='HTTPException')",
              "type": "Instance of fastapi.exceptions.HTTPException"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.router l.135 at 0x2579b9b96d0>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Name.artifacts_dir l.140 at 0x2579b9bac10>)",
              "type": "Const.bool(value=False,\n           kind=None)"
            },
            {
              "function": "Attribute.rglob(attrname='rglob',\n                expr=<Name.artifacts_dir l.144 at 0x2579b9b8d10>)",
              "type": "Generator(generator)"
            },
            {
              "function": "Attribute.is_file(attrname='is_file',\n                  expr=<Name.file_path l.145 at 0x2579b9b9b10>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.stat(attrname='stat',\n               expr=<Name.file_path l.149 at 0x2579b9bb050>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.stat(attrname='stat',\n               expr=<Name.file_path l.150 at 0x2579b9ba910>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.155 at 0x2579b9bbd90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.HTTPException(name='HTTPException')",
              "type": "Instance of fastapi.exceptions.HTTPException"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            }
          ],
          "unresolved_imports": [
            "os",
            "logging",
            "asyncio"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": "routes\\claude_flow_routes.py",
        "language": "python",
        "file_size": 13514,
        "line_count": 470,
        "analysis_method": "python_ast",
        "functions": [],
        "classes": [
          {
            "name": "SwarmInitRequest",
            "line_number": 17,
            "bases": [
              "BaseModel"
            ],
            "decorators": [],
            "docstring": "Request model for swarm initialization",
            "methods": [],
            "method_count": 0
          },
          {
            "name": "TaskExecutionRequest",
            "line_number": 23,
            "bases": [
              "BaseModel"
            ],
            "decorators": [],
            "docstring": "Request model for task execution",
            "methods": [],
            "method_count": 0
          },
          {
            "name": "AgentSpawnRequest",
            "line_number": 30,
            "bases": [
              "BaseModel"
            ],
            "decorators": [],
            "docstring": "Request model for agent spawning",
            "methods": [],
            "method_count": 0
          },
          {
            "name": "MemoryStoreRequest",
            "line_number": 36,
            "bases": [
              "BaseModel"
            ],
            "decorators": [],
            "docstring": "Request model for memory storage",
            "methods": [],
            "method_count": 0
          },
          {
            "name": "MemoryQueryRequest",
            "line_number": 44,
            "bases": [
              "BaseModel"
            ],
            "decorators": [],
            "docstring": "Request model for memory query",
            "methods": [],
            "method_count": 0
          },
          {
            "name": "HiveMindRequest",
            "line_number": 51,
            "bases": [
              "BaseModel"
            ],
            "decorators": [],
            "docstring": "Request model for hive-mind initialization",
            "methods": [],
            "method_count": 0
          },
          {
            "name": "MCPToolsRequest",
            "line_number": 57,
            "bases": [
              "BaseModel"
            ],
            "decorators": [],
            "docstring": "Request model for MCP tools execution",
            "methods": [],
            "method_count": 0
          }
        ],
        "imports": [
          {
            "type": "import",
            "modules": [
              "logging"
            ],
            "line_number": 6
          },
          {
            "type": "from_import",
            "module": "typing",
            "names": [
              "Dict",
              "Any",
              "List",
              "Optional"
            ],
            "level": 0,
            "line_number": 7
          },
          {
            "type": "from_import",
            "module": "fastapi",
            "names": [
              "APIRouter",
              "HTTPException"
            ],
            "level": 0,
            "line_number": 8
          },
          {
            "type": "from_import",
            "module": "pydantic",
            "names": [
              "BaseModel"
            ],
            "level": 0,
            "line_number": 9
          },
          {
            "type": "from_import",
            "module": "llm.claude_flow_integration",
            "names": [
              "get_claude_flow"
            ],
            "level": 0,
            "line_number": 447
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 0,
          "function_count": 0,
          "class_count": 7,
          "import_count": 5,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.getLogger(attrname='getLogger',\n                    expr=<Name.logging l.11 at 0x2579b81af10>)",
              "type": "Instance of logging.RootLogger"
            },
            {
              "function": "Name.APIRouter(name='APIRouter')",
              "type": "Instance of fastapi.routing.APIRouter"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Name.router l.63 at 0x2579b83a350>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Attribute.init_swarm(attrname='init_swarm',\n                     expr=<Name.claude_flow l.82 at 0x2579b83add0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.HTTPException(name='HTTPException')",
              "type": "Instance of fastapi.exceptions.HTTPException"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.result l.97 at 0x2579b83bb10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.101 at 0x2579b83bed0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.HTTPException(name='HTTPException')",
              "type": "Instance of fastapi.exceptions.HTTPException"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Name.router l.105 at 0x2579b8605d0>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Attribute.execute_task(attrname='execute_task',\n                       expr=<Name.claude_flow l.120 at 0x2579b860e50>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.HTTPException(name='HTTPException')",
              "type": "Instance of fastapi.exceptions.HTTPException"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.result l.136 at 0x2579b861b90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.140 at 0x2579b861ed0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.HTTPException(name='HTTPException')",
              "type": "Instance of fastapi.exceptions.HTTPException"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Name.router l.144 at 0x2579b8625d0>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Attribute.spawn_agent(attrname='spawn_agent',\n                      expr=<Name.claude_flow l.162 at 0x2579b862e10>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.HTTPException(name='HTTPException')",
              "type": "Instance of fastapi.exceptions.HTTPException"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.result l.177 at 0x2579b863950>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.181 at 0x2579b863c90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.HTTPException(name='HTTPException')",
              "type": "Instance of fastapi.exceptions.HTTPException"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.router l.185 at 0x2579b7f43d0>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Attribute.get_swarm_status(attrname='get_swarm_status',\n                           expr=<Name.claude_flow l.189 at 0x2579b7f4b90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.203 at 0x2579b7f5490>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.HTTPException(name='HTTPException')",
              "type": "Instance of fastapi.exceptions.HTTPException"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Name.router l.207 at 0x2579b7f5b90>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Attribute.memory_store(attrname='memory_store',\n                       expr=<Name.claude_flow l.223 at 0x2579b7f6410>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.HTTPException(name='HTTPException')",
              "type": "Instance of fastapi.exceptions.HTTPException"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.result l.240 at 0x2579b7f7090>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.244 at 0x2579b7f73d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.HTTPException(name='HTTPException')",
              "type": "Instance of fastapi.exceptions.HTTPException"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Name.router l.248 at 0x2579b7f7ad0>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Attribute.memory_query(attrname='memory_query',\n                       expr=<Name.claude_flow l.263 at 0x2579b874390>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.HTTPException(name='HTTPException')",
              "type": "Instance of fastapi.exceptions.HTTPException"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.result l.279 at 0x2579b874f90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.283 at 0x2579b8752d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.HTTPException(name='HTTPException')",
              "type": "Instance of fastapi.exceptions.HTTPException"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.router l.287 at 0x2579b8759d0>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Attribute.memory_status(attrname='memory_status',\n                        expr=<Name.claude_flow l.299 at 0x2579b876190>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.result l.304 at 0x2579b876750>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.result l.305 at 0x2579b876910>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.309 at 0x2579b876c50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.HTTPException(name='HTTPException')",
              "type": "Instance of fastapi.exceptions.HTTPException"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Name.router l.313 at 0x2579b877350>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Attribute.init_hive_mind(attrname='init_hive_mind',\n                         expr=<Name.claude_flow l.333 at 0x2579b877bd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.HTTPException(name='HTTPException')",
              "type": "Instance of fastapi.exceptions.HTTPException"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.result l.348 at 0x2579b7e0710>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.352 at 0x2579b7e0a50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.HTTPException(name='HTTPException')",
              "type": "Instance of fastapi.exceptions.HTTPException"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Name.router l.356 at 0x2579b7e1150>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Attribute.execute_with_mcp_tools(attrname='execute_with_mcp_tools',\n                                 expr=<Name.claude_flow l.372 at 0x2579b7e19d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.HTTPException(name='HTTPException')",
              "type": "Instance of fastapi.exceptions.HTTPException"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.result l.387 at 0x2579b7e2510>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.391 at 0x2579b7e2850>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.HTTPException(name='HTTPException')",
              "type": "Instance of fastapi.exceptions.HTTPException"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.router l.395 at 0x2579b7e2f50>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.router l.439 at 0x2579b898b10>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Name.get_claude_flow(name='get_claude_flow')",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.health_check(attrname='health_check',\n                       expr=<Name.claude_flow l.452 at 0x2579b899810>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.460 at 0x2579b899d90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            }
          ],
          "unresolved_imports": [
            "logging"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": "routes\\model_routes.py",
        "language": "python",
        "file_size": 2177,
        "line_count": 87,
        "analysis_method": "python_ast",
        "functions": [],
        "classes": [
          {
            "name": "ModelSelectionRequest",
            "line_number": 16,
            "bases": [
              "BaseModel"
            ],
            "decorators": [],
            "docstring": "Request model for selecting an LLM model",
            "methods": [],
            "method_count": 0
          }
        ],
        "imports": [
          {
            "type": "import",
            "modules": [
              "logging"
            ],
            "line_number": 6
          },
          {
            "type": "from_import",
            "module": "fastapi",
            "names": [
              "APIRouter",
              "HTTPException"
            ],
            "level": 0,
            "line_number": 7
          },
          {
            "type": "from_import",
            "module": "pydantic",
            "names": [
              "BaseModel"
            ],
            "level": 0,
            "line_number": 8
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 0,
          "function_count": 0,
          "class_count": 1,
          "import_count": 3,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.getLogger(attrname='getLogger',\n                    expr=<Name.logging l.10 at 0x2579b35f2d0>)",
              "type": "Instance of logging.RootLogger"
            },
            {
              "function": "Name.APIRouter(name='APIRouter')",
              "type": "Instance of fastapi.routing.APIRouter"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.router l.22 at 0x2579b2f71d0>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Attribute.list_available_models(attrname='list_available_models',\n                                expr=<Name.model_manager l.26 at 0x2579b937650>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.34 at 0x2579e5b3790>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.HTTPException(name='HTTPException')",
              "type": "Instance of fastapi.exceptions.HTTPException"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Name.router l.38 at 0x2579b9b1e90>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Attribute.set_model(attrname='set_model',\n                    expr=<Name.model_manager l.42 at 0x2579b98d250>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.HTTPException(name='HTTPException')",
              "type": "Instance of fastapi.exceptions.HTTPException"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.62 at 0x2579b98f690>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.HTTPException(name='HTTPException')",
              "type": "Instance of fastapi.exceptions.HTTPException"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.router l.66 at 0x2579b98fc90>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.84 at 0x2579b98d190>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.HTTPException(name='HTTPException')",
              "type": "Instance of fastapi.exceptions.HTTPException"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            }
          ],
          "unresolved_imports": [
            "logging"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": "routes\\workflow_routes.py",
        "language": "python",
        "file_size": 4080,
        "line_count": 133,
        "analysis_method": "python_ast",
        "functions": [],
        "classes": [
          {
            "name": "WorkflowExecutionRequest",
            "line_number": 17,
            "bases": [
              "BaseModel"
            ],
            "decorators": [],
            "docstring": "Request model for workflow execution",
            "methods": [],
            "method_count": 0
          }
        ],
        "imports": [
          {
            "type": "import",
            "modules": [
              "logging"
            ],
            "line_number": 6
          },
          {
            "type": "from_import",
            "module": "typing",
            "names": [
              "Dict",
              "Any"
            ],
            "level": 0,
            "line_number": 7
          },
          {
            "type": "from_import",
            "module": "fastapi",
            "names": [
              "APIRouter",
              "HTTPException"
            ],
            "level": 0,
            "line_number": 8
          },
          {
            "type": "from_import",
            "module": "pydantic",
            "names": [
              "BaseModel"
            ],
            "level": 0,
            "line_number": 9
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 0,
          "function_count": 0,
          "class_count": 1,
          "import_count": 4,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.getLogger(attrname='getLogger',\n                    expr=<Name.logging l.11 at 0x2579b9a1910>)",
              "type": "Instance of logging.RootLogger"
            },
            {
              "function": "Name.APIRouter(name='APIRouter')",
              "type": "Instance of fastapi.routing.APIRouter"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Name.router l.23 at 0x2579b9256d0>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Attribute.execute_workflow(attrname='execute_workflow',\n                           expr=<Name.workflow_orchestrator l.31 at 0x2579e79fe90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.43 at 0x2579b991e50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.HTTPException(name='HTTPException')",
              "type": "Instance of fastapi.exceptions.HTTPException"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Name.router l.47 at 0x2579de60b90>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Attribute.execute_workflow(attrname='execute_workflow',\n                           expr=<Name.workflow_orchestrator l.55 at 0x2579b9157d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.execute_workflow(attrname='execute_workflow',\n                           expr=<Name.workflow_orchestrator l.61 at 0x2579b917590>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.73 at 0x2579b915f10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.HTTPException(name='HTTPException')",
              "type": "Instance of fastapi.exceptions.HTTPException"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.router l.77 at 0x2579b915b10>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Name.list(name='list')",
              "type": "Instance of builtins.list"
            },
            {
              "function": "Attribute.keys(attrname='keys',\n               expr=<Name.running l.88 at 0x2579b91fa90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.94 at 0x2579b91e890>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.HTTPException(name='HTTPException')",
              "type": "Instance of fastapi.exceptions.HTTPException"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.router l.98 at 0x2579b91ebd0>)",
              "type": "FunctionDef.decorator(name='decorator',\n                      position=Position(lineno=920, col_offset=8, end_lineno=920, end_col_offset=21),\n                      decorators=None,\n                      args=<Arguments l.920 at 0x257d8a46ad0>,\n                      returns=<Name.DecoratedCallable l.920 at 0x257d8a46990>,\n                      type_params=[],\n                      doc_node=None,\n                      body=[ <Expr l.921 at 0x257d8a46f10>,\n                        <Return l.948 at 0x257d8a47cd0>])"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.workflow l.108 at 0x2579b91ca90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.workflow l.109 at 0x2579b91c090>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.workflow l.110 at 0x2579b91d450>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.workflow l.115 at 0x2579b91d610>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.workflow l.119 at 0x2579b91fb90>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.HTTPException(name='HTTPException')",
              "type": "Instance of fastapi.exceptions.HTTPException"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.130 at 0x2579b91c5d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.HTTPException(name='HTTPException')",
              "type": "Instance of fastapi.exceptions.HTTPException"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            }
          ],
          "unresolved_imports": [
            "logging"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": "routes\\__init__.py",
        "language": "python",
        "file_size": 56,
        "line_count": 5,
        "analysis_method": "python_ast",
        "functions": [],
        "classes": [],
        "imports": [],
        "complexity_metrics": {
          "cyclomatic_complexity": 0,
          "function_count": 0,
          "class_count": 0,
          "import_count": 0,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [],
          "unresolved_imports": [],
          "code_smells": []
        }
      },
      {
        "file_path": "services\\agent_service.py",
        "language": "python",
        "file_size": 3932,
        "line_count": 119,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "__init__",
            "line_number": 15,
            "parameters": [
              "self",
              "agent_orchestrator",
              "project_manager_agent"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "get_agent_status",
            "line_number": 86,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Returns status of all loaded agents",
            "is_async": false,
            "complexity": 3
          }
        ],
        "classes": [
          {
            "name": "AgentService",
            "line_number": 12,
            "bases": [],
            "decorators": [],
            "docstring": "Service class for agent-related operations",
            "methods": [
              "__init__",
              "get_agent_status"
            ],
            "method_count": 2
          }
        ],
        "imports": [
          {
            "type": "import",
            "modules": [
              "logging"
            ],
            "line_number": 6
          },
          {
            "type": "from_import",
            "module": "typing",
            "names": [
              "Dict",
              "Any",
              "List",
              "Optional"
            ],
            "level": 0,
            "line_number": 7
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 4,
          "function_count": 2,
          "class_count": 1,
          "import_count": 2,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.getLogger(attrname='getLogger',\n                    expr=<Name.logging l.9 at 0x2579b938610>)",
              "type": "Instance of logging.RootLogger"
            },
            {
              "function": "Attribute.initialize(attrname='initialize',\n                     expr=<Attribute.project_manager_agent l.24 at 0x2579b93a350>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.25 at 0x2579b93a610>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.27 at 0x2579b939b90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.chat(attrname='chat',\n               expr=<Attribute.project_manager_agent l.45 at 0x2579b819a10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.49 at 0x2579b819ed0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.68 at 0x2579b818250>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.generate_from_analysis(attrname='generate_from_analysis',\n                                 expr=<Name.agent_generator l.70 at 0x2579b818650>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.agent l.76 at 0x2579b818ed0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.79 at 0x2579b818710>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.83 at 0x2579b81b4d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Attribute.loaded_agents l.90 at 0x2579b92fed0>)",
              "type": "DictItems.list(ctx=None,\n               elts=[])"
            },
            {
              "function": "Name.type(name='type')",
              "type": "Uninferable"
            },
            {
              "function": "Name.getattr(name='getattr')",
              "type": "Uninferable"
            },
            {
              "function": "Name.hasattr(name='hasattr')",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get_status(attrname='get_status',\n                     expr=<Name.agent l.98 at 0x2579b92ddd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Attribute.set_project_context(attrname='set_project_context',\n                              expr=<Attribute.project_manager_agent l.111 at 0x2579b92d110>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.114 at 0x2579b92fc50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.116 at 0x2579b92cbd0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            }
          ],
          "unresolved_imports": [
            "logging"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": "services\\project_service.py",
        "language": "python",
        "file_size": 2094,
        "line_count": 65,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "__init__",
            "line_number": 16,
            "parameters": [
              "self",
              "project_analyzer",
              "model_manager"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "get_analysis_results",
            "line_number": 51,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Returns the current analysis results",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "get_current_project",
            "line_number": 55,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Returns the current project path",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "clear_analysis",
            "line_number": 59,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Clears the current analysis results",
            "is_async": false,
            "complexity": 1
          }
        ],
        "classes": [
          {
            "name": "ProjectService",
            "line_number": 13,
            "bases": [],
            "decorators": [],
            "docstring": "Service class for project-related operations",
            "methods": [
              "__init__",
              "get_analysis_results",
              "get_current_project",
              "clear_analysis"
            ],
            "method_count": 4
          }
        ],
        "imports": [
          {
            "type": "import",
            "modules": [
              "logging"
            ],
            "line_number": 6
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 7
          },
          {
            "type": "from_import",
            "module": "typing",
            "names": [
              "Dict",
              "Any",
              "Optional"
            ],
            "level": 0,
            "line_number": 8
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 4,
          "function_count": 4,
          "class_count": 1,
          "import_count": 3,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.getLogger(attrname='getLogger',\n                    expr=<Name.logging l.10 at 0x2579b955b50>)",
              "type": "Instance of logging.RootLogger"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.33 at 0x2579b9390d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Call l.36 at 0x2579b35f050>)",
              "type": "Const.bool(value=False,\n           kind=None)"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.analyze(attrname='analyze',\n                  expr=<Attribute.project_analyzer l.40 at 0x2579b54dcd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.43 at 0x2579b8ea710>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Name.logger l.48 at 0x2579b8ea950>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Name.logger l.63 at 0x2579b92e050>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            }
          ],
          "unresolved_imports": [
            "logging"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": "services\\__init__.py",
        "language": "python",
        "file_size": 60,
        "line_count": 5,
        "analysis_method": "python_ast",
        "functions": [],
        "classes": [],
        "imports": [],
        "complexity_metrics": {
          "cyclomatic_complexity": 0,
          "function_count": 0,
          "class_count": 0,
          "import_count": 0,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [],
          "unresolved_imports": [],
          "code_smells": []
        }
      },
      {
        "file_path": "settings\\__init__.py",
        "language": "python",
        "file_size": 15466,
        "line_count": 439,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "__init__",
            "line_number": 19,
            "parameters": [
              "self",
              "config_dir"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_load_default_settings",
            "line_number": 38,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Lädt Standard-Einstellungen",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "_load_environment_settings",
            "line_number": 121,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Lädt Einstellungen aus Umgebungsvariablen",
            "is_async": false,
            "complexity": 3
          },
          {
            "name": "_load_config_files",
            "line_number": 145,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Lädt Konfigurationsdateien",
            "is_async": false,
            "complexity": 4
          },
          {
            "name": "_set_nested_value",
            "line_number": 164,
            "parameters": [
              "self",
              "dictionary",
              "path",
              "value"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Setzt einen verschachtelten Wert in einem Dictionary",
            "is_async": false,
            "complexity": 3
          },
          {
            "name": "_merge_settings",
            "line_number": 173,
            "parameters": [
              "self",
              "target",
              "source"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Merge zwei Settings-Dictionaries",
            "is_async": false,
            "complexity": 5
          },
          {
            "name": "get",
            "line_number": 181,
            "parameters": [
              "self",
              "key_path",
              "default"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": "Holt einen Einstellungswert über einen Punkt-Notations-Pfad",
            "is_async": false,
            "complexity": 3
          },
          {
            "name": "set",
            "line_number": 193,
            "parameters": [
              "self",
              "key_path",
              "value"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Setzt einen Einstellungswert über einen Punkt-Notations-Pfad",
            "is_async": false,
            "complexity": 3
          },
          {
            "name": "get_section",
            "line_number": 206,
            "parameters": [
              "self",
              "section"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Holt einen ganzen Einstellungsbereich",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "update_section",
            "line_number": 210,
            "parameters": [
              "self",
              "section",
              "updates"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Aktualisiert einen ganzen Einstellungsbereich",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "get_all_settings",
            "line_number": 238,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Gibt alle Einstellungen zurück",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "validate_settings",
            "line_number": 242,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Validiert die aktuellen Einstellungen",
            "is_async": false,
            "complexity": 9
          },
          {
            "name": "get_api_keys",
            "line_number": 268,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Gibt alle konfigurierten API-Schlüssel zurück",
            "is_async": false,
            "complexity": 4
          },
          {
            "name": "is_provider_enabled",
            "line_number": 279,
            "parameters": [
              "self",
              "provider"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Prüft ob ein AI-Provider aktiviert ist",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "get_provider_config",
            "line_number": 284,
            "parameters": [
              "self",
              "provider"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Gibt die Konfiguration für einen AI-Provider zurück",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "validate_app_config",
            "line_number": 293,
            "parameters": [
              "config"
            ],
            "defaults": 0,
            "decorators": [
              "staticmethod"
            ],
            "docstring": "Validiert App-Konfiguration",
            "is_async": false,
            "complexity": 9
          },
          {
            "name": "validate_database_config",
            "line_number": 313,
            "parameters": [
              "config"
            ],
            "defaults": 0,
            "decorators": [
              "staticmethod"
            ],
            "docstring": "Validiert Datenbank-Konfiguration",
            "is_async": false,
            "complexity": 5
          },
          {
            "name": "validate_security_config",
            "line_number": 328,
            "parameters": [
              "config"
            ],
            "defaults": 0,
            "decorators": [
              "staticmethod"
            ],
            "docstring": "Validiert Security-Konfiguration",
            "is_async": false,
            "complexity": 7
          },
          {
            "name": "__init__",
            "line_number": 348,
            "parameters": [
              "self",
              "environment"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "get_environment_specific_config",
            "line_number": 352,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Gibt umgebungs-spezifische Konfigurationen zurück",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "apply_environment_config",
            "line_number": 399,
            "parameters": [
              "self",
              "settings_manager"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Wendet umgebungs-spezifische Konfigurationen an",
            "is_async": false,
            "complexity": 2
          }
        ],
        "classes": [
          {
            "name": "SettingsManager",
            "line_number": 16,
            "bases": [],
            "decorators": [],
            "docstring": "Zentraler Manager für alle Systemeinstellungen",
            "methods": [
              "__init__",
              "_load_default_settings",
              "_load_environment_settings",
              "_load_config_files",
              "_set_nested_value",
              "_merge_settings",
              "get",
              "set",
              "get_section",
              "update_section",
              "get_all_settings",
              "validate_settings",
              "get_api_keys",
              "is_provider_enabled",
              "get_provider_config"
            ],
            "method_count": 15
          },
          {
            "name": "ConfigValidator",
            "line_number": 289,
            "bases": [],
            "decorators": [],
            "docstring": "Validiert Konfigurationseinstellungen",
            "methods": [
              "validate_app_config",
              "validate_database_config",
              "validate_security_config"
            ],
            "method_count": 3
          },
          {
            "name": "EnvironmentConfig",
            "line_number": 345,
            "bases": [],
            "decorators": [],
            "docstring": "Behandelt Umgebungs-spezifische Konfigurationen",
            "methods": [
              "__init__",
              "get_environment_specific_config",
              "apply_environment_config"
            ],
            "method_count": 3
          }
        ],
        "imports": [
          {
            "type": "import",
            "modules": [
              "os"
            ],
            "line_number": 5
          },
          {
            "type": "import",
            "modules": [
              "json"
            ],
            "line_number": 6
          },
          {
            "type": "import",
            "modules": [
              "logging"
            ],
            "line_number": 7
          },
          {
            "type": "from_import",
            "module": "typing",
            "names": [
              "Dict",
              "Any",
              "Optional",
              "List"
            ],
            "level": 0,
            "line_number": 8
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 9
          },
          {
            "type": "from_import",
            "module": "datetime",
            "names": [
              "datetime"
            ],
            "level": 0,
            "line_number": 10
          },
          {
            "type": "import",
            "modules": [
              "asyncio"
            ],
            "line_number": 11
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 68,
          "function_count": 21,
          "class_count": 3,
          "import_count": 7,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.getLogger(attrname='getLogger',\n                    expr=<Name.logging l.13 at 0x2579b7e6ad0>)",
              "type": "Instance of logging.RootLogger"
            },
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Attribute.mkdir(attrname='mkdir',\n                expr=<Attribute.config_dir l.21 at 0x2579e863610>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.getLogger(attrname='getLogger',\n                    expr=<Name.logging l.27 at 0x2579e863e90>)",
              "type": "Instance of logging.RootLogger"
            },
            {
              "function": "Attribute._load_default_settings(attrname='_load_default_settings',\n                                 expr=<Name.self l.30 at 0x2579e8680d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._load_environment_settings(attrname='_load_environment_settings',\n                                     expr=<Name.self l.33 at 0x2579e868250>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._load_config_files(attrname='_load_config_files',\n                             expr=<Name.self l.36 at 0x2579e8683d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.copy(attrname='copy',\n               expr=<Attribute.default_settings l.118 at 0x2579e86b4d0>)",
              "type": "Dict.dict(items=[])"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Attribute.logger l.119 at 0x2579e86b690>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Name.env_mappings l.136 at 0x2579e86ce90>)",
              "type": "DictItems.list(ctx=None,\n               elts=[ <Tuple.tuple l.124 at 0x2579a9554d0>,\n                 <Tuple.tuple l.125 at 0x2579b965a10>,\n                 <Tuple.tuple l.126 at 0x2579b9654d0>,\n                 <Tuple.tuple l.127 at 0x2579b9575d0>,\n                 <Tuple.tuple l.128 at 0x2579b910c50>,\n                 <Tuple.tuple l.129 at 0x2579b374d10>,\n                 <Tuple.tuple l.130 at 0x2579b374b90>,\n                 <Tuple.tuple l.131 at 0x2579b374bd0>,\n                 <Tuple.tuple l.132 at 0x2579b377690>,\n                 <Tuple.tuple l.133 at 0x2579a964650>])"
            },
            {
              "function": "Attribute.getenv(attrname='getenv',\n                 expr=<Name.os l.137 at 0x2579e86d110>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._set_nested_value(attrname='_set_nested_value',\n                            expr=<Name.self l.139 at 0x2579e86d510>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._merge_settings(attrname='_merge_settings',\n                          expr=<Name.self l.142 at 0x2579e86d810>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Attribute.logger l.143 at 0x2579e86da90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Name.config_path l.155 at 0x2579e86e6d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.load(attrname='load',\n               expr=<Name.json l.158 at 0x2579e86ef50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._merge_settings(attrname='_merge_settings',\n                          expr=<Name.self l.159 at 0x2579e86f110>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Attribute.logger l.160 at 0x2579e86f2d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Attribute.logger l.162 at 0x2579e86f810>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Name.source l.175 at 0x2579e871710>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute._merge_settings(attrname='_merge_settings',\n                          expr=<Name.self l.177 at 0x2579e871e50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Name.key_path l.183 at 0x2579e872a50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Name.key_path l.195 at 0x2579e873bd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Attribute.logger l.204 at 0x2579e8788d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.update(attrname='update',\n                 expr=<Subscript l.215 at 0x2579e87a190>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Attribute.logger l.216 at 0x2579e87a410>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.dump(attrname='dump',\n               expr=<Name.json l.224 at 0x2579e87b450>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Attribute.logger l.225 at 0x2579e87b790>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.error(attrname='error',\n                expr=<Attribute.logger l.228 at 0x2579e87bc10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.copy(attrname='copy',\n               expr=<Attribute.default_settings l.233 at 0x2579e87c450>)",
              "type": "Dict.dict(items=[])"
            },
            {
              "function": "Attribute._load_environment_settings(attrname='_load_environment_settings',\n                                     expr=<Name.self l.234 at 0x2579e87c690>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._load_config_files(attrname='_load_config_files',\n                             expr=<Name.self l.235 at 0x2579e87c810>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Attribute.logger l.236 at 0x2579e87c990>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.copy(attrname='copy',\n               expr=<Attribute.settings l.240 at 0x2579e87d1d0>)",
              "type": "Dict.dict(items=[])"
            },
            {
              "function": "Attribute.get_section(attrname='get_section',\n                      expr=<Name.self l.247 at 0x2579e87db50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.app_settings l.248 at 0x2579e87dd10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.app_settings l.251 at 0x2579e87e210>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get_section(attrname='get_section',\n                      expr=<Name.self l.256 at 0x2579e87eb90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Name.ai_providers l.257 at 0x2579e87eed0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.config l.258 at 0x2579e87f150>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.config l.258 at 0x2579e87f2d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get_section(attrname='get_section',\n                      expr=<Name.self l.262 at 0x2579e87f8d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.security l.263 at 0x2579e87fad0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get_section(attrname='get_section',\n                      expr=<Name.self l.271 at 0x2579e880850>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Name.ai_providers l.273 at 0x2579e880b90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.config l.274 at 0x2579e880e10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.config l.274 at 0x2579e880f90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.self l.281 at 0x2579e881ad0>)",
              "type": "Dict.dict(items=[])"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.provider_config l.282 at 0x2579e881e50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.self l.286 at 0x2579e8827d0>)",
              "type": "Dict.dict(items=[])"
            },
            {
              "function": "Attribute.getenv(attrname='getenv',\n                 expr=<Name.os l.349 at 0x2579e88cd10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.getLogger(attrname='getLogger',\n                    expr=<Name.logging l.350 at 0x2579e88cf50>)",
              "type": "Instance of logging.RootLogger"
            },
            {
              "function": "Attribute.get_environment_specific_config(attrname='get_environment_specific_config',\n                                          expr=<Name.self l.401 at 0x2579e88f550>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.items(attrname='items',\n                expr=<Name.env_config l.403 at 0x2579e88f850>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.update_section(attrname='update_section',\n                         expr=<Name.settings_manager l.404 at 0x2579e88fa10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Attribute.logger l.406 at 0x2579e88fc50>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.SettingsManager(name='SettingsManager')",
              "type": "Instance of .SettingsManager"
            },
            {
              "function": "Name.EnvironmentConfig(name='EnvironmentConfig')",
              "type": "Instance of .EnvironmentConfig"
            },
            {
              "function": "Attribute.apply_environment_config(attrname='apply_environment_config',\n                                   expr=<Name.env_config l.422 at 0x2579e894ad0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.validate_settings(attrname='validate_settings',\n                            expr=<Name.settings_manager l.425 at 0x2579e894d50>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Attribute.exists(attrname='exists',\n                 expr=<Name.config_path l.433 at 0x2579e895610>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.save_config(attrname='save_config',\n                      expr=<Name.settings_manager l.434 at 0x2579e8958d0>)",
              "type": "Const.bool(value=True,\n           kind=None)"
            }
          ],
          "unresolved_imports": [
            "os",
            "json",
            "logging",
            "asyncio"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": "share\\jupyter\\nbextensions\\pydeck\\extensionRequires.js",
        "language": "javascript",
        "file_size": 304,
        "line_count": 16,
        "analysis_method": "javascript_ast",
        "functions": [],
        "classes": [],
        "imports": [],
        "complexity_metrics": {},
        "code_issues": [],
        "analysis_error": "'NoneType' object is not callable"
      },
      {
        "file_path": "skills\\__init__.py",
        "language": "python",
        "file_size": 10868,
        "line_count": 299,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "__init__",
            "line_number": 15,
            "parameters": [
              "self",
              "name",
              "description"
            ],
            "defaults": 1,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "get_info",
            "line_number": 27,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Gibt Informationen über den Skill zurück",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "__init__",
            "line_number": 45,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "__init__",
            "line_number": 117,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "__init__",
            "line_number": 191,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": null,
            "is_async": false,
            "complexity": 1
          }
        ],
        "classes": [
          {
            "name": "BaseSkill",
            "line_number": 12,
            "bases": [
              "ABC"
            ],
            "decorators": [],
            "docstring": "Basisklasse für alle Skills",
            "methods": [
              "__init__",
              "get_info"
            ],
            "method_count": 2
          },
          {
            "name": "TextProcessingSkill",
            "line_number": 42,
            "bases": [
              "BaseSkill"
            ],
            "decorators": [],
            "docstring": "Skill für Textverarbeitung",
            "methods": [
              "__init__"
            ],
            "method_count": 1
          },
          {
            "name": "DataAnalysisSkill",
            "line_number": 114,
            "bases": [
              "BaseSkill"
            ],
            "decorators": [],
            "docstring": "Skill für Datenanalyse",
            "methods": [
              "__init__"
            ],
            "method_count": 1
          },
          {
            "name": "APIIntegrationSkill",
            "line_number": 188,
            "bases": [
              "BaseSkill"
            ],
            "decorators": [],
            "docstring": "Skill für API-Integrationen",
            "methods": [
              "__init__"
            ],
            "method_count": 1
          }
        ],
        "imports": [
          {
            "type": "from_import",
            "module": "abc",
            "names": [
              "ABC",
              "abstractmethod"
            ],
            "level": 0,
            "line_number": 5
          },
          {
            "type": "from_import",
            "module": "typing",
            "names": [
              "Dict",
              "Any",
              "Optional",
              "List"
            ],
            "level": 0,
            "line_number": 6
          },
          {
            "type": "import",
            "modules": [
              "logging"
            ],
            "line_number": 7
          },
          {
            "type": "import",
            "modules": [
              "openai"
            ],
            "line_number": 236
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 5,
          "function_count": 5,
          "class_count": 4,
          "import_count": 4,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Attribute.getLogger(attrname='getLogger',\n                    expr=<Name.logging l.9 at 0x2579e8b2190>)",
              "type": "Instance of logging.RootLogger"
            },
            {
              "function": "Attribute.getLogger(attrname='getLogger',\n                    expr=<Name.logging l.20 at 0x2579e8b35d0>)",
              "type": "Instance of logging.RootLogger"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Attribute.logger l.39 at 0x2579e8b55d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.__init__(attrname='__init__',\n                   expr=<Call l.46 at 0x2579e8b6190>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.super(name='super')",
              "type": "Super.TextProcessingSkill()"
            },
            {
              "function": "Name.ValueError(name='ValueError')",
              "type": "Instance of builtins.ValueError"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.params l.62 at 0x2579e8b7990>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Attribute.logger l.64 at 0x2579e8b7bd0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Name.input_data l.68 at 0x2579e8b83d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Name.input_data l.70 at 0x2579e8b8a90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Name.s l.70 at 0x2579e8b8c50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Name.input_data l.71 at 0x2579e8b9090>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.strip(attrname='strip',\n                expr=<Name.p l.71 at 0x2579e8b9250>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Name.input_data l.72 at 0x2579e8b9490>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Name.input_data l.72 at 0x2579e8b9a50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Name.input_data l.72 at 0x2579e8b9c90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.params l.75 at 0x2579e8ba090>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.split(attrname='split',\n                expr=<Name.input_data l.76 at 0x2579e8ba350>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.join(attrname='join',\n               expr=<Const.str l.78 at 0x2579e8ba810>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Name.input_data l.86 at 0x2579e8bb510>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.__init__(attrname='__init__',\n                   expr=<Call l.118 at 0x2579e8c1a90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.super(name='super')",
              "type": "Super.DataAnalysisSkill()"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.params l.131 at 0x2579e8c2dd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.params l.132 at 0x2579e8c30d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Attribute.logger l.134 at 0x2579e8c32d0>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.float(name='float')",
              "type": "Instance of builtins.float"
            },
            {
              "function": "Name.list(name='list')",
              "type": "Instance of builtins.list"
            },
            {
              "function": "Attribute.keys(attrname='keys',\n               expr=<Name.input_data l.168 at 0x2579e8c7350>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.keys(attrname='keys',\n               expr=<Name.input_data l.169 at 0x2579e8c7810>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.type(name='type')",
              "type": "Uninferable"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.__init__(attrname='__init__',\n                   expr=<Call l.192 at 0x2579e8c8f10>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.super(name='super')",
              "type": "Super.APIIntegrationSkill()"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.params l.207 at 0x2579e8ca310>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.info(attrname='info',\n               expr=<Attribute.logger l.209 at 0x2579e8ca550>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute._call_openai_api(attrname='_call_openai_api',\n                           expr=<Name.self l.214 at 0x2579e8cab10>)",
              "type": "Dict.dict(items=[ ( <Const.str l.239 at 0x2579e8d07d0>,\n              <Const.str l.239 at 0x2579e8d0790>),\n            ( <Const.str l.240 at 0x2579e8d09d0>,\n              <JoinedStr l.240 at 0x2579e8d0810>),\n            ( <Const.str l.241 at 0x2579e8d0d50>,\n              <BinOp l.241 at 0x2579e8d0a10>),\n            ( <Const.str l.242 at 0x2579e8d0dd0>,\n              <Const.str l.242 at 0x2579e8d0d90>)])"
            },
            {
              "function": "Attribute._call_google_api(attrname='_call_google_api',\n                           expr=<Name.self l.216 at 0x2579e8caf90>)",
              "type": "Dict.dict(items=[ ( <Const.str l.255 at 0x2579e8d1cd0>,\n              <Const.str l.255 at 0x2579e8d1c90>),\n            ( <Const.str l.256 at 0x2579e8d1ed0>,\n              <JoinedStr l.256 at 0x2579e8d1d10>),\n            ( <Const.str l.257 at 0x2579e8d1e90>,\n              <Const.int l.257 at 0x2579e8d1f10>),\n            ( <Const.str l.258 at 0x2579e8d1f90>,\n              <Const.str l.258 at 0x2579e8d1f50>)])"
            },
            {
              "function": "Attribute._call_claude_api(attrname='_call_claude_api',\n                           expr=<Name.self l.218 at 0x2579e8cb3d0>)",
              "type": "Dict.dict(items=[ ( <Const.str l.271 at 0x2579e8d2e50>,\n              <Const.str l.271 at 0x2579e8d2e10>),\n            ( <Const.str l.272 at 0x2579e8d3050>,\n              <JoinedStr l.272 at 0x2579e8d2e90>),\n            ( <Const.str l.273 at 0x2579e8d33d0>,\n              <BinOp l.273 at 0x2579e8d3090>),\n            ( <Const.str l.274 at 0x2579e8d3450>,\n              <Const.str l.274 at 0x2579e8d3410>)])"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.TextProcessingSkill(name='TextProcessingSkill')",
              "type": "Instance of .TextProcessingSkill"
            },
            {
              "function": "Name.DataAnalysisSkill(name='DataAnalysisSkill')",
              "type": "Instance of .DataAnalysisSkill"
            },
            {
              "function": "Name.APIIntegrationSkill(name='APIIntegrationSkill')",
              "type": "Instance of .APIIntegrationSkill"
            },
            {
              "function": "Attribute.values(attrname='values',\n                 expr=<Name.skills l.294 at 0x2579e8d45d0>)",
              "type": "DictValues.list(ctx=None,\n                elts=[ <Call l.289 at 0x2579e8d4150>,\n                  <Call l.290 at 0x2579e8d4290>,\n                  <Call l.291 at 0x2579e8d43d0>])"
            },
            {
              "function": "Attribute.initialize(attrname='initialize',\n                     expr=<Name.skill l.295 at 0x2579e8d4810>)",
              "type": "Uninferable"
            }
          ],
          "unresolved_imports": [
            "logging",
            "openai"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": "tests\\test_agents.py",
        "language": "python",
        "file_size": 14697,
        "line_count": 397,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "test_base_agent_initialization",
            "line_number": 23,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test für Agent-Initialisierung",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_add_skill",
            "line_number": 33,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test für Skill-Hinzufügung",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_get_status",
            "line_number": 44,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test für Status-Abfrage",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_task_agent_initialization",
            "line_number": 72,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test für TaskAgent-Initialisierung",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_conversational_agent_initialization",
            "line_number": 98,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test für ConversationalAgent-Initialisierung",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_get_conversation_history",
            "line_number": 125,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test für Konversationshistorie",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_data_processing_agent_initialization",
            "line_number": 145,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test für DataProcessingAgent-Initialisierung",
            "is_async": false,
            "complexity": 1
          }
        ],
        "classes": [
          {
            "name": "TestBaseAgent",
            "line_number": 20,
            "bases": [],
            "decorators": [],
            "docstring": "Test-Klasse für BaseAgent",
            "methods": [
              "test_base_agent_initialization",
              "test_add_skill",
              "test_get_status"
            ],
            "method_count": 3
          },
          {
            "name": "TestTaskAgent",
            "line_number": 69,
            "bases": [],
            "decorators": [],
            "docstring": "Test-Klasse für TaskAgent",
            "methods": [
              "test_task_agent_initialization"
            ],
            "method_count": 1
          },
          {
            "name": "TestConversationalAgent",
            "line_number": 95,
            "bases": [],
            "decorators": [],
            "docstring": "Test-Klasse für ConversationalAgent",
            "methods": [
              "test_conversational_agent_initialization",
              "test_get_conversation_history"
            ],
            "method_count": 2
          },
          {
            "name": "TestDataProcessingAgent",
            "line_number": 142,
            "bases": [],
            "decorators": [],
            "docstring": "Test-Klasse für DataProcessingAgent",
            "methods": [
              "test_data_processing_agent_initialization"
            ],
            "method_count": 1
          },
          {
            "name": "TestExampleAgents",
            "line_number": 197,
            "bases": [],
            "decorators": [],
            "docstring": "Test-Klasse für Beispiel-Agenten",
            "methods": [],
            "method_count": 0
          }
        ],
        "imports": [
          {
            "type": "import",
            "modules": [
              "pytest"
            ],
            "line_number": 5
          },
          {
            "type": "import",
            "modules": [
              "asyncio"
            ],
            "line_number": 6
          },
          {
            "type": "from_import",
            "module": "unittest.mock",
            "names": [
              "MagicMock",
              "patch"
            ],
            "level": 0,
            "line_number": 7
          },
          {
            "type": "import",
            "modules": [
              "sys"
            ],
            "line_number": 8
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 9
          },
          {
            "type": "from_import",
            "module": "agents",
            "names": [
              "BaseAgent",
              "TaskAgent",
              "ConversationalAgent",
              "DataProcessingAgent"
            ],
            "level": 0,
            "line_number": 15
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 7,
          "function_count": 7,
          "class_count": 5,
          "import_count": 6,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.TaskAgent(name='TaskAgent')",
              "type": "Instance of agents.TaskAgent"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Name.TaskAgent(name='TaskAgent')",
              "type": "Instance of agents.TaskAgent"
            },
            {
              "function": "Name.MagicMock(name='MagicMock')",
              "type": "Instance of unittest.mock.MagicMock"
            },
            {
              "function": "Attribute.add_skill(attrname='add_skill',\n                    expr=<Name.agent l.39 at 0x2579e912450>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.len(name='len')",
              "type": "Const.int(value=0,\n          kind=None)"
            },
            {
              "function": "Name.TaskAgent(name='TaskAgent')",
              "type": "Instance of agents.TaskAgent"
            },
            {
              "function": "Name.MagicMock(name='MagicMock')",
              "type": "Instance of unittest.mock.MagicMock"
            },
            {
              "function": "Attribute.add_skill(attrname='add_skill',\n                    expr=<Name.agent l.49 at 0x2579e913510>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.get_status(attrname='get_status',\n                     expr=<Name.agent l.51 at 0x2579e913790>)",
              "type": "Dict.dict(items=[ ( <Const.str l.35 at 0x2579e970f10>,\n              <Attribute.name l.35 at 0x2579e970fd0>),\n            ( <Const.str l.36 at 0x2579e970c90>,\n              <Attribute.description l.36 at 0x2579e970f90>),\n            ( <Const.str l.37 at 0x2579e970cd0>,\n              <Attribute.status l.37 at 0x2579e970d10>),\n            ( <Const.str l.38 at 0x2579e970850>,\n              <Call l.38 at 0x2579e970c50>),\n            ( <Const.str l.39 at 0x2579e971990>,\n              <ListComp l.39 at 0x2579e970810>)])"
            },
            {
              "function": "Name.TaskAgent(name='TaskAgent')",
              "type": "Instance of agents.TaskAgent"
            },
            {
              "function": "Attribute.initialize(attrname='initialize',\n                     expr=<Name.agent l.64 at 0x2579e914b90>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Name.TaskAgent(name='TaskAgent')",
              "type": "Instance of agents.TaskAgent"
            },
            {
              "function": "Name.TaskAgent(name='TaskAgent')",
              "type": "Instance of agents.TaskAgent"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.agent l.85 at 0x2579e9166d0>)",
              "type": "Dict.dict(items=[ ( <Const.str l.61 at 0x2579e971650>,\n              <Name.task l.61 at 0x2579e971610>),\n            ( <Const.str l.62 at 0x2579e971750>,\n              <Attribute.name l.62 at 0x2579e9716d0>),\n            ( <Const.str l.63 at 0x2579e971810>,\n              <Attribute.task_type l.63 at 0x2579e971790>),\n            ( <Const.str l.64 at 0x2579e9711d0>,\n              <BoolOp l.64 at 0x2579e973ed0>),\n            ( <Const.str l.65 at 0x2579ec0f290>,\n              <Const.str l.65 at 0x2579ec0cd90>),\n            ( <Const.str l.66 at 0x2579ea64190>,\n              <JoinedStr l.66 at 0x2579ec0f2d0>)])"
            },
            {
              "function": "Name.ConversationalAgent(name='ConversationalAgent')",
              "type": "Instance of agents.ConversationalAgent"
            },
            {
              "function": "Name.ConversationalAgent(name='ConversationalAgent')",
              "type": "Instance of agents.ConversationalAgent"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.agent l.112 at 0x2579e918fd0>)",
              "type": "Dict.dict(items=[ ( <Const.str l.95 at 0x2579ea669d0>,\n              <Name.task l.95 at 0x2579ea66a90>),\n            ( <Const.str l.96 at 0x2579ea67450>,\n              <Attribute.name l.96 at 0x2579ea67490>),\n            ( <Const.str l.97 at 0x2579ea67390>,\n              <Attribute.personality l.97 at 0x2579ea67350>),\n            ( <Const.str l.98 at 0x2579ea67410>,\n              <Name.response l.98 at 0x2579ea673d0>),\n            ( <Const.str l.99 at 0x2579ea676d0>,\n              <Call l.99 at 0x2579ea67210>),\n            ( <Const.str l.100 at 0x2579ea67750>,\n              <Const.str l.100 at 0x2579ea67790>)])"
            },
            {
              "function": "Name.ConversationalAgent(name='ConversationalAgent')",
              "type": "Instance of agents.ConversationalAgent"
            },
            {
              "function": "Attribute.get_conversation_history(attrname='get_conversation_history',\n                                   expr=<Name.agent l.135 at 0x2579e91ae10>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Name.DataProcessingAgent(name='DataProcessingAgent')",
              "type": "Instance of agents.DataProcessingAgent"
            },
            {
              "function": "Name.DataProcessingAgent(name='DataProcessingAgent')",
              "type": "Instance of agents.DataProcessingAgent"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.agent l.159 at 0x2579e921290>)",
              "type": "Dict.dict(items=[ ( <Const.str l.139 at 0x2579ea73e10>,\n              <Name.task l.139 at 0x2579ea73cd0>),\n            ( <Const.str l.140 at 0x2579ea73f90>,\n              <Attribute.name l.140 at 0x2579ea73fd0>),\n            ( <Const.str l.141 at 0x2579ea73ed0>,\n              <Name.data_type l.141 at 0x2579ea73f10>),\n            ( <Const.str l.142 at 0x2579ea73f50>,\n              <Name.processed_data l.142 at 0x2579ea73e90>),\n            ( <Const.str l.143 at 0x2579ea729d0>,\n              <Attribute.processed_items l.143 at 0x2579ea728d0>),\n            ( <Const.str l.144 at 0x2579ea72a10>,\n              <Const.str l.144 at 0x2579ea72990>)])"
            },
            {
              "function": "Name.DataProcessingAgent(name='DataProcessingAgent')",
              "type": "Instance of agents.DataProcessingAgent"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.agent l.176 at 0x2579e922990>)",
              "type": "Dict.dict(items=[ ( <Const.str l.139 at 0x2579ea73e10>,\n              <Name.task l.139 at 0x2579ea73cd0>),\n            ( <Const.str l.140 at 0x2579ea73f90>,\n              <Attribute.name l.140 at 0x2579ea73fd0>),\n            ( <Const.str l.141 at 0x2579ea73ed0>,\n              <Name.data_type l.141 at 0x2579ea73f10>),\n            ( <Const.str l.142 at 0x2579ea73f50>,\n              <Name.processed_data l.142 at 0x2579ea73e90>),\n            ( <Const.str l.143 at 0x2579ea729d0>,\n              <Attribute.processed_items l.143 at 0x2579ea728d0>),\n            ( <Const.str l.144 at 0x2579ea72a10>,\n              <Const.str l.144 at 0x2579ea72990>)])"
            },
            {
              "function": "Name.DataProcessingAgent(name='DataProcessingAgent')",
              "type": "Instance of agents.DataProcessingAgent"
            },
            {
              "function": "Attribute.raises(attrname='raises',\n                 expr=<Name.pytest l.190 at 0x2579e923f10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.agent l.191 at 0x2579e92c210>)",
              "type": "Dict.dict(items=[ ( <Const.str l.139 at 0x2579ea73e10>,\n              <Name.task l.139 at 0x2579ea73cd0>),\n            ( <Const.str l.140 at 0x2579ea73f90>,\n              <Attribute.name l.140 at 0x2579ea73fd0>),\n            ( <Const.str l.141 at 0x2579ea73ed0>,\n              <Name.data_type l.141 at 0x2579ea73f10>),\n            ( <Const.str l.142 at 0x2579ea73f50>,\n              <Name.processed_data l.142 at 0x2579ea73e90>),\n            ( <Const.str l.143 at 0x2579ea729d0>,\n              <Attribute.processed_items l.143 at 0x2579ea728d0>),\n            ( <Const.str l.144 at 0x2579ea72a10>,\n              <Const.str l.144 at 0x2579ea72990>)])"
            },
            {
              "function": "Name.TaskAgent(name='TaskAgent')",
              "type": "Instance of agents.TaskAgent"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.agent l.205 at 0x2579e92d090>)",
              "type": "Dict.dict(items=[ ( <Const.str l.61 at 0x2579e971650>,\n              <Name.task l.61 at 0x2579e971610>),\n            ( <Const.str l.62 at 0x2579e971750>,\n              <Attribute.name l.62 at 0x2579e9716d0>),\n            ( <Const.str l.63 at 0x2579e971810>,\n              <Attribute.task_type l.63 at 0x2579e971790>),\n            ( <Const.str l.64 at 0x2579e9711d0>,\n              <BoolOp l.64 at 0x2579e973ed0>),\n            ( <Const.str l.65 at 0x2579ec0f290>,\n              <Const.str l.65 at 0x2579ec0cd90>),\n            ( <Const.str l.66 at 0x2579ea64190>,\n              <JoinedStr l.66 at 0x2579ec0f2d0>)])"
            },
            {
              "function": "Name.TaskAgent(name='TaskAgent')",
              "type": "Instance of agents.TaskAgent"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.agent l.217 at 0x2579e92e2d0>)",
              "type": "Dict.dict(items=[ ( <Const.str l.61 at 0x2579e971650>,\n              <Name.task l.61 at 0x2579e971610>),\n            ( <Const.str l.62 at 0x2579e971750>,\n              <Attribute.name l.62 at 0x2579e9716d0>),\n            ( <Const.str l.63 at 0x2579e971810>,\n              <Attribute.task_type l.63 at 0x2579e971790>),\n            ( <Const.str l.64 at 0x2579e9711d0>,\n              <BoolOp l.64 at 0x2579e973ed0>),\n            ( <Const.str l.65 at 0x2579ec0f290>,\n              <Const.str l.65 at 0x2579ec0cd90>),\n            ( <Const.str l.66 at 0x2579ea64190>,\n              <JoinedStr l.66 at 0x2579ec0f2d0>)])"
            },
            {
              "function": "Name.TaskAgent(name='TaskAgent')",
              "type": "Instance of agents.TaskAgent"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.agent l.231 at 0x2579e92f7d0>)",
              "type": "Dict.dict(items=[ ( <Const.str l.61 at 0x2579e971650>,\n              <Name.task l.61 at 0x2579e971610>),\n            ( <Const.str l.62 at 0x2579e971750>,\n              <Attribute.name l.62 at 0x2579e9716d0>),\n            ( <Const.str l.63 at 0x2579e971810>,\n              <Attribute.task_type l.63 at 0x2579e971790>),\n            ( <Const.str l.64 at 0x2579e9711d0>,\n              <BoolOp l.64 at 0x2579e973ed0>),\n            ( <Const.str l.65 at 0x2579ec0f290>,\n              <Const.str l.65 at 0x2579ec0cd90>),\n            ( <Const.str l.66 at 0x2579ea64190>,\n              <JoinedStr l.66 at 0x2579ec0f2d0>)])"
            },
            {
              "function": "Name.ConversationalAgent(name='ConversationalAgent')",
              "type": "Instance of agents.ConversationalAgent"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.agent l.245 at 0x2579e930b90>)",
              "type": "Dict.dict(items=[ ( <Const.str l.95 at 0x2579ea669d0>,\n              <Name.task l.95 at 0x2579ea66a90>),\n            ( <Const.str l.96 at 0x2579ea67450>,\n              <Attribute.name l.96 at 0x2579ea67490>),\n            ( <Const.str l.97 at 0x2579ea67390>,\n              <Attribute.personality l.97 at 0x2579ea67350>),\n            ( <Const.str l.98 at 0x2579ea67410>,\n              <Name.response l.98 at 0x2579ea673d0>),\n            ( <Const.str l.99 at 0x2579ea676d0>,\n              <Call l.99 at 0x2579ea67210>),\n            ( <Const.str l.100 at 0x2579ea67750>,\n              <Const.str l.100 at 0x2579ea67790>)])"
            },
            {
              "function": "Name.ConversationalAgent(name='ConversationalAgent')",
              "type": "Instance of agents.ConversationalAgent"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.agent l.258 at 0x2579e931f90>)",
              "type": "Dict.dict(items=[ ( <Const.str l.95 at 0x2579ea669d0>,\n              <Name.task l.95 at 0x2579ea66a90>),\n            ( <Const.str l.96 at 0x2579ea67450>,\n              <Attribute.name l.96 at 0x2579ea67490>),\n            ( <Const.str l.97 at 0x2579ea67390>,\n              <Attribute.personality l.97 at 0x2579ea67350>),\n            ( <Const.str l.98 at 0x2579ea67410>,\n              <Name.response l.98 at 0x2579ea673d0>),\n            ( <Const.str l.99 at 0x2579ea676d0>,\n              <Call l.99 at 0x2579ea67210>),\n            ( <Const.str l.100 at 0x2579ea67750>,\n              <Const.str l.100 at 0x2579ea67790>)])"
            },
            {
              "function": "Name.ConversationalAgent(name='ConversationalAgent')",
              "type": "Instance of agents.ConversationalAgent"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.agent l.270 at 0x2579e933350>)",
              "type": "Dict.dict(items=[ ( <Const.str l.95 at 0x2579ea669d0>,\n              <Name.task l.95 at 0x2579ea66a90>),\n            ( <Const.str l.96 at 0x2579ea67450>,\n              <Attribute.name l.96 at 0x2579ea67490>),\n            ( <Const.str l.97 at 0x2579ea67390>,\n              <Attribute.personality l.97 at 0x2579ea67350>),\n            ( <Const.str l.98 at 0x2579ea67410>,\n              <Name.response l.98 at 0x2579ea673d0>),\n            ( <Const.str l.99 at 0x2579ea676d0>,\n              <Call l.99 at 0x2579ea67210>),\n            ( <Const.str l.100 at 0x2579ea67750>,\n              <Const.str l.100 at 0x2579ea67790>)])"
            },
            {
              "function": "Name.DataProcessingAgent(name='DataProcessingAgent')",
              "type": "Instance of agents.DataProcessingAgent"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.agent l.281 at 0x2579e93c590>)",
              "type": "Dict.dict(items=[ ( <Const.str l.139 at 0x2579ea73e10>,\n              <Name.task l.139 at 0x2579ea73cd0>),\n            ( <Const.str l.140 at 0x2579ea73f90>,\n              <Attribute.name l.140 at 0x2579ea73fd0>),\n            ( <Const.str l.141 at 0x2579ea73ed0>,\n              <Name.data_type l.141 at 0x2579ea73f10>),\n            ( <Const.str l.142 at 0x2579ea73f50>,\n              <Name.processed_data l.142 at 0x2579ea73e90>),\n            ( <Const.str l.143 at 0x2579ea729d0>,\n              <Attribute.processed_items l.143 at 0x2579ea728d0>),\n            ( <Const.str l.144 at 0x2579ea72a10>,\n              <Const.str l.144 at 0x2579ea72990>)])"
            },
            {
              "function": "Name.DataProcessingAgent(name='DataProcessingAgent')",
              "type": "Instance of agents.DataProcessingAgent"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.agent l.298 at 0x2579e93dd10>)",
              "type": "Dict.dict(items=[ ( <Const.str l.139 at 0x2579ea73e10>,\n              <Name.task l.139 at 0x2579ea73cd0>),\n            ( <Const.str l.140 at 0x2579ea73f90>,\n              <Attribute.name l.140 at 0x2579ea73fd0>),\n            ( <Const.str l.141 at 0x2579ea73ed0>,\n              <Name.data_type l.141 at 0x2579ea73f10>),\n            ( <Const.str l.142 at 0x2579ea73f50>,\n              <Name.processed_data l.142 at 0x2579ea73e90>),\n            ( <Const.str l.143 at 0x2579ea729d0>,\n              <Attribute.processed_items l.143 at 0x2579ea728d0>),\n            ( <Const.str l.144 at 0x2579ea72a10>,\n              <Const.str l.144 at 0x2579ea72990>)])"
            },
            {
              "function": "Name.DataProcessingAgent(name='DataProcessingAgent')",
              "type": "Instance of agents.DataProcessingAgent"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.agent l.313 at 0x2579e93f110>)",
              "type": "Dict.dict(items=[ ( <Const.str l.139 at 0x2579ea73e10>,\n              <Name.task l.139 at 0x2579ea73cd0>),\n            ( <Const.str l.140 at 0x2579ea73f90>,\n              <Attribute.name l.140 at 0x2579ea73fd0>),\n            ( <Const.str l.141 at 0x2579ea73ed0>,\n              <Name.data_type l.141 at 0x2579ea73f10>),\n            ( <Const.str l.142 at 0x2579ea73f50>,\n              <Name.processed_data l.142 at 0x2579ea73e90>),\n            ( <Const.str l.143 at 0x2579ea729d0>,\n              <Attribute.processed_items l.143 at 0x2579ea728d0>),\n            ( <Const.str l.144 at 0x2579ea72a10>,\n              <Const.str l.144 at 0x2579ea72990>)])"
            },
            {
              "function": "Name.DataProcessingAgent(name='DataProcessingAgent')",
              "type": "Instance of agents.DataProcessingAgent"
            },
            {
              "function": "Attribute.raises(attrname='raises',\n                 expr=<Name.pytest l.328 at 0x2579e944510>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.agent l.329 at 0x2579e9447d0>)",
              "type": "Dict.dict(items=[ ( <Const.str l.139 at 0x2579ea73e10>,\n              <Name.task l.139 at 0x2579ea73cd0>),\n            ( <Const.str l.140 at 0x2579ea73f90>,\n              <Attribute.name l.140 at 0x2579ea73fd0>),\n            ( <Const.str l.141 at 0x2579ea73ed0>,\n              <Name.data_type l.141 at 0x2579ea73f10>),\n            ( <Const.str l.142 at 0x2579ea73f50>,\n              <Name.processed_data l.142 at 0x2579ea73e90>),\n            ( <Const.str l.143 at 0x2579ea729d0>,\n              <Attribute.processed_items l.143 at 0x2579ea728d0>),\n            ( <Const.str l.144 at 0x2579ea72a10>,\n              <Const.str l.144 at 0x2579ea72990>)])"
            },
            {
              "function": "Name.DataProcessingAgent(name='DataProcessingAgent')",
              "type": "Instance of agents.DataProcessingAgent"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.agent l.340 at 0x2579e945510>)",
              "type": "Dict.dict(items=[ ( <Const.str l.139 at 0x2579ea73e10>,\n              <Name.task l.139 at 0x2579ea73cd0>),\n            ( <Const.str l.140 at 0x2579ea73f90>,\n              <Attribute.name l.140 at 0x2579ea73fd0>),\n            ( <Const.str l.141 at 0x2579ea73ed0>,\n              <Name.data_type l.141 at 0x2579ea73f10>),\n            ( <Const.str l.142 at 0x2579ea73f50>,\n              <Name.processed_data l.142 at 0x2579ea73e90>),\n            ( <Const.str l.143 at 0x2579ea729d0>,\n              <Attribute.processed_items l.143 at 0x2579ea728d0>),\n            ( <Const.str l.144 at 0x2579ea72a10>,\n              <Const.str l.144 at 0x2579ea72990>)])"
            },
            {
              "function": "Name.DataProcessingAgent(name='DataProcessingAgent')",
              "type": "Instance of agents.DataProcessingAgent"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.agent l.349 at 0x2579e946210>)",
              "type": "Dict.dict(items=[ ( <Const.str l.139 at 0x2579ea73e10>,\n              <Name.task l.139 at 0x2579ea73cd0>),\n            ( <Const.str l.140 at 0x2579ea73f90>,\n              <Attribute.name l.140 at 0x2579ea73fd0>),\n            ( <Const.str l.141 at 0x2579ea73ed0>,\n              <Name.data_type l.141 at 0x2579ea73f10>),\n            ( <Const.str l.142 at 0x2579ea73f50>,\n              <Name.processed_data l.142 at 0x2579ea73e90>),\n            ( <Const.str l.143 at 0x2579ea729d0>,\n              <Attribute.processed_items l.143 at 0x2579ea728d0>),\n            ( <Const.str l.144 at 0x2579ea72a10>,\n              <Const.str l.144 at 0x2579ea72990>)])"
            },
            {
              "function": "Name.DataProcessingAgent(name='DataProcessingAgent')",
              "type": "Instance of agents.DataProcessingAgent"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.agent l.359 at 0x2579e947010>)",
              "type": "Dict.dict(items=[ ( <Const.str l.139 at 0x2579ea73e10>,\n              <Name.task l.139 at 0x2579ea73cd0>),\n            ( <Const.str l.140 at 0x2579ea73f90>,\n              <Attribute.name l.140 at 0x2579ea73fd0>),\n            ( <Const.str l.141 at 0x2579ea73ed0>,\n              <Name.data_type l.141 at 0x2579ea73f10>),\n            ( <Const.str l.142 at 0x2579ea73f50>,\n              <Name.processed_data l.142 at 0x2579ea73e90>),\n            ( <Const.str l.143 at 0x2579ea729d0>,\n              <Attribute.processed_items l.143 at 0x2579ea728d0>),\n            ( <Const.str l.144 at 0x2579ea72a10>,\n              <Const.str l.144 at 0x2579ea72990>)])"
            },
            {
              "function": "Name.DataProcessingAgent(name='DataProcessingAgent')",
              "type": "Instance of agents.DataProcessingAgent"
            },
            {
              "function": "Attribute.raises(attrname='raises',\n                 expr=<Name.pytest l.373 at 0x2579e948090>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.run(attrname='run',\n              expr=<Name.agent l.374 at 0x2579e948350>)",
              "type": "Dict.dict(items=[ ( <Const.str l.139 at 0x2579ea73e10>,\n              <Name.task l.139 at 0x2579ea73cd0>),\n            ( <Const.str l.140 at 0x2579ea73f90>,\n              <Attribute.name l.140 at 0x2579ea73fd0>),\n            ( <Const.str l.141 at 0x2579ea73ed0>,\n              <Name.data_type l.141 at 0x2579ea73f10>),\n            ( <Const.str l.142 at 0x2579ea73f50>,\n              <Name.processed_data l.142 at 0x2579ea73e90>),\n            ( <Const.str l.143 at 0x2579ea729d0>,\n              <Attribute.processed_items l.143 at 0x2579ea728d0>),\n            ( <Const.str l.144 at 0x2579ea72a10>,\n              <Const.str l.144 at 0x2579ea72990>)])"
            },
            {
              "function": "Name.TaskAgent(name='TaskAgent')",
              "type": "Instance of agents.TaskAgent"
            },
            {
              "function": "Name.ConversationalAgent(name='ConversationalAgent')",
              "type": "Instance of agents.ConversationalAgent"
            },
            {
              "function": "Name.DataProcessingAgent(name='DataProcessingAgent')",
              "type": "Instance of agents.DataProcessingAgent"
            },
            {
              "function": "Attribute.initialize(attrname='initialize',\n                     expr=<Name.task_agent l.389 at 0x2579e949350>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.initialize(attrname='initialize',\n                     expr=<Name.conv_agent l.390 at 0x2579e949510>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            },
            {
              "function": "Attribute.initialize(attrname='initialize',\n                     expr=<Name.data_agent l.391 at 0x2579e949710>)",
              "type": "Const.NoneType(value=None,\n               kind=None)"
            }
          ],
          "unresolved_imports": [
            "pytest",
            "asyncio",
            "sys"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": "tests\\test_analyzers.py",
        "language": "python",
        "file_size": 10860,
        "line_count": 322,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "setup_method",
            "line_number": 24,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Setup for each test",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_project_analyzer_initialization",
            "line_number": 28,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test ProjectAnalyzer initialization",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "setup_method",
            "line_number": 72,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Setup for each test",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_language_detector_initialization",
            "line_number": 76,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test LanguageDetector initialization",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "setup_method",
            "line_number": 127,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Setup for each test",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_framework_detector_initialization",
            "line_number": 131,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test FrameworkDetector initialization",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "setup_method",
            "line_number": 189,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Setup for each test",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_dependency_analyzer_initialization",
            "line_number": 193,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test DependencyAnalyzer initialization",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_analyzer_error_handling",
            "line_number": 295,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test analyzer error handling with invalid inputs",
            "is_async": false,
            "complexity": 7
          }
        ],
        "classes": [
          {
            "name": "TestProjectAnalyzer",
            "line_number": 21,
            "bases": [],
            "decorators": [],
            "docstring": "Tests for ProjectAnalyzer orchestration",
            "methods": [
              "setup_method",
              "test_project_analyzer_initialization"
            ],
            "method_count": 2
          },
          {
            "name": "TestLanguageDetector",
            "line_number": 69,
            "bases": [],
            "decorators": [],
            "docstring": "Tests for LanguageDetector AST-based detection",
            "methods": [
              "setup_method",
              "test_language_detector_initialization"
            ],
            "method_count": 2
          },
          {
            "name": "TestFrameworkDetector",
            "line_number": 124,
            "bases": [],
            "decorators": [],
            "docstring": "Tests for FrameworkDetector pattern matching",
            "methods": [
              "setup_method",
              "test_framework_detector_initialization"
            ],
            "method_count": 2
          },
          {
            "name": "TestDependencyAnalyzer",
            "line_number": 186,
            "bases": [],
            "decorators": [],
            "docstring": "Tests for DependencyAnalyzer graph building",
            "methods": [
              "setup_method",
              "test_dependency_analyzer_initialization"
            ],
            "method_count": 2
          },
          {
            "name": "TestAnalyzerIntegration",
            "line_number": 257,
            "bases": [],
            "decorators": [],
            "docstring": "Integration tests for analyzer workflow",
            "methods": [
              "test_analyzer_error_handling"
            ],
            "method_count": 1
          }
        ],
        "imports": [
          {
            "type": "import",
            "modules": [
              "pytest"
            ],
            "line_number": 5
          },
          {
            "type": "import",
            "modules": [
              "asyncio"
            ],
            "line_number": 6
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 7
          },
          {
            "type": "from_import",
            "module": "unittest.mock",
            "names": [
              "Mock",
              "MagicMock",
              "patch"
            ],
            "level": 0,
            "line_number": 8
          },
          {
            "type": "import",
            "modules": [
              "sys"
            ],
            "line_number": 9
          },
          {
            "type": "from_import",
            "module": "analyzers.project_analyzer",
            "names": [
              "ProjectAnalyzer"
            ],
            "level": 0,
            "line_number": 15
          },
          {
            "type": "from_import",
            "module": "analyzers.language_detector",
            "names": [
              "LanguageDetector"
            ],
            "level": 0,
            "line_number": 16
          },
          {
            "type": "from_import",
            "module": "analyzers.framework_detector",
            "names": [
              "FrameworkDetector"
            ],
            "level": 0,
            "line_number": 17
          },
          {
            "type": "from_import",
            "module": "analyzers.dependency_analyzer",
            "names": [
              "DependencyAnalyzer"
            ],
            "level": 0,
            "line_number": 18
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 15,
          "function_count": 9,
          "class_count": 5,
          "import_count": 9,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.ProjectAnalyzer(name='ProjectAnalyzer')",
              "type": "Instance of analyzers.project_analyzer.ProjectAnalyzer"
            },
            {
              "function": "Name.hasattr(name='hasattr')",
              "type": "Const.bool(value=True,\n           kind=None)"
            },
            {
              "function": "Name.hasattr(name='hasattr')",
              "type": "Const.bool(value=True,\n           kind=None)"
            },
            {
              "function": "Name.hasattr(name='hasattr')",
              "type": "Const.bool(value=True,\n           kind=None)"
            },
            {
              "function": "Attribute.analyze_project(attrname='analyze_project',\n                          expr=<Attribute.analyzer l.39 at 0x2579f19a650>)",
              "type": "Dict.dict(items=[])"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Name.result l.45 at 0x2579f19ac90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.analyze_project(attrname='analyze_project',\n                          expr=<Attribute.analyzer l.51 at 0x2579f19b910>)",
              "type": "Dict.dict(items=[])"
            },
            {
              "function": "Attribute.analyze_project(attrname='analyze_project',\n                          expr=<Attribute.analyzer l.61 at 0x2579f1a0690>)",
              "type": "Dict.dict(items=[])"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.LanguageDetector(name='LanguageDetector')",
              "type": "Instance of analyzers.language_detector.LanguageDetector"
            },
            {
              "function": "Name.hasattr(name='hasattr')",
              "type": "Const.bool(value=True,\n           kind=None)"
            },
            {
              "function": "Attribute.write_text(attrname='write_text',\n                     expr=<Name.python_file l.85 at 0x2579f1a2a10>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.detect_languages(attrname='detect_languages',\n                           expr=<Attribute.detector l.91 at 0x2579f1a3090>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Call l.96 at 0x2579f1a3a50>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.write_text(attrname='write_text',\n                     expr=<Name.js_file l.102 at 0x2579f1a4650>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.detect_languages(attrname='detect_languages',\n                           expr=<Attribute.detector l.108 at 0x2579f1a4c90>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.detect_languages(attrname='detect_languages',\n                           expr=<Attribute.detector l.118 at 0x2579f1a5cd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.FrameworkDetector(name='FrameworkDetector')",
              "type": "Instance of analyzers.framework_detector.FrameworkDetector"
            },
            {
              "function": "Name.hasattr(name='hasattr')",
              "type": "Const.bool(value=True,\n           kind=None)"
            },
            {
              "function": "Attribute.write_text(attrname='write_text',\n                     expr=<Name.requirements l.141 at 0x2579f1a7d50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.write_text(attrname='write_text',\n                     expr=<Name.main_file l.144 at 0x2579f1ac110>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.detect_frameworks(attrname='detect_frameworks',\n                            expr=<Attribute.detector l.150 at 0x2579f1ac8d0>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.lower(attrname='lower',\n                expr=<Call l.156 at 0x2579f1ad4d0>)",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.write_text(attrname='write_text',\n                     expr=<Name.package_json l.162 at 0x2579f1ae0d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.detect_frameworks(attrname='detect_frameworks',\n                            expr=<Attribute.detector l.168 at 0x2579f1ae710>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.detect_frameworks(attrname='detect_frameworks',\n                            expr=<Attribute.detector l.178 at 0x2579f1af750>)",
              "type": "List.list(ctx=<Context.Load: 1>,\n          elts=[])"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.DependencyAnalyzer(name='DependencyAnalyzer')",
              "type": "Instance of analyzers.dependency_analyzer.DependencyAnalyzer"
            },
            {
              "function": "Name.hasattr(name='hasattr')",
              "type": "Const.bool(value=True,\n           kind=None)"
            },
            {
              "function": "Attribute.write_text(attrname='write_text',\n                     expr=<Name.requirements l.202 at 0x2579f1b5a90>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.analyze_dependencies(attrname='analyze_dependencies',\n                               expr=<Attribute.analyzer l.212 at 0x2579f1b60d0>)",
              "type": "Dict.dict(items=[ ( <Const.str l.44 at 0x2579f300750>,\n              <List.list l.44 at 0x2579f300710>),\n            ( <Const.str l.45 at 0x2579f300850>,\n              <List.list l.45 at 0x2579f300790>),\n            ( <Const.str l.46 at 0x2579f300910>,\n              <Const.int l.46 at 0x2579f3008d0>),\n            ( <Const.str l.47 at 0x2579f300990>,\n              <List.list l.47 at 0x2579f300950>),\n            ( <Const.str l.48 at 0x2579f300a50>,\n              <List.list l.48 at 0x2579f300a10>),\n            ( <Const.str l.49 at 0x2579f300b90>,\n              <Dict.dict l.49 at 0x2579f300ad0>),\n            ( <Const.str l.50 at 0x2579f300c50>,\n              <Dict.dict l.50 at 0x2579f300b50>)])"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.write_text(attrname='write_text',\n                     expr=<Name.package_json l.223 at 0x2579f1b7410>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.analyze_dependencies(attrname='analyze_dependencies',\n                               expr=<Attribute.analyzer l.239 at 0x2579f1b7a50>)",
              "type": "Dict.dict(items=[ ( <Const.str l.44 at 0x2579f300750>,\n              <List.list l.44 at 0x2579f300710>),\n            ( <Const.str l.45 at 0x2579f300850>,\n              <List.list l.45 at 0x2579f300790>),\n            ( <Const.str l.46 at 0x2579f300910>,\n              <Const.int l.46 at 0x2579f3008d0>),\n            ( <Const.str l.47 at 0x2579f300990>,\n              <List.list l.47 at 0x2579f300950>),\n            ( <Const.str l.48 at 0x2579f300a50>,\n              <List.list l.48 at 0x2579f300a10>),\n            ( <Const.str l.49 at 0x2579f300b90>,\n              <Dict.dict l.49 at 0x2579f300ad0>),\n            ( <Const.str l.50 at 0x2579f300c50>,\n              <Dict.dict l.50 at 0x2579f300b50>)])"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.analyze_dependencies(attrname='analyze_dependencies',\n                               expr=<Attribute.analyzer l.249 at 0x2579f1b8ad0>)",
              "type": "Dict.dict(items=[ ( <Const.str l.44 at 0x2579f300750>,\n              <List.list l.44 at 0x2579f300710>),\n            ( <Const.str l.45 at 0x2579f300850>,\n              <List.list l.45 at 0x2579f300790>),\n            ( <Const.str l.46 at 0x2579f300910>,\n              <Const.int l.46 at 0x2579f3008d0>),\n            ( <Const.str l.47 at 0x2579f300990>,\n              <List.list l.47 at 0x2579f300950>),\n            ( <Const.str l.48 at 0x2579f300a50>,\n              <List.list l.48 at 0x2579f300a10>),\n            ( <Const.str l.49 at 0x2579f300b90>,\n              <Dict.dict l.49 at 0x2579f300ad0>),\n            ( <Const.str l.50 at 0x2579f300c50>,\n              <Dict.dict l.50 at 0x2579f300b50>)])"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Attribute.mkdir(attrname='mkdir',\n                expr=<BinOp l.264 at 0x2579f1b9d10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.mkdir(attrname='mkdir',\n                expr=<BinOp l.265 at 0x2579f1b9f10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.write_text(attrname='write_text',\n                     expr=<Name.main_py l.269 at 0x2579f1ba350>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.write_text(attrname='write_text',\n                     expr=<Name.requirements l.279 at 0x2579f1ba710>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.write_text(attrname='write_text',\n                     expr=<Name.readme l.283 at 0x2579f1baa90>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.ProjectAnalyzer(name='ProjectAnalyzer')",
              "type": "Instance of analyzers.project_analyzer.ProjectAnalyzer"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.ProjectAnalyzer(name='ProjectAnalyzer')",
              "type": "Instance of analyzers.project_analyzer.ProjectAnalyzer"
            },
            {
              "function": "Attribute.main(attrname='main',\n               expr=<Name.pytest l.320 at 0x2579f1c1310>)",
              "type": "Instance of _pytest.config.USAGE_ERROR"
            }
          ],
          "unresolved_imports": [
            "pytest",
            "asyncio",
            "sys"
          ],
          "code_smells": []
        }
      },
      {
        "file_path": "tests\\test_routes.py",
        "language": "python",
        "file_size": 8110,
        "line_count": 231,
        "analysis_method": "python_ast",
        "functions": [
          {
            "name": "setup_method",
            "line_number": 21,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Setup for each test",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_analyze_project_endpoint_exists",
            "line_number": 25,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test that analyze endpoint exists",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_analysis_results_endpoint",
            "line_number": 31,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test getting analysis results",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_list_reports_endpoint",
            "line_number": 37,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test listing generated reports",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_list_artifacts_endpoint",
            "line_number": 45,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test listing generated artifacts",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "setup_method",
            "line_number": 57,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Setup for each test",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_agent_status_endpoint",
            "line_number": 61,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test agent status endpoint",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_chat_endpoint_exists",
            "line_number": 70,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test that chat endpoint exists",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_generate_agents_endpoint",
            "line_number": 76,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test agent generation endpoint",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_optimizations_endpoint",
            "line_number": 82,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test optimizations endpoint",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "setup_method",
            "line_number": 92,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Setup for each test",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_workflow_status_endpoint",
            "line_number": 96,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test workflow status endpoint",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "test_execute_workflow_endpoint_exists",
            "line_number": 103,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test workflow execution endpoint exists",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_workflow_progress_endpoint",
            "line_number": 112,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test workflow progress endpoint",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "setup_method",
            "line_number": 122,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Setup for each test",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_list_models_endpoint",
            "line_number": 126,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test listing available models",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "test_set_model_endpoint_exists",
            "line_number": 133,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test set model endpoint exists",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_current_model_endpoint",
            "line_number": 139,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test getting current model",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "setup_method",
            "line_number": 150,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Setup for each test",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_cors_configuration",
            "line_number": 154,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test CORS is properly configured",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_api_prefix_consistency",
            "line_number": 160,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test all new routes use /api prefix",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_error_response_format",
            "line_number": 178,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test error responses are properly formatted",
            "is_async": false,
            "complexity": 2
          },
          {
            "name": "setup_method",
            "line_number": 205,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Setup for each test",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_analyze_missing_project_path",
            "line_number": 209,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test analyze endpoint validates project_path",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_chat_missing_message",
            "line_number": 216,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test chat endpoint validates message",
            "is_async": false,
            "complexity": 1
          },
          {
            "name": "test_set_model_missing_parameters",
            "line_number": 221,
            "parameters": [
              "self"
            ],
            "defaults": 0,
            "decorators": [],
            "docstring": "Test set model validates required parameters",
            "is_async": false,
            "complexity": 1
          }
        ],
        "classes": [
          {
            "name": "TestAnalysisRoutes",
            "line_number": 18,
            "bases": [],
            "decorators": [],
            "docstring": "Tests for analysis route endpoints",
            "methods": [
              "setup_method",
              "test_analyze_project_endpoint_exists",
              "test_analysis_results_endpoint",
              "test_list_reports_endpoint",
              "test_list_artifacts_endpoint"
            ],
            "method_count": 5
          },
          {
            "name": "TestAgentRoutes",
            "line_number": 54,
            "bases": [],
            "decorators": [],
            "docstring": "Tests for agent route endpoints",
            "methods": [
              "setup_method",
              "test_agent_status_endpoint",
              "test_chat_endpoint_exists",
              "test_generate_agents_endpoint",
              "test_optimizations_endpoint"
            ],
            "method_count": 5
          },
          {
            "name": "TestWorkflowRoutes",
            "line_number": 89,
            "bases": [],
            "decorators": [],
            "docstring": "Tests for workflow route endpoints",
            "methods": [
              "setup_method",
              "test_workflow_status_endpoint",
              "test_execute_workflow_endpoint_exists",
              "test_workflow_progress_endpoint"
            ],
            "method_count": 4
          },
          {
            "name": "TestModelRoutes",
            "line_number": 119,
            "bases": [],
            "decorators": [],
            "docstring": "Tests for model management route endpoints",
            "methods": [
              "setup_method",
              "test_list_models_endpoint",
              "test_set_model_endpoint_exists",
              "test_current_model_endpoint"
            ],
            "method_count": 4
          },
          {
            "name": "TestRouteIntegration",
            "line_number": 147,
            "bases": [],
            "decorators": [],
            "docstring": "Integration tests for route functionality",
            "methods": [
              "setup_method",
              "test_cors_configuration",
              "test_api_prefix_consistency",
              "test_error_response_format"
            ],
            "method_count": 4
          },
          {
            "name": "TestRouteValidation",
            "line_number": 202,
            "bases": [],
            "decorators": [],
            "docstring": "Tests for route input validation",
            "methods": [
              "setup_method",
              "test_analyze_missing_project_path",
              "test_chat_missing_message",
              "test_set_model_missing_parameters"
            ],
            "method_count": 4
          }
        ],
        "imports": [
          {
            "type": "import",
            "modules": [
              "pytest"
            ],
            "line_number": 5
          },
          {
            "type": "from_import",
            "module": "fastapi.testclient",
            "names": [
              "TestClient"
            ],
            "level": 0,
            "line_number": 6
          },
          {
            "type": "from_import",
            "module": "unittest.mock",
            "names": [
              "Mock",
              "MagicMock",
              "AsyncMock",
              "patch"
            ],
            "level": 0,
            "line_number": 7
          },
          {
            "type": "import",
            "modules": [
              "sys"
            ],
            "line_number": 8
          },
          {
            "type": "from_import",
            "module": "pathlib",
            "names": [
              "Path"
            ],
            "level": 0,
            "line_number": 9
          },
          {
            "type": "from_import",
            "module": "app",
            "names": [
              "app"
            ],
            "level": 0,
            "line_number": 15
          }
        ],
        "complexity_metrics": {
          "cyclomatic_complexity": 30,
          "function_count": 26,
          "class_count": 6,
          "import_count": 6,
          "nested_depth": 0
        },
        "code_issues": [],
        "astroid_analysis": {
          "inferred_types": [
            {
              "function": "Name.Path(name='Path')",
              "type": "Instance of pathlib.Path"
            },
            {
              "function": "Name.str(name='str')",
              "type": "Const.str(value='',\n          kind=None)"
            },
            {
              "function": "Name.TestClient(name='TestClient')",
              "type": "Instance of starlette.testclient.TestClient"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Attribute.client l.28 at 0x2579f742e10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.client l.33 at 0x2579f743a10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.client l.39 at 0x2579f73c410>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.json(attrname='json',\n               expr=<Name.response l.41 at 0x2579f73c850>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.client l.47 at 0x2579f73d350>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.json(attrname='json',\n               expr=<Name.response l.49 at 0x2579f73d790>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.TestClient(name='TestClient')",
              "type": "Instance of starlette.testclient.TestClient"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.client l.63 at 0x2579f73ebd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.json(attrname='json',\n               expr=<Name.response l.65 at 0x2579f73f010>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Attribute.client l.72 at 0x2579f73fc10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Attribute.client l.78 at 0x2579f748710>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.client l.84 at 0x2579f749110>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.TestClient(name='TestClient')",
              "type": "Instance of starlette.testclient.TestClient"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.client l.98 at 0x2579f74a4d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.json(attrname='json',\n               expr=<Name.response l.100 at 0x2579f74a910>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Attribute.client l.105 at 0x2579f74b310>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.client l.114 at 0x2579f74bdd0>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.TestClient(name='TestClient')",
              "type": "Instance of starlette.testclient.TestClient"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.client l.128 at 0x2579f755190>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.json(attrname='json',\n               expr=<Name.response l.130 at 0x2579f7555d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Attribute.client l.135 at 0x2579f755f90>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.client l.141 at 0x2579f756a10>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.json(attrname='json',\n               expr=<Name.response l.143 at 0x2579f756e50>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.TestClient(name='TestClient')",
              "type": "Instance of starlette.testclient.TestClient"
            },
            {
              "function": "Attribute.options(attrname='options',\n                  expr=<Attribute.client l.156 at 0x2579f758250>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.client l.163 at 0x2579f758c50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.client l.167 at 0x2579f759090>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.client l.171 at 0x2579f7594d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.client l.175 at 0x2579f759950>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.client l.181 at 0x2579f75a250>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.json(attrname='json',\n               expr=<Name.response l.186 at 0x2579f75a850>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.get(attrname='get',\n              expr=<Attribute.client l.196 at 0x2579f75b1d0>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.total_seconds(attrname='total_seconds',\n                        expr=<Attribute.elapsed l.199 at 0x2579f75b590>)",
              "type": "Uninferable"
            },
            {
              "function": "Name.TestClient(name='TestClient')",
              "type": "Instance of starlette.testclient.TestClient"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Attribute.client l.211 at 0x2579f760750>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.json(attrname='json',\n               expr=<Name.response l.213 at 0x2579f760c50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Attribute.client l.218 at 0x2579f761490>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.post(attrname='post',\n               expr=<Attribute.client l.223 at 0x2579f761e50>)",
              "type": "Uninferable"
            },
            {
              "function": "Attribute.main(attrname='main',\n               expr=<Name.pytest l.229 at 0x2579f762490>)",
              "type": "Instance of _pytest.config.USAGE_ERROR"
            }
          ],
          "unresolved_imports": [
            "pytest",
            "sys"
          ],
          "code_smells": []
        }
      }
    ],
    "total_functions": 546,
    "total_classes": 101,
    "total_imports": 532,
    "languages_analyzed": [
      "python",
      "javascript"
    ],
    "complexity_summary": {
      "total_files": 100,
      "avg_functions_per_file": 5.46,
      "avg_classes_per_file": 1.01,
      "avg_complexity_per_file": 18.79,
      "most_complex_files": [
        {
          "file": ".claude\\skills\\docx\\scripts\\document.py",
          "complexity": 227,
          "functions": 50,
          "classes": 2
        },
        {
          "file": ".claude\\skills\\docx\\ooxml\\scripts\\validation\\base.py",
          "complexity": 173,
          "functions": 19,
          "classes": 1
        },
        {
          "file": "settings\\__init__.py",
          "complexity": 68,
          "functions": 21,
          "classes": 3
        },
        {
          "file": ".claude\\skills\\docx\\ooxml\\scripts\\validation\\pptx.py",
          "complexity": 62,
          "functions": 6,
          "classes": 1
        },
        {
          "file": "analyzers\\ast_analyzer.py",
          "complexity": 52,
          "functions": 16,
          "classes": 1
        },
        {
          "file": ".claude\\skills\\docx\\ooxml\\scripts\\validation\\docx.py",
          "complexity": 51,
          "functions": 7,
          "classes": 1
        },
        {
          "file": ".claude\\skills\\docx\\scripts\\utilities.py",
          "complexity": 47,
          "functions": 13,
          "classes": 1
        },
        {
          "file": ".claude\\skills\\docx\\ooxml\\scripts\\validation\\redlining.py",
          "complexity": 46,
          "functions": 6,
          "classes": 1
        },
        {
          "file": ".claude\\scripts\\context-monitor.py",
          "complexity": 44,
          "functions": 5,
          "classes": 0
        },
        {
          "file": "streamlit_app_modern.py",
          "complexity": 40,
          "functions": 10,
          "classes": 1
        }
      ],
      "language_distribution": {
        "python": 98,
        "javascript": 2
      }
    },
    "code_issues_summary": [
      {
        "type": "wildcard_import",
        "severity": "medium",
        "line": 0,
        "message": "Wildcard-Import (import *) sollte vermieden werden",
        "file": "analyzers\\ast_analyzer.py"
      },
      {
        "type": "wildcard_import",
        "severity": "medium",
        "line": 0,
        "message": "Wildcard-Import (import *) sollte vermieden werden",
        "file": "generators\\skill_templates.py"
      }
    ]
  },
  "lines_of_code": 37186,
  "complexity_score": 0,
  "directory_count": 72,
  "largest_files": [
    {
      "path": "share\\jupyter\\nbextensions\\pydeck\\index.js",
      "lines": 3702,
      "size": 2594815
    },
    {
      "path": ".claude\\skills\\docx\\scripts\\document.py",
      "lines": 1276,
      "size": 50409
    },
    {
      "path": "generators\\workflow_generator.py",
      "lines": 1125,
      "size": 43324
    },
    {
      "path": "analyzers\\project_analyzer.py",
      "lines": 958,
      "size": 45108
    },
    {
      "path": ".claude\\skills\\docx\\ooxml\\scripts\\validation\\base.py",
      "lines": 951,
      "size": 39892
    },
    {
      "path": "analyzers\\api_analyzer.py",
      "lines": 747,
      "size": 33679
    },
    {
      "path": "mcps\\__init__.py",
      "lines": 723,
      "size": 28729
    },
    {
      "path": "llm\\prompt_templates.py",
      "lines": 670,
      "size": 18476
    },
    {
      "path": "analyzers\\database_analyzer.py",
      "lines": 663,
      "size": 29649
    },
    {
      "path": "analyzers\\dependency_analyzer.py",
      "lines": 657,
      "size": 26672
    }
  ],
  "most_common_extensions": [
    [
      ".py",
      120
    ],
    [
      ".md",
      72
    ],
    [
      ".ttf",
      53
    ],
    [
      ".xsd",
      39
    ],
    [
      ".txt",
      38
    ],
    [
      ".exe",
      11
    ],
    [
      ".json",
      5
    ],
    [
      ".bat",
      5
    ],
    [
      ".xml",
      5
    ],
    [
      "",
      3
    ]
  ],
  "cyclomatic_complexity": {
    "app.py": [
      {
        "type": "function",
        "rank": "B",
        "lineno": 231,
        "complexity": 6,
        "name": "get_status",
        "col_offset": 0,
        "endline": 266,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 183,
        "complexity": 5,
        "name": "load_module_directory",
        "col_offset": 0,
        "endline": 206,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 167,
        "complexity": 4,
        "name": "load_all_modules",
        "col_offset": 0,
        "endline": 180,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 93,
        "complexity": 3,
        "name": "ensure_components_initialized",
        "col_offset": 0,
        "endline": 129,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 151,
        "complexity": 3,
        "name": "shutdown_event",
        "col_offset": 0,
        "endline": 164,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 134,
        "complexity": 2,
        "name": "startup_event",
        "col_offset": 0,
        "endline": 147,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 212,
        "complexity": 1,
        "name": "root",
        "col_offset": 0,
        "endline": 225,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 270,
        "complexity": 1,
        "name": "test_endpoint",
        "col_offset": 0,
        "endline": 274,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 285,
        "complexity": 1,
        "name": "get_workflow_orchestrator",
        "col_offset": 0,
        "endline": 286,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 288,
        "complexity": 1,
        "name": "get_ensure_components",
        "col_offset": 0,
        "endline": 289,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 291,
        "complexity": 1,
        "name": "get_analysis_results",
        "col_offset": 0,
        "endline": 292,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 294,
        "complexity": 1,
        "name": "get_project_manager_agent",
        "col_offset": 0,
        "endline": 295,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 297,
        "complexity": 1,
        "name": "get_loaded_modules",
        "col_offset": 0,
        "endline": 298,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 300,
        "complexity": 1,
        "name": "get_optimization_engine",
        "col_offset": 0,
        "endline": 301,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 303,
        "complexity": 1,
        "name": "get_model_manager",
        "col_offset": 0,
        "endline": 304,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 306,
        "complexity": 1,
        "name": "get_agent_generator",
        "col_offset": 0,
        "endline": 307,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 311,
        "complexity": 1,
        "name": "analyze_project",
        "col_offset": 0,
        "endline": 328,
        "closures": [
          {
            "type": "function",
            "rank": "A",
            "lineno": 315,
            "complexity": 1,
            "name": "set_analysis_results",
            "col_offset": 4,
            "endline": 317,
            "closures": []
          },
          {
            "type": "function",
            "rank": "A",
            "lineno": 319,
            "complexity": 1,
            "name": "set_current_project",
            "col_offset": 4,
            "endline": 321,
            "closures": []
          }
        ]
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 332,
        "complexity": 1,
        "name": "get_analysis_results_endpoint",
        "col_offset": 0,
        "endline": 333,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 336,
        "complexity": 1,
        "name": "list_reports",
        "col_offset": 0,
        "endline": 337,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 340,
        "complexity": 1,
        "name": "list_artifacts",
        "col_offset": 0,
        "endline": 341,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 344,
        "complexity": 1,
        "name": "chat_endpoint",
        "col_offset": 0,
        "endline": 346,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 349,
        "complexity": 1,
        "name": "generate_agents_endpoint",
        "col_offset": 0,
        "endline": 351,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 354,
        "complexity": 1,
        "name": "agent_status_endpoint",
        "col_offset": 0,
        "endline": 356,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 359,
        "complexity": 1,
        "name": "optimizations_endpoint",
        "col_offset": 0,
        "endline": 361,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 364,
        "complexity": 1,
        "name": "execute_workflow_endpoint",
        "col_offset": 0,
        "endline": 366,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 369,
        "complexity": 1,
        "name": "run_complete_workflow_endpoint",
        "col_offset": 0,
        "endline": 371,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 374,
        "complexity": 1,
        "name": "workflow_status_endpoint",
        "col_offset": 0,
        "endline": 376,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 379,
        "complexity": 1,
        "name": "workflow_progress_endpoint",
        "col_offset": 0,
        "endline": 381,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 384,
        "complexity": 1,
        "name": "list_models_endpoint",
        "col_offset": 0,
        "endline": 385,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 388,
        "complexity": 1,
        "name": "set_model_endpoint",
        "col_offset": 0,
        "endline": 389,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 392,
        "complexity": 1,
        "name": "current_model_endpoint",
        "col_offset": 0,
        "endline": 393,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 398,
        "complexity": 1,
        "name": "claude_flow_init_swarm",
        "col_offset": 0,
        "endline": 400,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 403,
        "complexity": 1,
        "name": "claude_flow_execute_task",
        "col_offset": 0,
        "endline": 405,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 408,
        "complexity": 1,
        "name": "claude_flow_spawn_agent",
        "col_offset": 0,
        "endline": 410,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 413,
        "complexity": 1,
        "name": "claude_flow_swarm_status",
        "col_offset": 0,
        "endline": 415,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 418,
        "complexity": 1,
        "name": "claude_flow_store_memory",
        "col_offset": 0,
        "endline": 420,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 423,
        "complexity": 1,
        "name": "claude_flow_query_memory",
        "col_offset": 0,
        "endline": 425,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 428,
        "complexity": 1,
        "name": "claude_flow_memory_status",
        "col_offset": 0,
        "endline": 430,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 433,
        "complexity": 1,
        "name": "claude_flow_init_hive_mind",
        "col_offset": 0,
        "endline": 435,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 438,
        "complexity": 1,
        "name": "claude_flow_mcp_execute",
        "col_offset": 0,
        "endline": 440,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 443,
        "complexity": 1,
        "name": "claude_flow_capabilities",
        "col_offset": 0,
        "endline": 444,
        "closures": []
      }
    ],
    "streamlit_app_modern.py": [
      {
        "type": "method",
        "rank": "B",
        "lineno": 113,
        "complexity": 7,
        "classname": "ModernApp",
        "name": "render_analysis",
        "col_offset": 4,
        "endline": 199,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 238,
        "complexity": 7,
        "classname": "ModernApp",
        "name": "render_settings",
        "col_offset": 4,
        "endline": 298,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 30,
        "complexity": 6,
        "classname": "ModernApp",
        "name": "initialize_session_state",
        "col_offset": 4,
        "endline": 41,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 300,
        "complexity": 6,
        "classname": "ModernApp",
        "name": "start_analysis",
        "col_offset": 4,
        "endline": 339,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 22,
        "complexity": 5,
        "name": "ModernApp",
        "col_offset": 0,
        "endline": 363,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 25,
            "complexity": 1,
            "classname": "ModernApp",
            "name": "__init__",
            "col_offset": 4,
            "endline": 28,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 30,
            "complexity": 6,
            "classname": "ModernApp",
            "name": "initialize_session_state",
            "col_offset": 4,
            "endline": 41,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 43,
            "complexity": 5,
            "classname": "ModernApp",
            "name": "run",
            "col_offset": 4,
            "endline": 61,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 63,
            "complexity": 3,
            "classname": "ModernApp",
            "name": "render_sidebar",
            "col_offset": 4,
            "endline": 107,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 109,
            "complexity": 1,
            "classname": "ModernApp",
            "name": "render_dashboard",
            "col_offset": 4,
            "endline": 111,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 113,
            "complexity": 7,
            "classname": "ModernApp",
            "name": "render_analysis",
            "col_offset": 4,
            "endline": 199,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 201,
            "complexity": 3,
            "classname": "ModernApp",
            "name": "render_chat",
            "col_offset": 4,
            "endline": 236,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 238,
            "complexity": 7,
            "classname": "ModernApp",
            "name": "render_settings",
            "col_offset": 4,
            "endline": 298,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 300,
            "complexity": 6,
            "classname": "ModernApp",
            "name": "start_analysis",
            "col_offset": 4,
            "endline": 339,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 341,
            "complexity": 3,
            "classname": "ModernApp",
            "name": "_api_call",
            "col_offset": 4,
            "endline": 363,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 43,
        "complexity": 5,
        "classname": "ModernApp",
        "name": "run",
        "col_offset": 4,
        "endline": 61,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 63,
        "complexity": 3,
        "classname": "ModernApp",
        "name": "render_sidebar",
        "col_offset": 4,
        "endline": 107,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 201,
        "complexity": 3,
        "classname": "ModernApp",
        "name": "render_chat",
        "col_offset": 4,
        "endline": 236,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 341,
        "complexity": 3,
        "classname": "ModernApp",
        "name": "_api_call",
        "col_offset": 4,
        "endline": 363,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 25,
        "complexity": 1,
        "classname": "ModernApp",
        "name": "__init__",
        "col_offset": 4,
        "endline": 28,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 109,
        "complexity": 1,
        "classname": "ModernApp",
        "name": "render_dashboard",
        "col_offset": 4,
        "endline": 111,
        "closures": []
      }
    ],
    ".claude\\scripts\\context-monitor.py": [
      {
        "type": "function",
        "rank": "C",
        "lineno": 139,
        "complexity": 15,
        "name": "get_session_metrics",
        "col_offset": 0,
        "endline": 191,
        "closures": []
      },
      {
        "type": "function",
        "rank": "C",
        "lineno": 12,
        "complexity": 13,
        "name": "parse_context_from_transcript",
        "col_offset": 0,
        "endline": 78,
        "closures": []
      },
      {
        "type": "function",
        "rank": "B",
        "lineno": 80,
        "complexity": 9,
        "name": "get_context_display",
        "col_offset": 0,
        "endline": 119,
        "closures": []
      },
      {
        "type": "function",
        "rank": "B",
        "lineno": 121,
        "complexity": 7,
        "name": "get_directory_display",
        "col_offset": 0,
        "endline": 137,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 193,
        "complexity": 5,
        "name": "main",
        "col_offset": 0,
        "endline": 233,
        "closures": []
      }
    ],
    ".claude\\skills\\docx\\ooxml\\scripts\\pack.py": [
      {
        "type": "function",
        "rank": "B",
        "lineno": 45,
        "complexity": 9,
        "name": "pack_document",
        "col_offset": 0,
        "endline": 87,
        "closures": []
      },
      {
        "type": "function",
        "rank": "B",
        "lineno": 90,
        "complexity": 9,
        "name": "validate_document",
        "col_offset": 0,
        "endline": 130,
        "closures": []
      },
      {
        "type": "function",
        "rank": "B",
        "lineno": 133,
        "complexity": 8,
        "name": "condense_xml",
        "col_offset": 0,
        "endline": 155,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 19,
        "complexity": 4,
        "name": "main",
        "col_offset": 0,
        "endline": 42,
        "closures": []
      }
    ],
    ".claude\\skills\\docx\\ooxml\\scripts\\validate.py": [
      {
        "type": "function",
        "rank": "B",
        "lineno": 16,
        "complexity": 10,
        "name": "main",
        "col_offset": 0,
        "endline": 65,
        "closures": []
      }
    ],
    ".claude\\skills\\docx\\ooxml\\scripts\\validation\\base.py": [
      {
        "type": "method",
        "rank": "D",
        "lineno": 522,
        "complexity": 27,
        "classname": "BaseSchemaValidator",
        "name": "validate_content_types",
        "col_offset": 4,
        "endline": 639,
        "closures": []
      },
      {
        "type": "method",
        "rank": "D",
        "lineno": 277,
        "complexity": 24,
        "classname": "BaseSchemaValidator",
        "name": "validate_file_references",
        "col_offset": 4,
        "endline": 386,
        "closures": []
      },
      {
        "type": "method",
        "rank": "C",
        "lineno": 388,
        "complexity": 20,
        "classname": "BaseSchemaValidator",
        "name": "validate_all_relationship_ids",
        "col_offset": 4,
        "endline": 484,
        "closures": []
      },
      {
        "type": "method",
        "rank": "C",
        "lineno": 186,
        "complexity": 19,
        "classname": "BaseSchemaValidator",
        "name": "validate_unique_ids",
        "col_offset": 4,
        "endline": 275,
        "closures": []
      },
      {
        "type": "method",
        "rank": "C",
        "lineno": 688,
        "complexity": 17,
        "classname": "BaseSchemaValidator",
        "name": "validate_against_xsd",
        "col_offset": 4,
        "endline": 739,
        "closures": []
      },
      {
        "type": "class",
        "rank": "C",
        "lineno": 11,
        "complexity": 11,
        "name": "BaseSchemaValidator",
        "col_offset": 0,
        "endline": 947,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 106,
            "complexity": 4,
            "classname": "BaseSchemaValidator",
            "name": "__init__",
            "col_offset": 4,
            "endline": 121,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 123,
            "complexity": 1,
            "classname": "BaseSchemaValidator",
            "name": "validate",
            "col_offset": 4,
            "endline": 125,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 127,
            "complexity": 7,
            "classname": "BaseSchemaValidator",
            "name": "validate_xml",
            "col_offset": 4,
            "endline": 154,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 156,
            "complexity": 10,
            "classname": "BaseSchemaValidator",
            "name": "validate_namespaces",
            "col_offset": 4,
            "endline": 184,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 186,
            "complexity": 19,
            "classname": "BaseSchemaValidator",
            "name": "validate_unique_ids",
            "col_offset": 4,
            "endline": 275,
            "closures": []
          },
          {
            "type": "method",
            "rank": "D",
            "lineno": 277,
            "complexity": 24,
            "classname": "BaseSchemaValidator",
            "name": "validate_file_references",
            "col_offset": 4,
            "endline": 386,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 388,
            "complexity": 20,
            "classname": "BaseSchemaValidator",
            "name": "validate_all_relationship_ids",
            "col_offset": 4,
            "endline": 484,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 486,
            "complexity": 9,
            "classname": "BaseSchemaValidator",
            "name": "_get_expected_relationship_type",
            "col_offset": 4,
            "endline": 520,
            "closures": []
          },
          {
            "type": "method",
            "rank": "D",
            "lineno": 522,
            "complexity": 27,
            "classname": "BaseSchemaValidator",
            "name": "validate_content_types",
            "col_offset": 4,
            "endline": 639,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 641,
            "complexity": 9,
            "classname": "BaseSchemaValidator",
            "name": "validate_file_against_xsd",
            "col_offset": 4,
            "endline": 686,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 688,
            "complexity": 17,
            "classname": "BaseSchemaValidator",
            "name": "validate_against_xsd",
            "col_offset": 4,
            "endline": 739,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 741,
            "complexity": 8,
            "classname": "BaseSchemaValidator",
            "name": "_get_schema_path",
            "col_offset": 4,
            "endline": 763,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 765,
            "complexity": 6,
            "classname": "BaseSchemaValidator",
            "name": "_clean_ignorable_namespaces",
            "col_offset": 4,
            "endline": 789,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 791,
            "complexity": 7,
            "classname": "BaseSchemaValidator",
            "name": "_remove_ignorable_elements",
            "col_offset": 4,
            "endline": 813,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 815,
            "complexity": 2,
            "classname": "BaseSchemaValidator",
            "name": "_preprocess_for_mc_ignorable",
            "col_offset": 4,
            "endline": 824,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 826,
            "complexity": 7,
            "classname": "BaseSchemaValidator",
            "name": "_validate_single_file_xsd",
            "col_offset": 4,
            "endline": 867,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 869,
            "complexity": 3,
            "classname": "BaseSchemaValidator",
            "name": "_get_original_file_errors",
            "col_offset": 4,
            "endline": 904,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 906,
            "complexity": 6,
            "classname": "BaseSchemaValidator",
            "name": "_remove_template_tags_from_text_nodes",
            "col_offset": 4,
            "endline": 947,
            "closures": [
              {
                "type": "function",
                "rank": "A",
                "lineno": 923,
                "complexity": 4,
                "name": "process_text_content",
                "col_offset": 8,
                "endline": 933,
                "closures": []
              }
            ]
          }
        ]
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 156,
        "complexity": 10,
        "classname": "BaseSchemaValidator",
        "name": "validate_namespaces",
        "col_offset": 4,
        "endline": 184,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 486,
        "complexity": 9,
        "classname": "BaseSchemaValidator",
        "name": "_get_expected_relationship_type",
        "col_offset": 4,
        "endline": 520,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 641,
        "complexity": 9,
        "classname": "BaseSchemaValidator",
        "name": "validate_file_against_xsd",
        "col_offset": 4,
        "endline": 686,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 741,
        "complexity": 8,
        "classname": "BaseSchemaValidator",
        "name": "_get_schema_path",
        "col_offset": 4,
        "endline": 763,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 127,
        "complexity": 7,
        "classname": "BaseSchemaValidator",
        "name": "validate_xml",
        "col_offset": 4,
        "endline": 154,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 791,
        "complexity": 7,
        "classname": "BaseSchemaValidator",
        "name": "_remove_ignorable_elements",
        "col_offset": 4,
        "endline": 813,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 826,
        "complexity": 7,
        "classname": "BaseSchemaValidator",
        "name": "_validate_single_file_xsd",
        "col_offset": 4,
        "endline": 867,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 765,
        "complexity": 6,
        "classname": "BaseSchemaValidator",
        "name": "_clean_ignorable_namespaces",
        "col_offset": 4,
        "endline": 789,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 906,
        "complexity": 6,
        "classname": "BaseSchemaValidator",
        "name": "_remove_template_tags_from_text_nodes",
        "col_offset": 4,
        "endline": 947,
        "closures": [
          {
            "type": "function",
            "rank": "A",
            "lineno": 923,
            "complexity": 4,
            "name": "process_text_content",
            "col_offset": 8,
            "endline": 933,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 106,
        "complexity": 4,
        "classname": "BaseSchemaValidator",
        "name": "__init__",
        "col_offset": 4,
        "endline": 121,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 869,
        "complexity": 3,
        "classname": "BaseSchemaValidator",
        "name": "_get_original_file_errors",
        "col_offset": 4,
        "endline": 904,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 815,
        "complexity": 2,
        "classname": "BaseSchemaValidator",
        "name": "_preprocess_for_mc_ignorable",
        "col_offset": 4,
        "endline": 824,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 123,
        "complexity": 1,
        "classname": "BaseSchemaValidator",
        "name": "validate",
        "col_offset": 4,
        "endline": 125,
        "closures": []
      }
    ],
    ".claude\\skills\\docx\\ooxml\\scripts\\validation\\docx.py": [
      {
        "type": "method",
        "rank": "C",
        "lineno": 72,
        "complexity": 14,
        "classname": "DOCXSchemaValidator",
        "name": "validate_whitespace_preservation",
        "col_offset": 4,
        "endline": 122,
        "closures": []
      },
      {
        "type": "method",
        "rank": "C",
        "lineno": 216,
        "complexity": 12,
        "classname": "DOCXSchemaValidator",
        "name": "validate_insertions",
        "col_offset": 4,
        "endline": 261,
        "closures": []
      },
      {
        "type": "method",
        "rank": "C",
        "lineno": 24,
        "complexity": 11,
        "classname": "DOCXSchemaValidator",
        "name": "validate",
        "col_offset": 4,
        "endline": 70,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 124,
        "complexity": 10,
        "classname": "DOCXSchemaValidator",
        "name": "validate_deletions",
        "col_offset": 4,
        "endline": 171,
        "closures": []
      },
      {
        "type": "class",
        "rank": "B",
        "lineno": 14,
        "complexity": 9,
        "name": "DOCXSchemaValidator",
        "col_offset": 0,
        "endline": 270,
        "methods": [
          {
            "type": "method",
            "rank": "C",
            "lineno": 24,
            "complexity": 11,
            "classname": "DOCXSchemaValidator",
            "name": "validate",
            "col_offset": 4,
            "endline": 70,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 72,
            "complexity": 14,
            "classname": "DOCXSchemaValidator",
            "name": "validate_whitespace_preservation",
            "col_offset": 4,
            "endline": 122,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 124,
            "complexity": 10,
            "classname": "DOCXSchemaValidator",
            "name": "validate_deletions",
            "col_offset": 4,
            "endline": 171,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 173,
            "complexity": 4,
            "classname": "DOCXSchemaValidator",
            "name": "count_paragraphs_in_unpacked",
            "col_offset": 4,
            "endline": 190,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 192,
            "complexity": 2,
            "classname": "DOCXSchemaValidator",
            "name": "count_paragraphs_in_original",
            "col_offset": 4,
            "endline": 214,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 216,
            "complexity": 12,
            "classname": "DOCXSchemaValidator",
            "name": "validate_insertions",
            "col_offset": 4,
            "endline": 261,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 263,
            "complexity": 2,
            "classname": "DOCXSchemaValidator",
            "name": "compare_paragraph_counts",
            "col_offset": 4,
            "endline": 270,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 173,
        "complexity": 4,
        "classname": "DOCXSchemaValidator",
        "name": "count_paragraphs_in_unpacked",
        "col_offset": 4,
        "endline": 190,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 192,
        "complexity": 2,
        "classname": "DOCXSchemaValidator",
        "name": "count_paragraphs_in_original",
        "col_offset": 4,
        "endline": 214,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 263,
        "complexity": 2,
        "classname": "DOCXSchemaValidator",
        "name": "compare_paragraph_counts",
        "col_offset": 4,
        "endline": 270,
        "closures": []
      }
    ],
    ".claude\\skills\\docx\\ooxml\\scripts\\validation\\pptx.py": [
      {
        "type": "method",
        "rank": "C",
        "lineno": 243,
        "complexity": 18,
        "classname": "PPTXSchemaValidator",
        "name": "validate_notes_slide_references",
        "col_offset": 4,
        "endline": 311,
        "closures": []
      },
      {
        "type": "method",
        "rank": "C",
        "lineno": 128,
        "complexity": 14,
        "classname": "PPTXSchemaValidator",
        "name": "validate_slide_layout_ids",
        "col_offset": 4,
        "endline": 201,
        "closures": []
      },
      {
        "type": "class",
        "rank": "C",
        "lineno": 10,
        "complexity": 12,
        "name": "PPTXSchemaValidator",
        "col_offset": 0,
        "endline": 311,
        "methods": [
          {
            "type": "method",
            "rank": "C",
            "lineno": 28,
            "complexity": 12,
            "classname": "PPTXSchemaValidator",
            "name": "validate",
            "col_offset": 4,
            "endline": 75,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 77,
            "complexity": 12,
            "classname": "PPTXSchemaValidator",
            "name": "validate_uuid_ids",
            "col_offset": 4,
            "endline": 119,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 121,
            "complexity": 3,
            "classname": "PPTXSchemaValidator",
            "name": "_looks_like_uuid",
            "col_offset": 4,
            "endline": 126,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 128,
            "complexity": 14,
            "classname": "PPTXSchemaValidator",
            "name": "validate_slide_layout_ids",
            "col_offset": 4,
            "endline": 201,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 203,
            "complexity": 9,
            "classname": "PPTXSchemaValidator",
            "name": "validate_no_duplicate_slide_layouts",
            "col_offset": 4,
            "endline": 241,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 243,
            "complexity": 18,
            "classname": "PPTXSchemaValidator",
            "name": "validate_notes_slide_references",
            "col_offset": 4,
            "endline": 311,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "C",
        "lineno": 28,
        "complexity": 12,
        "classname": "PPTXSchemaValidator",
        "name": "validate",
        "col_offset": 4,
        "endline": 75,
        "closures": []
      },
      {
        "type": "method",
        "rank": "C",
        "lineno": 77,
        "complexity": 12,
        "classname": "PPTXSchemaValidator",
        "name": "validate_uuid_ids",
        "col_offset": 4,
        "endline": 119,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 203,
        "complexity": 9,
        "classname": "PPTXSchemaValidator",
        "name": "validate_no_duplicate_slide_layouts",
        "col_offset": 4,
        "endline": 241,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 121,
        "complexity": 3,
        "classname": "PPTXSchemaValidator",
        "name": "_looks_like_uuid",
        "col_offset": 4,
        "endline": 126,
        "closures": []
      }
    ],
    ".claude\\skills\\docx\\ooxml\\scripts\\validation\\redlining.py": [
      {
        "type": "method",
        "rank": "C",
        "lineno": 22,
        "complexity": 15,
        "classname": "RedliningValidator",
        "name": "validate",
        "col_offset": 4,
        "endline": 112,
        "closures": []
      },
      {
        "type": "method",
        "rank": "C",
        "lineno": 217,
        "complexity": 14,
        "classname": "RedliningValidator",
        "name": "_remove_claude_tracked_changes",
        "col_offset": 4,
        "endline": 252,
        "closures": []
      },
      {
        "type": "method",
        "rank": "C",
        "lineno": 139,
        "complexity": 13,
        "classname": "RedliningValidator",
        "name": "_get_git_word_diff",
        "col_offset": 4,
        "endline": 215,
        "closures": []
      },
      {
        "type": "class",
        "rank": "B",
        "lineno": 11,
        "complexity": 9,
        "name": "RedliningValidator",
        "col_offset": 0,
        "endline": 275,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 14,
            "complexity": 1,
            "classname": "RedliningValidator",
            "name": "__init__",
            "col_offset": 4,
            "endline": 19,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 22,
            "complexity": 15,
            "classname": "RedliningValidator",
            "name": "validate",
            "col_offset": 4,
            "endline": 112,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 114,
            "complexity": 2,
            "classname": "RedliningValidator",
            "name": "_generate_detailed_diff",
            "col_offset": 4,
            "endline": 137,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 139,
            "complexity": 13,
            "classname": "RedliningValidator",
            "name": "_get_git_word_diff",
            "col_offset": 4,
            "endline": 215,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 217,
            "complexity": 14,
            "classname": "RedliningValidator",
            "name": "_remove_claude_tracked_changes",
            "col_offset": 4,
            "endline": 252,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 254,
            "complexity": 5,
            "classname": "RedliningValidator",
            "name": "_extract_text_content",
            "col_offset": 4,
            "endline": 275,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 254,
        "complexity": 5,
        "classname": "RedliningValidator",
        "name": "_extract_text_content",
        "col_offset": 4,
        "endline": 275,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 114,
        "complexity": 2,
        "classname": "RedliningValidator",
        "name": "_generate_detailed_diff",
        "col_offset": 4,
        "endline": 137,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 14,
        "complexity": 1,
        "classname": "RedliningValidator",
        "name": "__init__",
        "col_offset": 4,
        "endline": 19,
        "closures": []
      }
    ],
    ".claude\\skills\\docx\\scripts\\document.py": [
      {
        "type": "method",
        "rank": "D",
        "lineno": 482,
        "complexity": 24,
        "classname": "DocxXMLEditor",
        "name": "suggest_deletion",
        "col_offset": 4,
        "endline": 593,
        "closures": []
      },
      {
        "type": "method",
        "rank": "C",
        "lineno": 116,
        "complexity": 16,
        "classname": "DocxXMLEditor",
        "name": "_inject_attributes_to_nodes",
        "col_offset": 4,
        "endline": 238,
        "closures": [
          {
            "type": "function",
            "rank": "A",
            "lineno": 134,
            "complexity": 4,
            "name": "is_inside_deletion",
            "col_offset": 8,
            "endline": 141,
            "closures": []
          },
          {
            "type": "function",
            "rank": "B",
            "lineno": 143,
            "complexity": 6,
            "name": "add_rsid_to_p",
            "col_offset": 8,
            "endline": 156,
            "closures": []
          },
          {
            "type": "function",
            "rank": "A",
            "lineno": 158,
            "complexity": 4,
            "name": "add_rsid_to_r",
            "col_offset": 8,
            "endline": 165,
            "closures": []
          },
          {
            "type": "function",
            "rank": "B",
            "lineno": 167,
            "complexity": 6,
            "name": "add_tracked_change_attrs",
            "col_offset": 8,
            "endline": 180,
            "closures": []
          },
          {
            "type": "function",
            "rank": "A",
            "lineno": 182,
            "complexity": 4,
            "name": "add_comment_attrs",
            "col_offset": 8,
            "endline": 188,
            "closures": []
          },
          {
            "type": "function",
            "rank": "A",
            "lineno": 190,
            "complexity": 2,
            "name": "add_comment_extensible_date",
            "col_offset": 8,
            "endline": 194,
            "closures": []
          },
          {
            "type": "function",
            "rank": "B",
            "lineno": 196,
            "complexity": 7,
            "name": "add_xml_space_to_t",
            "col_offset": 8,
            "endline": 205,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "C",
        "lineno": 988,
        "complexity": 16,
        "classname": "Document",
        "name": "_update_settings",
        "col_offset": 4,
        "endline": 1064,
        "closures": []
      },
      {
        "type": "method",
        "rank": "C",
        "lineno": 342,
        "complexity": 15,
        "classname": "DocxXMLEditor",
        "name": "revert_deletion",
        "col_offset": 4,
        "endline": 431,
        "closures": []
      },
      {
        "type": "method",
        "rank": "C",
        "lineno": 264,
        "complexity": 12,
        "classname": "DocxXMLEditor",
        "name": "revert_insertion",
        "col_offset": 4,
        "endline": 340,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 434,
        "complexity": 8,
        "classname": "DocxXMLEditor",
        "name": "suggest_paragraph",
        "col_offset": 4,
        "endline": 480,
        "closures": []
      },
      {
        "type": "class",
        "rank": "B",
        "lineno": 47,
        "complexity": 7,
        "name": "DocxXMLEditor",
        "col_offset": 0,
        "endline": 593,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 59,
            "complexity": 1,
            "classname": "DocxXMLEditor",
            "name": "__init__",
            "col_offset": 4,
            "endline": 73,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 75,
            "complexity": 5,
            "classname": "DocxXMLEditor",
            "name": "_get_next_change_id",
            "col_offset": 4,
            "endline": 87,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 89,
            "complexity": 2,
            "classname": "DocxXMLEditor",
            "name": "_ensure_w16du_namespace",
            "col_offset": 4,
            "endline": 95,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 98,
            "complexity": 2,
            "classname": "DocxXMLEditor",
            "name": "_ensure_w16cex_namespace",
            "col_offset": 4,
            "endline": 104,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 107,
            "complexity": 2,
            "classname": "DocxXMLEditor",
            "name": "_ensure_w14_namespace",
            "col_offset": 4,
            "endline": 113,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 116,
            "complexity": 16,
            "classname": "DocxXMLEditor",
            "name": "_inject_attributes_to_nodes",
            "col_offset": 4,
            "endline": 238,
            "closures": [
              {
                "type": "function",
                "rank": "A",
                "lineno": 134,
                "complexity": 4,
                "name": "is_inside_deletion",
                "col_offset": 8,
                "endline": 141,
                "closures": []
              },
              {
                "type": "function",
                "rank": "B",
                "lineno": 143,
                "complexity": 6,
                "name": "add_rsid_to_p",
                "col_offset": 8,
                "endline": 156,
                "closures": []
              },
              {
                "type": "function",
                "rank": "A",
                "lineno": 158,
                "complexity": 4,
                "name": "add_rsid_to_r",
                "col_offset": 8,
                "endline": 165,
                "closures": []
              },
              {
                "type": "function",
                "rank": "B",
                "lineno": 167,
                "complexity": 6,
                "name": "add_tracked_change_attrs",
                "col_offset": 8,
                "endline": 180,
                "closures": []
              },
              {
                "type": "function",
                "rank": "A",
                "lineno": 182,
                "complexity": 4,
                "name": "add_comment_attrs",
                "col_offset": 8,
                "endline": 188,
                "closures": []
              },
              {
                "type": "function",
                "rank": "A",
                "lineno": 190,
                "complexity": 2,
                "name": "add_comment_extensible_date",
                "col_offset": 8,
                "endline": 194,
                "closures": []
              },
              {
                "type": "function",
                "rank": "B",
                "lineno": 196,
                "complexity": 7,
                "name": "add_xml_space_to_t",
                "col_offset": 8,
                "endline": 205,
                "closures": []
              }
            ]
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 240,
            "complexity": 1,
            "classname": "DocxXMLEditor",
            "name": "replace_node",
            "col_offset": 4,
            "endline": 244,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 246,
            "complexity": 1,
            "classname": "DocxXMLEditor",
            "name": "insert_after",
            "col_offset": 4,
            "endline": 250,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 252,
            "complexity": 1,
            "classname": "DocxXMLEditor",
            "name": "insert_before",
            "col_offset": 4,
            "endline": 256,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 258,
            "complexity": 1,
            "classname": "DocxXMLEditor",
            "name": "append_to",
            "col_offset": 4,
            "endline": 262,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 264,
            "complexity": 12,
            "classname": "DocxXMLEditor",
            "name": "revert_insertion",
            "col_offset": 4,
            "endline": 340,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 342,
            "complexity": 15,
            "classname": "DocxXMLEditor",
            "name": "revert_deletion",
            "col_offset": 4,
            "endline": 431,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 434,
            "complexity": 8,
            "classname": "DocxXMLEditor",
            "name": "suggest_paragraph",
            "col_offset": 4,
            "endline": 480,
            "closures": []
          },
          {
            "type": "method",
            "rank": "D",
            "lineno": 482,
            "complexity": 24,
            "classname": "DocxXMLEditor",
            "name": "suggest_deletion",
            "col_offset": 4,
            "endline": 593,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 904,
        "complexity": 7,
        "classname": "Document",
        "name": "_load_existing_comments",
        "col_offset": 4,
        "endline": 929,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 75,
        "complexity": 5,
        "classname": "DocxXMLEditor",
        "name": "_get_next_change_id",
        "col_offset": 4,
        "endline": 87,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 859,
        "complexity": 5,
        "classname": "Document",
        "name": "save",
        "col_offset": 4,
        "endline": 884,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 888,
        "complexity": 5,
        "classname": "Document",
        "name": "_get_next_comment_id",
        "col_offset": 4,
        "endline": 902,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 612,
        "complexity": 4,
        "name": "Document",
        "col_offset": 0,
        "endline": 1276,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 615,
            "complexity": 4,
            "classname": "Document",
            "name": "__init__",
            "col_offset": 4,
            "endline": 678,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 680,
            "complexity": 3,
            "classname": "Document",
            "name": "__getitem__",
            "col_offset": 4,
            "endline": 711,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 713,
            "complexity": 2,
            "classname": "Document",
            "name": "add_comment",
            "col_offset": 4,
            "endline": 763,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 765,
            "complexity": 2,
            "classname": "Document",
            "name": "reply_to_comment",
            "col_offset": 4,
            "endline": 831,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 833,
            "complexity": 3,
            "classname": "Document",
            "name": "__del__",
            "col_offset": 4,
            "endline": 836,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 838,
            "complexity": 3,
            "classname": "Document",
            "name": "validate",
            "col_offset": 4,
            "endline": 857,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 859,
            "complexity": 5,
            "classname": "Document",
            "name": "save",
            "col_offset": 4,
            "endline": 884,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 888,
            "complexity": 5,
            "classname": "Document",
            "name": "_get_next_comment_id",
            "col_offset": 4,
            "endline": 902,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 904,
            "complexity": 7,
            "classname": "Document",
            "name": "_load_existing_comments",
            "col_offset": 4,
            "endline": 929,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 933,
            "complexity": 1,
            "classname": "Document",
            "name": "_setup_tracking",
            "col_offset": 4,
            "endline": 951,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 954,
            "complexity": 2,
            "classname": "Document",
            "name": "_update_people_xml",
            "col_offset": 4,
            "endline": 958,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 960,
            "complexity": 2,
            "classname": "Document",
            "name": "_add_content_type_for_people",
            "col_offset": 4,
            "endline": 970,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 972,
            "complexity": 3,
            "classname": "Document",
            "name": "_add_relationship_for_people",
            "col_offset": 4,
            "endline": 986,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 988,
            "complexity": 16,
            "classname": "Document",
            "name": "_update_settings",
            "col_offset": 4,
            "endline": 1064,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 1068,
            "complexity": 2,
            "classname": "Document",
            "name": "_add_to_comments_xml",
            "col_offset": 4,
            "endline": 1089,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 1091,
            "complexity": 3,
            "classname": "Document",
            "name": "_add_to_comments_extended_xml",
            "col_offset": 4,
            "endline": 1105,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 1107,
            "complexity": 2,
            "classname": "Document",
            "name": "_add_to_comments_ids_xml",
            "col_offset": 4,
            "endline": 1116,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 1118,
            "complexity": 2,
            "classname": "Document",
            "name": "_add_to_comments_extensible_xml",
            "col_offset": 4,
            "endline": 1129,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 1133,
            "complexity": 1,
            "classname": "Document",
            "name": "_comment_range_start_xml",
            "col_offset": 4,
            "endline": 1135,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 1137,
            "complexity": 1,
            "classname": "Document",
            "name": "_comment_range_end_xml",
            "col_offset": 4,
            "endline": 1145,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 1148,
            "complexity": 1,
            "classname": "Document",
            "name": "_comment_ref_run_xml",
            "col_offset": 4,
            "endline": 1155,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 1160,
            "complexity": 3,
            "classname": "Document",
            "name": "_has_relationship",
            "col_offset": 4,
            "endline": 1165,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 1167,
            "complexity": 3,
            "classname": "Document",
            "name": "_has_override",
            "col_offset": 4,
            "endline": 1172,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 1174,
            "complexity": 3,
            "classname": "Document",
            "name": "_has_author",
            "col_offset": 4,
            "endline": 1179,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 1181,
            "complexity": 3,
            "classname": "Document",
            "name": "_add_author_to_people",
            "col_offset": 4,
            "endline": 1201,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 1203,
            "complexity": 4,
            "classname": "Document",
            "name": "_ensure_comment_relationships",
            "col_offset": 4,
            "endline": 1241,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 1243,
            "complexity": 3,
            "classname": "Document",
            "name": "_ensure_comment_content_types",
            "col_offset": 4,
            "endline": 1276,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 615,
        "complexity": 4,
        "classname": "Document",
        "name": "__init__",
        "col_offset": 4,
        "endline": 678,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 1203,
        "complexity": 4,
        "classname": "Document",
        "name": "_ensure_comment_relationships",
        "col_offset": 4,
        "endline": 1241,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 680,
        "complexity": 3,
        "classname": "Document",
        "name": "__getitem__",
        "col_offset": 4,
        "endline": 711,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 833,
        "complexity": 3,
        "classname": "Document",
        "name": "__del__",
        "col_offset": 4,
        "endline": 836,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 838,
        "complexity": 3,
        "classname": "Document",
        "name": "validate",
        "col_offset": 4,
        "endline": 857,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 972,
        "complexity": 3,
        "classname": "Document",
        "name": "_add_relationship_for_people",
        "col_offset": 4,
        "endline": 986,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 1091,
        "complexity": 3,
        "classname": "Document",
        "name": "_add_to_comments_extended_xml",
        "col_offset": 4,
        "endline": 1105,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 1160,
        "complexity": 3,
        "classname": "Document",
        "name": "_has_relationship",
        "col_offset": 4,
        "endline": 1165,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 1167,
        "complexity": 3,
        "classname": "Document",
        "name": "_has_override",
        "col_offset": 4,
        "endline": 1172,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 1174,
        "complexity": 3,
        "classname": "Document",
        "name": "_has_author",
        "col_offset": 4,
        "endline": 1179,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 1181,
        "complexity": 3,
        "classname": "Document",
        "name": "_add_author_to_people",
        "col_offset": 4,
        "endline": 1201,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 1243,
        "complexity": 3,
        "classname": "Document",
        "name": "_ensure_comment_content_types",
        "col_offset": 4,
        "endline": 1276,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 89,
        "complexity": 2,
        "classname": "DocxXMLEditor",
        "name": "_ensure_w16du_namespace",
        "col_offset": 4,
        "endline": 95,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 98,
        "complexity": 2,
        "classname": "DocxXMLEditor",
        "name": "_ensure_w16cex_namespace",
        "col_offset": 4,
        "endline": 104,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 107,
        "complexity": 2,
        "classname": "DocxXMLEditor",
        "name": "_ensure_w14_namespace",
        "col_offset": 4,
        "endline": 113,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 713,
        "complexity": 2,
        "classname": "Document",
        "name": "add_comment",
        "col_offset": 4,
        "endline": 763,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 765,
        "complexity": 2,
        "classname": "Document",
        "name": "reply_to_comment",
        "col_offset": 4,
        "endline": 831,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 954,
        "complexity": 2,
        "classname": "Document",
        "name": "_update_people_xml",
        "col_offset": 4,
        "endline": 958,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 960,
        "complexity": 2,
        "classname": "Document",
        "name": "_add_content_type_for_people",
        "col_offset": 4,
        "endline": 970,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 1068,
        "complexity": 2,
        "classname": "Document",
        "name": "_add_to_comments_xml",
        "col_offset": 4,
        "endline": 1089,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 1107,
        "complexity": 2,
        "classname": "Document",
        "name": "_add_to_comments_ids_xml",
        "col_offset": 4,
        "endline": 1116,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 1118,
        "complexity": 2,
        "classname": "Document",
        "name": "_add_to_comments_extensible_xml",
        "col_offset": 4,
        "endline": 1129,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 596,
        "complexity": 1,
        "name": "_generate_hex_id",
        "col_offset": 0,
        "endline": 604,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 607,
        "complexity": 1,
        "name": "_generate_rsid",
        "col_offset": 0,
        "endline": 609,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 59,
        "complexity": 1,
        "classname": "DocxXMLEditor",
        "name": "__init__",
        "col_offset": 4,
        "endline": 73,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 240,
        "complexity": 1,
        "classname": "DocxXMLEditor",
        "name": "replace_node",
        "col_offset": 4,
        "endline": 244,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 246,
        "complexity": 1,
        "classname": "DocxXMLEditor",
        "name": "insert_after",
        "col_offset": 4,
        "endline": 250,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 252,
        "complexity": 1,
        "classname": "DocxXMLEditor",
        "name": "insert_before",
        "col_offset": 4,
        "endline": 256,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 258,
        "complexity": 1,
        "classname": "DocxXMLEditor",
        "name": "append_to",
        "col_offset": 4,
        "endline": 262,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 933,
        "complexity": 1,
        "classname": "Document",
        "name": "_setup_tracking",
        "col_offset": 4,
        "endline": 951,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 1133,
        "complexity": 1,
        "classname": "Document",
        "name": "_comment_range_start_xml",
        "col_offset": 4,
        "endline": 1135,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 1137,
        "complexity": 1,
        "classname": "Document",
        "name": "_comment_range_end_xml",
        "col_offset": 4,
        "endline": 1145,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 1148,
        "complexity": 1,
        "classname": "Document",
        "name": "_comment_ref_run_xml",
        "col_offset": 4,
        "endline": 1155,
        "closures": []
      }
    ],
    ".claude\\skills\\docx\\scripts\\utilities.py": [
      {
        "type": "method",
        "rank": "D",
        "lineno": 76,
        "complexity": 21,
        "classname": "XMLEditor",
        "name": "get_node",
        "col_offset": 4,
        "endline": 181,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 312,
        "complexity": 9,
        "classname": "XMLEditor",
        "name": "_parse_fragment",
        "col_offset": 4,
        "endline": 343,
        "closures": []
      },
      {
        "type": "class",
        "rank": "B",
        "lineno": 41,
        "complexity": 6,
        "name": "XMLEditor",
        "col_offset": 0,
        "endline": 343,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 55,
            "complexity": 3,
            "classname": "XMLEditor",
            "name": "__init__",
            "col_offset": 4,
            "endline": 74,
            "closures": []
          },
          {
            "type": "method",
            "rank": "D",
            "lineno": 76,
            "complexity": 21,
            "classname": "XMLEditor",
            "name": "get_node",
            "col_offset": 4,
            "endline": 181,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 183,
            "complexity": 5,
            "classname": "XMLEditor",
            "name": "_get_element_text",
            "col_offset": 4,
            "endline": 204,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 206,
            "complexity": 2,
            "classname": "XMLEditor",
            "name": "replace_node",
            "col_offset": 4,
            "endline": 225,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 227,
            "complexity": 3,
            "classname": "XMLEditor",
            "name": "insert_after",
            "col_offset": 4,
            "endline": 249,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 251,
            "complexity": 2,
            "classname": "XMLEditor",
            "name": "insert_before",
            "col_offset": 4,
            "endline": 269,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 271,
            "complexity": 2,
            "classname": "XMLEditor",
            "name": "append_to",
            "col_offset": 4,
            "endline": 288,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 290,
            "complexity": 4,
            "classname": "XMLEditor",
            "name": "get_next_rid",
            "col_offset": 4,
            "endline": 300,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 302,
            "complexity": 1,
            "classname": "XMLEditor",
            "name": "save",
            "col_offset": 4,
            "endline": 310,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 312,
            "complexity": 9,
            "classname": "XMLEditor",
            "name": "_parse_fragment",
            "col_offset": 4,
            "endline": 343,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 183,
        "complexity": 5,
        "classname": "XMLEditor",
        "name": "_get_element_text",
        "col_offset": 4,
        "endline": 204,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 290,
        "complexity": 4,
        "classname": "XMLEditor",
        "name": "get_next_rid",
        "col_offset": 4,
        "endline": 300,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 55,
        "complexity": 3,
        "classname": "XMLEditor",
        "name": "__init__",
        "col_offset": 4,
        "endline": 74,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 227,
        "complexity": 3,
        "classname": "XMLEditor",
        "name": "insert_after",
        "col_offset": 4,
        "endline": 249,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 206,
        "complexity": 2,
        "classname": "XMLEditor",
        "name": "replace_node",
        "col_offset": 4,
        "endline": 225,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 251,
        "complexity": 2,
        "classname": "XMLEditor",
        "name": "insert_before",
        "col_offset": 4,
        "endline": 269,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 271,
        "complexity": 2,
        "classname": "XMLEditor",
        "name": "append_to",
        "col_offset": 4,
        "endline": 288,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 346,
        "complexity": 1,
        "name": "_create_line_tracking_parser",
        "col_offset": 0,
        "endline": 374,
        "closures": [
          {
            "type": "function",
            "rank": "A",
            "lineno": 358,
            "complexity": 1,
            "name": "set_content_handler",
            "col_offset": 4,
            "endline": 369,
            "closures": [
              {
                "type": "function",
                "rank": "A",
                "lineno": 359,
                "complexity": 1,
                "name": "startElementNS",
                "col_offset": 8,
                "endline": 364,
                "closures": []
              }
            ]
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 302,
        "complexity": 1,
        "classname": "XMLEditor",
        "name": "save",
        "col_offset": 4,
        "endline": 310,
        "closures": []
      }
    ],
    ".claude\\skills\\pdf-anthropic\\scripts\\check_bounding_boxes.py": [
      {
        "type": "function",
        "rank": "C",
        "lineno": 18,
        "complexity": 13,
        "name": "get_bounding_box_messages",
        "col_offset": 0,
        "endline": 60,
        "closures": [
          {
            "type": "function",
            "rank": "A",
            "lineno": 23,
            "complexity": 4,
            "name": "rects_intersect",
            "col_offset": 4,
            "endline": 26,
            "closures": []
          }
        ]
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 11,
        "complexity": 1,
        "name": "RectAndField",
        "col_offset": 0,
        "endline": 14,
        "methods": []
      }
    ],
    ".claude\\skills\\pdf-anthropic\\scripts\\check_bounding_boxes_test.py": [
      {
        "type": "method",
        "rank": "A",
        "lineno": 183,
        "complexity": 5,
        "classname": "TestGetBoundingBoxMessages",
        "name": "test_multiple_errors_limit",
        "col_offset": 4,
        "endline": 204,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 8,
        "complexity": 4,
        "name": "TestGetBoundingBoxMessages",
        "col_offset": 0,
        "endline": 222,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 10,
            "complexity": 1,
            "classname": "TestGetBoundingBoxMessages",
            "name": "create_json_stream",
            "col_offset": 4,
            "endline": 12,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 14,
            "complexity": 3,
            "classname": "TestGetBoundingBoxMessages",
            "name": "test_no_intersections",
            "col_offset": 4,
            "endline": 36,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 38,
            "complexity": 4,
            "classname": "TestGetBoundingBoxMessages",
            "name": "test_label_entry_intersection_same_field",
            "col_offset": 4,
            "endline": 54,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 56,
            "complexity": 4,
            "classname": "TestGetBoundingBoxMessages",
            "name": "test_intersection_between_different_fields",
            "col_offset": 4,
            "endline": 78,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 80,
            "complexity": 3,
            "classname": "TestGetBoundingBoxMessages",
            "name": "test_different_pages_no_intersection",
            "col_offset": 4,
            "endline": 102,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 104,
            "complexity": 4,
            "classname": "TestGetBoundingBoxMessages",
            "name": "test_entry_height_too_small",
            "col_offset": 4,
            "endline": 123,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 125,
            "complexity": 3,
            "classname": "TestGetBoundingBoxMessages",
            "name": "test_entry_height_adequate",
            "col_offset": 4,
            "endline": 144,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 146,
            "complexity": 4,
            "classname": "TestGetBoundingBoxMessages",
            "name": "test_default_font_size",
            "col_offset": 4,
            "endline": 163,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 165,
            "complexity": 3,
            "classname": "TestGetBoundingBoxMessages",
            "name": "test_no_entry_text",
            "col_offset": 4,
            "endline": 181,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 183,
            "complexity": 5,
            "classname": "TestGetBoundingBoxMessages",
            "name": "test_multiple_errors_limit",
            "col_offset": 4,
            "endline": 204,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 206,
            "complexity": 3,
            "classname": "TestGetBoundingBoxMessages",
            "name": "test_edge_touching_boxes",
            "col_offset": 4,
            "endline": 222,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 38,
        "complexity": 4,
        "classname": "TestGetBoundingBoxMessages",
        "name": "test_label_entry_intersection_same_field",
        "col_offset": 4,
        "endline": 54,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 56,
        "complexity": 4,
        "classname": "TestGetBoundingBoxMessages",
        "name": "test_intersection_between_different_fields",
        "col_offset": 4,
        "endline": 78,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 104,
        "complexity": 4,
        "classname": "TestGetBoundingBoxMessages",
        "name": "test_entry_height_too_small",
        "col_offset": 4,
        "endline": 123,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 146,
        "complexity": 4,
        "classname": "TestGetBoundingBoxMessages",
        "name": "test_default_font_size",
        "col_offset": 4,
        "endline": 163,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 14,
        "complexity": 3,
        "classname": "TestGetBoundingBoxMessages",
        "name": "test_no_intersections",
        "col_offset": 4,
        "endline": 36,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 80,
        "complexity": 3,
        "classname": "TestGetBoundingBoxMessages",
        "name": "test_different_pages_no_intersection",
        "col_offset": 4,
        "endline": 102,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 125,
        "complexity": 3,
        "classname": "TestGetBoundingBoxMessages",
        "name": "test_entry_height_adequate",
        "col_offset": 4,
        "endline": 144,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 165,
        "complexity": 3,
        "classname": "TestGetBoundingBoxMessages",
        "name": "test_no_entry_text",
        "col_offset": 4,
        "endline": 181,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 206,
        "complexity": 3,
        "classname": "TestGetBoundingBoxMessages",
        "name": "test_edge_touching_boxes",
        "col_offset": 4,
        "endline": 222,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 10,
        "complexity": 1,
        "classname": "TestGetBoundingBoxMessages",
        "name": "create_json_stream",
        "col_offset": 4,
        "endline": 12,
        "closures": []
      }
    ],
    ".claude\\skills\\pdf-anthropic\\scripts\\convert_pdf_to_images.py": [
      {
        "type": "function",
        "rank": "A",
        "lineno": 10,
        "complexity": 4,
        "name": "convert",
        "col_offset": 0,
        "endline": 26,
        "closures": []
      }
    ],
    ".claude\\skills\\pdf-anthropic\\scripts\\create_validation_image.py": [
      {
        "type": "function",
        "rank": "A",
        "lineno": 11,
        "complexity": 3,
        "name": "create_validation_image",
        "col_offset": 0,
        "endline": 30,
        "closures": []
      }
    ],
    ".claude\\skills\\pdf-anthropic\\scripts\\extract_form_field_info.py": [
      {
        "type": "function",
        "rank": "C",
        "lineno": 62,
        "complexity": 15,
        "name": "get_field_info",
        "col_offset": 0,
        "endline": 137,
        "closures": [
          {
            "type": "function",
            "rank": "A",
            "lineno": 126,
            "complexity": 4,
            "name": "sort_key",
            "col_offset": 4,
            "endline": 132,
            "closures": []
          }
        ]
      },
      {
        "type": "function",
        "rank": "B",
        "lineno": 22,
        "complexity": 8,
        "name": "make_field_dict",
        "col_offset": 0,
        "endline": 50,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 12,
        "complexity": 4,
        "name": "get_full_annotation_field_id",
        "col_offset": 0,
        "endline": 19,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 140,
        "complexity": 1,
        "name": "write_field_info",
        "col_offset": 0,
        "endline": 145,
        "closures": []
      }
    ],
    ".claude\\skills\\pdf-anthropic\\scripts\\fill_fillable_fields.py": [
      {
        "type": "function",
        "rank": "C",
        "lineno": 12,
        "complexity": 12,
        "name": "fill_pdf_fields",
        "col_offset": 0,
        "endline": 56,
        "closures": []
      },
      {
        "type": "function",
        "rank": "B",
        "lineno": 59,
        "complexity": 10,
        "name": "validation_error_for_field_value",
        "col_offset": 0,
        "endline": 75,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 90,
        "complexity": 1,
        "name": "monkeypatch_pydpf_method",
        "col_offset": 0,
        "endline": 103,
        "closures": [
          {
            "type": "function",
            "rank": "B",
            "lineno": 96,
            "complexity": 7,
            "name": "patched_get_inherited",
            "col_offset": 4,
            "endline": 101,
            "closures": []
          }
        ]
      }
    ],
    ".claude\\skills\\pdf-anthropic\\scripts\\fill_pdf_form_with_annotations.py": [
      {
        "type": "function",
        "rank": "B",
        "lineno": 28,
        "complexity": 8,
        "name": "fill_pdf_form",
        "col_offset": 0,
        "endline": 97,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 11,
        "complexity": 1,
        "name": "transform_coordinates",
        "col_offset": 0,
        "endline": 25,
        "closures": []
      }
    ],
    ".claude\\skills\\skill-creator\\scripts\\init_skill.py": [
      {
        "type": "function",
        "rank": "A",
        "lineno": 194,
        "complexity": 5,
        "name": "init_skill",
        "col_offset": 0,
        "endline": 270,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 273,
        "complexity": 4,
        "name": "main",
        "col_offset": 0,
        "endline": 299,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 189,
        "complexity": 2,
        "name": "title_case_skill_name",
        "col_offset": 0,
        "endline": 191,
        "closures": []
      }
    ],
    ".claude\\skills\\skill-creator\\scripts\\package_skill.py": [
      {
        "type": "function",
        "rank": "B",
        "lineno": 19,
        "complexity": 9,
        "name": "package_skill",
        "col_offset": 0,
        "endline": 82,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 85,
        "complexity": 5,
        "name": "main",
        "col_offset": 0,
        "endline": 106,
        "closures": []
      }
    ],
    ".claude\\skills\\skill-creator\\scripts\\quick_validate.py": [
      {
        "type": "function",
        "rank": "C",
        "lineno": 11,
        "complexity": 14,
        "name": "validate_skill",
        "col_offset": 0,
        "endline": 56,
        "closures": []
      }
    ],
    ".claude\\skills\\slack-gif-creator\\core\\color_palettes.py": [
      {
        "type": "function",
        "rank": "A",
        "lineno": 222,
        "complexity": 3,
        "name": "create_gradient_colors",
        "col_offset": 0,
        "endline": 240,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 121,
        "complexity": 2,
        "name": "get_text_color_for_background",
        "col_offset": 0,
        "endline": 138,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 141,
        "complexity": 2,
        "name": "get_complementary_color",
        "col_offset": 0,
        "endline": 160,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 108,
        "complexity": 1,
        "name": "get_palette",
        "col_offset": 0,
        "endline": 118,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 163,
        "complexity": 1,
        "name": "lighten_color",
        "col_offset": 0,
        "endline": 178,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 181,
        "complexity": 1,
        "name": "darken_color",
        "col_offset": 0,
        "endline": 196,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 199,
        "complexity": 1,
        "name": "blend_colors",
        "col_offset": 0,
        "endline": 219,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 256,
        "complexity": 1,
        "name": "get_impact_color",
        "col_offset": 0,
        "endline": 266,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 292,
        "complexity": 1,
        "name": "get_emoji_palette",
        "col_offset": 0,
        "endline": 302,
        "closures": []
      }
    ],
    ".claude\\skills\\slack-gif-creator\\core\\easing.py": [
      {
        "type": "function",
        "rank": "A",
        "lineno": 56,
        "complexity": 4,
        "name": "ease_out_bounce",
        "col_offset": 0,
        "endline": 68,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 92,
        "complexity": 4,
        "name": "ease_in_out_elastic",
        "col_offset": 0,
        "endline": 99,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 163,
        "complexity": 4,
        "name": "apply_squash_stretch",
        "col_offset": 0,
        "endline": 191,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 78,
        "complexity": 3,
        "name": "ease_in_elastic",
        "col_offset": 0,
        "endline": 82,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 85,
        "complexity": 3,
        "name": "ease_out_elastic",
        "col_offset": 0,
        "endline": 89,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 27,
        "complexity": 2,
        "name": "ease_in_out_quad",
        "col_offset": 0,
        "endline": 31,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 44,
        "complexity": 2,
        "name": "ease_in_out_cubic",
        "col_offset": 0,
        "endline": 48,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 71,
        "complexity": 2,
        "name": "ease_in_out_bounce",
        "col_offset": 0,
        "endline": 75,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 154,
        "complexity": 2,
        "name": "ease_back_in_out",
        "col_offset": 0,
        "endline": 160,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 12,
        "complexity": 1,
        "name": "linear",
        "col_offset": 0,
        "endline": 14,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 17,
        "complexity": 1,
        "name": "ease_in_quad",
        "col_offset": 0,
        "endline": 19,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 22,
        "complexity": 1,
        "name": "ease_out_quad",
        "col_offset": 0,
        "endline": 24,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 34,
        "complexity": 1,
        "name": "ease_in_cubic",
        "col_offset": 0,
        "endline": 36,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 39,
        "complexity": 1,
        "name": "ease_out_cubic",
        "col_offset": 0,
        "endline": 41,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 51,
        "complexity": 1,
        "name": "ease_in_bounce",
        "col_offset": 0,
        "endline": 53,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 117,
        "complexity": 1,
        "name": "get_easing",
        "col_offset": 0,
        "endline": 119,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 122,
        "complexity": 1,
        "name": "interpolate",
        "col_offset": 0,
        "endline": 137,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 140,
        "complexity": 1,
        "name": "ease_back_in",
        "col_offset": 0,
        "endline": 144,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 147,
        "complexity": 1,
        "name": "ease_back_out",
        "col_offset": 0,
        "endline": 151,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 194,
        "complexity": 1,
        "name": "calculate_arc_motion",
        "col_offset": 0,
        "endline": 220,
        "closures": []
      }
    ],
    ".claude\\skills\\slack-gif-creator\\core\\frame_composer.py": [
      {
        "type": "function",
        "rank": "B",
        "lineno": 270,
        "complexity": 8,
        "name": "draw_emoji_enhanced",
        "col_offset": 0,
        "endline": 320,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 97,
        "complexity": 3,
        "name": "draw_text",
        "col_offset": 0,
        "endline": 131,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 392,
        "complexity": 3,
        "name": "add_vignette",
        "col_offset": 0,
        "endline": 432,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 435,
        "complexity": 3,
        "name": "draw_star",
        "col_offset": 0,
        "endline": 469,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 134,
        "complexity": 2,
        "name": "draw_emoji",
        "col_offset": 0,
        "endline": 157,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 160,
        "complexity": 2,
        "name": "composite_layers",
        "col_offset": 0,
        "endline": 187,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 235,
        "complexity": 2,
        "name": "create_gradient_background",
        "col_offset": 0,
        "endline": 267,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 14,
        "complexity": 1,
        "name": "create_blank_frame",
        "col_offset": 0,
        "endline": 26,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 29,
        "complexity": 1,
        "name": "draw_circle",
        "col_offset": 0,
        "endline": 51,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 54,
        "complexity": 1,
        "name": "draw_rectangle",
        "col_offset": 0,
        "endline": 74,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 77,
        "complexity": 1,
        "name": "draw_line",
        "col_offset": 0,
        "endline": 94,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 190,
        "complexity": 1,
        "name": "draw_stick_figure",
        "col_offset": 0,
        "endline": 232,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 323,
        "complexity": 1,
        "name": "draw_circle_with_shadow",
        "col_offset": 0,
        "endline": 358,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 361,
        "complexity": 1,
        "name": "draw_rounded_rectangle",
        "col_offset": 0,
        "endline": 389,
        "closures": []
      }
    ],
    ".claude\\skills\\slack-gif-creator\\core\\typography.py": [
      {
        "type": "function",
        "rank": "B",
        "lineno": 164,
        "complexity": 7,
        "name": "draw_text_with_glow",
        "col_offset": 0,
        "endline": 215,
        "closures": []
      },
      {
        "type": "function",
        "rank": "B",
        "lineno": 25,
        "complexity": 6,
        "name": "get_font",
        "col_offset": 0,
        "endline": 55,
        "closures": []
      },
      {
        "type": "function",
        "rank": "B",
        "lineno": 58,
        "complexity": 6,
        "name": "draw_text_with_outline",
        "col_offset": 0,
        "endline": 111,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 316,
        "complexity": 4,
        "name": "get_optimal_font_size",
        "col_offset": 0,
        "endline": 336,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 114,
        "complexity": 2,
        "name": "draw_text_with_shadow",
        "col_offset": 0,
        "endline": 161,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 218,
        "complexity": 2,
        "name": "draw_text_in_box",
        "col_offset": 0,
        "endline": 291,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 294,
        "complexity": 1,
        "name": "get_text_size",
        "col_offset": 0,
        "endline": 313,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 339,
        "complexity": 1,
        "name": "scale_font_for_frame",
        "col_offset": 0,
        "endline": 357,
        "closures": []
      }
    ],
    ".claude\\skills\\slack-gif-creator\\core\\validators.py": [
      {
        "type": "function",
        "rank": "C",
        "lineno": 59,
        "complexity": 11,
        "name": "validate_dimensions",
        "col_offset": 0,
        "endline": 119,
        "closures": []
      },
      {
        "type": "function",
        "rank": "C",
        "lineno": 122,
        "complexity": 11,
        "name": "validate_gif",
        "col_offset": 0,
        "endline": 197,
        "closures": []
      },
      {
        "type": "function",
        "rank": "B",
        "lineno": 200,
        "complexity": 6,
        "name": "get_optimization_suggestions",
        "col_offset": 0,
        "endline": 237,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 11,
        "complexity": 5,
        "name": "check_slack_size",
        "col_offset": 0,
        "endline": 56,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 241,
        "complexity": 5,
        "name": "is_slack_ready",
        "col_offset": 0,
        "endline": 264,
        "closures": []
      }
    ],
    ".claude\\skills\\slack-gif-creator\\core\\visual_effects.py": [
      {
        "type": "method",
        "rank": "B",
        "lineno": 67,
        "complexity": 6,
        "classname": "Particle",
        "name": "render",
        "col_offset": 4,
        "endline": 103,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 194,
        "complexity": 4,
        "classname": "ParticleSystem",
        "name": "update",
        "col_offset": 4,
        "endline": 201,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 16,
        "complexity": 3,
        "name": "Particle",
        "col_offset": 0,
        "endline": 103,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 19,
            "complexity": 1,
            "classname": "Particle",
            "name": "__init__",
            "col_offset": 4,
            "endline": 43,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 45,
            "complexity": 1,
            "classname": "Particle",
            "name": "update",
            "col_offset": 4,
            "endline": 57,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 59,
            "complexity": 1,
            "classname": "Particle",
            "name": "is_alive",
            "col_offset": 4,
            "endline": 61,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 63,
            "complexity": 1,
            "classname": "Particle",
            "name": "get_alpha",
            "col_offset": 4,
            "endline": 65,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 67,
            "complexity": 6,
            "classname": "Particle",
            "name": "render",
            "col_offset": 4,
            "endline": 103,
            "closures": []
          }
        ]
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 106,
        "complexity": 3,
        "name": "ParticleSystem",
        "col_offset": 0,
        "endline": 210,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 109,
            "complexity": 1,
            "classname": "ParticleSystem",
            "name": "__init__",
            "col_offset": 4,
            "endline": 111,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 113,
            "complexity": 2,
            "classname": "ParticleSystem",
            "name": "emit",
            "col_offset": 4,
            "endline": 141,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 143,
            "complexity": 3,
            "classname": "ParticleSystem",
            "name": "emit_confetti",
            "col_offset": 4,
            "endline": 169,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 171,
            "complexity": 2,
            "classname": "ParticleSystem",
            "name": "emit_sparkles",
            "col_offset": 4,
            "endline": 192,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 194,
            "complexity": 4,
            "classname": "ParticleSystem",
            "name": "update",
            "col_offset": 4,
            "endline": 201,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 203,
            "complexity": 2,
            "classname": "ParticleSystem",
            "name": "render",
            "col_offset": 4,
            "endline": 206,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 208,
            "complexity": 1,
            "classname": "ParticleSystem",
            "name": "get_particle_count",
            "col_offset": 4,
            "endline": 210,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 143,
        "complexity": 3,
        "classname": "ParticleSystem",
        "name": "emit_confetti",
        "col_offset": 4,
        "endline": 169,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 213,
        "complexity": 2,
        "name": "add_motion_blur",
        "col_offset": 0,
        "endline": 236,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 239,
        "complexity": 2,
        "name": "create_impact_flash",
        "col_offset": 0,
        "endline": 272,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 275,
        "complexity": 2,
        "name": "create_shockwave_rings",
        "col_offset": 0,
        "endline": 298,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 410,
        "complexity": 2,
        "name": "create_speed_lines",
        "col_offset": 0,
        "endline": 452,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 113,
        "complexity": 2,
        "classname": "ParticleSystem",
        "name": "emit",
        "col_offset": 4,
        "endline": 141,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 171,
        "complexity": 2,
        "classname": "ParticleSystem",
        "name": "emit_sparkles",
        "col_offset": 4,
        "endline": 192,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 203,
        "complexity": 2,
        "classname": "ParticleSystem",
        "name": "render",
        "col_offset": 4,
        "endline": 206,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 301,
        "complexity": 1,
        "name": "create_explosion_effect",
        "col_offset": 0,
        "endline": 337,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 340,
        "complexity": 1,
        "name": "add_glow_effect",
        "col_offset": 0,
        "endline": 370,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 373,
        "complexity": 1,
        "name": "add_drop_shadow",
        "col_offset": 0,
        "endline": 407,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 455,
        "complexity": 1,
        "name": "create_screen_shake_offset",
        "col_offset": 0,
        "endline": 471,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 474,
        "complexity": 1,
        "name": "apply_screen_shake",
        "col_offset": 0,
        "endline": 494,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 19,
        "complexity": 1,
        "classname": "Particle",
        "name": "__init__",
        "col_offset": 4,
        "endline": 43,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 45,
        "complexity": 1,
        "classname": "Particle",
        "name": "update",
        "col_offset": 4,
        "endline": 57,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 59,
        "complexity": 1,
        "classname": "Particle",
        "name": "is_alive",
        "col_offset": 4,
        "endline": 61,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 63,
        "complexity": 1,
        "classname": "Particle",
        "name": "get_alpha",
        "col_offset": 4,
        "endline": 65,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 109,
        "complexity": 1,
        "classname": "ParticleSystem",
        "name": "__init__",
        "col_offset": 4,
        "endline": 111,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 208,
        "complexity": 1,
        "classname": "ParticleSystem",
        "name": "get_particle_count",
        "col_offset": 4,
        "endline": 210,
        "closures": []
      }
    ],
    ".claude\\skills\\slack-gif-creator\\templates\\bounce.py": [
      {
        "type": "function",
        "rank": "B",
        "lineno": 19,
        "complexity": 8,
        "name": "create_bounce_animation",
        "col_offset": 0,
        "endline": 84,
        "closures": []
      }
    ],
    ".claude\\skills\\slack-gif-creator\\templates\\explode.py": [
      {
        "type": "function",
        "rank": "D",
        "lineno": 23,
        "complexity": 30,
        "name": "create_explode_animation",
        "col_offset": 0,
        "endline": 237,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 240,
        "complexity": 4,
        "name": "create_particle_burst",
        "col_offset": 0,
        "endline": 293,
        "closures": []
      }
    ],
    ".claude\\skills\\slack-gif-creator\\templates\\fade.py": [
      {
        "type": "function",
        "rank": "C",
        "lineno": 20,
        "complexity": 16,
        "name": "create_fade_animation",
        "col_offset": 0,
        "endline": 146,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 175,
        "complexity": 4,
        "name": "create_crossfade",
        "col_offset": 0,
        "endline": 248,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 251,
        "complexity": 3,
        "name": "create_fade_to_color",
        "col_offset": 0,
        "endline": 287,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 149,
        "complexity": 2,
        "name": "apply_opacity",
        "col_offset": 0,
        "endline": 172,
        "closures": []
      }
    ],
    ".claude\\skills\\slack-gif-creator\\templates\\flip.py": [
      {
        "type": "function",
        "rank": "C",
        "lineno": 20,
        "complexity": 15,
        "name": "create_flip_animation",
        "col_offset": 0,
        "endline": 192,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 195,
        "complexity": 1,
        "name": "create_quick_flip",
        "col_offset": 0,
        "endline": 223,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 227,
        "complexity": 1,
        "name": "create_nope_flip",
        "col_offset": 0,
        "endline": 252,
        "closures": []
      }
    ],
    ".claude\\skills\\slack-gif-creator\\templates\\kaleidoscope.py": [
      {
        "type": "function",
        "rank": "B",
        "lineno": 18,
        "complexity": 7,
        "name": "apply_kaleidoscope",
        "col_offset": 0,
        "endline": 83,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 86,
        "complexity": 4,
        "name": "apply_simple_mirror",
        "col_offset": 0,
        "endline": 137,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 140,
        "complexity": 4,
        "name": "create_kaleidoscope_animation",
        "col_offset": 0,
        "endline": 192,
        "closures": []
      }
    ],
    ".claude\\skills\\slack-gif-creator\\templates\\morph.py": [
      {
        "type": "function",
        "rank": "C",
        "lineno": 20,
        "complexity": 15,
        "name": "create_morph_animation",
        "col_offset": 0,
        "endline": 197,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 232,
        "complexity": 3,
        "name": "create_shape_morph",
        "col_offset": 0,
        "endline": 282,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 200,
        "complexity": 1,
        "name": "create_reaction_morph",
        "col_offset": 0,
        "endline": 228,
        "closures": []
      }
    ],
    ".claude\\skills\\slack-gif-creator\\templates\\move.py": [
      {
        "type": "function",
        "rank": "C",
        "lineno": 19,
        "complexity": 15,
        "name": "create_move_animation",
        "col_offset": 0,
        "endline": 157,
        "closures": []
      },
      {
        "type": "function",
        "rank": "B",
        "lineno": 160,
        "complexity": 6,
        "name": "create_path_from_points",
        "col_offset": 0,
        "endline": 196,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 199,
        "complexity": 3,
        "name": "apply_trail_effect",
        "col_offset": 0,
        "endline": 237,
        "closures": []
      }
    ],
    ".claude\\skills\\slack-gif-creator\\templates\\pulse.py": [
      {
        "type": "function",
        "rank": "C",
        "lineno": 20,
        "complexity": 19,
        "name": "create_pulse_animation",
        "col_offset": 0,
        "endline": 153,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 188,
        "complexity": 2,
        "name": "create_breathing_animation",
        "col_offset": 0,
        "endline": 227,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 156,
        "complexity": 1,
        "name": "create_attention_pulse",
        "col_offset": 0,
        "endline": 184,
        "closures": []
      }
    ],
    ".claude\\skills\\slack-gif-creator\\templates\\shake.py": [
      {
        "type": "function",
        "rank": "C",
        "lineno": 19,
        "complexity": 11,
        "name": "create_shake_animation",
        "col_offset": 0,
        "endline": 109,
        "closures": []
      }
    ],
    ".claude\\skills\\slack-gif-creator\\templates\\slide.py": [
      {
        "type": "function",
        "rank": "D",
        "lineno": 19,
        "complexity": 25,
        "name": "create_slide_animation",
        "col_offset": 0,
        "endline": 137,
        "closures": []
      },
      {
        "type": "function",
        "rank": "C",
        "lineno": 140,
        "complexity": 11,
        "name": "create_multi_slide",
        "col_offset": 0,
        "endline": 231,
        "closures": []
      }
    ],
    ".claude\\skills\\slack-gif-creator\\templates\\spin.py": [
      {
        "type": "function",
        "rank": "C",
        "lineno": 20,
        "complexity": 13,
        "name": "create_spin_animation",
        "col_offset": 0,
        "endline": 146,
        "closures": []
      },
      {
        "type": "function",
        "rank": "B",
        "lineno": 149,
        "complexity": 7,
        "name": "create_loading_spinner",
        "col_offset": 0,
        "endline": 231,
        "closures": []
      }
    ],
    ".claude\\skills\\slack-gif-creator\\templates\\wiggle.py": [
      {
        "type": "function",
        "rank": "C",
        "lineno": 20,
        "complexity": 20,
        "name": "create_wiggle_animation",
        "col_offset": 0,
        "endline": 230,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 233,
        "complexity": 1,
        "name": "create_excited_wiggle",
        "col_offset": 0,
        "endline": 259,
        "closures": []
      }
    ],
    ".claude\\skills\\slack-gif-creator\\templates\\zoom.py": [
      {
        "type": "function",
        "rank": "C",
        "lineno": 20,
        "complexity": 16,
        "name": "create_zoom_animation",
        "col_offset": 0,
        "endline": 148,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 151,
        "complexity": 4,
        "name": "create_explosion_zoom",
        "col_offset": 0,
        "endline": 218,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 221,
        "complexity": 4,
        "name": "create_mind_blown_zoom",
        "col_offset": 0,
        "endline": 279,
        "closures": []
      }
    ],
    ".claude\\skills\\webapp-testing\\examples\\console_logging.py": [
      {
        "type": "function",
        "rank": "A",
        "lineno": 14,
        "complexity": 1,
        "name": "handle_console_message",
        "col_offset": 4,
        "endline": 16,
        "closures": []
      }
    ],
    ".claude\\skills\\webapp-testing\\scripts\\with_server.py": [
      {
        "type": "function",
        "rank": "B",
        "lineno": 35,
        "complexity": 10,
        "name": "main",
        "col_offset": 0,
        "endline": 102,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 23,
        "complexity": 3,
        "name": "is_server_ready",
        "col_offset": 0,
        "endline": 32,
        "closures": []
      }
    ],
    "agents\\example_agent.py": [
      {
        "type": "method",
        "rank": "D",
        "lineno": 129,
        "complexity": 21,
        "classname": "ExampleDataAgent",
        "name": "run",
        "col_offset": 4,
        "endline": 202,
        "closures": []
      },
      {
        "type": "class",
        "rank": "C",
        "lineno": 119,
        "complexity": 12,
        "name": "ExampleDataAgent",
        "col_offset": 0,
        "endline": 202,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 122,
            "complexity": 1,
            "classname": "ExampleDataAgent",
            "name": "__init__",
            "col_offset": 4,
            "endline": 126,
            "closures": []
          },
          {
            "type": "method",
            "rank": "D",
            "lineno": 129,
            "complexity": 21,
            "classname": "ExampleDataAgent",
            "name": "run",
            "col_offset": 4,
            "endline": 202,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 44,
        "complexity": 8,
        "classname": "ExampleTaskAgent",
        "name": "run",
        "col_offset": 4,
        "endline": 69,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 83,
        "complexity": 7,
        "classname": "ExampleConversationalAgent",
        "name": "run",
        "col_offset": 4,
        "endline": 115,
        "closures": []
      },
      {
        "type": "class",
        "rank": "B",
        "lineno": 34,
        "complexity": 6,
        "name": "ExampleTaskAgent",
        "col_offset": 0,
        "endline": 69,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 37,
            "complexity": 1,
            "classname": "ExampleTaskAgent",
            "name": "__init__",
            "col_offset": 4,
            "endline": 41,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 44,
            "complexity": 8,
            "classname": "ExampleTaskAgent",
            "name": "run",
            "col_offset": 4,
            "endline": 69,
            "closures": []
          }
        ]
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 73,
        "complexity": 5,
        "name": "ExampleConversationalAgent",
        "col_offset": 0,
        "endline": 115,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 76,
            "complexity": 1,
            "classname": "ExampleConversationalAgent",
            "name": "__init__",
            "col_offset": 4,
            "endline": 80,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 83,
            "complexity": 7,
            "classname": "ExampleConversationalAgent",
            "name": "run",
            "col_offset": 4,
            "endline": 115,
            "closures": []
          }
        ]
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 11,
        "complexity": 2,
        "name": "BaseAgent",
        "col_offset": 0,
        "endline": 15,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 13,
            "complexity": 1,
            "classname": "BaseAgent",
            "name": "__init__",
            "col_offset": 4,
            "endline": 15,
            "closures": []
          }
        ]
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 17,
        "complexity": 2,
        "name": "TaskAgent",
        "col_offset": 0,
        "endline": 21,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 19,
            "complexity": 1,
            "classname": "TaskAgent",
            "name": "__init__",
            "col_offset": 4,
            "endline": 21,
            "closures": []
          }
        ]
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 23,
        "complexity": 2,
        "name": "ConversationalAgent",
        "col_offset": 0,
        "endline": 26,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 25,
            "complexity": 1,
            "classname": "ConversationalAgent",
            "name": "__init__",
            "col_offset": 4,
            "endline": 26,
            "closures": []
          }
        ]
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 28,
        "complexity": 2,
        "name": "DataProcessingAgent",
        "col_offset": 0,
        "endline": 31,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 30,
            "complexity": 1,
            "classname": "DataProcessingAgent",
            "name": "__init__",
            "col_offset": 4,
            "endline": 31,
            "closures": []
          }
        ]
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 207,
        "complexity": 1,
        "name": "initialize",
        "col_offset": 0,
        "endline": 226,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 13,
        "complexity": 1,
        "classname": "BaseAgent",
        "name": "__init__",
        "col_offset": 4,
        "endline": 15,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 19,
        "complexity": 1,
        "classname": "TaskAgent",
        "name": "__init__",
        "col_offset": 4,
        "endline": 21,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 25,
        "complexity": 1,
        "classname": "ConversationalAgent",
        "name": "__init__",
        "col_offset": 4,
        "endline": 26,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 30,
        "complexity": 1,
        "classname": "DataProcessingAgent",
        "name": "__init__",
        "col_offset": 4,
        "endline": 31,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 37,
        "complexity": 1,
        "classname": "ExampleTaskAgent",
        "name": "__init__",
        "col_offset": 4,
        "endline": 41,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 76,
        "complexity": 1,
        "classname": "ExampleConversationalAgent",
        "name": "__init__",
        "col_offset": 4,
        "endline": 80,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 122,
        "complexity": 1,
        "classname": "ExampleDataAgent",
        "name": "__init__",
        "col_offset": 4,
        "endline": 126,
        "closures": []
      }
    ],
    "agents\\project_manager_agent.py": [
      {
        "type": "method",
        "rank": "B",
        "lineno": 72,
        "complexity": 9,
        "classname": "ProjectManagerAgent",
        "name": "chat",
        "col_offset": 4,
        "endline": 124,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 394,
        "complexity": 9,
        "classname": "ProjectManagerAgent",
        "name": "_get_project_type",
        "col_offset": 4,
        "endline": 414,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 126,
        "complexity": 8,
        "classname": "ProjectManagerAgent",
        "name": "_analyze_intent",
        "col_offset": 4,
        "endline": 155,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 338,
        "complexity": 8,
        "classname": "ProjectManagerAgent",
        "name": "_handle_general_chat",
        "col_offset": 4,
        "endline": 360,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 362,
        "complexity": 6,
        "classname": "ProjectManagerAgent",
        "name": "_create_project_summary",
        "col_offset": 4,
        "endline": 392,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 466,
        "complexity": 6,
        "classname": "ProjectManagerAgent",
        "name": "suggest_optimizations",
        "col_offset": 4,
        "endline": 512,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 17,
        "complexity": 5,
        "name": "ProjectManagerAgent",
        "col_offset": 0,
        "endline": 534,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 20,
            "complexity": 1,
            "classname": "ProjectManagerAgent",
            "name": "__init__",
            "col_offset": 4,
            "endline": 41,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 44,
            "complexity": 2,
            "classname": "ProjectManagerAgent",
            "name": "initialize",
            "col_offset": 4,
            "endline": 54,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 56,
            "complexity": 2,
            "classname": "ProjectManagerAgent",
            "name": "set_project_context",
            "col_offset": 4,
            "endline": 70,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 72,
            "complexity": 9,
            "classname": "ProjectManagerAgent",
            "name": "chat",
            "col_offset": 4,
            "endline": 124,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 126,
            "complexity": 8,
            "classname": "ProjectManagerAgent",
            "name": "_analyze_intent",
            "col_offset": 4,
            "endline": 155,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 158,
            "complexity": 4,
            "classname": "ProjectManagerAgent",
            "name": "_handle_project_analysis_request",
            "col_offset": 4,
            "endline": 183,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 185,
            "complexity": 3,
            "classname": "ProjectManagerAgent",
            "name": "_handle_optimization_request",
            "col_offset": 4,
            "endline": 209,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 211,
            "complexity": 4,
            "classname": "ProjectManagerAgent",
            "name": "_handle_testing_request",
            "col_offset": 4,
            "endline": 232,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 234,
            "complexity": 4,
            "classname": "ProjectManagerAgent",
            "name": "_handle_security_request",
            "col_offset": 4,
            "endline": 258,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 260,
            "complexity": 3,
            "classname": "ProjectManagerAgent",
            "name": "_handle_deployment_request",
            "col_offset": 4,
            "endline": 281,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 283,
            "complexity": 3,
            "classname": "ProjectManagerAgent",
            "name": "_handle_documentation_request",
            "col_offset": 4,
            "endline": 303,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 305,
            "complexity": 4,
            "classname": "ProjectManagerAgent",
            "name": "_handle_code_review_request",
            "col_offset": 4,
            "endline": 336,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 338,
            "complexity": 8,
            "classname": "ProjectManagerAgent",
            "name": "_handle_general_chat",
            "col_offset": 4,
            "endline": 360,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 362,
            "complexity": 6,
            "classname": "ProjectManagerAgent",
            "name": "_create_project_summary",
            "col_offset": 4,
            "endline": 392,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 394,
            "complexity": 9,
            "classname": "ProjectManagerAgent",
            "name": "_get_project_type",
            "col_offset": 4,
            "endline": 414,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 416,
            "complexity": 3,
            "classname": "ProjectManagerAgent",
            "name": "_get_main_framework",
            "col_offset": 4,
            "endline": 425,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 427,
            "complexity": 3,
            "classname": "ProjectManagerAgent",
            "name": "_get_main_language",
            "col_offset": 4,
            "endline": 436,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 438,
            "complexity": 5,
            "classname": "ProjectManagerAgent",
            "name": "_get_test_framework",
            "col_offset": 4,
            "endline": 456,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 458,
            "complexity": 2,
            "classname": "ProjectManagerAgent",
            "name": "_get_database_type",
            "col_offset": 4,
            "endline": 464,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 466,
            "complexity": 6,
            "classname": "ProjectManagerAgent",
            "name": "suggest_optimizations",
            "col_offset": 4,
            "endline": 512,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 514,
            "complexity": 1,
            "classname": "ProjectManagerAgent",
            "name": "get_status",
            "col_offset": 4,
            "endline": 523,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 526,
            "complexity": 2,
            "classname": "ProjectManagerAgent",
            "name": "cleanup",
            "col_offset": 4,
            "endline": 534,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 438,
        "complexity": 5,
        "classname": "ProjectManagerAgent",
        "name": "_get_test_framework",
        "col_offset": 4,
        "endline": 456,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 158,
        "complexity": 4,
        "classname": "ProjectManagerAgent",
        "name": "_handle_project_analysis_request",
        "col_offset": 4,
        "endline": 183,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 211,
        "complexity": 4,
        "classname": "ProjectManagerAgent",
        "name": "_handle_testing_request",
        "col_offset": 4,
        "endline": 232,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 234,
        "complexity": 4,
        "classname": "ProjectManagerAgent",
        "name": "_handle_security_request",
        "col_offset": 4,
        "endline": 258,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 305,
        "complexity": 4,
        "classname": "ProjectManagerAgent",
        "name": "_handle_code_review_request",
        "col_offset": 4,
        "endline": 336,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 185,
        "complexity": 3,
        "classname": "ProjectManagerAgent",
        "name": "_handle_optimization_request",
        "col_offset": 4,
        "endline": 209,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 260,
        "complexity": 3,
        "classname": "ProjectManagerAgent",
        "name": "_handle_deployment_request",
        "col_offset": 4,
        "endline": 281,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 283,
        "complexity": 3,
        "classname": "ProjectManagerAgent",
        "name": "_handle_documentation_request",
        "col_offset": 4,
        "endline": 303,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 416,
        "complexity": 3,
        "classname": "ProjectManagerAgent",
        "name": "_get_main_framework",
        "col_offset": 4,
        "endline": 425,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 427,
        "complexity": 3,
        "classname": "ProjectManagerAgent",
        "name": "_get_main_language",
        "col_offset": 4,
        "endline": 436,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 44,
        "complexity": 2,
        "classname": "ProjectManagerAgent",
        "name": "initialize",
        "col_offset": 4,
        "endline": 54,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 56,
        "complexity": 2,
        "classname": "ProjectManagerAgent",
        "name": "set_project_context",
        "col_offset": 4,
        "endline": 70,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 458,
        "complexity": 2,
        "classname": "ProjectManagerAgent",
        "name": "_get_database_type",
        "col_offset": 4,
        "endline": 464,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 526,
        "complexity": 2,
        "classname": "ProjectManagerAgent",
        "name": "cleanup",
        "col_offset": 4,
        "endline": 534,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 20,
        "complexity": 1,
        "classname": "ProjectManagerAgent",
        "name": "__init__",
        "col_offset": 4,
        "endline": 41,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 514,
        "complexity": 1,
        "classname": "ProjectManagerAgent",
        "name": "get_status",
        "col_offset": 4,
        "endline": 523,
        "closures": []
      }
    ],
    "agents\\__init__.py": [
      {
        "type": "class",
        "rank": "A",
        "lineno": 115,
        "complexity": 5,
        "name": "DataProcessingAgent",
        "col_offset": 0,
        "endline": 147,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 118,
            "complexity": 2,
            "classname": "DataProcessingAgent",
            "name": "__init__",
            "col_offset": 4,
            "endline": 121,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 123,
            "complexity": 5,
            "classname": "DataProcessingAgent",
            "name": "run",
            "col_offset": 4,
            "endline": 147,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 123,
        "complexity": 5,
        "classname": "DataProcessingAgent",
        "name": "run",
        "col_offset": 4,
        "endline": 147,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 48,
        "complexity": 3,
        "name": "TaskAgent",
        "col_offset": 0,
        "endline": 69,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 51,
            "complexity": 1,
            "classname": "TaskAgent",
            "name": "__init__",
            "col_offset": 4,
            "endline": 53,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 55,
            "complexity": 2,
            "classname": "TaskAgent",
            "name": "run",
            "col_offset": 4,
            "endline": 69,
            "closures": []
          }
        ]
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 12,
        "complexity": 2,
        "name": "BaseAgent",
        "col_offset": 0,
        "endline": 45,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 15,
            "complexity": 1,
            "classname": "BaseAgent",
            "name": "__init__",
            "col_offset": 4,
            "endline": 20,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 23,
            "complexity": 1,
            "classname": "BaseAgent",
            "name": "run",
            "col_offset": 4,
            "endline": 25,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 27,
            "complexity": 1,
            "classname": "BaseAgent",
            "name": "add_skill",
            "col_offset": 4,
            "endline": 30,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 32,
            "complexity": 2,
            "classname": "BaseAgent",
            "name": "get_status",
            "col_offset": 4,
            "endline": 39,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 42,
            "complexity": 1,
            "classname": "BaseAgent",
            "name": "initialize",
            "col_offset": 4,
            "endline": 45,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 32,
        "complexity": 2,
        "classname": "BaseAgent",
        "name": "get_status",
        "col_offset": 4,
        "endline": 39,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 55,
        "complexity": 2,
        "classname": "TaskAgent",
        "name": "run",
        "col_offset": 4,
        "endline": 69,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 72,
        "complexity": 2,
        "name": "ConversationalAgent",
        "col_offset": 0,
        "endline": 112,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 75,
            "complexity": 1,
            "classname": "ConversationalAgent",
            "name": "__init__",
            "col_offset": 4,
            "endline": 78,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 80,
            "complexity": 2,
            "classname": "ConversationalAgent",
            "name": "run",
            "col_offset": 4,
            "endline": 103,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 105,
            "complexity": 1,
            "classname": "ConversationalAgent",
            "name": "_get_timestamp",
            "col_offset": 4,
            "endline": 108,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 110,
            "complexity": 1,
            "classname": "ConversationalAgent",
            "name": "get_conversation_history",
            "col_offset": 4,
            "endline": 112,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 80,
        "complexity": 2,
        "classname": "ConversationalAgent",
        "name": "run",
        "col_offset": 4,
        "endline": 103,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 118,
        "complexity": 2,
        "classname": "DataProcessingAgent",
        "name": "__init__",
        "col_offset": 4,
        "endline": 121,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 15,
        "complexity": 1,
        "classname": "BaseAgent",
        "name": "__init__",
        "col_offset": 4,
        "endline": 20,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 23,
        "complexity": 1,
        "classname": "BaseAgent",
        "name": "run",
        "col_offset": 4,
        "endline": 25,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 27,
        "complexity": 1,
        "classname": "BaseAgent",
        "name": "add_skill",
        "col_offset": 4,
        "endline": 30,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 42,
        "complexity": 1,
        "classname": "BaseAgent",
        "name": "initialize",
        "col_offset": 4,
        "endline": 45,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 51,
        "complexity": 1,
        "classname": "TaskAgent",
        "name": "__init__",
        "col_offset": 4,
        "endline": 53,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 75,
        "complexity": 1,
        "classname": "ConversationalAgent",
        "name": "__init__",
        "col_offset": 4,
        "endline": 78,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 105,
        "complexity": 1,
        "classname": "ConversationalAgent",
        "name": "_get_timestamp",
        "col_offset": 4,
        "endline": 108,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 110,
        "complexity": 1,
        "classname": "ConversationalAgent",
        "name": "get_conversation_history",
        "col_offset": 4,
        "endline": 112,
        "closures": []
      }
    ],
    "analyzers\\api_analyzer.py": [
      {
        "type": "method",
        "rank": "C",
        "lineno": 176,
        "complexity": 14,
        "classname": "APIAnalyzer",
        "name": "_extract_framework_endpoints",
        "col_offset": 4,
        "endline": 220,
        "closures": []
      },
      {
        "type": "method",
        "rank": "C",
        "lineno": 143,
        "complexity": 12,
        "classname": "APIAnalyzer",
        "name": "_detect_api_framework",
        "col_offset": 4,
        "endline": 174,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 539,
        "complexity": 8,
        "classname": "APIAnalyzer",
        "name": "_extract_openapi_spec",
        "col_offset": 4,
        "endline": 575,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 611,
        "complexity": 8,
        "classname": "APIAnalyzer",
        "name": "_analyze_authentication",
        "col_offset": 4,
        "endline": 650,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 652,
        "complexity": 8,
        "classname": "APIAnalyzer",
        "name": "_analyze_middleware",
        "col_offset": 4,
        "endline": 691,
        "closures": []
      },
      {
        "type": "class",
        "rank": "B",
        "lineno": 15,
        "complexity": 7,
        "name": "APIAnalyzer",
        "col_offset": 0,
        "endline": 747,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 18,
            "complexity": 1,
            "classname": "APIAnalyzer",
            "name": "__init__",
            "col_offset": 4,
            "endline": 80,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 83,
            "complexity": 3,
            "classname": "APIAnalyzer",
            "name": "extract_endpoints",
            "col_offset": 4,
            "endline": 141,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 143,
            "complexity": 12,
            "classname": "APIAnalyzer",
            "name": "_detect_api_framework",
            "col_offset": 4,
            "endline": 174,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 176,
            "complexity": 14,
            "classname": "APIAnalyzer",
            "name": "_extract_framework_endpoints",
            "col_offset": 4,
            "endline": 220,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 222,
            "complexity": 4,
            "classname": "APIAnalyzer",
            "name": "_extract_fastapi_endpoints",
            "col_offset": 4,
            "endline": 253,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 255,
            "complexity": 7,
            "classname": "APIAnalyzer",
            "name": "_extract_flask_endpoints",
            "col_offset": 4,
            "endline": 294,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 296,
            "complexity": 4,
            "classname": "APIAnalyzer",
            "name": "_extract_django_endpoints",
            "col_offset": 4,
            "endline": 325,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 327,
            "complexity": 5,
            "classname": "APIAnalyzer",
            "name": "_extract_express_endpoints",
            "col_offset": 4,
            "endline": 357,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 359,
            "complexity": 5,
            "classname": "APIAnalyzer",
            "name": "_extract_nestjs_endpoints",
            "col_offset": 4,
            "endline": 397,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 399,
            "complexity": 5,
            "classname": "APIAnalyzer",
            "name": "_extract_spring_endpoints",
            "col_offset": 4,
            "endline": 440,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 442,
            "complexity": 6,
            "classname": "APIAnalyzer",
            "name": "_extract_fastapi_parameters",
            "col_offset": 4,
            "endline": 470,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 472,
            "complexity": 3,
            "classname": "APIAnalyzer",
            "name": "_extract_fastapi_response_model",
            "col_offset": 4,
            "endline": 485,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 487,
            "complexity": 7,
            "classname": "APIAnalyzer",
            "name": "_extract_flask_parameters",
            "col_offset": 4,
            "endline": 511,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 513,
            "complexity": 7,
            "classname": "APIAnalyzer",
            "name": "_extract_express_parameters",
            "col_offset": 4,
            "endline": 537,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 539,
            "complexity": 8,
            "classname": "APIAnalyzer",
            "name": "_extract_openapi_spec",
            "col_offset": 4,
            "endline": 575,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 577,
            "complexity": 7,
            "classname": "APIAnalyzer",
            "name": "_extract_swagger_config",
            "col_offset": 4,
            "endline": 609,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 611,
            "complexity": 8,
            "classname": "APIAnalyzer",
            "name": "_analyze_authentication",
            "col_offset": 4,
            "endline": 650,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 652,
            "complexity": 8,
            "classname": "APIAnalyzer",
            "name": "_analyze_middleware",
            "col_offset": 4,
            "endline": 691,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 693,
            "complexity": 6,
            "classname": "APIAnalyzer",
            "name": "_analyze_cors_config",
            "col_offset": 4,
            "endline": 724,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 726,
            "complexity": 5,
            "classname": "APIAnalyzer",
            "name": "_find_api_documentation",
            "col_offset": 4,
            "endline": 747,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 255,
        "complexity": 7,
        "classname": "APIAnalyzer",
        "name": "_extract_flask_endpoints",
        "col_offset": 4,
        "endline": 294,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 487,
        "complexity": 7,
        "classname": "APIAnalyzer",
        "name": "_extract_flask_parameters",
        "col_offset": 4,
        "endline": 511,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 513,
        "complexity": 7,
        "classname": "APIAnalyzer",
        "name": "_extract_express_parameters",
        "col_offset": 4,
        "endline": 537,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 577,
        "complexity": 7,
        "classname": "APIAnalyzer",
        "name": "_extract_swagger_config",
        "col_offset": 4,
        "endline": 609,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 442,
        "complexity": 6,
        "classname": "APIAnalyzer",
        "name": "_extract_fastapi_parameters",
        "col_offset": 4,
        "endline": 470,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 693,
        "complexity": 6,
        "classname": "APIAnalyzer",
        "name": "_analyze_cors_config",
        "col_offset": 4,
        "endline": 724,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 327,
        "complexity": 5,
        "classname": "APIAnalyzer",
        "name": "_extract_express_endpoints",
        "col_offset": 4,
        "endline": 357,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 359,
        "complexity": 5,
        "classname": "APIAnalyzer",
        "name": "_extract_nestjs_endpoints",
        "col_offset": 4,
        "endline": 397,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 399,
        "complexity": 5,
        "classname": "APIAnalyzer",
        "name": "_extract_spring_endpoints",
        "col_offset": 4,
        "endline": 440,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 726,
        "complexity": 5,
        "classname": "APIAnalyzer",
        "name": "_find_api_documentation",
        "col_offset": 4,
        "endline": 747,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 222,
        "complexity": 4,
        "classname": "APIAnalyzer",
        "name": "_extract_fastapi_endpoints",
        "col_offset": 4,
        "endline": 253,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 296,
        "complexity": 4,
        "classname": "APIAnalyzer",
        "name": "_extract_django_endpoints",
        "col_offset": 4,
        "endline": 325,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 83,
        "complexity": 3,
        "classname": "APIAnalyzer",
        "name": "extract_endpoints",
        "col_offset": 4,
        "endline": 141,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 472,
        "complexity": 3,
        "classname": "APIAnalyzer",
        "name": "_extract_fastapi_response_model",
        "col_offset": 4,
        "endline": 485,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 18,
        "complexity": 1,
        "classname": "APIAnalyzer",
        "name": "__init__",
        "col_offset": 4,
        "endline": 80,
        "closures": []
      }
    ],
    "analyzers\\ast_analyzer.py": [
      {
        "type": "method",
        "rank": "C",
        "lineno": 329,
        "complexity": 15,
        "classname": "ASTAnalyzer",
        "name": "_walk_javascript_ast",
        "col_offset": 4,
        "endline": 375,
        "closures": []
      },
      {
        "type": "method",
        "rank": "C",
        "lineno": 449,
        "complexity": 11,
        "classname": "ASTAnalyzer",
        "name": "_analyze_with_astroid",
        "col_offset": 4,
        "endline": 502,
        "closures": [
          {
            "type": "function",
            "rank": "A",
            "lineno": 469,
            "complexity": 2,
            "name": "walk_astroid",
            "col_offset": 12,
            "endline": 473,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 386,
        "complexity": 10,
        "classname": "ASTAnalyzer",
        "name": "_analyze_java_ast",
        "col_offset": 4,
        "endline": 437,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 108,
        "complexity": 8,
        "classname": "ASTAnalyzer",
        "name": "_analyze_python_ast",
        "col_offset": 4,
        "endline": 152,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 50,
        "complexity": 7,
        "classname": "ASTAnalyzer",
        "name": "analyze_file",
        "col_offset": 4,
        "endline": 87,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 262,
        "complexity": 7,
        "classname": "ASTAnalyzer",
        "name": "_analyze_javascript_ast",
        "col_offset": 4,
        "endline": 327,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 234,
        "complexity": 6,
        "classname": "ASTAnalyzer",
        "name": "_find_python_issues",
        "col_offset": 4,
        "endline": 260,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 15,
        "complexity": 5,
        "name": "ASTAnalyzer",
        "col_offset": 0,
        "endline": 518,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 18,
            "complexity": 1,
            "classname": "ASTAnalyzer",
            "name": "__init__",
            "col_offset": 4,
            "endline": 21,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 23,
            "complexity": 2,
            "classname": "ASTAnalyzer",
            "name": "_check_tree_sitter",
            "col_offset": 4,
            "endline": 30,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 32,
            "complexity": 2,
            "classname": "ASTAnalyzer",
            "name": "_check_esprima",
            "col_offset": 4,
            "endline": 39,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 41,
            "complexity": 2,
            "classname": "ASTAnalyzer",
            "name": "_check_astroid",
            "col_offset": 4,
            "endline": 48,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 50,
            "complexity": 7,
            "classname": "ASTAnalyzer",
            "name": "analyze_file",
            "col_offset": 4,
            "endline": 87,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 89,
            "complexity": 1,
            "classname": "ASTAnalyzer",
            "name": "_detect_language_from_extension",
            "col_offset": 4,
            "endline": 106,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 108,
            "complexity": 8,
            "classname": "ASTAnalyzer",
            "name": "_analyze_python_ast",
            "col_offset": 4,
            "endline": 152,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 154,
            "complexity": 3,
            "classname": "ASTAnalyzer",
            "name": "_analyze_python_function",
            "col_offset": 4,
            "endline": 164,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 167,
            "complexity": 5,
            "classname": "ASTAnalyzer",
            "name": "_analyze_python_class",
            "col_offset": 4,
            "endline": 181,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 184,
            "complexity": 5,
            "classname": "ASTAnalyzer",
            "name": "_analyze_python_import",
            "col_offset": 4,
            "endline": 198,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 201,
            "complexity": 5,
            "classname": "ASTAnalyzer",
            "name": "_calculate_python_complexity",
            "col_offset": 4,
            "endline": 220,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 222,
            "complexity": 4,
            "classname": "ASTAnalyzer",
            "name": "_calculate_function_complexity",
            "col_offset": 4,
            "endline": 232,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 234,
            "complexity": 6,
            "classname": "ASTAnalyzer",
            "name": "_find_python_issues",
            "col_offset": 4,
            "endline": 260,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 262,
            "complexity": 7,
            "classname": "ASTAnalyzer",
            "name": "_analyze_javascript_ast",
            "col_offset": 4,
            "endline": 327,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 329,
            "complexity": 15,
            "classname": "ASTAnalyzer",
            "name": "_walk_javascript_ast",
            "col_offset": 4,
            "endline": 375,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 377,
            "complexity": 1,
            "classname": "ASTAnalyzer",
            "name": "_calculate_javascript_complexity",
            "col_offset": 4,
            "endline": 383,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 386,
            "complexity": 10,
            "classname": "ASTAnalyzer",
            "name": "_analyze_java_ast",
            "col_offset": 4,
            "endline": 437,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 439,
            "complexity": 1,
            "classname": "ASTAnalyzer",
            "name": "_analyze_generic_ast",
            "col_offset": 4,
            "endline": 446,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 449,
            "complexity": 11,
            "classname": "ASTAnalyzer",
            "name": "_analyze_with_astroid",
            "col_offset": 4,
            "endline": 502,
            "closures": [
              {
                "type": "function",
                "rank": "A",
                "lineno": 469,
                "complexity": 2,
                "name": "walk_astroid",
                "col_offset": 12,
                "endline": 473,
                "closures": []
              }
            ]
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 504,
            "complexity": 3,
            "classname": "ASTAnalyzer",
            "name": "_get_decorator_name",
            "col_offset": 4,
            "endline": 510,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 512,
            "complexity": 3,
            "classname": "ASTAnalyzer",
            "name": "_get_base_name",
            "col_offset": 4,
            "endline": 518,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 167,
        "complexity": 5,
        "classname": "ASTAnalyzer",
        "name": "_analyze_python_class",
        "col_offset": 4,
        "endline": 181,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 184,
        "complexity": 5,
        "classname": "ASTAnalyzer",
        "name": "_analyze_python_import",
        "col_offset": 4,
        "endline": 198,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 201,
        "complexity": 5,
        "classname": "ASTAnalyzer",
        "name": "_calculate_python_complexity",
        "col_offset": 4,
        "endline": 220,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 222,
        "complexity": 4,
        "classname": "ASTAnalyzer",
        "name": "_calculate_function_complexity",
        "col_offset": 4,
        "endline": 232,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 154,
        "complexity": 3,
        "classname": "ASTAnalyzer",
        "name": "_analyze_python_function",
        "col_offset": 4,
        "endline": 164,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 504,
        "complexity": 3,
        "classname": "ASTAnalyzer",
        "name": "_get_decorator_name",
        "col_offset": 4,
        "endline": 510,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 512,
        "complexity": 3,
        "classname": "ASTAnalyzer",
        "name": "_get_base_name",
        "col_offset": 4,
        "endline": 518,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 23,
        "complexity": 2,
        "classname": "ASTAnalyzer",
        "name": "_check_tree_sitter",
        "col_offset": 4,
        "endline": 30,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 32,
        "complexity": 2,
        "classname": "ASTAnalyzer",
        "name": "_check_esprima",
        "col_offset": 4,
        "endline": 39,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 41,
        "complexity": 2,
        "classname": "ASTAnalyzer",
        "name": "_check_astroid",
        "col_offset": 4,
        "endline": 48,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 18,
        "complexity": 1,
        "classname": "ASTAnalyzer",
        "name": "__init__",
        "col_offset": 4,
        "endline": 21,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 89,
        "complexity": 1,
        "classname": "ASTAnalyzer",
        "name": "_detect_language_from_extension",
        "col_offset": 4,
        "endline": 106,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 377,
        "complexity": 1,
        "classname": "ASTAnalyzer",
        "name": "_calculate_javascript_complexity",
        "col_offset": 4,
        "endline": 383,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 439,
        "complexity": 1,
        "classname": "ASTAnalyzer",
        "name": "_analyze_generic_ast",
        "col_offset": 4,
        "endline": 446,
        "closures": []
      }
    ],
    "analyzers\\database_analyzer.py": [
      {
        "type": "method",
        "rank": "D",
        "lineno": 602,
        "complexity": 26,
        "classname": "DatabaseAnalyzer",
        "name": "_detect_database_type",
        "col_offset": 4,
        "endline": 663,
        "closures": []
      },
      {
        "type": "method",
        "rank": "C",
        "lineno": 135,
        "complexity": 13,
        "classname": "DatabaseAnalyzer",
        "name": "_detect_orm_framework",
        "col_offset": 4,
        "endline": 171,
        "closures": []
      },
      {
        "type": "method",
        "rank": "C",
        "lineno": 173,
        "complexity": 13,
        "classname": "DatabaseAnalyzer",
        "name": "_extract_orm_models",
        "col_offset": 4,
        "endline": 218,
        "closures": []
      },
      {
        "type": "method",
        "rank": "C",
        "lineno": 507,
        "complexity": 12,
        "classname": "DatabaseAnalyzer",
        "name": "_extract_migrations",
        "col_offset": 4,
        "endline": 544,
        "closures": []
      },
      {
        "type": "class",
        "rank": "B",
        "lineno": 14,
        "complexity": 9,
        "name": "DatabaseAnalyzer",
        "col_offset": 0,
        "endline": 663,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 17,
            "complexity": 1,
            "classname": "DatabaseAnalyzer",
            "name": "__init__",
            "col_offset": 4,
            "endline": 77,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 80,
            "complexity": 3,
            "classname": "DatabaseAnalyzer",
            "name": "extract_schema",
            "col_offset": 4,
            "endline": 133,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 135,
            "complexity": 13,
            "classname": "DatabaseAnalyzer",
            "name": "_detect_orm_framework",
            "col_offset": 4,
            "endline": 171,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 173,
            "complexity": 13,
            "classname": "DatabaseAnalyzer",
            "name": "_extract_orm_models",
            "col_offset": 4,
            "endline": 218,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 220,
            "complexity": 5,
            "classname": "DatabaseAnalyzer",
            "name": "_extract_sqlalchemy_models",
            "col_offset": 4,
            "endline": 262,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 264,
            "complexity": 5,
            "classname": "DatabaseAnalyzer",
            "name": "_extract_django_models",
            "col_offset": 4,
            "endline": 307,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 309,
            "complexity": 4,
            "classname": "DatabaseAnalyzer",
            "name": "_extract_mongoose_models",
            "col_offset": 4,
            "endline": 347,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 349,
            "complexity": 4,
            "classname": "DatabaseAnalyzer",
            "name": "_extract_sequelize_models",
            "col_offset": 4,
            "endline": 386,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 388,
            "complexity": 8,
            "classname": "DatabaseAnalyzer",
            "name": "_extract_prisma_models",
            "col_offset": 4,
            "endline": 446,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 448,
            "complexity": 8,
            "classname": "DatabaseAnalyzer",
            "name": "_extract_sql_schema",
            "col_offset": 4,
            "endline": 505,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 507,
            "complexity": 12,
            "classname": "DatabaseAnalyzer",
            "name": "_extract_migrations",
            "col_offset": 4,
            "endline": 544,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 546,
            "complexity": 6,
            "classname": "DatabaseAnalyzer",
            "name": "_detect_migration_framework",
            "col_offset": 4,
            "endline": 564,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 566,
            "complexity": 9,
            "classname": "DatabaseAnalyzer",
            "name": "_analyze_relationships",
            "col_offset": 4,
            "endline": 600,
            "closures": []
          },
          {
            "type": "method",
            "rank": "D",
            "lineno": 602,
            "complexity": 26,
            "classname": "DatabaseAnalyzer",
            "name": "_detect_database_type",
            "col_offset": 4,
            "endline": 663,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 566,
        "complexity": 9,
        "classname": "DatabaseAnalyzer",
        "name": "_analyze_relationships",
        "col_offset": 4,
        "endline": 600,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 388,
        "complexity": 8,
        "classname": "DatabaseAnalyzer",
        "name": "_extract_prisma_models",
        "col_offset": 4,
        "endline": 446,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 448,
        "complexity": 8,
        "classname": "DatabaseAnalyzer",
        "name": "_extract_sql_schema",
        "col_offset": 4,
        "endline": 505,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 546,
        "complexity": 6,
        "classname": "DatabaseAnalyzer",
        "name": "_detect_migration_framework",
        "col_offset": 4,
        "endline": 564,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 220,
        "complexity": 5,
        "classname": "DatabaseAnalyzer",
        "name": "_extract_sqlalchemy_models",
        "col_offset": 4,
        "endline": 262,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 264,
        "complexity": 5,
        "classname": "DatabaseAnalyzer",
        "name": "_extract_django_models",
        "col_offset": 4,
        "endline": 307,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 309,
        "complexity": 4,
        "classname": "DatabaseAnalyzer",
        "name": "_extract_mongoose_models",
        "col_offset": 4,
        "endline": 347,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 349,
        "complexity": 4,
        "classname": "DatabaseAnalyzer",
        "name": "_extract_sequelize_models",
        "col_offset": 4,
        "endline": 386,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 80,
        "complexity": 3,
        "classname": "DatabaseAnalyzer",
        "name": "extract_schema",
        "col_offset": 4,
        "endline": 133,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 17,
        "complexity": 1,
        "classname": "DatabaseAnalyzer",
        "name": "__init__",
        "col_offset": 4,
        "endline": 77,
        "closures": []
      }
    ],
    "analyzers\\dependency_analyzer.py": [
      {
        "type": "method",
        "rank": "C",
        "lineno": 190,
        "complexity": 11,
        "classname": "DependencyAnalyzer",
        "name": "_parse_pipfile",
        "col_offset": 4,
        "endline": 242,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 32,
        "complexity": 8,
        "classname": "DependencyAnalyzer",
        "name": "analyze_dependencies",
        "col_offset": 4,
        "endline": 94,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 244,
        "complexity": 8,
        "classname": "DependencyAnalyzer",
        "name": "_parse_pyproject_toml",
        "col_offset": 4,
        "endline": 288,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 329,
        "complexity": 8,
        "classname": "DependencyAnalyzer",
        "name": "_parse_gemfile",
        "col_offset": 4,
        "endline": 368,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 370,
        "complexity": 8,
        "classname": "DependencyAnalyzer",
        "name": "_parse_cargo_toml",
        "col_offset": 4,
        "endline": 413,
        "closures": []
      },
      {
        "type": "class",
        "rank": "B",
        "lineno": 15,
        "complexity": 6,
        "name": "DependencyAnalyzer",
        "col_offset": 0,
        "endline": 657,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 18,
            "complexity": 1,
            "classname": "DependencyAnalyzer",
            "name": "__init__",
            "col_offset": 4,
            "endline": 29,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 32,
            "complexity": 8,
            "classname": "DependencyAnalyzer",
            "name": "analyze_dependencies",
            "col_offset": 4,
            "endline": 94,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 96,
            "complexity": 3,
            "classname": "DependencyAnalyzer",
            "name": "_find_dependency_files",
            "col_offset": 4,
            "endline": 108,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 110,
            "complexity": 4,
            "classname": "DependencyAnalyzer",
            "name": "_parse_package_json",
            "col_offset": 4,
            "endline": 147,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 149,
            "complexity": 6,
            "classname": "DependencyAnalyzer",
            "name": "_parse_requirements_txt",
            "col_offset": 4,
            "endline": 188,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 190,
            "complexity": 11,
            "classname": "DependencyAnalyzer",
            "name": "_parse_pipfile",
            "col_offset": 4,
            "endline": 242,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 244,
            "complexity": 8,
            "classname": "DependencyAnalyzer",
            "name": "_parse_pyproject_toml",
            "col_offset": 4,
            "endline": 288,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 290,
            "complexity": 4,
            "classname": "DependencyAnalyzer",
            "name": "_parse_composer_json",
            "col_offset": 4,
            "endline": 327,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 329,
            "complexity": 8,
            "classname": "DependencyAnalyzer",
            "name": "_parse_gemfile",
            "col_offset": 4,
            "endline": 368,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 370,
            "complexity": 8,
            "classname": "DependencyAnalyzer",
            "name": "_parse_cargo_toml",
            "col_offset": 4,
            "endline": 413,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 415,
            "complexity": 6,
            "classname": "DependencyAnalyzer",
            "name": "_parse_go_mod",
            "col_offset": 4,
            "endline": 447,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 449,
            "complexity": 3,
            "classname": "DependencyAnalyzer",
            "name": "_parse_pom_xml",
            "col_offset": 4,
            "endline": 480,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 482,
            "complexity": 4,
            "classname": "DependencyAnalyzer",
            "name": "_parse_build_gradle",
            "col_offset": 4,
            "endline": 514,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 516,
            "complexity": 3,
            "classname": "DependencyAnalyzer",
            "name": "_check_npm_vulnerabilities",
            "col_offset": 4,
            "endline": 531,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 533,
            "complexity": 3,
            "classname": "DependencyAnalyzer",
            "name": "_check_pip_vulnerabilities",
            "col_offset": 4,
            "endline": 548,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 550,
            "complexity": 3,
            "classname": "DependencyAnalyzer",
            "name": "_check_npm_outdated",
            "col_offset": 4,
            "endline": 564,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 566,
            "complexity": 3,
            "classname": "DependencyAnalyzer",
            "name": "_check_pip_outdated",
            "col_offset": 4,
            "endline": 580,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 582,
            "complexity": 4,
            "classname": "DependencyAnalyzer",
            "name": "_generate_dependency_graph",
            "col_offset": 4,
            "endline": 607,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 609,
            "complexity": 6,
            "classname": "DependencyAnalyzer",
            "name": "_analyze_vulnerabilities",
            "col_offset": 4,
            "endline": 632,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 634,
            "complexity": 6,
            "classname": "DependencyAnalyzer",
            "name": "_analyze_outdated_packages",
            "col_offset": 4,
            "endline": 657,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 149,
        "complexity": 6,
        "classname": "DependencyAnalyzer",
        "name": "_parse_requirements_txt",
        "col_offset": 4,
        "endline": 188,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 415,
        "complexity": 6,
        "classname": "DependencyAnalyzer",
        "name": "_parse_go_mod",
        "col_offset": 4,
        "endline": 447,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 609,
        "complexity": 6,
        "classname": "DependencyAnalyzer",
        "name": "_analyze_vulnerabilities",
        "col_offset": 4,
        "endline": 632,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 634,
        "complexity": 6,
        "classname": "DependencyAnalyzer",
        "name": "_analyze_outdated_packages",
        "col_offset": 4,
        "endline": 657,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 110,
        "complexity": 4,
        "classname": "DependencyAnalyzer",
        "name": "_parse_package_json",
        "col_offset": 4,
        "endline": 147,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 290,
        "complexity": 4,
        "classname": "DependencyAnalyzer",
        "name": "_parse_composer_json",
        "col_offset": 4,
        "endline": 327,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 482,
        "complexity": 4,
        "classname": "DependencyAnalyzer",
        "name": "_parse_build_gradle",
        "col_offset": 4,
        "endline": 514,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 582,
        "complexity": 4,
        "classname": "DependencyAnalyzer",
        "name": "_generate_dependency_graph",
        "col_offset": 4,
        "endline": 607,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 96,
        "complexity": 3,
        "classname": "DependencyAnalyzer",
        "name": "_find_dependency_files",
        "col_offset": 4,
        "endline": 108,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 449,
        "complexity": 3,
        "classname": "DependencyAnalyzer",
        "name": "_parse_pom_xml",
        "col_offset": 4,
        "endline": 480,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 516,
        "complexity": 3,
        "classname": "DependencyAnalyzer",
        "name": "_check_npm_vulnerabilities",
        "col_offset": 4,
        "endline": 531,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 533,
        "complexity": 3,
        "classname": "DependencyAnalyzer",
        "name": "_check_pip_vulnerabilities",
        "col_offset": 4,
        "endline": 548,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 550,
        "complexity": 3,
        "classname": "DependencyAnalyzer",
        "name": "_check_npm_outdated",
        "col_offset": 4,
        "endline": 564,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 566,
        "complexity": 3,
        "classname": "DependencyAnalyzer",
        "name": "_check_pip_outdated",
        "col_offset": 4,
        "endline": 580,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 18,
        "complexity": 1,
        "classname": "DependencyAnalyzer",
        "name": "__init__",
        "col_offset": 4,
        "endline": 29,
        "closures": []
      }
    ],
    "analyzers\\framework_detector.py": [
      {
        "type": "method",
        "rank": "C",
        "lineno": 296,
        "complexity": 14,
        "classname": "FrameworkDetector",
        "name": "_detect_by_code_patterns",
        "col_offset": 4,
        "endline": 341,
        "closures": []
      },
      {
        "type": "method",
        "rank": "C",
        "lineno": 256,
        "complexity": 12,
        "classname": "FrameworkDetector",
        "name": "_detect_by_structure",
        "col_offset": 4,
        "endline": 294,
        "closures": []
      },
      {
        "type": "method",
        "rank": "C",
        "lineno": 343,
        "complexity": 12,
        "classname": "FrameworkDetector",
        "name": "_detect_by_dependencies",
        "col_offset": 4,
        "endline": 412,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 423,
        "complexity": 8,
        "classname": "FrameworkDetector",
        "name": "_get_framework_type",
        "col_offset": 4,
        "endline": 448,
        "closures": []
      },
      {
        "type": "class",
        "rank": "B",
        "lineno": 14,
        "complexity": 6,
        "name": "FrameworkDetector",
        "col_offset": 0,
        "endline": 556,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 17,
            "complexity": 1,
            "classname": "FrameworkDetector",
            "name": "__init__",
            "col_offset": 4,
            "endline": 188,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 191,
            "complexity": 3,
            "classname": "FrameworkDetector",
            "name": "detect_frameworks",
            "col_offset": 4,
            "endline": 229,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 231,
            "complexity": 4,
            "classname": "FrameworkDetector",
            "name": "_detect_by_config_files",
            "col_offset": 4,
            "endline": 254,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 256,
            "complexity": 12,
            "classname": "FrameworkDetector",
            "name": "_detect_by_structure",
            "col_offset": 4,
            "endline": 294,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 296,
            "complexity": 14,
            "classname": "FrameworkDetector",
            "name": "_detect_by_code_patterns",
            "col_offset": 4,
            "endline": 341,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 343,
            "complexity": 12,
            "classname": "FrameworkDetector",
            "name": "_detect_by_dependencies",
            "col_offset": 4,
            "endline": 412,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 414,
            "complexity": 2,
            "classname": "FrameworkDetector",
            "name": "_file_contains_pattern",
            "col_offset": 4,
            "endline": 421,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 423,
            "complexity": 8,
            "classname": "FrameworkDetector",
            "name": "_get_framework_type",
            "col_offset": 4,
            "endline": 448,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 450,
            "complexity": 5,
            "classname": "FrameworkDetector",
            "name": "_deduplicate_and_prioritize",
            "col_offset": 4,
            "endline": 475,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 477,
            "complexity": 1,
            "classname": "FrameworkDetector",
            "name": "get_framework_info",
            "col_offset": 4,
            "endline": 487,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 489,
            "complexity": 1,
            "classname": "FrameworkDetector",
            "name": "_get_framework_description",
            "col_offset": 4,
            "endline": 510,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 512,
            "complexity": 1,
            "classname": "FrameworkDetector",
            "name": "_get_framework_website",
            "col_offset": 4,
            "endline": 533,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 535,
            "complexity": 1,
            "classname": "FrameworkDetector",
            "name": "_get_framework_docs",
            "col_offset": 4,
            "endline": 556,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 450,
        "complexity": 5,
        "classname": "FrameworkDetector",
        "name": "_deduplicate_and_prioritize",
        "col_offset": 4,
        "endline": 475,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 231,
        "complexity": 4,
        "classname": "FrameworkDetector",
        "name": "_detect_by_config_files",
        "col_offset": 4,
        "endline": 254,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 191,
        "complexity": 3,
        "classname": "FrameworkDetector",
        "name": "detect_frameworks",
        "col_offset": 4,
        "endline": 229,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 414,
        "complexity": 2,
        "classname": "FrameworkDetector",
        "name": "_file_contains_pattern",
        "col_offset": 4,
        "endline": 421,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 17,
        "complexity": 1,
        "classname": "FrameworkDetector",
        "name": "__init__",
        "col_offset": 4,
        "endline": 188,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 477,
        "complexity": 1,
        "classname": "FrameworkDetector",
        "name": "get_framework_info",
        "col_offset": 4,
        "endline": 487,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 489,
        "complexity": 1,
        "classname": "FrameworkDetector",
        "name": "_get_framework_description",
        "col_offset": 4,
        "endline": 510,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 512,
        "complexity": 1,
        "classname": "FrameworkDetector",
        "name": "_get_framework_website",
        "col_offset": 4,
        "endline": 533,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 535,
        "complexity": 1,
        "classname": "FrameworkDetector",
        "name": "_get_framework_docs",
        "col_offset": 4,
        "endline": 556,
        "closures": []
      }
    ],
    "analyzers\\language_detector.py": [
      {
        "type": "method",
        "rank": "D",
        "lineno": 126,
        "complexity": 21,
        "classname": "LanguageDetector",
        "name": "_detect_by_structure",
        "col_offset": 4,
        "endline": 166,
        "closures": []
      },
      {
        "type": "method",
        "rank": "D",
        "lineno": 168,
        "complexity": 21,
        "classname": "LanguageDetector",
        "name": "_detect_by_content",
        "col_offset": 4,
        "endline": 241,
        "closures": []
      },
      {
        "type": "class",
        "rank": "B",
        "lineno": 13,
        "complexity": 8,
        "name": "LanguageDetector",
        "col_offset": 0,
        "endline": 319,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 16,
            "complexity": 1,
            "classname": "LanguageDetector",
            "name": "__init__",
            "col_offset": 4,
            "endline": 67,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 70,
            "complexity": 6,
            "classname": "LanguageDetector",
            "name": "detect_languages",
            "col_offset": 4,
            "endline": 114,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 116,
            "complexity": 3,
            "classname": "LanguageDetector",
            "name": "_get_language_by_extension",
            "col_offset": 4,
            "endline": 124,
            "closures": []
          },
          {
            "type": "method",
            "rank": "D",
            "lineno": 126,
            "complexity": 21,
            "classname": "LanguageDetector",
            "name": "_detect_by_structure",
            "col_offset": 4,
            "endline": 166,
            "closures": []
          },
          {
            "type": "method",
            "rank": "D",
            "lineno": 168,
            "complexity": 21,
            "classname": "LanguageDetector",
            "name": "_detect_by_content",
            "col_offset": 4,
            "endline": 241,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 243,
            "complexity": 6,
            "classname": "LanguageDetector",
            "name": "_filter_and_prioritize",
            "col_offset": 4,
            "endline": 270,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 272,
            "complexity": 1,
            "classname": "LanguageDetector",
            "name": "get_language_info",
            "col_offset": 4,
            "endline": 281,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 283,
            "complexity": 5,
            "classname": "LanguageDetector",
            "name": "_get_language_type",
            "col_offset": 4,
            "endline": 299,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 301,
            "complexity": 1,
            "classname": "LanguageDetector",
            "name": "_get_language_description",
            "col_offset": 4,
            "endline": 319,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 70,
        "complexity": 6,
        "classname": "LanguageDetector",
        "name": "detect_languages",
        "col_offset": 4,
        "endline": 114,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 243,
        "complexity": 6,
        "classname": "LanguageDetector",
        "name": "_filter_and_prioritize",
        "col_offset": 4,
        "endline": 270,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 283,
        "complexity": 5,
        "classname": "LanguageDetector",
        "name": "_get_language_type",
        "col_offset": 4,
        "endline": 299,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 116,
        "complexity": 3,
        "classname": "LanguageDetector",
        "name": "_get_language_by_extension",
        "col_offset": 4,
        "endline": 124,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 16,
        "complexity": 1,
        "classname": "LanguageDetector",
        "name": "__init__",
        "col_offset": 4,
        "endline": 67,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 272,
        "complexity": 1,
        "classname": "LanguageDetector",
        "name": "get_language_info",
        "col_offset": 4,
        "endline": 281,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 301,
        "complexity": 1,
        "classname": "LanguageDetector",
        "name": "_get_language_description",
        "col_offset": 4,
        "endline": 319,
        "closures": []
      }
    ],
    "analyzers\\project_analyzer.py": [
      {
        "type": "method",
        "rank": "C",
        "lineno": 221,
        "complexity": 18,
        "classname": "ProjectAnalyzer",
        "name": "_perform_ast_analysis",
        "col_offset": 4,
        "endline": 309,
        "closures": []
      },
      {
        "type": "method",
        "rank": "C",
        "lineno": 124,
        "complexity": 16,
        "classname": "ProjectAnalyzer",
        "name": "_scan_files",
        "col_offset": 4,
        "endline": 219,
        "closures": []
      },
      {
        "type": "method",
        "rank": "C",
        "lineno": 652,
        "complexity": 16,
        "classname": "ProjectAnalyzer",
        "name": "_run_safety_scan",
        "col_offset": 4,
        "endline": 722,
        "closures": []
      },
      {
        "type": "method",
        "rank": "C",
        "lineno": 429,
        "complexity": 15,
        "classname": "ProjectAnalyzer",
        "name": "_calculate_radon_metrics",
        "col_offset": 4,
        "endline": 493,
        "closures": []
      },
      {
        "type": "method",
        "rank": "C",
        "lineno": 819,
        "complexity": 14,
        "classname": "ProjectAnalyzer",
        "name": "_analyze_test_coverage",
        "col_offset": 4,
        "endline": 865,
        "closures": []
      },
      {
        "type": "method",
        "rank": "C",
        "lineno": 540,
        "complexity": 13,
        "classname": "ProjectAnalyzer",
        "name": "_parse_lizard_output",
        "col_offset": 4,
        "endline": 584,
        "closures": []
      },
      {
        "type": "method",
        "rank": "C",
        "lineno": 586,
        "complexity": 13,
        "classname": "ProjectAnalyzer",
        "name": "_calculate_quality_score",
        "col_offset": 4,
        "endline": 628,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 769,
        "complexity": 9,
        "classname": "ProjectAnalyzer",
        "name": "_scan_code_security_issues",
        "col_offset": 4,
        "endline": 817,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 888,
        "complexity": 9,
        "classname": "ProjectAnalyzer",
        "name": "_generate_markdown_report",
        "col_offset": 4,
        "endline": 937,
        "closures": []
      },
      {
        "type": "class",
        "rank": "B",
        "lineno": 23,
        "complexity": 8,
        "name": "ProjectAnalyzer",
        "col_offset": 0,
        "endline": 958,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 26,
            "complexity": 1,
            "classname": "ProjectAnalyzer",
            "name": "__init__",
            "col_offset": 4,
            "endline": 35,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 37,
            "complexity": 2,
            "classname": "ProjectAnalyzer",
            "name": "analyze_project",
            "col_offset": 4,
            "endline": 122,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 124,
            "complexity": 16,
            "classname": "ProjectAnalyzer",
            "name": "_scan_files",
            "col_offset": 4,
            "endline": 219,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 221,
            "complexity": 18,
            "classname": "ProjectAnalyzer",
            "name": "_perform_ast_analysis",
            "col_offset": 4,
            "endline": 309,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 311,
            "complexity": 4,
            "classname": "ProjectAnalyzer",
            "name": "_calculate_ast_complexity_summary",
            "col_offset": 4,
            "endline": 361,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 363,
            "complexity": 2,
            "classname": "ProjectAnalyzer",
            "name": "_calculate_metrics",
            "col_offset": 4,
            "endline": 394,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 396,
            "complexity": 4,
            "classname": "ProjectAnalyzer",
            "name": "_calculate_basic_metrics",
            "col_offset": 4,
            "endline": 427,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 429,
            "complexity": 15,
            "classname": "ProjectAnalyzer",
            "name": "_calculate_radon_metrics",
            "col_offset": 4,
            "endline": 493,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 495,
            "complexity": 4,
            "classname": "ProjectAnalyzer",
            "name": "_calculate_lizard_metrics",
            "col_offset": 4,
            "endline": 538,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 540,
            "complexity": 13,
            "classname": "ProjectAnalyzer",
            "name": "_parse_lizard_output",
            "col_offset": 4,
            "endline": 584,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 586,
            "complexity": 13,
            "classname": "ProjectAnalyzer",
            "name": "_calculate_quality_score",
            "col_offset": 4,
            "endline": 628,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 630,
            "complexity": 2,
            "classname": "ProjectAnalyzer",
            "name": "_security_scan",
            "col_offset": 4,
            "endline": 650,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 652,
            "complexity": 16,
            "classname": "ProjectAnalyzer",
            "name": "_run_safety_scan",
            "col_offset": 4,
            "endline": 722,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 724,
            "complexity": 8,
            "classname": "ProjectAnalyzer",
            "name": "_scan_hardcoded_secrets",
            "col_offset": 4,
            "endline": 767,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 769,
            "complexity": 9,
            "classname": "ProjectAnalyzer",
            "name": "_scan_code_security_issues",
            "col_offset": 4,
            "endline": 817,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 819,
            "complexity": 14,
            "classname": "ProjectAnalyzer",
            "name": "_analyze_test_coverage",
            "col_offset": 4,
            "endline": 865,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 867,
            "complexity": 2,
            "classname": "ProjectAnalyzer",
            "name": "_generate_reports",
            "col_offset": 4,
            "endline": 886,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 888,
            "complexity": 9,
            "classname": "ProjectAnalyzer",
            "name": "_generate_markdown_report",
            "col_offset": 4,
            "endline": 937,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 939,
            "complexity": 6,
            "classname": "ProjectAnalyzer",
            "name": "_update_progress",
            "col_offset": 4,
            "endline": 950,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 952,
            "complexity": 1,
            "classname": "ProjectAnalyzer",
            "name": "get_analysis_results",
            "col_offset": 4,
            "endline": 954,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 956,
            "complexity": 1,
            "classname": "ProjectAnalyzer",
            "name": "is_analysis_complete",
            "col_offset": 4,
            "endline": 958,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 724,
        "complexity": 8,
        "classname": "ProjectAnalyzer",
        "name": "_scan_hardcoded_secrets",
        "col_offset": 4,
        "endline": 767,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 939,
        "complexity": 6,
        "classname": "ProjectAnalyzer",
        "name": "_update_progress",
        "col_offset": 4,
        "endline": 950,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 311,
        "complexity": 4,
        "classname": "ProjectAnalyzer",
        "name": "_calculate_ast_complexity_summary",
        "col_offset": 4,
        "endline": 361,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 396,
        "complexity": 4,
        "classname": "ProjectAnalyzer",
        "name": "_calculate_basic_metrics",
        "col_offset": 4,
        "endline": 427,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 495,
        "complexity": 4,
        "classname": "ProjectAnalyzer",
        "name": "_calculate_lizard_metrics",
        "col_offset": 4,
        "endline": 538,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 37,
        "complexity": 2,
        "classname": "ProjectAnalyzer",
        "name": "analyze_project",
        "col_offset": 4,
        "endline": 122,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 363,
        "complexity": 2,
        "classname": "ProjectAnalyzer",
        "name": "_calculate_metrics",
        "col_offset": 4,
        "endline": 394,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 630,
        "complexity": 2,
        "classname": "ProjectAnalyzer",
        "name": "_security_scan",
        "col_offset": 4,
        "endline": 650,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 867,
        "complexity": 2,
        "classname": "ProjectAnalyzer",
        "name": "_generate_reports",
        "col_offset": 4,
        "endline": 886,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 26,
        "complexity": 1,
        "classname": "ProjectAnalyzer",
        "name": "__init__",
        "col_offset": 4,
        "endline": 35,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 952,
        "complexity": 1,
        "classname": "ProjectAnalyzer",
        "name": "get_analysis_results",
        "col_offset": 4,
        "endline": 954,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 956,
        "complexity": 1,
        "classname": "ProjectAnalyzer",
        "name": "is_analysis_complete",
        "col_offset": 4,
        "endline": 958,
        "closures": []
      }
    ],
    "commands\\__init__.py": [
      {
        "type": "method",
        "rank": "C",
        "lineno": 116,
        "complexity": 13,
        "classname": "FileOperationCommand",
        "name": "execute",
        "col_offset": 4,
        "endline": 200,
        "closures": []
      },
      {
        "type": "class",
        "rank": "B",
        "lineno": 101,
        "complexity": 8,
        "name": "FileOperationCommand",
        "col_offset": 0,
        "endline": 200,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 104,
            "complexity": 1,
            "classname": "FileOperationCommand",
            "name": "__init__",
            "col_offset": 4,
            "endline": 113,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 116,
            "complexity": 13,
            "classname": "FileOperationCommand",
            "name": "execute",
            "col_offset": 4,
            "endline": 200,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 219,
        "complexity": 8,
        "classname": "NetworkCommand",
        "name": "execute",
        "col_offset": 4,
        "endline": 284,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 303,
        "complexity": 8,
        "classname": "DatabaseCommand",
        "name": "execute",
        "col_offset": 4,
        "endline": 365,
        "closures": []
      },
      {
        "type": "class",
        "rank": "B",
        "lineno": 204,
        "complexity": 6,
        "name": "NetworkCommand",
        "col_offset": 0,
        "endline": 284,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 207,
            "complexity": 1,
            "classname": "NetworkCommand",
            "name": "__init__",
            "col_offset": 4,
            "endline": 216,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 219,
            "complexity": 8,
            "classname": "NetworkCommand",
            "name": "execute",
            "col_offset": 4,
            "endline": 284,
            "closures": []
          }
        ]
      },
      {
        "type": "class",
        "rank": "B",
        "lineno": 288,
        "complexity": 6,
        "name": "DatabaseCommand",
        "col_offset": 0,
        "endline": 365,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 291,
            "complexity": 1,
            "classname": "DatabaseCommand",
            "name": "__init__",
            "col_offset": 4,
            "endline": 300,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 303,
            "complexity": 8,
            "classname": "DatabaseCommand",
            "name": "execute",
            "col_offset": 4,
            "endline": 365,
            "closures": []
          }
        ]
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 44,
        "complexity": 4,
        "name": "SystemInfoCommand",
        "col_offset": 0,
        "endline": 97,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 47,
            "complexity": 1,
            "classname": "SystemInfoCommand",
            "name": "__init__",
            "col_offset": 4,
            "endline": 54,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 57,
            "complexity": 4,
            "classname": "SystemInfoCommand",
            "name": "execute",
            "col_offset": 4,
            "endline": 97,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 57,
        "complexity": 4,
        "classname": "SystemInfoCommand",
        "name": "execute",
        "col_offset": 4,
        "endline": 97,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 370,
        "complexity": 2,
        "name": "initialize",
        "col_offset": 0,
        "endline": 385,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 14,
        "complexity": 2,
        "name": "BaseCommand",
        "col_offset": 0,
        "endline": 41,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 17,
            "complexity": 1,
            "classname": "BaseCommand",
            "name": "__init__",
            "col_offset": 4,
            "endline": 22,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 25,
            "complexity": 1,
            "classname": "BaseCommand",
            "name": "execute",
            "col_offset": 4,
            "endline": 27,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 29,
            "complexity": 1,
            "classname": "BaseCommand",
            "name": "get_info",
            "col_offset": 4,
            "endline": 35,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 38,
            "complexity": 1,
            "classname": "BaseCommand",
            "name": "initialize",
            "col_offset": 4,
            "endline": 41,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 17,
        "complexity": 1,
        "classname": "BaseCommand",
        "name": "__init__",
        "col_offset": 4,
        "endline": 22,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 25,
        "complexity": 1,
        "classname": "BaseCommand",
        "name": "execute",
        "col_offset": 4,
        "endline": 27,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 29,
        "complexity": 1,
        "classname": "BaseCommand",
        "name": "get_info",
        "col_offset": 4,
        "endline": 35,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 38,
        "complexity": 1,
        "classname": "BaseCommand",
        "name": "initialize",
        "col_offset": 4,
        "endline": 41,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 47,
        "complexity": 1,
        "classname": "SystemInfoCommand",
        "name": "__init__",
        "col_offset": 4,
        "endline": 54,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 104,
        "complexity": 1,
        "classname": "FileOperationCommand",
        "name": "__init__",
        "col_offset": 4,
        "endline": 113,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 207,
        "complexity": 1,
        "classname": "NetworkCommand",
        "name": "__init__",
        "col_offset": 4,
        "endline": 216,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 291,
        "complexity": 1,
        "classname": "DatabaseCommand",
        "name": "__init__",
        "col_offset": 4,
        "endline": 300,
        "closures": []
      }
    ],
    "generators\\agent_generator.py": [
      {
        "type": "method",
        "rank": "C",
        "lineno": 76,
        "complexity": 11,
        "classname": "AgentGenerator",
        "name": "_determine_required_agents",
        "col_offset": 4,
        "endline": 111,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 113,
        "complexity": 7,
        "classname": "AgentGenerator",
        "name": "_has_test_frameworks",
        "col_offset": 4,
        "endline": 122,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 132,
        "complexity": 6,
        "classname": "AgentGenerator",
        "name": "_generate_agent_code",
        "col_offset": 4,
        "endline": 170,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 16,
        "complexity": 3,
        "name": "AgentGenerator",
        "col_offset": 0,
        "endline": 388,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 17,
            "complexity": 1,
            "classname": "AgentGenerator",
            "name": "__init__",
            "col_offset": 4,
            "endline": 20,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 22,
            "complexity": 1,
            "classname": "AgentGenerator",
            "name": "_load_agent_templates",
            "col_offset": 4,
            "endline": 31,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 34,
            "complexity": 3,
            "classname": "AgentGenerator",
            "name": "generate_agents_for_project",
            "col_offset": 4,
            "endline": 74,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 76,
            "complexity": 11,
            "classname": "AgentGenerator",
            "name": "_determine_required_agents",
            "col_offset": 4,
            "endline": 111,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 113,
            "complexity": 7,
            "classname": "AgentGenerator",
            "name": "_has_test_frameworks",
            "col_offset": 4,
            "endline": 122,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 124,
            "complexity": 2,
            "classname": "AgentGenerator",
            "name": "_has_deployment_files",
            "col_offset": 4,
            "endline": 130,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 132,
            "complexity": 6,
            "classname": "AgentGenerator",
            "name": "_generate_agent_code",
            "col_offset": 4,
            "endline": 170,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 173,
            "complexity": 2,
            "classname": "AgentGenerator",
            "name": "_save_agent_file",
            "col_offset": 4,
            "endline": 192,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 194,
            "complexity": 1,
            "classname": "AgentGenerator",
            "name": "_get_agent_role",
            "col_offset": 4,
            "endline": 205,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 207,
            "complexity": 1,
            "classname": "AgentGenerator",
            "name": "_get_agent_goal",
            "col_offset": 4,
            "endline": 218,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 220,
            "complexity": 1,
            "classname": "AgentGenerator",
            "name": "_get_required_skills",
            "col_offset": 4,
            "endline": 231,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 233,
            "complexity": 1,
            "classname": "AgentGenerator",
            "name": "_get_backend_agent_template",
            "col_offset": 4,
            "endline": 235,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 311,
            "complexity": 1,
            "classname": "AgentGenerator",
            "name": "_get_generic_agent_template",
            "col_offset": 4,
            "endline": 313,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 372,
            "complexity": 1,
            "classname": "AgentGenerator",
            "name": "_get_frontend_agent_template",
            "col_offset": 4,
            "endline": 373,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 375,
            "complexity": 1,
            "classname": "AgentGenerator",
            "name": "_get_database_agent_template",
            "col_offset": 4,
            "endline": 376,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 378,
            "complexity": 1,
            "classname": "AgentGenerator",
            "name": "_get_api_agent_template",
            "col_offset": 4,
            "endline": 379,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 381,
            "complexity": 1,
            "classname": "AgentGenerator",
            "name": "_get_test_agent_template",
            "col_offset": 4,
            "endline": 382,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 384,
            "complexity": 1,
            "classname": "AgentGenerator",
            "name": "_get_security_agent_template",
            "col_offset": 4,
            "endline": 385,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 387,
            "complexity": 1,
            "classname": "AgentGenerator",
            "name": "_get_deployment_agent_template",
            "col_offset": 4,
            "endline": 388,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 34,
        "complexity": 3,
        "classname": "AgentGenerator",
        "name": "generate_agents_for_project",
        "col_offset": 4,
        "endline": 74,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 124,
        "complexity": 2,
        "classname": "AgentGenerator",
        "name": "_has_deployment_files",
        "col_offset": 4,
        "endline": 130,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 173,
        "complexity": 2,
        "classname": "AgentGenerator",
        "name": "_save_agent_file",
        "col_offset": 4,
        "endline": 192,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 17,
        "complexity": 1,
        "classname": "AgentGenerator",
        "name": "__init__",
        "col_offset": 4,
        "endline": 20,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 22,
        "complexity": 1,
        "classname": "AgentGenerator",
        "name": "_load_agent_templates",
        "col_offset": 4,
        "endline": 31,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 194,
        "complexity": 1,
        "classname": "AgentGenerator",
        "name": "_get_agent_role",
        "col_offset": 4,
        "endline": 205,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 207,
        "complexity": 1,
        "classname": "AgentGenerator",
        "name": "_get_agent_goal",
        "col_offset": 4,
        "endline": 218,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 220,
        "complexity": 1,
        "classname": "AgentGenerator",
        "name": "_get_required_skills",
        "col_offset": 4,
        "endline": 231,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 233,
        "complexity": 1,
        "classname": "AgentGenerator",
        "name": "_get_backend_agent_template",
        "col_offset": 4,
        "endline": 235,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 311,
        "complexity": 1,
        "classname": "AgentGenerator",
        "name": "_get_generic_agent_template",
        "col_offset": 4,
        "endline": 313,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 372,
        "complexity": 1,
        "classname": "AgentGenerator",
        "name": "_get_frontend_agent_template",
        "col_offset": 4,
        "endline": 373,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 375,
        "complexity": 1,
        "classname": "AgentGenerator",
        "name": "_get_database_agent_template",
        "col_offset": 4,
        "endline": 376,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 378,
        "complexity": 1,
        "classname": "AgentGenerator",
        "name": "_get_api_agent_template",
        "col_offset": 4,
        "endline": 379,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 381,
        "complexity": 1,
        "classname": "AgentGenerator",
        "name": "_get_test_agent_template",
        "col_offset": 4,
        "endline": 382,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 384,
        "complexity": 1,
        "classname": "AgentGenerator",
        "name": "_get_security_agent_template",
        "col_offset": 4,
        "endline": 385,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 387,
        "complexity": 1,
        "classname": "AgentGenerator",
        "name": "_get_deployment_agent_template",
        "col_offset": 4,
        "endline": 388,
        "closures": []
      }
    ],
    "generators\\skill_generator.py": [
      {
        "type": "method",
        "rank": "B",
        "lineno": 82,
        "complexity": 10,
        "classname": "SkillGenerator",
        "name": "_determine_required_skills",
        "col_offset": 4,
        "endline": 120,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 122,
        "complexity": 7,
        "classname": "SkillGenerator",
        "name": "_has_security_dependencies",
        "col_offset": 4,
        "endline": 131,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 133,
        "complexity": 7,
        "classname": "SkillGenerator",
        "name": "_has_test_frameworks",
        "col_offset": 4,
        "endline": 143,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 21,
        "complexity": 4,
        "name": "SkillGenerator",
        "col_offset": 0,
        "endline": 291,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 22,
            "complexity": 1,
            "classname": "SkillGenerator",
            "name": "__init__",
            "col_offset": 4,
            "endline": 25,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 27,
            "complexity": 1,
            "classname": "SkillGenerator",
            "name": "_load_skill_templates",
            "col_offset": 4,
            "endline": 37,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 40,
            "complexity": 3,
            "classname": "SkillGenerator",
            "name": "generate_skills_for_project",
            "col_offset": 4,
            "endline": 80,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 82,
            "complexity": 10,
            "classname": "SkillGenerator",
            "name": "_determine_required_skills",
            "col_offset": 4,
            "endline": 120,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 122,
            "complexity": 7,
            "classname": "SkillGenerator",
            "name": "_has_security_dependencies",
            "col_offset": 4,
            "endline": 131,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 133,
            "complexity": 7,
            "classname": "SkillGenerator",
            "name": "_has_test_frameworks",
            "col_offset": 4,
            "endline": 143,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 145,
            "complexity": 2,
            "classname": "SkillGenerator",
            "name": "_has_complex_code_structure",
            "col_offset": 4,
            "endline": 151,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 153,
            "complexity": 4,
            "classname": "SkillGenerator",
            "name": "_has_many_dependencies",
            "col_offset": 4,
            "endline": 161,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 163,
            "complexity": 2,
            "classname": "SkillGenerator",
            "name": "_generate_skill_code",
            "col_offset": 4,
            "endline": 200,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 203,
            "complexity": 2,
            "classname": "SkillGenerator",
            "name": "_save_skill_file",
            "col_offset": 4,
            "endline": 222,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 224,
            "complexity": 1,
            "classname": "SkillGenerator",
            "name": "_get_skill_purpose",
            "col_offset": 4,
            "endline": 236,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 238,
            "complexity": 1,
            "classname": "SkillGenerator",
            "name": "_get_skill_inputs",
            "col_offset": 4,
            "endline": 250,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 252,
            "complexity": 1,
            "classname": "SkillGenerator",
            "name": "_get_skill_outputs",
            "col_offset": 4,
            "endline": 264,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 266,
            "complexity": 4,
            "classname": "SkillGenerator",
            "name": "_get_skill_dependencies",
            "col_offset": 4,
            "endline": 291,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 153,
        "complexity": 4,
        "classname": "SkillGenerator",
        "name": "_has_many_dependencies",
        "col_offset": 4,
        "endline": 161,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 266,
        "complexity": 4,
        "classname": "SkillGenerator",
        "name": "_get_skill_dependencies",
        "col_offset": 4,
        "endline": 291,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 40,
        "complexity": 3,
        "classname": "SkillGenerator",
        "name": "generate_skills_for_project",
        "col_offset": 4,
        "endline": 80,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 145,
        "complexity": 2,
        "classname": "SkillGenerator",
        "name": "_has_complex_code_structure",
        "col_offset": 4,
        "endline": 151,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 163,
        "complexity": 2,
        "classname": "SkillGenerator",
        "name": "_generate_skill_code",
        "col_offset": 4,
        "endline": 200,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 203,
        "complexity": 2,
        "classname": "SkillGenerator",
        "name": "_save_skill_file",
        "col_offset": 4,
        "endline": 222,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 22,
        "complexity": 1,
        "classname": "SkillGenerator",
        "name": "__init__",
        "col_offset": 4,
        "endline": 25,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 27,
        "complexity": 1,
        "classname": "SkillGenerator",
        "name": "_load_skill_templates",
        "col_offset": 4,
        "endline": 37,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 224,
        "complexity": 1,
        "classname": "SkillGenerator",
        "name": "_get_skill_purpose",
        "col_offset": 4,
        "endline": 236,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 238,
        "complexity": 1,
        "classname": "SkillGenerator",
        "name": "_get_skill_inputs",
        "col_offset": 4,
        "endline": 250,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 252,
        "complexity": 1,
        "classname": "SkillGenerator",
        "name": "_get_skill_outputs",
        "col_offset": 4,
        "endline": 264,
        "closures": []
      }
    ],
    "generators\\skill_templates.py": [
      {
        "type": "function",
        "rank": "A",
        "lineno": 5,
        "complexity": 1,
        "name": "get_code_analysis_skill_template",
        "col_offset": 0,
        "endline": 7,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 171,
        "complexity": 1,
        "name": "get_performance_optimization_skill_template",
        "col_offset": 0,
        "endline": 173,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 332,
        "complexity": 1,
        "name": "get_generic_skill_template",
        "col_offset": 0,
        "endline": 334,
        "closures": []
      }
    ],
    "generators\\workflow_generator.py": [
      {
        "type": "method",
        "rank": "B",
        "lineno": 75,
        "complexity": 8,
        "classname": "WorkflowGenerator",
        "name": "_determine_required_workflows",
        "col_offset": 4,
        "endline": 104,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 113,
        "complexity": 7,
        "classname": "WorkflowGenerator",
        "name": "_has_security_dependencies",
        "col_offset": 4,
        "endline": 122,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 189,
        "complexity": 4,
        "classname": "WorkflowGenerator",
        "name": "_get_project_dependencies",
        "col_offset": 4,
        "endline": 198,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 16,
        "complexity": 3,
        "name": "WorkflowGenerator",
        "col_offset": 0,
        "endline": 1075,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 17,
            "complexity": 1,
            "classname": "WorkflowGenerator",
            "name": "__init__",
            "col_offset": 4,
            "endline": 20,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 22,
            "complexity": 1,
            "classname": "WorkflowGenerator",
            "name": "_load_workflow_templates",
            "col_offset": 4,
            "endline": 30,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 33,
            "complexity": 3,
            "classname": "WorkflowGenerator",
            "name": "generate_workflows_for_project",
            "col_offset": 4,
            "endline": 73,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 75,
            "complexity": 8,
            "classname": "WorkflowGenerator",
            "name": "_determine_required_workflows",
            "col_offset": 4,
            "endline": 104,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 106,
            "complexity": 2,
            "classname": "WorkflowGenerator",
            "name": "_has_deployment_configs",
            "col_offset": 4,
            "endline": 111,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 113,
            "complexity": 7,
            "classname": "WorkflowGenerator",
            "name": "_has_security_dependencies",
            "col_offset": 4,
            "endline": 122,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 124,
            "complexity": 2,
            "classname": "WorkflowGenerator",
            "name": "_generate_workflow_code",
            "col_offset": 4,
            "endline": 160,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 163,
            "complexity": 2,
            "classname": "WorkflowGenerator",
            "name": "_save_workflow_file",
            "col_offset": 4,
            "endline": 182,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 184,
            "complexity": 1,
            "classname": "WorkflowGenerator",
            "name": "_get_project_frameworks",
            "col_offset": 4,
            "endline": 187,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 189,
            "complexity": 4,
            "classname": "WorkflowGenerator",
            "name": "_get_project_dependencies",
            "col_offset": 4,
            "endline": 198,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 200,
            "complexity": 1,
            "classname": "WorkflowGenerator",
            "name": "_get_testing_workflow_template",
            "col_offset": 4,
            "endline": 202,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 402,
            "complexity": 1,
            "classname": "WorkflowGenerator",
            "name": "_get_build_workflow_template",
            "col_offset": 4,
            "endline": 404,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 574,
            "complexity": 1,
            "classname": "WorkflowGenerator",
            "name": "_get_deployment_workflow_template",
            "col_offset": 4,
            "endline": 576,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 687,
            "complexity": 1,
            "classname": "WorkflowGenerator",
            "name": "_get_ci_cd_workflow_template",
            "col_offset": 4,
            "endline": 689,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 846,
            "complexity": 1,
            "classname": "WorkflowGenerator",
            "name": "_get_security_workflow_template",
            "col_offset": 4,
            "endline": 848,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 959,
            "complexity": 1,
            "classname": "WorkflowGenerator",
            "name": "_get_performance_workflow_template",
            "col_offset": 4,
            "endline": 961,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 1073,
            "complexity": 1,
            "classname": "WorkflowGenerator",
            "name": "_get_generic_workflow_template",
            "col_offset": 4,
            "endline": 1075,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 33,
        "complexity": 3,
        "classname": "WorkflowGenerator",
        "name": "generate_workflows_for_project",
        "col_offset": 4,
        "endline": 73,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 106,
        "complexity": 2,
        "classname": "WorkflowGenerator",
        "name": "_has_deployment_configs",
        "col_offset": 4,
        "endline": 111,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 124,
        "complexity": 2,
        "classname": "WorkflowGenerator",
        "name": "_generate_workflow_code",
        "col_offset": 4,
        "endline": 160,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 163,
        "complexity": 2,
        "classname": "WorkflowGenerator",
        "name": "_save_workflow_file",
        "col_offset": 4,
        "endline": 182,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 17,
        "complexity": 1,
        "classname": "WorkflowGenerator",
        "name": "__init__",
        "col_offset": 4,
        "endline": 20,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 22,
        "complexity": 1,
        "classname": "WorkflowGenerator",
        "name": "_load_workflow_templates",
        "col_offset": 4,
        "endline": 30,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 184,
        "complexity": 1,
        "classname": "WorkflowGenerator",
        "name": "_get_project_frameworks",
        "col_offset": 4,
        "endline": 187,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 200,
        "complexity": 1,
        "classname": "WorkflowGenerator",
        "name": "_get_testing_workflow_template",
        "col_offset": 4,
        "endline": 202,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 402,
        "complexity": 1,
        "classname": "WorkflowGenerator",
        "name": "_get_build_workflow_template",
        "col_offset": 4,
        "endline": 404,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 574,
        "complexity": 1,
        "classname": "WorkflowGenerator",
        "name": "_get_deployment_workflow_template",
        "col_offset": 4,
        "endline": 576,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 687,
        "complexity": 1,
        "classname": "WorkflowGenerator",
        "name": "_get_ci_cd_workflow_template",
        "col_offset": 4,
        "endline": 689,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 846,
        "complexity": 1,
        "classname": "WorkflowGenerator",
        "name": "_get_security_workflow_template",
        "col_offset": 4,
        "endline": 848,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 959,
        "complexity": 1,
        "classname": "WorkflowGenerator",
        "name": "_get_performance_workflow_template",
        "col_offset": 4,
        "endline": 961,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 1073,
        "complexity": 1,
        "classname": "WorkflowGenerator",
        "name": "_get_generic_workflow_template",
        "col_offset": 4,
        "endline": 1075,
        "closures": []
      }
    ],
    "hooks\\__init__.py": [
      {
        "type": "method",
        "rank": "C",
        "lineno": 206,
        "complexity": 12,
        "classname": "PerformanceHook",
        "name": "execute",
        "col_offset": 4,
        "endline": 281,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 61,
        "complexity": 9,
        "classname": "StartupHook",
        "name": "execute",
        "col_offset": 4,
        "endline": 111,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 296,
        "complexity": 9,
        "classname": "SecurityHook",
        "name": "execute",
        "col_offset": 4,
        "endline": 358,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 126,
        "complexity": 8,
        "classname": "ErrorHook",
        "name": "execute",
        "col_offset": 4,
        "endline": 187,
        "closures": []
      },
      {
        "type": "class",
        "rank": "B",
        "lineno": 191,
        "complexity": 8,
        "name": "PerformanceHook",
        "col_offset": 0,
        "endline": 281,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 194,
            "complexity": 1,
            "classname": "PerformanceHook",
            "name": "__init__",
            "col_offset": 4,
            "endline": 203,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 206,
            "complexity": 12,
            "classname": "PerformanceHook",
            "name": "execute",
            "col_offset": 4,
            "endline": 281,
            "closures": []
          }
        ]
      },
      {
        "type": "class",
        "rank": "B",
        "lineno": 51,
        "complexity": 6,
        "name": "StartupHook",
        "col_offset": 0,
        "endline": 111,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 54,
            "complexity": 1,
            "classname": "StartupHook",
            "name": "__init__",
            "col_offset": 4,
            "endline": 59,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 61,
            "complexity": 9,
            "classname": "StartupHook",
            "name": "execute",
            "col_offset": 4,
            "endline": 111,
            "closures": []
          }
        ]
      },
      {
        "type": "class",
        "rank": "B",
        "lineno": 115,
        "complexity": 6,
        "name": "ErrorHook",
        "col_offset": 0,
        "endline": 187,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 118,
            "complexity": 1,
            "classname": "ErrorHook",
            "name": "__init__",
            "col_offset": 4,
            "endline": 124,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 126,
            "complexity": 8,
            "classname": "ErrorHook",
            "name": "execute",
            "col_offset": 4,
            "endline": 187,
            "closures": []
          }
        ]
      },
      {
        "type": "class",
        "rank": "B",
        "lineno": 285,
        "complexity": 6,
        "name": "SecurityHook",
        "col_offset": 0,
        "endline": 358,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 288,
            "complexity": 1,
            "classname": "SecurityHook",
            "name": "__init__",
            "col_offset": 4,
            "endline": 294,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 296,
            "complexity": 9,
            "classname": "SecurityHook",
            "name": "execute",
            "col_offset": 4,
            "endline": 358,
            "closures": []
          }
        ]
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 363,
        "complexity": 2,
        "name": "initialize",
        "col_offset": 0,
        "endline": 378,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 14,
        "complexity": 2,
        "name": "BaseHook",
        "col_offset": 0,
        "endline": 48,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 17,
            "complexity": 1,
            "classname": "BaseHook",
            "name": "__init__",
            "col_offset": 4,
            "endline": 23,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 26,
            "complexity": 1,
            "classname": "BaseHook",
            "name": "execute",
            "col_offset": 4,
            "endline": 28,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 30,
            "complexity": 1,
            "classname": "BaseHook",
            "name": "register_callback",
            "col_offset": 4,
            "endline": 33,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 35,
            "complexity": 1,
            "classname": "BaseHook",
            "name": "get_info",
            "col_offset": 4,
            "endline": 42,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 45,
            "complexity": 1,
            "classname": "BaseHook",
            "name": "initialize",
            "col_offset": 4,
            "endline": 48,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 17,
        "complexity": 1,
        "classname": "BaseHook",
        "name": "__init__",
        "col_offset": 4,
        "endline": 23,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 26,
        "complexity": 1,
        "classname": "BaseHook",
        "name": "execute",
        "col_offset": 4,
        "endline": 28,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 30,
        "complexity": 1,
        "classname": "BaseHook",
        "name": "register_callback",
        "col_offset": 4,
        "endline": 33,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 35,
        "complexity": 1,
        "classname": "BaseHook",
        "name": "get_info",
        "col_offset": 4,
        "endline": 42,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 45,
        "complexity": 1,
        "classname": "BaseHook",
        "name": "initialize",
        "col_offset": 4,
        "endline": 48,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 54,
        "complexity": 1,
        "classname": "StartupHook",
        "name": "__init__",
        "col_offset": 4,
        "endline": 59,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 118,
        "complexity": 1,
        "classname": "ErrorHook",
        "name": "__init__",
        "col_offset": 4,
        "endline": 124,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 194,
        "complexity": 1,
        "classname": "PerformanceHook",
        "name": "__init__",
        "col_offset": 4,
        "endline": 203,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 288,
        "complexity": 1,
        "classname": "SecurityHook",
        "name": "__init__",
        "col_offset": 4,
        "endline": 294,
        "closures": []
      }
    ],
    "llm\\api_models.py": [
      {
        "type": "method",
        "rank": "C",
        "lineno": 400,
        "complexity": 13,
        "classname": "APIModelManager",
        "name": "_generate_google_streaming_response",
        "col_offset": 4,
        "endline": 455,
        "closures": []
      },
      {
        "type": "method",
        "rank": "C",
        "lineno": 347,
        "complexity": 12,
        "classname": "APIModelManager",
        "name": "_generate_anthropic_streaming_response",
        "col_offset": 4,
        "endline": 398,
        "closures": []
      },
      {
        "type": "method",
        "rank": "C",
        "lineno": 294,
        "complexity": 11,
        "classname": "APIModelManager",
        "name": "_generate_openai_streaming_response",
        "col_offset": 4,
        "endline": 345,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 269,
        "complexity": 9,
        "classname": "APIModelManager",
        "name": "generate_streaming_response",
        "col_offset": 4,
        "endline": 292,
        "closures": []
      },
      {
        "type": "class",
        "rank": "B",
        "lineno": 14,
        "complexity": 6,
        "name": "APIModelManager",
        "col_offset": 0,
        "endline": 494,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 17,
            "complexity": 1,
            "classname": "APIModelManager",
            "name": "__init__",
            "col_offset": 4,
            "endline": 71,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 75,
            "complexity": 2,
            "classname": "APIModelManager",
            "name": "initialize",
            "col_offset": 4,
            "endline": 84,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 86,
            "complexity": 4,
            "classname": "APIModelManager",
            "name": "_load_available_models",
            "col_offset": 4,
            "endline": 99,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 103,
            "complexity": 2,
            "classname": "APIModelManager",
            "name": "get_available_models",
            "col_offset": 4,
            "endline": 105,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 107,
            "complexity": 1,
            "classname": "APIModelManager",
            "name": "is_model_available",
            "col_offset": 4,
            "endline": 109,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 111,
            "complexity": 3,
            "classname": "APIModelManager",
            "name": "get_model_config",
            "col_offset": 4,
            "endline": 116,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 118,
            "complexity": 3,
            "classname": "APIModelManager",
            "name": "get_model_info",
            "col_offset": 4,
            "endline": 123,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 125,
            "complexity": 6,
            "classname": "APIModelManager",
            "name": "generate_response",
            "col_offset": 4,
            "endline": 145,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 147,
            "complexity": 3,
            "classname": "APIModelManager",
            "name": "_generate_openai_response",
            "col_offset": 4,
            "endline": 185,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 187,
            "complexity": 3,
            "classname": "APIModelManager",
            "name": "_generate_anthropic_response",
            "col_offset": 4,
            "endline": 224,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 226,
            "complexity": 3,
            "classname": "APIModelManager",
            "name": "_generate_google_response",
            "col_offset": 4,
            "endline": 267,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 269,
            "complexity": 9,
            "classname": "APIModelManager",
            "name": "generate_streaming_response",
            "col_offset": 4,
            "endline": 292,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 294,
            "complexity": 11,
            "classname": "APIModelManager",
            "name": "_generate_openai_streaming_response",
            "col_offset": 4,
            "endline": 345,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 347,
            "complexity": 12,
            "classname": "APIModelManager",
            "name": "_generate_anthropic_streaming_response",
            "col_offset": 4,
            "endline": 398,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 400,
            "complexity": 13,
            "classname": "APIModelManager",
            "name": "_generate_google_streaming_response",
            "col_offset": 4,
            "endline": 455,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 457,
            "complexity": 6,
            "classname": "APIModelManager",
            "name": "health_check",
            "col_offset": 4,
            "endline": 484,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 487,
            "complexity": 2,
            "classname": "APIModelManager",
            "name": "cleanup",
            "col_offset": 4,
            "endline": 494,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 125,
        "complexity": 6,
        "classname": "APIModelManager",
        "name": "generate_response",
        "col_offset": 4,
        "endline": 145,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 457,
        "complexity": 6,
        "classname": "APIModelManager",
        "name": "health_check",
        "col_offset": 4,
        "endline": 484,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 86,
        "complexity": 4,
        "classname": "APIModelManager",
        "name": "_load_available_models",
        "col_offset": 4,
        "endline": 99,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 111,
        "complexity": 3,
        "classname": "APIModelManager",
        "name": "get_model_config",
        "col_offset": 4,
        "endline": 116,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 118,
        "complexity": 3,
        "classname": "APIModelManager",
        "name": "get_model_info",
        "col_offset": 4,
        "endline": 123,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 147,
        "complexity": 3,
        "classname": "APIModelManager",
        "name": "_generate_openai_response",
        "col_offset": 4,
        "endline": 185,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 187,
        "complexity": 3,
        "classname": "APIModelManager",
        "name": "_generate_anthropic_response",
        "col_offset": 4,
        "endline": 224,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 226,
        "complexity": 3,
        "classname": "APIModelManager",
        "name": "_generate_google_response",
        "col_offset": 4,
        "endline": 267,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 75,
        "complexity": 2,
        "classname": "APIModelManager",
        "name": "initialize",
        "col_offset": 4,
        "endline": 84,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 103,
        "complexity": 2,
        "classname": "APIModelManager",
        "name": "get_available_models",
        "col_offset": 4,
        "endline": 105,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 487,
        "complexity": 2,
        "classname": "APIModelManager",
        "name": "cleanup",
        "col_offset": 4,
        "endline": 494,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 17,
        "complexity": 1,
        "classname": "APIModelManager",
        "name": "__init__",
        "col_offset": 4,
        "endline": 71,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 107,
        "complexity": 1,
        "classname": "APIModelManager",
        "name": "is_model_available",
        "col_offset": 4,
        "endline": 109,
        "closures": []
      }
    ],
    "llm\\claude_flow_integration.py": [
      {
        "type": "method",
        "rank": "B",
        "lineno": 395,
        "complexity": 8,
        "classname": "ClaudeFlowIntegration",
        "name": "health_check",
        "col_offset": 4,
        "endline": 457,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 35,
        "complexity": 6,
        "classname": "ClaudeFlowIntegration",
        "name": "initialize",
        "col_offset": 4,
        "endline": 88,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 130,
        "complexity": 6,
        "classname": "ClaudeFlowIntegration",
        "name": "execute_task",
        "col_offset": 4,
        "endline": 176,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 17,
        "complexity": 4,
        "name": "ClaudeFlowIntegration",
        "col_offset": 0,
        "endline": 512,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 29,
            "complexity": 1,
            "classname": "ClaudeFlowIntegration",
            "name": "__init__",
            "col_offset": 4,
            "endline": 33,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 35,
            "complexity": 6,
            "classname": "ClaudeFlowIntegration",
            "name": "initialize",
            "col_offset": 4,
            "endline": 88,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 90,
            "complexity": 3,
            "classname": "ClaudeFlowIntegration",
            "name": "init_swarm",
            "col_offset": 4,
            "endline": 128,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 130,
            "complexity": 6,
            "classname": "ClaudeFlowIntegration",
            "name": "execute_task",
            "col_offset": 4,
            "endline": 176,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 178,
            "complexity": 2,
            "classname": "ClaudeFlowIntegration",
            "name": "spawn_agent",
            "col_offset": 4,
            "endline": 218,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 220,
            "complexity": 3,
            "classname": "ClaudeFlowIntegration",
            "name": "memory_store",
            "col_offset": 4,
            "endline": 272,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 274,
            "complexity": 3,
            "classname": "ClaudeFlowIntegration",
            "name": "memory_query",
            "col_offset": 4,
            "endline": 318,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 320,
            "complexity": 2,
            "classname": "ClaudeFlowIntegration",
            "name": "memory_status",
            "col_offset": 4,
            "endline": 345,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 347,
            "complexity": 3,
            "classname": "ClaudeFlowIntegration",
            "name": "init_hive_mind",
            "col_offset": 4,
            "endline": 393,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 395,
            "complexity": 8,
            "classname": "ClaudeFlowIntegration",
            "name": "health_check",
            "col_offset": 4,
            "endline": 457,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 459,
            "complexity": 2,
            "classname": "ClaudeFlowIntegration",
            "name": "get_swarm_status",
            "col_offset": 4,
            "endline": 479,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 481,
            "complexity": 2,
            "classname": "ClaudeFlowIntegration",
            "name": "execute_with_mcp_tools",
            "col_offset": 4,
            "endline": 512,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 90,
        "complexity": 3,
        "classname": "ClaudeFlowIntegration",
        "name": "init_swarm",
        "col_offset": 4,
        "endline": 128,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 220,
        "complexity": 3,
        "classname": "ClaudeFlowIntegration",
        "name": "memory_store",
        "col_offset": 4,
        "endline": 272,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 274,
        "complexity": 3,
        "classname": "ClaudeFlowIntegration",
        "name": "memory_query",
        "col_offset": 4,
        "endline": 318,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 347,
        "complexity": 3,
        "classname": "ClaudeFlowIntegration",
        "name": "init_hive_mind",
        "col_offset": 4,
        "endline": 393,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 519,
        "complexity": 2,
        "name": "get_claude_flow",
        "col_offset": 0,
        "endline": 527,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 178,
        "complexity": 2,
        "classname": "ClaudeFlowIntegration",
        "name": "spawn_agent",
        "col_offset": 4,
        "endline": 218,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 320,
        "complexity": 2,
        "classname": "ClaudeFlowIntegration",
        "name": "memory_status",
        "col_offset": 4,
        "endline": 345,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 459,
        "complexity": 2,
        "classname": "ClaudeFlowIntegration",
        "name": "get_swarm_status",
        "col_offset": 4,
        "endline": 479,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 481,
        "complexity": 2,
        "classname": "ClaudeFlowIntegration",
        "name": "execute_with_mcp_tools",
        "col_offset": 4,
        "endline": 512,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 29,
        "complexity": 1,
        "classname": "ClaudeFlowIntegration",
        "name": "__init__",
        "col_offset": 4,
        "endline": 33,
        "closures": []
      }
    ],
    "llm\\local_models.py": [
      {
        "type": "method",
        "rank": "C",
        "lineno": 363,
        "complexity": 11,
        "classname": "LocalModelManager",
        "name": "_generate_lmstudio_streaming_response",
        "col_offset": 4,
        "endline": 405,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 299,
        "complexity": 9,
        "classname": "LocalModelManager",
        "name": "generate_streaming_response",
        "col_offset": 4,
        "endline": 322,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 324,
        "complexity": 7,
        "classname": "LocalModelManager",
        "name": "_generate_ollama_streaming_response",
        "col_offset": 4,
        "endline": 361,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 202,
        "complexity": 6,
        "classname": "LocalModelManager",
        "name": "generate_response",
        "col_offset": 4,
        "endline": 222,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 157,
        "complexity": 5,
        "classname": "LocalModelManager",
        "name": "_get_gpt4all_models",
        "col_offset": 4,
        "endline": 178,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 15,
        "complexity": 4,
        "name": "LocalModelManager",
        "col_offset": 0,
        "endline": 454,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 18,
            "complexity": 1,
            "classname": "LocalModelManager",
            "name": "__init__",
            "col_offset": 4,
            "endline": 32,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 35,
            "complexity": 2,
            "classname": "LocalModelManager",
            "name": "initialize",
            "col_offset": 4,
            "endline": 47,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 49,
            "complexity": 3,
            "classname": "LocalModelManager",
            "name": "_check_services",
            "col_offset": 4,
            "endline": 57,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 59,
            "complexity": 2,
            "classname": "LocalModelManager",
            "name": "_check_ollama",
            "col_offset": 4,
            "endline": 66,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 68,
            "complexity": 2,
            "classname": "LocalModelManager",
            "name": "_check_lmstudio",
            "col_offset": 4,
            "endline": 75,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 77,
            "complexity": 3,
            "classname": "LocalModelManager",
            "name": "_check_gpt4all",
            "col_offset": 4,
            "endline": 82,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 84,
            "complexity": 4,
            "classname": "LocalModelManager",
            "name": "_load_available_models",
            "col_offset": 4,
            "endline": 101,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 103,
            "complexity": 4,
            "classname": "LocalModelManager",
            "name": "_get_ollama_models",
            "col_offset": 4,
            "endline": 129,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 131,
            "complexity": 4,
            "classname": "LocalModelManager",
            "name": "_get_lmstudio_models",
            "col_offset": 4,
            "endline": 155,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 157,
            "complexity": 5,
            "classname": "LocalModelManager",
            "name": "_get_gpt4all_models",
            "col_offset": 4,
            "endline": 178,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 180,
            "complexity": 2,
            "classname": "LocalModelManager",
            "name": "get_available_models",
            "col_offset": 4,
            "endline": 182,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 184,
            "complexity": 1,
            "classname": "LocalModelManager",
            "name": "is_model_available",
            "col_offset": 4,
            "endline": 186,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 188,
            "complexity": 3,
            "classname": "LocalModelManager",
            "name": "get_model_config",
            "col_offset": 4,
            "endline": 193,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 195,
            "complexity": 3,
            "classname": "LocalModelManager",
            "name": "get_model_info",
            "col_offset": 4,
            "endline": 200,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 202,
            "complexity": 6,
            "classname": "LocalModelManager",
            "name": "generate_response",
            "col_offset": 4,
            "endline": 222,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 224,
            "complexity": 3,
            "classname": "LocalModelManager",
            "name": "_generate_ollama_response",
            "col_offset": 4,
            "endline": 255,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 257,
            "complexity": 3,
            "classname": "LocalModelManager",
            "name": "_generate_lmstudio_response",
            "col_offset": 4,
            "endline": 286,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 288,
            "complexity": 2,
            "classname": "LocalModelManager",
            "name": "_generate_gpt4all_response",
            "col_offset": 4,
            "endline": 297,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 299,
            "complexity": 9,
            "classname": "LocalModelManager",
            "name": "generate_streaming_response",
            "col_offset": 4,
            "endline": 322,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 324,
            "complexity": 7,
            "classname": "LocalModelManager",
            "name": "_generate_ollama_streaming_response",
            "col_offset": 4,
            "endline": 361,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 363,
            "complexity": 11,
            "classname": "LocalModelManager",
            "name": "_generate_lmstudio_streaming_response",
            "col_offset": 4,
            "endline": 405,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 407,
            "complexity": 3,
            "classname": "LocalModelManager",
            "name": "_generate_gpt4all_streaming_response",
            "col_offset": 4,
            "endline": 419,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 421,
            "complexity": 3,
            "classname": "LocalModelManager",
            "name": "health_check",
            "col_offset": 4,
            "endline": 444,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 447,
            "complexity": 2,
            "classname": "LocalModelManager",
            "name": "cleanup",
            "col_offset": 4,
            "endline": 454,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 84,
        "complexity": 4,
        "classname": "LocalModelManager",
        "name": "_load_available_models",
        "col_offset": 4,
        "endline": 101,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 103,
        "complexity": 4,
        "classname": "LocalModelManager",
        "name": "_get_ollama_models",
        "col_offset": 4,
        "endline": 129,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 131,
        "complexity": 4,
        "classname": "LocalModelManager",
        "name": "_get_lmstudio_models",
        "col_offset": 4,
        "endline": 155,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 49,
        "complexity": 3,
        "classname": "LocalModelManager",
        "name": "_check_services",
        "col_offset": 4,
        "endline": 57,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 77,
        "complexity": 3,
        "classname": "LocalModelManager",
        "name": "_check_gpt4all",
        "col_offset": 4,
        "endline": 82,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 188,
        "complexity": 3,
        "classname": "LocalModelManager",
        "name": "get_model_config",
        "col_offset": 4,
        "endline": 193,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 195,
        "complexity": 3,
        "classname": "LocalModelManager",
        "name": "get_model_info",
        "col_offset": 4,
        "endline": 200,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 224,
        "complexity": 3,
        "classname": "LocalModelManager",
        "name": "_generate_ollama_response",
        "col_offset": 4,
        "endline": 255,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 257,
        "complexity": 3,
        "classname": "LocalModelManager",
        "name": "_generate_lmstudio_response",
        "col_offset": 4,
        "endline": 286,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 407,
        "complexity": 3,
        "classname": "LocalModelManager",
        "name": "_generate_gpt4all_streaming_response",
        "col_offset": 4,
        "endline": 419,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 421,
        "complexity": 3,
        "classname": "LocalModelManager",
        "name": "health_check",
        "col_offset": 4,
        "endline": 444,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 35,
        "complexity": 2,
        "classname": "LocalModelManager",
        "name": "initialize",
        "col_offset": 4,
        "endline": 47,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 59,
        "complexity": 2,
        "classname": "LocalModelManager",
        "name": "_check_ollama",
        "col_offset": 4,
        "endline": 66,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 68,
        "complexity": 2,
        "classname": "LocalModelManager",
        "name": "_check_lmstudio",
        "col_offset": 4,
        "endline": 75,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 180,
        "complexity": 2,
        "classname": "LocalModelManager",
        "name": "get_available_models",
        "col_offset": 4,
        "endline": 182,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 288,
        "complexity": 2,
        "classname": "LocalModelManager",
        "name": "_generate_gpt4all_response",
        "col_offset": 4,
        "endline": 297,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 447,
        "complexity": 2,
        "classname": "LocalModelManager",
        "name": "cleanup",
        "col_offset": 4,
        "endline": 454,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 18,
        "complexity": 1,
        "classname": "LocalModelManager",
        "name": "__init__",
        "col_offset": 4,
        "endline": 32,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 184,
        "complexity": 1,
        "classname": "LocalModelManager",
        "name": "is_model_available",
        "col_offset": 4,
        "endline": 186,
        "closures": []
      }
    ],
    "llm\\model_manager.py": [
      {
        "type": "method",
        "rank": "B",
        "lineno": 67,
        "complexity": 8,
        "classname": "ModelManager",
        "name": "set_model",
        "col_offset": 4,
        "endline": 107,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 139,
        "complexity": 7,
        "classname": "ModelManager",
        "name": "generate_streaming_response",
        "col_offset": 4,
        "endline": 169,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 186,
        "complexity": 6,
        "classname": "ModelManager",
        "name": "get_model_info",
        "col_offset": 4,
        "endline": 205,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 207,
        "complexity": 6,
        "classname": "ModelManager",
        "name": "test_model",
        "col_offset": 4,
        "endline": 240,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 17,
        "complexity": 5,
        "name": "ModelManager",
        "col_offset": 0,
        "endline": 284,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 20,
            "complexity": 1,
            "classname": "ModelManager",
            "name": "__init__",
            "col_offset": 4,
            "endline": 25,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 27,
            "complexity": 2,
            "classname": "ModelManager",
            "name": "initialize",
            "col_offset": 4,
            "endline": 43,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 45,
            "complexity": 4,
            "classname": "ModelManager",
            "name": "set_default_model",
            "col_offset": 4,
            "endline": 65,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 67,
            "complexity": 8,
            "classname": "ModelManager",
            "name": "set_model",
            "col_offset": 4,
            "endline": 107,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 109,
            "complexity": 5,
            "classname": "ModelManager",
            "name": "generate_response",
            "col_offset": 4,
            "endline": 137,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 139,
            "complexity": 7,
            "classname": "ModelManager",
            "name": "generate_streaming_response",
            "col_offset": 4,
            "endline": 169,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 171,
            "complexity": 2,
            "classname": "ModelManager",
            "name": "get_available_models",
            "col_offset": 4,
            "endline": 184,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 186,
            "complexity": 6,
            "classname": "ModelManager",
            "name": "get_model_info",
            "col_offset": 4,
            "endline": 205,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 207,
            "complexity": 6,
            "classname": "ModelManager",
            "name": "test_model",
            "col_offset": 4,
            "endline": 240,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 243,
            "complexity": 1,
            "classname": "ModelManager",
            "name": "get_current_model",
            "col_offset": 4,
            "endline": 248,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 251,
            "complexity": 4,
            "classname": "ModelManager",
            "name": "health_check",
            "col_offset": 4,
            "endline": 273,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 276,
            "complexity": 2,
            "classname": "ModelManager",
            "name": "cleanup",
            "col_offset": 4,
            "endline": 284,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 109,
        "complexity": 5,
        "classname": "ModelManager",
        "name": "generate_response",
        "col_offset": 4,
        "endline": 137,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 45,
        "complexity": 4,
        "classname": "ModelManager",
        "name": "set_default_model",
        "col_offset": 4,
        "endline": 65,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 251,
        "complexity": 4,
        "classname": "ModelManager",
        "name": "health_check",
        "col_offset": 4,
        "endline": 273,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 27,
        "complexity": 2,
        "classname": "ModelManager",
        "name": "initialize",
        "col_offset": 4,
        "endline": 43,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 171,
        "complexity": 2,
        "classname": "ModelManager",
        "name": "get_available_models",
        "col_offset": 4,
        "endline": 184,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 276,
        "complexity": 2,
        "classname": "ModelManager",
        "name": "cleanup",
        "col_offset": 4,
        "endline": 284,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 20,
        "complexity": 1,
        "classname": "ModelManager",
        "name": "__init__",
        "col_offset": 4,
        "endline": 25,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 243,
        "complexity": 1,
        "classname": "ModelManager",
        "name": "get_current_model",
        "col_offset": 4,
        "endline": 248,
        "closures": []
      }
    ],
    "llm\\prompt_templates.py": [
      {
        "type": "class",
        "rank": "A",
        "lineno": 92,
        "complexity": 2,
        "name": "PromptTemplates",
        "col_offset": 0,
        "endline": 670,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 95,
            "complexity": 1,
            "classname": "PromptTemplates",
            "name": "__init__",
            "col_offset": 4,
            "endline": 104,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 107,
            "complexity": 2,
            "classname": "PromptTemplates",
            "name": "get_template",
            "col_offset": 4,
            "endline": 113,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 115,
            "complexity": 1,
            "classname": "PromptTemplates",
            "name": "_get_project_analysis_template",
            "col_offset": 4,
            "endline": 117,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 174,
            "complexity": 1,
            "classname": "PromptTemplates",
            "name": "_get_code_review_template",
            "col_offset": 4,
            "endline": 176,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 225,
            "complexity": 1,
            "classname": "PromptTemplates",
            "name": "_get_optimization_template",
            "col_offset": 4,
            "endline": 227,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 283,
            "complexity": 1,
            "classname": "PromptTemplates",
            "name": "_get_test_generation_template",
            "col_offset": 4,
            "endline": 285,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 357,
            "complexity": 1,
            "classname": "PromptTemplates",
            "name": "_get_documentation_template",
            "col_offset": 4,
            "endline": 359,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 423,
            "complexity": 1,
            "classname": "PromptTemplates",
            "name": "_get_security_analysis_template",
            "col_offset": 4,
            "endline": 425,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 493,
            "complexity": 1,
            "classname": "PromptTemplates",
            "name": "_get_deployment_plan_template",
            "col_offset": 4,
            "endline": 495,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 566,
            "complexity": 1,
            "classname": "PromptTemplates",
            "name": "_get_chat_response_template",
            "col_offset": 4,
            "endline": 568,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 608,
            "complexity": 2,
            "classname": "PromptTemplates",
            "name": "get_custom_template",
            "col_offset": 4,
            "endline": 632,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 635,
            "complexity": 1,
            "classname": "PromptTemplates",
            "name": "list_templates",
            "col_offset": 4,
            "endline": 637,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 639,
            "complexity": 2,
            "classname": "PromptTemplates",
            "name": "get_template_info",
            "col_offset": 4,
            "endline": 654,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 657,
            "complexity": 1,
            "classname": "PromptTemplates",
            "name": "_get_template_description",
            "col_offset": 4,
            "endline": 670,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 107,
        "complexity": 2,
        "classname": "PromptTemplates",
        "name": "get_template",
        "col_offset": 4,
        "endline": 113,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 608,
        "complexity": 2,
        "classname": "PromptTemplates",
        "name": "get_custom_template",
        "col_offset": 4,
        "endline": 632,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 639,
        "complexity": 2,
        "classname": "PromptTemplates",
        "name": "get_template_info",
        "col_offset": 4,
        "endline": 654,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 95,
        "complexity": 1,
        "classname": "PromptTemplates",
        "name": "__init__",
        "col_offset": 4,
        "endline": 104,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 115,
        "complexity": 1,
        "classname": "PromptTemplates",
        "name": "_get_project_analysis_template",
        "col_offset": 4,
        "endline": 117,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 174,
        "complexity": 1,
        "classname": "PromptTemplates",
        "name": "_get_code_review_template",
        "col_offset": 4,
        "endline": 176,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 225,
        "complexity": 1,
        "classname": "PromptTemplates",
        "name": "_get_optimization_template",
        "col_offset": 4,
        "endline": 227,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 283,
        "complexity": 1,
        "classname": "PromptTemplates",
        "name": "_get_test_generation_template",
        "col_offset": 4,
        "endline": 285,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 357,
        "complexity": 1,
        "classname": "PromptTemplates",
        "name": "_get_documentation_template",
        "col_offset": 4,
        "endline": 359,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 423,
        "complexity": 1,
        "classname": "PromptTemplates",
        "name": "_get_security_analysis_template",
        "col_offset": 4,
        "endline": 425,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 493,
        "complexity": 1,
        "classname": "PromptTemplates",
        "name": "_get_deployment_plan_template",
        "col_offset": 4,
        "endline": 495,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 566,
        "complexity": 1,
        "classname": "PromptTemplates",
        "name": "_get_chat_response_template",
        "col_offset": 4,
        "endline": 568,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 635,
        "complexity": 1,
        "classname": "PromptTemplates",
        "name": "list_templates",
        "col_offset": 4,
        "endline": 637,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 657,
        "complexity": 1,
        "classname": "PromptTemplates",
        "name": "_get_template_description",
        "col_offset": 4,
        "endline": 670,
        "closures": []
      }
    ],
    "mcps\\__init__.py": [
      {
        "type": "method",
        "rank": "D",
        "lineno": 360,
        "complexity": 24,
        "classname": "ValidationMCP",
        "name": "_validate_data",
        "col_offset": 4,
        "endline": 414,
        "closures": []
      },
      {
        "type": "method",
        "rank": "C",
        "lineno": 417,
        "complexity": 15,
        "classname": "ValidationMCP",
        "name": "_validate_schema",
        "col_offset": 4,
        "endline": 456,
        "closures": []
      },
      {
        "type": "class",
        "rank": "C",
        "lineno": 297,
        "complexity": 12,
        "name": "ValidationMCP",
        "col_offset": 0,
        "endline": 534,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 300,
            "complexity": 1,
            "classname": "ValidationMCP",
            "name": "__init__",
            "col_offset": 4,
            "endline": 312,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 314,
            "complexity": 6,
            "classname": "ValidationMCP",
            "name": "process",
            "col_offset": 4,
            "endline": 357,
            "closures": []
          },
          {
            "type": "method",
            "rank": "D",
            "lineno": 360,
            "complexity": 24,
            "classname": "ValidationMCP",
            "name": "_validate_data",
            "col_offset": 4,
            "endline": 414,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 417,
            "complexity": 15,
            "classname": "ValidationMCP",
            "name": "_validate_schema",
            "col_offset": 4,
            "endline": 456,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 459,
            "complexity": 10,
            "classname": "ValidationMCP",
            "name": "_sanitize_input",
            "col_offset": 4,
            "endline": 500,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 503,
            "complexity": 10,
            "classname": "ValidationMCP",
            "name": "_check_constraints",
            "col_offset": 4,
            "endline": 534,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 459,
        "complexity": 10,
        "classname": "ValidationMCP",
        "name": "_sanitize_input",
        "col_offset": 4,
        "endline": 500,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 503,
        "complexity": 10,
        "classname": "ValidationMCP",
        "name": "_check_constraints",
        "col_offset": 4,
        "endline": 534,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 602,
        "complexity": 8,
        "classname": "RateLimitMCP",
        "name": "_check_rate_limit",
        "col_offset": 4,
        "endline": 641,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 107,
        "complexity": 7,
        "classname": "AuthenticationMCP",
        "name": "process",
        "col_offset": 4,
        "endline": 152,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 155,
        "complexity": 6,
        "classname": "AuthenticationMCP",
        "name": "_handle_login",
        "col_offset": 4,
        "endline": 194,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 314,
        "complexity": 6,
        "classname": "ValidationMCP",
        "name": "process",
        "col_offset": 4,
        "endline": 357,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 556,
        "complexity": 6,
        "classname": "RateLimitMCP",
        "name": "process",
        "col_offset": 4,
        "endline": 599,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 54,
        "complexity": 5,
        "classname": "BaseMCP",
        "name": "trigger_event",
        "col_offset": 4,
        "endline": 64,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 89,
        "complexity": 5,
        "name": "AuthenticationMCP",
        "col_offset": 0,
        "endline": 294,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 92,
            "complexity": 1,
            "classname": "AuthenticationMCP",
            "name": "__init__",
            "col_offset": 4,
            "endline": 105,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 107,
            "complexity": 7,
            "classname": "AuthenticationMCP",
            "name": "process",
            "col_offset": 4,
            "endline": 152,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 155,
            "complexity": 6,
            "classname": "AuthenticationMCP",
            "name": "_handle_login",
            "col_offset": 4,
            "endline": 194,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 197,
            "complexity": 3,
            "classname": "AuthenticationMCP",
            "name": "_handle_logout",
            "col_offset": 4,
            "endline": 212,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 214,
            "complexity": 4,
            "classname": "AuthenticationMCP",
            "name": "_handle_validate_token",
            "col_offset": 4,
            "endline": 234,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 236,
            "complexity": 3,
            "classname": "AuthenticationMCP",
            "name": "_handle_refresh_token",
            "col_offset": 4,
            "endline": 261,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 263,
            "complexity": 5,
            "classname": "AuthenticationMCP",
            "name": "_handle_check_permissions",
            "col_offset": 4,
            "endline": 294,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 263,
        "complexity": 5,
        "classname": "AuthenticationMCP",
        "name": "_handle_check_permissions",
        "col_offset": 4,
        "endline": 294,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 538,
        "complexity": 5,
        "name": "RateLimitMCP",
        "col_offset": 0,
        "endline": 703,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 541,
            "complexity": 1,
            "classname": "RateLimitMCP",
            "name": "__init__",
            "col_offset": 4,
            "endline": 554,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 556,
            "complexity": 6,
            "classname": "RateLimitMCP",
            "name": "process",
            "col_offset": 4,
            "endline": 599,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 602,
            "complexity": 8,
            "classname": "RateLimitMCP",
            "name": "_check_rate_limit",
            "col_offset": 4,
            "endline": 641,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 644,
            "complexity": 3,
            "classname": "RateLimitMCP",
            "name": "_increment_counter",
            "col_offset": 4,
            "endline": 663,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 666,
            "complexity": 4,
            "classname": "RateLimitMCP",
            "name": "_reset_limits",
            "col_offset": 4,
            "endline": 680,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 682,
            "complexity": 4,
            "classname": "RateLimitMCP",
            "name": "_get_rate_limit_stats",
            "col_offset": 4,
            "endline": 703,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 214,
        "complexity": 4,
        "classname": "AuthenticationMCP",
        "name": "_handle_validate_token",
        "col_offset": 4,
        "endline": 234,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 666,
        "complexity": 4,
        "classname": "RateLimitMCP",
        "name": "_reset_limits",
        "col_offset": 4,
        "endline": 680,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 682,
        "complexity": 4,
        "classname": "RateLimitMCP",
        "name": "_get_rate_limit_stats",
        "col_offset": 4,
        "endline": 703,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 24,
        "complexity": 3,
        "name": "BaseMCP",
        "col_offset": 0,
        "endline": 86,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 27,
            "complexity": 1,
            "classname": "BaseMCP",
            "name": "__init__",
            "col_offset": 4,
            "endline": 40,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 43,
            "complexity": 1,
            "classname": "BaseMCP",
            "name": "process",
            "col_offset": 4,
            "endline": 45,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 47,
            "complexity": 2,
            "classname": "BaseMCP",
            "name": "register_handler",
            "col_offset": 4,
            "endline": 52,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 54,
            "complexity": 5,
            "classname": "BaseMCP",
            "name": "trigger_event",
            "col_offset": 4,
            "endline": 64,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 66,
            "complexity": 2,
            "classname": "BaseMCP",
            "name": "get_info",
            "col_offset": 4,
            "endline": 75,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 78,
            "complexity": 1,
            "classname": "BaseMCP",
            "name": "initialize",
            "col_offset": 4,
            "endline": 81,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 83,
            "complexity": 1,
            "classname": "BaseMCP",
            "name": "shutdown",
            "col_offset": 4,
            "endline": 86,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 197,
        "complexity": 3,
        "classname": "AuthenticationMCP",
        "name": "_handle_logout",
        "col_offset": 4,
        "endline": 212,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 236,
        "complexity": 3,
        "classname": "AuthenticationMCP",
        "name": "_handle_refresh_token",
        "col_offset": 4,
        "endline": 261,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 644,
        "complexity": 3,
        "classname": "RateLimitMCP",
        "name": "_increment_counter",
        "col_offset": 4,
        "endline": 663,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 709,
        "complexity": 2,
        "name": "initialize",
        "col_offset": 0,
        "endline": 723,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 47,
        "complexity": 2,
        "classname": "BaseMCP",
        "name": "register_handler",
        "col_offset": 4,
        "endline": 52,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 66,
        "complexity": 2,
        "classname": "BaseMCP",
        "name": "get_info",
        "col_offset": 4,
        "endline": 75,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 15,
        "complexity": 1,
        "name": "MCPStatus",
        "col_offset": 0,
        "endline": 21,
        "methods": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 27,
        "complexity": 1,
        "classname": "BaseMCP",
        "name": "__init__",
        "col_offset": 4,
        "endline": 40,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 43,
        "complexity": 1,
        "classname": "BaseMCP",
        "name": "process",
        "col_offset": 4,
        "endline": 45,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 78,
        "complexity": 1,
        "classname": "BaseMCP",
        "name": "initialize",
        "col_offset": 4,
        "endline": 81,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 83,
        "complexity": 1,
        "classname": "BaseMCP",
        "name": "shutdown",
        "col_offset": 4,
        "endline": 86,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 92,
        "complexity": 1,
        "classname": "AuthenticationMCP",
        "name": "__init__",
        "col_offset": 4,
        "endline": 105,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 300,
        "complexity": 1,
        "classname": "ValidationMCP",
        "name": "__init__",
        "col_offset": 4,
        "endline": 312,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 541,
        "complexity": 1,
        "classname": "RateLimitMCP",
        "name": "__init__",
        "col_offset": 4,
        "endline": 554,
        "closures": []
      }
    ],
    "optimization\\optimization_engine.py": [
      {
        "type": "method",
        "rank": "C",
        "lineno": 137,
        "complexity": 13,
        "classname": "OptimizationEngine",
        "name": "_create_optimization_plan",
        "col_offset": 4,
        "endline": 170,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 268,
        "complexity": 9,
        "classname": "OptimizationEngine",
        "name": "_generate_fallback_suggestions",
        "col_offset": 4,
        "endline": 328,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 94,
        "complexity": 8,
        "classname": "OptimizationEngine",
        "name": "_parse_suggestions",
        "col_offset": 4,
        "endline": 117,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 244,
        "complexity": 8,
        "classname": "OptimizationEngine",
        "name": "_create_analysis_summary",
        "col_offset": 4,
        "endline": 266,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 12,
        "complexity": 5,
        "name": "OptimizationEngine",
        "col_offset": 0,
        "endline": 328,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 15,
            "complexity": 1,
            "classname": "OptimizationEngine",
            "name": "__init__",
            "col_offset": 4,
            "endline": 18,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 20,
            "complexity": 1,
            "classname": "OptimizationEngine",
            "name": "analyze_and_optimize",
            "col_offset": 4,
            "endline": 45,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 47,
            "complexity": 3,
            "classname": "OptimizationEngine",
            "name": "_generate_optimization_suggestions",
            "col_offset": 4,
            "endline": 92,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 94,
            "complexity": 8,
            "classname": "OptimizationEngine",
            "name": "_parse_suggestions",
            "col_offset": 4,
            "endline": 117,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 119,
            "complexity": 1,
            "classname": "OptimizationEngine",
            "name": "_prioritize_suggestions",
            "col_offset": 4,
            "endline": 135,
            "closures": [
              {
                "type": "function",
                "rank": "A",
                "lineno": 122,
                "complexity": 2,
                "name": "priority_score",
                "col_offset": 8,
                "endline": 133,
                "closures": []
              }
            ]
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 137,
            "complexity": 13,
            "classname": "OptimizationEngine",
            "name": "_create_optimization_plan",
            "col_offset": 4,
            "endline": 170,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 173,
            "complexity": 4,
            "classname": "OptimizationEngine",
            "name": "_calculate_impact_score",
            "col_offset": 4,
            "endline": 193,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 196,
            "complexity": 1,
            "classname": "OptimizationEngine",
            "name": "get_optimization_history",
            "col_offset": 4,
            "endline": 198,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 200,
            "complexity": 1,
            "classname": "OptimizationEngine",
            "name": "get_active_suggestions",
            "col_offset": 4,
            "endline": 202,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 204,
            "complexity": 1,
            "classname": "OptimizationEngine",
            "name": "mark_suggestion_completed",
            "col_offset": 4,
            "endline": 207,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 209,
            "complexity": 3,
            "classname": "OptimizationEngine",
            "name": "generate_continuous_improvement_report",
            "col_offset": 4,
            "endline": 242,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 244,
            "complexity": 8,
            "classname": "OptimizationEngine",
            "name": "_create_analysis_summary",
            "col_offset": 4,
            "endline": 266,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 268,
            "complexity": 9,
            "classname": "OptimizationEngine",
            "name": "_generate_fallback_suggestions",
            "col_offset": 4,
            "endline": 328,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 173,
        "complexity": 4,
        "classname": "OptimizationEngine",
        "name": "_calculate_impact_score",
        "col_offset": 4,
        "endline": 193,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 47,
        "complexity": 3,
        "classname": "OptimizationEngine",
        "name": "_generate_optimization_suggestions",
        "col_offset": 4,
        "endline": 92,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 209,
        "complexity": 3,
        "classname": "OptimizationEngine",
        "name": "generate_continuous_improvement_report",
        "col_offset": 4,
        "endline": 242,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 15,
        "complexity": 1,
        "classname": "OptimizationEngine",
        "name": "__init__",
        "col_offset": 4,
        "endline": 18,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 20,
        "complexity": 1,
        "classname": "OptimizationEngine",
        "name": "analyze_and_optimize",
        "col_offset": 4,
        "endline": 45,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 119,
        "complexity": 1,
        "classname": "OptimizationEngine",
        "name": "_prioritize_suggestions",
        "col_offset": 4,
        "endline": 135,
        "closures": [
          {
            "type": "function",
            "rank": "A",
            "lineno": 122,
            "complexity": 2,
            "name": "priority_score",
            "col_offset": 8,
            "endline": 133,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 196,
        "complexity": 1,
        "classname": "OptimizationEngine",
        "name": "get_optimization_history",
        "col_offset": 4,
        "endline": 198,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 200,
        "complexity": 1,
        "classname": "OptimizationEngine",
        "name": "get_active_suggestions",
        "col_offset": 4,
        "endline": 202,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 204,
        "complexity": 1,
        "classname": "OptimizationEngine",
        "name": "mark_suggestion_completed",
        "col_offset": 4,
        "endline": 207,
        "closures": []
      }
    ],
    "orchestrator\\agent_orchestrator.py": [
      {
        "type": "method",
        "rank": "B",
        "lineno": 106,
        "complexity": 7,
        "classname": "AgentOrchestrator",
        "name": "_load_agent_instance",
        "col_offset": 4,
        "endline": 137,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 163,
        "complexity": 7,
        "classname": "AgentOrchestrator",
        "name": "_execute_workflow",
        "col_offset": 4,
        "endline": 195,
        "closures": []
      },
      {
        "type": "class",
        "rank": "B",
        "lineno": 19,
        "complexity": 6,
        "name": "AgentOrchestrator",
        "col_offset": 0,
        "endline": 289,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 20,
            "complexity": 1,
            "classname": "AgentOrchestrator",
            "name": "__init__",
            "col_offset": 4,
            "endline": 29,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 31,
            "complexity": 2,
            "classname": "AgentOrchestrator",
            "name": "orchestrate_project_automation",
            "col_offset": 4,
            "endline": 79,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 82,
            "complexity": 6,
            "classname": "AgentOrchestrator",
            "name": "_initialize_agents",
            "col_offset": 4,
            "endline": 104,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 106,
            "complexity": 7,
            "classname": "AgentOrchestrator",
            "name": "_load_agent_instance",
            "col_offset": 4,
            "endline": 137,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 139,
            "complexity": 5,
            "classname": "AgentOrchestrator",
            "name": "_execute_workflows",
            "col_offset": 4,
            "endline": 161,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 163,
            "complexity": 7,
            "classname": "AgentOrchestrator",
            "name": "_execute_workflow",
            "col_offset": 4,
            "endline": 195,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 197,
            "complexity": 6,
            "classname": "AgentOrchestrator",
            "name": "_generate_summary",
            "col_offset": 4,
            "endline": 221,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 223,
            "complexity": 6,
            "classname": "AgentOrchestrator",
            "name": "_generate_recommendations",
            "col_offset": 4,
            "endline": 246,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 248,
            "complexity": 4,
            "classname": "AgentOrchestrator",
            "name": "get_agent_status",
            "col_offset": 4,
            "endline": 270,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 272,
            "complexity": 5,
            "classname": "AgentOrchestrator",
            "name": "cleanup",
            "col_offset": 4,
            "endline": 289,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 82,
        "complexity": 6,
        "classname": "AgentOrchestrator",
        "name": "_initialize_agents",
        "col_offset": 4,
        "endline": 104,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 197,
        "complexity": 6,
        "classname": "AgentOrchestrator",
        "name": "_generate_summary",
        "col_offset": 4,
        "endline": 221,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 223,
        "complexity": 6,
        "classname": "AgentOrchestrator",
        "name": "_generate_recommendations",
        "col_offset": 4,
        "endline": 246,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 139,
        "complexity": 5,
        "classname": "AgentOrchestrator",
        "name": "_execute_workflows",
        "col_offset": 4,
        "endline": 161,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 272,
        "complexity": 5,
        "classname": "AgentOrchestrator",
        "name": "cleanup",
        "col_offset": 4,
        "endline": 289,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 248,
        "complexity": 4,
        "classname": "AgentOrchestrator",
        "name": "get_agent_status",
        "col_offset": 4,
        "endline": 270,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 31,
        "complexity": 2,
        "classname": "AgentOrchestrator",
        "name": "orchestrate_project_automation",
        "col_offset": 4,
        "endline": 79,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 20,
        "complexity": 1,
        "classname": "AgentOrchestrator",
        "name": "__init__",
        "col_offset": 4,
        "endline": 29,
        "closures": []
      }
    ],
    "orchestrator\\workflow_orchestrator.py": [
      {
        "type": "method",
        "rank": "B",
        "lineno": 72,
        "complexity": 6,
        "classname": "WorkflowOrchestrator",
        "name": "get_workflow_status",
        "col_offset": 4,
        "endline": 84,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 30,
        "complexity": 5,
        "classname": "WorkflowOrchestrator",
        "name": "execute_workflow",
        "col_offset": 4,
        "endline": 65,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 13,
        "complexity": 3,
        "name": "WorkflowOrchestrator",
        "col_offset": 0,
        "endline": 89,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 16,
            "complexity": 1,
            "classname": "WorkflowOrchestrator",
            "name": "__init__",
            "col_offset": 4,
            "endline": 23,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 25,
            "complexity": 1,
            "classname": "WorkflowOrchestrator",
            "name": "register_workflow",
            "col_offset": 4,
            "endline": 28,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 30,
            "complexity": 5,
            "classname": "WorkflowOrchestrator",
            "name": "execute_workflow",
            "col_offset": 4,
            "endline": 65,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 67,
            "complexity": 1,
            "classname": "WorkflowOrchestrator",
            "name": "execute_project_analysis",
            "col_offset": 4,
            "endline": 70,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 72,
            "complexity": 6,
            "classname": "WorkflowOrchestrator",
            "name": "get_workflow_status",
            "col_offset": 4,
            "endline": 84,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 87,
            "complexity": 1,
            "classname": "WorkflowOrchestrator",
            "name": "get_available_workflows",
            "col_offset": 4,
            "endline": 89,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 16,
        "complexity": 1,
        "classname": "WorkflowOrchestrator",
        "name": "__init__",
        "col_offset": 4,
        "endline": 23,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 25,
        "complexity": 1,
        "classname": "WorkflowOrchestrator",
        "name": "register_workflow",
        "col_offset": 4,
        "endline": 28,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 67,
        "complexity": 1,
        "classname": "WorkflowOrchestrator",
        "name": "execute_project_analysis",
        "col_offset": 4,
        "endline": 70,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 87,
        "complexity": 1,
        "classname": "WorkflowOrchestrator",
        "name": "get_available_workflows",
        "col_offset": 4,
        "endline": 89,
        "closures": []
      }
    ],
    "output\\artifact_generator.py": [
      {
        "type": "method",
        "rank": "B",
        "lineno": 135,
        "complexity": 8,
        "classname": "ArtifactGenerator",
        "name": "generate_requirements_file",
        "col_offset": 4,
        "endline": 172,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 84,
        "complexity": 7,
        "classname": "ArtifactGenerator",
        "name": "generate_docker_config",
        "col_offset": 4,
        "endline": 133,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 12,
        "complexity": 5,
        "name": "ArtifactGenerator",
        "col_offset": 0,
        "endline": 206,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 15,
            "complexity": 1,
            "classname": "ArtifactGenerator",
            "name": "__init__",
            "col_offset": 4,
            "endline": 18,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 20,
            "complexity": 4,
            "classname": "ArtifactGenerator",
            "name": "generate_agent_files",
            "col_offset": 4,
            "endline": 34,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 36,
            "complexity": 4,
            "classname": "ArtifactGenerator",
            "name": "generate_skill_files",
            "col_offset": 4,
            "endline": 50,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 52,
            "complexity": 4,
            "classname": "ArtifactGenerator",
            "name": "generate_workflow_files",
            "col_offset": 4,
            "endline": 66,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 68,
            "complexity": 4,
            "classname": "ArtifactGenerator",
            "name": "generate_test_files",
            "col_offset": 4,
            "endline": 82,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 84,
            "complexity": 7,
            "classname": "ArtifactGenerator",
            "name": "generate_docker_config",
            "col_offset": 4,
            "endline": 133,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 135,
            "complexity": 8,
            "classname": "ArtifactGenerator",
            "name": "generate_requirements_file",
            "col_offset": 4,
            "endline": 172,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 174,
            "complexity": 5,
            "classname": "ArtifactGenerator",
            "name": "generate_all_artifacts",
            "col_offset": 4,
            "endline": 206,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 174,
        "complexity": 5,
        "classname": "ArtifactGenerator",
        "name": "generate_all_artifacts",
        "col_offset": 4,
        "endline": 206,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 20,
        "complexity": 4,
        "classname": "ArtifactGenerator",
        "name": "generate_agent_files",
        "col_offset": 4,
        "endline": 34,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 36,
        "complexity": 4,
        "classname": "ArtifactGenerator",
        "name": "generate_skill_files",
        "col_offset": 4,
        "endline": 50,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 52,
        "complexity": 4,
        "classname": "ArtifactGenerator",
        "name": "generate_workflow_files",
        "col_offset": 4,
        "endline": 66,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 68,
        "complexity": 4,
        "classname": "ArtifactGenerator",
        "name": "generate_test_files",
        "col_offset": 4,
        "endline": 82,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 15,
        "complexity": 1,
        "classname": "ArtifactGenerator",
        "name": "__init__",
        "col_offset": 4,
        "endline": 18,
        "closures": []
      }
    ],
    "output\\report_generator.py": [
      {
        "type": "method",
        "rank": "D",
        "lineno": 34,
        "complexity": 22,
        "classname": "ReportGenerator",
        "name": "_generate_markdown_report",
        "col_offset": 4,
        "endline": 135,
        "closures": []
      },
      {
        "type": "class",
        "rank": "B",
        "lineno": 12,
        "complexity": 6,
        "name": "ReportGenerator",
        "col_offset": 0,
        "endline": 193,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 15,
            "complexity": 1,
            "classname": "ReportGenerator",
            "name": "__init__",
            "col_offset": 4,
            "endline": 17,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 19,
            "complexity": 1,
            "classname": "ReportGenerator",
            "name": "generate_project_report",
            "col_offset": 4,
            "endline": 32,
            "closures": []
          },
          {
            "type": "method",
            "rank": "D",
            "lineno": 34,
            "complexity": 22,
            "classname": "ReportGenerator",
            "name": "_generate_markdown_report",
            "col_offset": 4,
            "endline": 135,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 137,
            "complexity": 4,
            "classname": "ReportGenerator",
            "name": "generate_json_report",
            "col_offset": 4,
            "endline": 158,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 160,
            "complexity": 1,
            "classname": "ReportGenerator",
            "name": "generate_summary",
            "col_offset": 4,
            "endline": 170,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 173,
            "complexity": 1,
            "classname": "ReportGenerator",
            "name": "_calculate_complexity_score",
            "col_offset": 4,
            "endline": 193,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 137,
        "complexity": 4,
        "classname": "ReportGenerator",
        "name": "generate_json_report",
        "col_offset": 4,
        "endline": 158,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 15,
        "complexity": 1,
        "classname": "ReportGenerator",
        "name": "__init__",
        "col_offset": 4,
        "endline": 17,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 19,
        "complexity": 1,
        "classname": "ReportGenerator",
        "name": "generate_project_report",
        "col_offset": 4,
        "endline": 32,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 160,
        "complexity": 1,
        "classname": "ReportGenerator",
        "name": "generate_summary",
        "col_offset": 4,
        "endline": 170,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 173,
        "complexity": 1,
        "classname": "ReportGenerator",
        "name": "_calculate_complexity_score",
        "col_offset": 4,
        "endline": 193,
        "closures": []
      }
    ],
    "plugins\\__init__.py": [
      {
        "type": "method",
        "rank": "B",
        "lineno": 352,
        "complexity": 7,
        "classname": "MonitoringPlugin",
        "name": "_check_alerts",
        "col_offset": 4,
        "endline": 378,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 437,
        "complexity": 7,
        "classname": "CachePlugin",
        "name": "execute",
        "col_offset": 4,
        "endline": 455,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 85,
        "complexity": 5,
        "classname": "NotificationPlugin",
        "name": "execute",
        "col_offset": 4,
        "endline": 99,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 205,
        "complexity": 4,
        "classname": "DataExportPlugin",
        "name": "execute",
        "col_offset": 4,
        "endline": 217,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 273,
        "complexity": 4,
        "name": "MonitoringPlugin",
        "col_offset": 0,
        "endline": 393,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 276,
            "complexity": 1,
            "classname": "MonitoringPlugin",
            "name": "__init__",
            "col_offset": 4,
            "endline": 292,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 294,
            "complexity": 2,
            "classname": "MonitoringPlugin",
            "name": "initialize",
            "col_offset": 4,
            "endline": 309,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 311,
            "complexity": 4,
            "classname": "MonitoringPlugin",
            "name": "execute",
            "col_offset": 4,
            "endline": 322,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 324,
            "complexity": 2,
            "classname": "MonitoringPlugin",
            "name": "_collect_metrics",
            "col_offset": 4,
            "endline": 349,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 352,
            "complexity": 7,
            "classname": "MonitoringPlugin",
            "name": "_check_alerts",
            "col_offset": 4,
            "endline": 378,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 381,
            "complexity": 2,
            "classname": "MonitoringPlugin",
            "name": "_get_metrics_history",
            "col_offset": 4,
            "endline": 393,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 311,
        "complexity": 4,
        "classname": "MonitoringPlugin",
        "name": "execute",
        "col_offset": 4,
        "endline": 322,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 570,
        "complexity": 3,
        "name": "initialize",
        "col_offset": 0,
        "endline": 587,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 52,
        "complexity": 3,
        "name": "NotificationPlugin",
        "col_offset": 0,
        "endline": 168,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 55,
            "complexity": 1,
            "classname": "NotificationPlugin",
            "name": "__init__",
            "col_offset": 4,
            "endline": 65,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 68,
            "complexity": 2,
            "classname": "NotificationPlugin",
            "name": "initialize",
            "col_offset": 4,
            "endline": 83,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 85,
            "complexity": 5,
            "classname": "NotificationPlugin",
            "name": "execute",
            "col_offset": 4,
            "endline": 99,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 101,
            "complexity": 2,
            "classname": "NotificationPlugin",
            "name": "_send_email",
            "col_offset": 4,
            "endline": 122,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 125,
            "complexity": 2,
            "classname": "NotificationPlugin",
            "name": "_send_webhook",
            "col_offset": 4,
            "endline": 145,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 148,
            "complexity": 2,
            "classname": "NotificationPlugin",
            "name": "_send_slack",
            "col_offset": 4,
            "endline": 168,
            "closures": []
          }
        ]
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 172,
        "complexity": 3,
        "name": "DataExportPlugin",
        "col_offset": 0,
        "endline": 269,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 175,
            "complexity": 1,
            "classname": "DataExportPlugin",
            "name": "__init__",
            "col_offset": 4,
            "endline": 185,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 188,
            "complexity": 2,
            "classname": "DataExportPlugin",
            "name": "initialize",
            "col_offset": 4,
            "endline": 203,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 205,
            "complexity": 4,
            "classname": "DataExportPlugin",
            "name": "execute",
            "col_offset": 4,
            "endline": 217,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 219,
            "complexity": 3,
            "classname": "DataExportPlugin",
            "name": "_export_data",
            "col_offset": 4,
            "endline": 247,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 250,
            "complexity": 2,
            "classname": "DataExportPlugin",
            "name": "_export_report",
            "col_offset": 4,
            "endline": 269,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 219,
        "complexity": 3,
        "classname": "DataExportPlugin",
        "name": "_export_data",
        "col_offset": 4,
        "endline": 247,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 397,
        "complexity": 3,
        "name": "CachePlugin",
        "col_offset": 0,
        "endline": 565,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 400,
            "complexity": 1,
            "classname": "CachePlugin",
            "name": "__init__",
            "col_offset": 4,
            "endline": 417,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 420,
            "complexity": 2,
            "classname": "CachePlugin",
            "name": "initialize",
            "col_offset": 4,
            "endline": 435,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 437,
            "complexity": 7,
            "classname": "CachePlugin",
            "name": "execute",
            "col_offset": 4,
            "endline": 455,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 457,
            "complexity": 3,
            "classname": "CachePlugin",
            "name": "_get_cache",
            "col_offset": 4,
            "endline": 486,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 489,
            "complexity": 3,
            "classname": "CachePlugin",
            "name": "_set_cache",
            "col_offset": 4,
            "endline": 512,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 515,
            "complexity": 3,
            "classname": "CachePlugin",
            "name": "_delete_cache",
            "col_offset": 4,
            "endline": 534,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 537,
            "complexity": 1,
            "classname": "CachePlugin",
            "name": "_clear_cache",
            "col_offset": 4,
            "endline": 549,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 552,
            "complexity": 2,
            "classname": "CachePlugin",
            "name": "_get_stats",
            "col_offset": 4,
            "endline": 565,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 457,
        "complexity": 3,
        "classname": "CachePlugin",
        "name": "_get_cache",
        "col_offset": 4,
        "endline": 486,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 489,
        "complexity": 3,
        "classname": "CachePlugin",
        "name": "_set_cache",
        "col_offset": 4,
        "endline": 512,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 515,
        "complexity": 3,
        "classname": "CachePlugin",
        "name": "_delete_cache",
        "col_offset": 4,
        "endline": 534,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 14,
        "complexity": 2,
        "name": "BasePlugin",
        "col_offset": 0,
        "endline": 49,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 17,
            "complexity": 1,
            "classname": "BasePlugin",
            "name": "__init__",
            "col_offset": 4,
            "endline": 24,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 27,
            "complexity": 1,
            "classname": "BasePlugin",
            "name": "initialize",
            "col_offset": 4,
            "endline": 29,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 32,
            "complexity": 1,
            "classname": "BasePlugin",
            "name": "execute",
            "col_offset": 4,
            "endline": 34,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 36,
            "complexity": 1,
            "classname": "BasePlugin",
            "name": "get_info",
            "col_offset": 4,
            "endline": 44,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 47,
            "complexity": 1,
            "classname": "BasePlugin",
            "name": "cleanup",
            "col_offset": 4,
            "endline": 49,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 68,
        "complexity": 2,
        "classname": "NotificationPlugin",
        "name": "initialize",
        "col_offset": 4,
        "endline": 83,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 101,
        "complexity": 2,
        "classname": "NotificationPlugin",
        "name": "_send_email",
        "col_offset": 4,
        "endline": 122,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 125,
        "complexity": 2,
        "classname": "NotificationPlugin",
        "name": "_send_webhook",
        "col_offset": 4,
        "endline": 145,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 148,
        "complexity": 2,
        "classname": "NotificationPlugin",
        "name": "_send_slack",
        "col_offset": 4,
        "endline": 168,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 188,
        "complexity": 2,
        "classname": "DataExportPlugin",
        "name": "initialize",
        "col_offset": 4,
        "endline": 203,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 250,
        "complexity": 2,
        "classname": "DataExportPlugin",
        "name": "_export_report",
        "col_offset": 4,
        "endline": 269,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 294,
        "complexity": 2,
        "classname": "MonitoringPlugin",
        "name": "initialize",
        "col_offset": 4,
        "endline": 309,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 324,
        "complexity": 2,
        "classname": "MonitoringPlugin",
        "name": "_collect_metrics",
        "col_offset": 4,
        "endline": 349,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 381,
        "complexity": 2,
        "classname": "MonitoringPlugin",
        "name": "_get_metrics_history",
        "col_offset": 4,
        "endline": 393,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 420,
        "complexity": 2,
        "classname": "CachePlugin",
        "name": "initialize",
        "col_offset": 4,
        "endline": 435,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 552,
        "complexity": 2,
        "classname": "CachePlugin",
        "name": "_get_stats",
        "col_offset": 4,
        "endline": 565,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 17,
        "complexity": 1,
        "classname": "BasePlugin",
        "name": "__init__",
        "col_offset": 4,
        "endline": 24,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 27,
        "complexity": 1,
        "classname": "BasePlugin",
        "name": "initialize",
        "col_offset": 4,
        "endline": 29,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 32,
        "complexity": 1,
        "classname": "BasePlugin",
        "name": "execute",
        "col_offset": 4,
        "endline": 34,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 36,
        "complexity": 1,
        "classname": "BasePlugin",
        "name": "get_info",
        "col_offset": 4,
        "endline": 44,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 47,
        "complexity": 1,
        "classname": "BasePlugin",
        "name": "cleanup",
        "col_offset": 4,
        "endline": 49,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 55,
        "complexity": 1,
        "classname": "NotificationPlugin",
        "name": "__init__",
        "col_offset": 4,
        "endline": 65,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 175,
        "complexity": 1,
        "classname": "DataExportPlugin",
        "name": "__init__",
        "col_offset": 4,
        "endline": 185,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 276,
        "complexity": 1,
        "classname": "MonitoringPlugin",
        "name": "__init__",
        "col_offset": 4,
        "endline": 292,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 400,
        "complexity": 1,
        "classname": "CachePlugin",
        "name": "__init__",
        "col_offset": 4,
        "endline": 417,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 537,
        "complexity": 1,
        "classname": "CachePlugin",
        "name": "_clear_cache",
        "col_offset": 4,
        "endline": 549,
        "closures": []
      }
    ],
    "routes\\agent_routes.py": [
      {
        "type": "function",
        "rank": "A",
        "lineno": 76,
        "complexity": 4,
        "name": "get_agent_status",
        "col_offset": 0,
        "endline": 99,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 24,
        "complexity": 3,
        "name": "chat_with_agent",
        "col_offset": 0,
        "endline": 46,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 50,
        "complexity": 3,
        "name": "generate_agents",
        "col_offset": 0,
        "endline": 72,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 103,
        "complexity": 3,
        "name": "get_optimizations",
        "col_offset": 0,
        "endline": 124,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 17,
        "complexity": 1,
        "name": "ChatRequest",
        "col_offset": 0,
        "endline": 20,
        "methods": []
      }
    ],
    "routes\\analysis_routes.py": [
      {
        "type": "function",
        "rank": "A",
        "lineno": 136,
        "complexity": 5,
        "name": "list_artifacts",
        "col_offset": 0,
        "endline": 156,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 29,
        "complexity": 4,
        "name": "analyze_project",
        "col_offset": 0,
        "endline": 91,
        "closures": [
          {
            "type": "function",
            "rank": "A",
            "lineno": 55,
            "complexity": 5,
            "name": "run_analysis_and_store",
            "col_offset": 8,
            "endline": 79,
            "closures": []
          }
        ]
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 113,
        "complexity": 4,
        "name": "list_reports",
        "col_offset": 0,
        "endline": 132,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 95,
        "complexity": 2,
        "name": "get_analysis_results",
        "col_offset": 0,
        "endline": 108,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 23,
        "complexity": 1,
        "name": "ProjectAnalysisRequest",
        "col_offset": 0,
        "endline": 25,
        "methods": []
      }
    ],
    "routes\\claude_flow_routes.py": [
      {
        "type": "function",
        "rank": "A",
        "lineno": 106,
        "complexity": 4,
        "name": "execute_task",
        "col_offset": 0,
        "endline": 141,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 64,
        "complexity": 3,
        "name": "init_swarm",
        "col_offset": 0,
        "endline": 102,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 145,
        "complexity": 3,
        "name": "spawn_agent",
        "col_offset": 0,
        "endline": 182,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 186,
        "complexity": 3,
        "name": "get_swarm_status",
        "col_offset": 0,
        "endline": 204,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 208,
        "complexity": 3,
        "name": "store_memory",
        "col_offset": 0,
        "endline": 245,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 249,
        "complexity": 3,
        "name": "query_memory",
        "col_offset": 0,
        "endline": 284,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 288,
        "complexity": 3,
        "name": "get_memory_status",
        "col_offset": 0,
        "endline": 310,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 314,
        "complexity": 3,
        "name": "init_hive_mind",
        "col_offset": 0,
        "endline": 353,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 357,
        "complexity": 3,
        "name": "execute_with_mcp_tools",
        "col_offset": 0,
        "endline": 392,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 440,
        "complexity": 3,
        "name": "health_check",
        "col_offset": 0,
        "endline": 467,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 396,
        "complexity": 1,
        "name": "get_capabilities",
        "col_offset": 0,
        "endline": 434,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 17,
        "complexity": 1,
        "name": "SwarmInitRequest",
        "col_offset": 0,
        "endline": 20,
        "methods": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 23,
        "complexity": 1,
        "name": "TaskExecutionRequest",
        "col_offset": 0,
        "endline": 27,
        "methods": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 30,
        "complexity": 1,
        "name": "AgentSpawnRequest",
        "col_offset": 0,
        "endline": 33,
        "methods": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 36,
        "complexity": 1,
        "name": "MemoryStoreRequest",
        "col_offset": 0,
        "endline": 41,
        "methods": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 44,
        "complexity": 1,
        "name": "MemoryQueryRequest",
        "col_offset": 0,
        "endline": 48,
        "methods": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 51,
        "complexity": 1,
        "name": "HiveMindRequest",
        "col_offset": 0,
        "endline": 54,
        "methods": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 57,
        "complexity": 1,
        "name": "MCPToolsRequest",
        "col_offset": 0,
        "endline": 60,
        "methods": []
      }
    ],
    "routes\\model_routes.py": [
      {
        "type": "function",
        "rank": "A",
        "lineno": 39,
        "complexity": 4,
        "name": "set_model",
        "col_offset": 0,
        "endline": 63,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 67,
        "complexity": 3,
        "name": "get_current_model",
        "col_offset": 0,
        "endline": 85,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 23,
        "complexity": 2,
        "name": "list_models",
        "col_offset": 0,
        "endline": 35,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 16,
        "complexity": 1,
        "name": "ModelSelectionRequest",
        "col_offset": 0,
        "endline": 19,
        "methods": []
      }
    ],
    "routes\\workflow_routes.py": [
      {
        "type": "function",
        "rank": "B",
        "lineno": 99,
        "complexity": 6,
        "name": "get_workflow_progress",
        "col_offset": 0,
        "endline": 131,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 78,
        "complexity": 3,
        "name": "get_workflow_status",
        "col_offset": 0,
        "endline": 95,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 24,
        "complexity": 2,
        "name": "execute_workflow",
        "col_offset": 0,
        "endline": 44,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 48,
        "complexity": 2,
        "name": "run_complete_workflow",
        "col_offset": 0,
        "endline": 74,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 17,
        "complexity": 1,
        "name": "WorkflowExecutionRequest",
        "col_offset": 0,
        "endline": 20,
        "methods": []
      }
    ],
    "services\\agent_service.py": [
      {
        "type": "class",
        "rank": "A",
        "lineno": 12,
        "complexity": 3,
        "name": "AgentService",
        "col_offset": 0,
        "endline": 117,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 15,
            "complexity": 1,
            "classname": "AgentService",
            "name": "__init__",
            "col_offset": 4,
            "endline": 18,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 20,
            "complexity": 3,
            "classname": "AgentService",
            "name": "initialize_project_manager",
            "col_offset": 4,
            "endline": 28,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 30,
            "complexity": 3,
            "classname": "AgentService",
            "name": "chat",
            "col_offset": 4,
            "endline": 50,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 52,
            "complexity": 3,
            "classname": "AgentService",
            "name": "generate_agents",
            "col_offset": 4,
            "endline": 84,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 86,
            "complexity": 3,
            "classname": "AgentService",
            "name": "get_agent_status",
            "col_offset": 4,
            "endline": 104,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 107,
            "complexity": 3,
            "classname": "AgentService",
            "name": "set_project_context",
            "col_offset": 4,
            "endline": 117,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 20,
        "complexity": 3,
        "classname": "AgentService",
        "name": "initialize_project_manager",
        "col_offset": 4,
        "endline": 28,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 30,
        "complexity": 3,
        "classname": "AgentService",
        "name": "chat",
        "col_offset": 4,
        "endline": 50,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 52,
        "complexity": 3,
        "classname": "AgentService",
        "name": "generate_agents",
        "col_offset": 4,
        "endline": 84,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 86,
        "complexity": 3,
        "classname": "AgentService",
        "name": "get_agent_status",
        "col_offset": 4,
        "endline": 104,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 107,
        "complexity": 3,
        "classname": "AgentService",
        "name": "set_project_context",
        "col_offset": 4,
        "endline": 117,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 15,
        "complexity": 1,
        "classname": "AgentService",
        "name": "__init__",
        "col_offset": 4,
        "endline": 18,
        "closures": []
      }
    ],
    "services\\project_service.py": [
      {
        "type": "method",
        "rank": "A",
        "lineno": 22,
        "complexity": 3,
        "classname": "ProjectService",
        "name": "analyze_project",
        "col_offset": 4,
        "endline": 49,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 13,
        "complexity": 2,
        "name": "ProjectService",
        "col_offset": 0,
        "endline": 63,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 16,
            "complexity": 1,
            "classname": "ProjectService",
            "name": "__init__",
            "col_offset": 4,
            "endline": 20,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 22,
            "complexity": 3,
            "classname": "ProjectService",
            "name": "analyze_project",
            "col_offset": 4,
            "endline": 49,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 51,
            "complexity": 1,
            "classname": "ProjectService",
            "name": "get_analysis_results",
            "col_offset": 4,
            "endline": 53,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 55,
            "complexity": 1,
            "classname": "ProjectService",
            "name": "get_current_project",
            "col_offset": 4,
            "endline": 57,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 59,
            "complexity": 1,
            "classname": "ProjectService",
            "name": "clear_analysis",
            "col_offset": 4,
            "endline": 63,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 16,
        "complexity": 1,
        "classname": "ProjectService",
        "name": "__init__",
        "col_offset": 4,
        "endline": 20,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 51,
        "complexity": 1,
        "classname": "ProjectService",
        "name": "get_analysis_results",
        "col_offset": 4,
        "endline": 53,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 55,
        "complexity": 1,
        "classname": "ProjectService",
        "name": "get_current_project",
        "col_offset": 4,
        "endline": 57,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 59,
        "complexity": 1,
        "classname": "ProjectService",
        "name": "clear_analysis",
        "col_offset": 4,
        "endline": 63,
        "closures": []
      }
    ],
    "settings\\__init__.py": [
      {
        "type": "method",
        "rank": "B",
        "lineno": 242,
        "complexity": 9,
        "classname": "SettingsManager",
        "name": "validate_settings",
        "col_offset": 4,
        "endline": 266,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 293,
        "complexity": 9,
        "classname": "ConfigValidator",
        "name": "validate_app_config",
        "col_offset": 4,
        "endline": 310,
        "closures": []
      },
      {
        "type": "class",
        "rank": "B",
        "lineno": 289,
        "complexity": 8,
        "name": "ConfigValidator",
        "col_offset": 0,
        "endline": 342,
        "methods": [
          {
            "type": "method",
            "rank": "B",
            "lineno": 293,
            "complexity": 9,
            "classname": "ConfigValidator",
            "name": "validate_app_config",
            "col_offset": 4,
            "endline": 310,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 313,
            "complexity": 5,
            "classname": "ConfigValidator",
            "name": "validate_database_config",
            "col_offset": 4,
            "endline": 325,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 328,
            "complexity": 7,
            "classname": "ConfigValidator",
            "name": "validate_security_config",
            "col_offset": 4,
            "endline": 342,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 328,
        "complexity": 7,
        "classname": "ConfigValidator",
        "name": "validate_security_config",
        "col_offset": 4,
        "endline": 342,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 173,
        "complexity": 5,
        "classname": "SettingsManager",
        "name": "_merge_settings",
        "col_offset": 4,
        "endline": 179,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 313,
        "complexity": 5,
        "classname": "ConfigValidator",
        "name": "validate_database_config",
        "col_offset": 4,
        "endline": 325,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 145,
        "complexity": 4,
        "classname": "SettingsManager",
        "name": "_load_config_files",
        "col_offset": 4,
        "endline": 162,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 268,
        "complexity": 4,
        "classname": "SettingsManager",
        "name": "get_api_keys",
        "col_offset": 4,
        "endline": 277,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 416,
        "complexity": 3,
        "name": "initialize",
        "col_offset": 0,
        "endline": 438,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 16,
        "complexity": 3,
        "name": "SettingsManager",
        "col_offset": 0,
        "endline": 286,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 19,
            "complexity": 1,
            "classname": "SettingsManager",
            "name": "__init__",
            "col_offset": 4,
            "endline": 36,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 38,
            "complexity": 1,
            "classname": "SettingsManager",
            "name": "_load_default_settings",
            "col_offset": 4,
            "endline": 119,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 121,
            "complexity": 3,
            "classname": "SettingsManager",
            "name": "_load_environment_settings",
            "col_offset": 4,
            "endline": 143,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 145,
            "complexity": 4,
            "classname": "SettingsManager",
            "name": "_load_config_files",
            "col_offset": 4,
            "endline": 162,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 164,
            "complexity": 3,
            "classname": "SettingsManager",
            "name": "_set_nested_value",
            "col_offset": 4,
            "endline": 171,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 173,
            "complexity": 5,
            "classname": "SettingsManager",
            "name": "_merge_settings",
            "col_offset": 4,
            "endline": 179,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 181,
            "complexity": 3,
            "classname": "SettingsManager",
            "name": "get",
            "col_offset": 4,
            "endline": 191,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 193,
            "complexity": 3,
            "classname": "SettingsManager",
            "name": "set",
            "col_offset": 4,
            "endline": 204,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 206,
            "complexity": 1,
            "classname": "SettingsManager",
            "name": "get_section",
            "col_offset": 4,
            "endline": 208,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 210,
            "complexity": 2,
            "classname": "SettingsManager",
            "name": "update_section",
            "col_offset": 4,
            "endline": 216,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 218,
            "complexity": 2,
            "classname": "SettingsManager",
            "name": "save_config",
            "col_offset": 4,
            "endline": 229,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 231,
            "complexity": 1,
            "classname": "SettingsManager",
            "name": "reload_config",
            "col_offset": 4,
            "endline": 236,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 238,
            "complexity": 1,
            "classname": "SettingsManager",
            "name": "get_all_settings",
            "col_offset": 4,
            "endline": 240,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 242,
            "complexity": 9,
            "classname": "SettingsManager",
            "name": "validate_settings",
            "col_offset": 4,
            "endline": 266,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 268,
            "complexity": 4,
            "classname": "SettingsManager",
            "name": "get_api_keys",
            "col_offset": 4,
            "endline": 277,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 279,
            "complexity": 2,
            "classname": "SettingsManager",
            "name": "is_provider_enabled",
            "col_offset": 4,
            "endline": 282,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 284,
            "complexity": 1,
            "classname": "SettingsManager",
            "name": "get_provider_config",
            "col_offset": 4,
            "endline": 286,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 121,
        "complexity": 3,
        "classname": "SettingsManager",
        "name": "_load_environment_settings",
        "col_offset": 4,
        "endline": 143,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 164,
        "complexity": 3,
        "classname": "SettingsManager",
        "name": "_set_nested_value",
        "col_offset": 4,
        "endline": 171,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 181,
        "complexity": 3,
        "classname": "SettingsManager",
        "name": "get",
        "col_offset": 4,
        "endline": 191,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 193,
        "complexity": 3,
        "classname": "SettingsManager",
        "name": "set",
        "col_offset": 4,
        "endline": 204,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 345,
        "complexity": 3,
        "name": "EnvironmentConfig",
        "col_offset": 0,
        "endline": 406,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 348,
            "complexity": 2,
            "classname": "EnvironmentConfig",
            "name": "__init__",
            "col_offset": 4,
            "endline": 350,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 352,
            "complexity": 1,
            "classname": "EnvironmentConfig",
            "name": "get_environment_specific_config",
            "col_offset": 4,
            "endline": 397,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 399,
            "complexity": 2,
            "classname": "EnvironmentConfig",
            "name": "apply_environment_config",
            "col_offset": 4,
            "endline": 406,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 210,
        "complexity": 2,
        "classname": "SettingsManager",
        "name": "update_section",
        "col_offset": 4,
        "endline": 216,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 218,
        "complexity": 2,
        "classname": "SettingsManager",
        "name": "save_config",
        "col_offset": 4,
        "endline": 229,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 279,
        "complexity": 2,
        "classname": "SettingsManager",
        "name": "is_provider_enabled",
        "col_offset": 4,
        "endline": 282,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 348,
        "complexity": 2,
        "classname": "EnvironmentConfig",
        "name": "__init__",
        "col_offset": 4,
        "endline": 350,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 399,
        "complexity": 2,
        "classname": "EnvironmentConfig",
        "name": "apply_environment_config",
        "col_offset": 4,
        "endline": 406,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 19,
        "complexity": 1,
        "classname": "SettingsManager",
        "name": "__init__",
        "col_offset": 4,
        "endline": 36,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 38,
        "complexity": 1,
        "classname": "SettingsManager",
        "name": "_load_default_settings",
        "col_offset": 4,
        "endline": 119,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 206,
        "complexity": 1,
        "classname": "SettingsManager",
        "name": "get_section",
        "col_offset": 4,
        "endline": 208,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 231,
        "complexity": 1,
        "classname": "SettingsManager",
        "name": "reload_config",
        "col_offset": 4,
        "endline": 236,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 238,
        "complexity": 1,
        "classname": "SettingsManager",
        "name": "get_all_settings",
        "col_offset": 4,
        "endline": 240,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 284,
        "complexity": 1,
        "classname": "SettingsManager",
        "name": "get_provider_config",
        "col_offset": 4,
        "endline": 286,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 352,
        "complexity": 1,
        "classname": "EnvironmentConfig",
        "name": "get_environment_specific_config",
        "col_offset": 4,
        "endline": 397,
        "closures": []
      }
    ],
    "skills\\__init__.py": [
      {
        "type": "method",
        "rank": "D",
        "lineno": 128,
        "complexity": 21,
        "classname": "DataAnalysisSkill",
        "name": "execute",
        "col_offset": 4,
        "endline": 184,
        "closures": []
      },
      {
        "type": "method",
        "rank": "C",
        "lineno": 56,
        "complexity": 19,
        "classname": "TextProcessingSkill",
        "name": "execute",
        "col_offset": 4,
        "endline": 110,
        "closures": []
      },
      {
        "type": "class",
        "rank": "C",
        "lineno": 114,
        "complexity": 12,
        "name": "DataAnalysisSkill",
        "col_offset": 0,
        "endline": 184,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 117,
            "complexity": 1,
            "classname": "DataAnalysisSkill",
            "name": "__init__",
            "col_offset": 4,
            "endline": 125,
            "closures": []
          },
          {
            "type": "method",
            "rank": "D",
            "lineno": 128,
            "complexity": 21,
            "classname": "DataAnalysisSkill",
            "name": "execute",
            "col_offset": 4,
            "endline": 184,
            "closures": []
          }
        ]
      },
      {
        "type": "class",
        "rank": "C",
        "lineno": 42,
        "complexity": 11,
        "name": "TextProcessingSkill",
        "col_offset": 0,
        "endline": 110,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 45,
            "complexity": 1,
            "classname": "TextProcessingSkill",
            "name": "__init__",
            "col_offset": 4,
            "endline": 53,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 56,
            "complexity": 19,
            "classname": "TextProcessingSkill",
            "name": "execute",
            "col_offset": 4,
            "endline": 110,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 204,
        "complexity": 5,
        "classname": "APIIntegrationSkill",
        "name": "execute",
        "col_offset": 4,
        "endline": 230,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 188,
        "complexity": 3,
        "name": "APIIntegrationSkill",
        "col_offset": 0,
        "endline": 279,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 191,
            "complexity": 1,
            "classname": "APIIntegrationSkill",
            "name": "__init__",
            "col_offset": 4,
            "endline": 201,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 204,
            "complexity": 5,
            "classname": "APIIntegrationSkill",
            "name": "execute",
            "col_offset": 4,
            "endline": 230,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 233,
            "complexity": 2,
            "classname": "APIIntegrationSkill",
            "name": "_call_openai_api",
            "col_offset": 4,
            "endline": 247,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 250,
            "complexity": 2,
            "classname": "APIIntegrationSkill",
            "name": "_call_google_api",
            "col_offset": 4,
            "endline": 263,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 266,
            "complexity": 2,
            "classname": "APIIntegrationSkill",
            "name": "_call_claude_api",
            "col_offset": 4,
            "endline": 279,
            "closures": []
          }
        ]
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 284,
        "complexity": 2,
        "name": "initialize",
        "col_offset": 0,
        "endline": 298,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 12,
        "complexity": 2,
        "name": "BaseSkill",
        "col_offset": 0,
        "endline": 39,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 15,
            "complexity": 1,
            "classname": "BaseSkill",
            "name": "__init__",
            "col_offset": 4,
            "endline": 20,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 23,
            "complexity": 1,
            "classname": "BaseSkill",
            "name": "execute",
            "col_offset": 4,
            "endline": 25,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 27,
            "complexity": 1,
            "classname": "BaseSkill",
            "name": "get_info",
            "col_offset": 4,
            "endline": 33,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 36,
            "complexity": 1,
            "classname": "BaseSkill",
            "name": "initialize",
            "col_offset": 4,
            "endline": 39,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 233,
        "complexity": 2,
        "classname": "APIIntegrationSkill",
        "name": "_call_openai_api",
        "col_offset": 4,
        "endline": 247,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 250,
        "complexity": 2,
        "classname": "APIIntegrationSkill",
        "name": "_call_google_api",
        "col_offset": 4,
        "endline": 263,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 266,
        "complexity": 2,
        "classname": "APIIntegrationSkill",
        "name": "_call_claude_api",
        "col_offset": 4,
        "endline": 279,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 15,
        "complexity": 1,
        "classname": "BaseSkill",
        "name": "__init__",
        "col_offset": 4,
        "endline": 20,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 23,
        "complexity": 1,
        "classname": "BaseSkill",
        "name": "execute",
        "col_offset": 4,
        "endline": 25,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 27,
        "complexity": 1,
        "classname": "BaseSkill",
        "name": "get_info",
        "col_offset": 4,
        "endline": 33,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 36,
        "complexity": 1,
        "classname": "BaseSkill",
        "name": "initialize",
        "col_offset": 4,
        "endline": 39,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 45,
        "complexity": 1,
        "classname": "TextProcessingSkill",
        "name": "__init__",
        "col_offset": 4,
        "endline": 53,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 117,
        "complexity": 1,
        "classname": "DataAnalysisSkill",
        "name": "__init__",
        "col_offset": 4,
        "endline": 125,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 191,
        "complexity": 1,
        "classname": "APIIntegrationSkill",
        "name": "__init__",
        "col_offset": 4,
        "endline": 201,
        "closures": []
      }
    ],
    "test-project\\app.py": [
      {
        "type": "function",
        "rank": "A",
        "lineno": 11,
        "complexity": 1,
        "name": "root",
        "col_offset": 0,
        "endline": 12,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 15,
        "complexity": 1,
        "name": "health",
        "col_offset": 0,
        "endline": 16,
        "closures": []
      }
    ],
    "tests\\test_agents.py": [
      {
        "type": "method",
        "rank": "B",
        "lineno": 108,
        "complexity": 9,
        "classname": "TestConversationalAgent",
        "name": "test_run_conversation",
        "col_offset": 4,
        "endline": 108,
        "closures": []
      },
      {
        "type": "class",
        "rank": "B",
        "lineno": 69,
        "complexity": 7,
        "name": "TestTaskAgent",
        "col_offset": 0,
        "endline": 81,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 72,
            "complexity": 4,
            "classname": "TestTaskAgent",
            "name": "test_task_agent_initialization",
            "col_offset": 4,
            "endline": 72,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 81,
            "complexity": 7,
            "classname": "TestTaskAgent",
            "name": "test_run_general_task",
            "col_offset": 4,
            "endline": 81,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 81,
        "complexity": 7,
        "classname": "TestTaskAgent",
        "name": "test_run_general_task",
        "col_offset": 4,
        "endline": 81,
        "closures": []
      },
      {
        "type": "class",
        "rank": "B",
        "lineno": 95,
        "complexity": 7,
        "name": "TestConversationalAgent",
        "col_offset": 0,
        "endline": 125,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 98,
            "complexity": 5,
            "classname": "TestConversationalAgent",
            "name": "test_conversational_agent_initialization",
            "col_offset": 4,
            "endline": 98,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 108,
            "complexity": 9,
            "classname": "TestConversationalAgent",
            "name": "test_run_conversation",
            "col_offset": 4,
            "endline": 108,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 125,
            "complexity": 4,
            "classname": "TestConversationalAgent",
            "name": "test_get_conversation_history",
            "col_offset": 4,
            "endline": 125,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 155,
        "complexity": 7,
        "classname": "TestDataProcessingAgent",
        "name": "test_run_text_processing",
        "col_offset": 4,
        "endline": 155,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 277,
        "complexity": 7,
        "classname": "TestExampleAgents",
        "name": "test_example_data_agent_text_processing",
        "col_offset": 4,
        "endline": 277,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 44,
        "complexity": 6,
        "classname": "TestBaseAgent",
        "name": "test_get_status",
        "col_offset": 4,
        "endline": 44,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 241,
        "complexity": 6,
        "classname": "TestExampleAgents",
        "name": "test_example_conversational_agent_greeting",
        "col_offset": 4,
        "endline": 241,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 20,
        "complexity": 5,
        "name": "TestBaseAgent",
        "col_offset": 0,
        "endline": 60,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 23,
            "complexity": 5,
            "classname": "TestBaseAgent",
            "name": "test_base_agent_initialization",
            "col_offset": 4,
            "endline": 23,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 33,
            "complexity": 3,
            "classname": "TestBaseAgent",
            "name": "test_add_skill",
            "col_offset": 4,
            "endline": 33,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 44,
            "complexity": 6,
            "classname": "TestBaseAgent",
            "name": "test_get_status",
            "col_offset": 4,
            "endline": 44,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 60,
            "complexity": 2,
            "classname": "TestBaseAgent",
            "name": "test_initialize",
            "col_offset": 4,
            "endline": 60,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 23,
        "complexity": 5,
        "classname": "TestBaseAgent",
        "name": "test_base_agent_initialization",
        "col_offset": 4,
        "endline": 23,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 98,
        "complexity": 5,
        "classname": "TestConversationalAgent",
        "name": "test_conversational_agent_initialization",
        "col_offset": 4,
        "endline": 98,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 142,
        "complexity": 5,
        "name": "TestDataProcessingAgent",
        "col_offset": 0,
        "endline": 193,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 145,
            "complexity": 5,
            "classname": "TestDataProcessingAgent",
            "name": "test_data_processing_agent_initialization",
            "col_offset": 4,
            "endline": 145,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 155,
            "complexity": 7,
            "classname": "TestDataProcessingAgent",
            "name": "test_run_text_processing",
            "col_offset": 4,
            "endline": 155,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 172,
            "complexity": 4,
            "classname": "TestDataProcessingAgent",
            "name": "test_run_json_processing",
            "col_offset": 4,
            "endline": 172,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 186,
            "complexity": 1,
            "classname": "TestDataProcessingAgent",
            "name": "test_run_unsupported_data_type",
            "col_offset": 4,
            "endline": 193,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 145,
        "complexity": 5,
        "classname": "TestDataProcessingAgent",
        "name": "test_data_processing_agent_initialization",
        "col_offset": 4,
        "endline": 145,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 197,
        "complexity": 5,
        "name": "TestExampleAgents",
        "col_offset": 0,
        "endline": 376,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 201,
            "complexity": 5,
            "classname": "TestExampleAgents",
            "name": "test_example_task_agent_greet",
            "col_offset": 4,
            "endline": 201,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 213,
            "complexity": 5,
            "classname": "TestExampleAgents",
            "name": "test_example_task_agent_calculate",
            "col_offset": 4,
            "endline": 213,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 227,
            "complexity": 5,
            "classname": "TestExampleAgents",
            "name": "test_example_task_agent_analyze",
            "col_offset": 4,
            "endline": 227,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 241,
            "complexity": 6,
            "classname": "TestExampleAgents",
            "name": "test_example_conversational_agent_greeting",
            "col_offset": 4,
            "endline": 241,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 254,
            "complexity": 5,
            "classname": "TestExampleAgents",
            "name": "test_example_conversational_agent_question",
            "col_offset": 4,
            "endline": 254,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 266,
            "complexity": 4,
            "classname": "TestExampleAgents",
            "name": "test_example_conversational_agent_thanks",
            "col_offset": 4,
            "endline": 266,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 277,
            "complexity": 7,
            "classname": "TestExampleAgents",
            "name": "test_example_data_agent_text_processing",
            "col_offset": 4,
            "endline": 277,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 294,
            "complexity": 5,
            "classname": "TestExampleAgents",
            "name": "test_example_data_agent_json_processing",
            "col_offset": 4,
            "endline": 294,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 309,
            "complexity": 5,
            "classname": "TestExampleAgents",
            "name": "test_example_data_agent_csv_processing",
            "col_offset": 4,
            "endline": 309,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 324,
            "complexity": 1,
            "classname": "TestExampleAgents",
            "name": "test_example_data_agent_unsupported_type",
            "col_offset": 4,
            "endline": 331,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 335,
            "complexity": 2,
            "classname": "TestExampleAgents",
            "name": "test_example_data_agent_missing_parameters",
            "col_offset": 4,
            "endline": 335,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 344,
            "complexity": 2,
            "classname": "TestExampleAgents",
            "name": "test_example_data_agent_missing_data",
            "col_offset": 4,
            "endline": 344,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 355,
            "complexity": 3,
            "classname": "TestExampleAgents",
            "name": "test_example_data_agent_text_only",
            "col_offset": 4,
            "endline": 355,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 368,
            "complexity": 1,
            "classname": "TestExampleAgents",
            "name": "test_example_data_agent_unsupported_numbers",
            "col_offset": 4,
            "endline": 376,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 201,
        "complexity": 5,
        "classname": "TestExampleAgents",
        "name": "test_example_task_agent_greet",
        "col_offset": 4,
        "endline": 201,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 213,
        "complexity": 5,
        "classname": "TestExampleAgents",
        "name": "test_example_task_agent_calculate",
        "col_offset": 4,
        "endline": 213,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 227,
        "complexity": 5,
        "classname": "TestExampleAgents",
        "name": "test_example_task_agent_analyze",
        "col_offset": 4,
        "endline": 227,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 254,
        "complexity": 5,
        "classname": "TestExampleAgents",
        "name": "test_example_conversational_agent_question",
        "col_offset": 4,
        "endline": 254,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 294,
        "complexity": 5,
        "classname": "TestExampleAgents",
        "name": "test_example_data_agent_json_processing",
        "col_offset": 4,
        "endline": 294,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 309,
        "complexity": 5,
        "classname": "TestExampleAgents",
        "name": "test_example_data_agent_csv_processing",
        "col_offset": 4,
        "endline": 309,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 381,
        "complexity": 4,
        "name": "test_agent_initialization",
        "col_offset": 0,
        "endline": 381,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 72,
        "complexity": 4,
        "classname": "TestTaskAgent",
        "name": "test_task_agent_initialization",
        "col_offset": 4,
        "endline": 72,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 125,
        "complexity": 4,
        "classname": "TestConversationalAgent",
        "name": "test_get_conversation_history",
        "col_offset": 4,
        "endline": 125,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 172,
        "complexity": 4,
        "classname": "TestDataProcessingAgent",
        "name": "test_run_json_processing",
        "col_offset": 4,
        "endline": 172,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 266,
        "complexity": 4,
        "classname": "TestExampleAgents",
        "name": "test_example_conversational_agent_thanks",
        "col_offset": 4,
        "endline": 266,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 33,
        "complexity": 3,
        "classname": "TestBaseAgent",
        "name": "test_add_skill",
        "col_offset": 4,
        "endline": 33,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 355,
        "complexity": 3,
        "classname": "TestExampleAgents",
        "name": "test_example_data_agent_text_only",
        "col_offset": 4,
        "endline": 355,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 60,
        "complexity": 2,
        "classname": "TestBaseAgent",
        "name": "test_initialize",
        "col_offset": 4,
        "endline": 60,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 335,
        "complexity": 2,
        "classname": "TestExampleAgents",
        "name": "test_example_data_agent_missing_parameters",
        "col_offset": 4,
        "endline": 335,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 344,
        "complexity": 2,
        "classname": "TestExampleAgents",
        "name": "test_example_data_agent_missing_data",
        "col_offset": 4,
        "endline": 344,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 186,
        "complexity": 1,
        "classname": "TestDataProcessingAgent",
        "name": "test_run_unsupported_data_type",
        "col_offset": 4,
        "endline": 193,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 324,
        "complexity": 1,
        "classname": "TestExampleAgents",
        "name": "test_example_data_agent_unsupported_type",
        "col_offset": 4,
        "endline": 331,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 368,
        "complexity": 1,
        "classname": "TestExampleAgents",
        "name": "test_example_data_agent_unsupported_numbers",
        "col_offset": 4,
        "endline": 376,
        "closures": []
      }
    ],
    "tests\\test_analyzers.py": [
      {
        "type": "class",
        "rank": "B",
        "lineno": 257,
        "complexity": 7,
        "name": "TestAnalyzerIntegration",
        "col_offset": 0,
        "endline": 315,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 261,
            "complexity": 4,
            "classname": "TestAnalyzerIntegration",
            "name": "test_full_analysis_workflow",
            "col_offset": 4,
            "endline": 261,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 295,
            "complexity": 7,
            "classname": "TestAnalyzerIntegration",
            "name": "test_analyzer_error_handling",
            "col_offset": 4,
            "endline": 315,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 295,
        "complexity": 7,
        "classname": "TestAnalyzerIntegration",
        "name": "test_analyzer_error_handling",
        "col_offset": 4,
        "endline": 315,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 28,
        "complexity": 5,
        "classname": "TestProjectAnalyzer",
        "name": "test_project_analyzer_initialization",
        "col_offset": 4,
        "endline": 28,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 137,
        "complexity": 5,
        "classname": "TestFrameworkDetector",
        "name": "test_detect_fastapi_project",
        "col_offset": 4,
        "endline": 155,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 21,
        "complexity": 4,
        "name": "TestProjectAnalyzer",
        "col_offset": 0,
        "endline": 59,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 24,
            "complexity": 1,
            "classname": "TestProjectAnalyzer",
            "name": "setup_method",
            "col_offset": 4,
            "endline": 26,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 28,
            "complexity": 5,
            "classname": "TestProjectAnalyzer",
            "name": "test_project_analyzer_initialization",
            "col_offset": 4,
            "endline": 28,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 36,
            "complexity": 4,
            "classname": "TestProjectAnalyzer",
            "name": "test_analyze_nonexistent_path",
            "col_offset": 4,
            "endline": 36,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 48,
            "complexity": 3,
            "classname": "TestProjectAnalyzer",
            "name": "test_analyze_invalid_path_type",
            "col_offset": 4,
            "endline": 56,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 59,
            "complexity": 4,
            "classname": "TestProjectAnalyzer",
            "name": "test_analyze_empty_directory",
            "col_offset": 4,
            "endline": 59,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 36,
        "complexity": 4,
        "classname": "TestProjectAnalyzer",
        "name": "test_analyze_nonexistent_path",
        "col_offset": 4,
        "endline": 36,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 59,
        "complexity": 4,
        "classname": "TestProjectAnalyzer",
        "name": "test_analyze_empty_directory",
        "col_offset": 4,
        "endline": 59,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 69,
        "complexity": 4,
        "name": "TestLanguageDetector",
        "col_offset": 0,
        "endline": 114,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 72,
            "complexity": 1,
            "classname": "TestLanguageDetector",
            "name": "setup_method",
            "col_offset": 4,
            "endline": 74,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 76,
            "complexity": 3,
            "classname": "TestLanguageDetector",
            "name": "test_language_detector_initialization",
            "col_offset": 4,
            "endline": 76,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 82,
            "complexity": 4,
            "classname": "TestLanguageDetector",
            "name": "test_detect_python_file",
            "col_offset": 4,
            "endline": 82,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 99,
            "complexity": 3,
            "classname": "TestLanguageDetector",
            "name": "test_detect_javascript_file",
            "col_offset": 4,
            "endline": 99,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 114,
            "complexity": 3,
            "classname": "TestLanguageDetector",
            "name": "test_detect_empty_project",
            "col_offset": 4,
            "endline": 114,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 82,
        "complexity": 4,
        "classname": "TestLanguageDetector",
        "name": "test_detect_python_file",
        "col_offset": 4,
        "endline": 82,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 124,
        "complexity": 4,
        "name": "TestFrameworkDetector",
        "col_offset": 0,
        "endline": 174,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 127,
            "complexity": 1,
            "classname": "TestFrameworkDetector",
            "name": "setup_method",
            "col_offset": 4,
            "endline": 129,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 131,
            "complexity": 3,
            "classname": "TestFrameworkDetector",
            "name": "test_framework_detector_initialization",
            "col_offset": 4,
            "endline": 131,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 137,
            "complexity": 5,
            "classname": "TestFrameworkDetector",
            "name": "test_detect_fastapi_project",
            "col_offset": 4,
            "endline": 155,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 159,
            "complexity": 3,
            "classname": "TestFrameworkDetector",
            "name": "test_detect_react_project",
            "col_offset": 4,
            "endline": 159,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 174,
            "complexity": 4,
            "classname": "TestFrameworkDetector",
            "name": "test_detect_no_framework",
            "col_offset": 4,
            "endline": 174,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 174,
        "complexity": 4,
        "classname": "TestFrameworkDetector",
        "name": "test_detect_no_framework",
        "col_offset": 4,
        "endline": 174,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 186,
        "complexity": 4,
        "name": "TestDependencyAnalyzer",
        "col_offset": 0,
        "endline": 245,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 189,
            "complexity": 1,
            "classname": "TestDependencyAnalyzer",
            "name": "setup_method",
            "col_offset": 4,
            "endline": 191,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 193,
            "complexity": 3,
            "classname": "TestDependencyAnalyzer",
            "name": "test_dependency_analyzer_initialization",
            "col_offset": 4,
            "endline": 193,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 199,
            "complexity": 4,
            "classname": "TestDependencyAnalyzer",
            "name": "test_analyze_python_requirements",
            "col_offset": 4,
            "endline": 199,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 220,
            "complexity": 3,
            "classname": "TestDependencyAnalyzer",
            "name": "test_analyze_package_json",
            "col_offset": 4,
            "endline": 220,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 245,
            "complexity": 4,
            "classname": "TestDependencyAnalyzer",
            "name": "test_analyze_no_dependencies",
            "col_offset": 4,
            "endline": 245,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 199,
        "complexity": 4,
        "classname": "TestDependencyAnalyzer",
        "name": "test_analyze_python_requirements",
        "col_offset": 4,
        "endline": 199,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 245,
        "complexity": 4,
        "classname": "TestDependencyAnalyzer",
        "name": "test_analyze_no_dependencies",
        "col_offset": 4,
        "endline": 245,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 261,
        "complexity": 4,
        "classname": "TestAnalyzerIntegration",
        "name": "test_full_analysis_workflow",
        "col_offset": 4,
        "endline": 261,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 48,
        "complexity": 3,
        "classname": "TestProjectAnalyzer",
        "name": "test_analyze_invalid_path_type",
        "col_offset": 4,
        "endline": 56,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 76,
        "complexity": 3,
        "classname": "TestLanguageDetector",
        "name": "test_language_detector_initialization",
        "col_offset": 4,
        "endline": 76,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 99,
        "complexity": 3,
        "classname": "TestLanguageDetector",
        "name": "test_detect_javascript_file",
        "col_offset": 4,
        "endline": 99,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 114,
        "complexity": 3,
        "classname": "TestLanguageDetector",
        "name": "test_detect_empty_project",
        "col_offset": 4,
        "endline": 114,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 131,
        "complexity": 3,
        "classname": "TestFrameworkDetector",
        "name": "test_framework_detector_initialization",
        "col_offset": 4,
        "endline": 131,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 159,
        "complexity": 3,
        "classname": "TestFrameworkDetector",
        "name": "test_detect_react_project",
        "col_offset": 4,
        "endline": 159,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 193,
        "complexity": 3,
        "classname": "TestDependencyAnalyzer",
        "name": "test_dependency_analyzer_initialization",
        "col_offset": 4,
        "endline": 193,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 220,
        "complexity": 3,
        "classname": "TestDependencyAnalyzer",
        "name": "test_analyze_package_json",
        "col_offset": 4,
        "endline": 220,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 24,
        "complexity": 1,
        "classname": "TestProjectAnalyzer",
        "name": "setup_method",
        "col_offset": 4,
        "endline": 26,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 72,
        "complexity": 1,
        "classname": "TestLanguageDetector",
        "name": "setup_method",
        "col_offset": 4,
        "endline": 74,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 127,
        "complexity": 1,
        "classname": "TestFrameworkDetector",
        "name": "setup_method",
        "col_offset": 4,
        "endline": 129,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 189,
        "complexity": 1,
        "classname": "TestDependencyAnalyzer",
        "name": "setup_method",
        "col_offset": 4,
        "endline": 191,
        "closures": []
      }
    ],
    "tests\\test_app.py": [
      {
        "type": "method",
        "rank": "B",
        "lineno": 45,
        "complexity": 7,
        "classname": "TestApp",
        "name": "test_status_endpoint",
        "col_offset": 4,
        "endline": 45,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 35,
        "complexity": 6,
        "classname": "TestApp",
        "name": "test_root_endpoint",
        "col_offset": 4,
        "endline": 35,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 56,
        "complexity": 5,
        "classname": "TestApp",
        "name": "test_test_endpoint",
        "col_offset": 4,
        "endline": 56,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 65,
        "complexity": 5,
        "classname": "TestApp",
        "name": "test_list_agents_endpoint",
        "col_offset": 4,
        "endline": 65,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 74,
        "complexity": 5,
        "classname": "TestApp",
        "name": "test_list_skills_endpoint",
        "col_offset": 4,
        "endline": 74,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 83,
        "complexity": 4,
        "classname": "TestApp",
        "name": "test_api_keys_status_endpoint",
        "col_offset": 4,
        "endline": 83,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 19,
        "complexity": 3,
        "name": "TestApp",
        "col_offset": 0,
        "endline": 156,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 22,
            "complexity": 1,
            "classname": "TestApp",
            "name": "setup_method",
            "col_offset": 4,
            "endline": 32,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 35,
            "complexity": 6,
            "classname": "TestApp",
            "name": "test_root_endpoint",
            "col_offset": 4,
            "endline": 35,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 45,
            "complexity": 7,
            "classname": "TestApp",
            "name": "test_status_endpoint",
            "col_offset": 4,
            "endline": 45,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 56,
            "complexity": 5,
            "classname": "TestApp",
            "name": "test_test_endpoint",
            "col_offset": 4,
            "endline": 56,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 65,
            "complexity": 5,
            "classname": "TestApp",
            "name": "test_list_agents_endpoint",
            "col_offset": 4,
            "endline": 65,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 74,
            "complexity": 5,
            "classname": "TestApp",
            "name": "test_list_skills_endpoint",
            "col_offset": 4,
            "endline": 74,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 83,
            "complexity": 4,
            "classname": "TestApp",
            "name": "test_api_keys_status_endpoint",
            "col_offset": 4,
            "endline": 83,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 92,
            "complexity": 1,
            "classname": "TestApp",
            "name": "test_run_agent_not_initialized",
            "col_offset": 4,
            "endline": 95,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 98,
            "complexity": 1,
            "classname": "TestApp",
            "name": "test_run_agent_not_found",
            "col_offset": 4,
            "endline": 101,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 104,
            "complexity": 1,
            "classname": "TestApp",
            "name": "test_run_agent_success",
            "col_offset": 4,
            "endline": 107,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 110,
            "complexity": 1,
            "classname": "TestApp",
            "name": "test_run_agent_async",
            "col_offset": 4,
            "endline": 113,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 116,
            "complexity": 1,
            "classname": "TestApp",
            "name": "test_run_agent_no_run_method",
            "col_offset": 4,
            "endline": 119,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 122,
            "complexity": 1,
            "classname": "TestApp",
            "name": "test_load_skills_success",
            "col_offset": 4,
            "endline": 125,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 128,
            "complexity": 1,
            "classname": "TestApp",
            "name": "test_load_skills_error",
            "col_offset": 4,
            "endline": 131,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 135,
            "complexity": 1,
            "classname": "TestApp",
            "name": "test_initialize_system",
            "col_offset": 4,
            "endline": 138,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 140,
            "complexity": 2,
            "classname": "TestApp",
            "name": "test_cors_headers",
            "col_offset": 4,
            "endline": 140,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 147,
            "complexity": 1,
            "classname": "TestApp",
            "name": "test_invalid_json_request",
            "col_offset": 4,
            "endline": 150,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 153,
            "complexity": 1,
            "classname": "TestApp",
            "name": "test_missing_required_fields",
            "col_offset": 4,
            "endline": 156,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 140,
        "complexity": 2,
        "classname": "TestApp",
        "name": "test_cors_headers",
        "col_offset": 4,
        "endline": 140,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 22,
        "complexity": 1,
        "classname": "TestApp",
        "name": "setup_method",
        "col_offset": 4,
        "endline": 32,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 92,
        "complexity": 1,
        "classname": "TestApp",
        "name": "test_run_agent_not_initialized",
        "col_offset": 4,
        "endline": 95,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 98,
        "complexity": 1,
        "classname": "TestApp",
        "name": "test_run_agent_not_found",
        "col_offset": 4,
        "endline": 101,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 104,
        "complexity": 1,
        "classname": "TestApp",
        "name": "test_run_agent_success",
        "col_offset": 4,
        "endline": 107,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 110,
        "complexity": 1,
        "classname": "TestApp",
        "name": "test_run_agent_async",
        "col_offset": 4,
        "endline": 113,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 116,
        "complexity": 1,
        "classname": "TestApp",
        "name": "test_run_agent_no_run_method",
        "col_offset": 4,
        "endline": 119,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 122,
        "complexity": 1,
        "classname": "TestApp",
        "name": "test_load_skills_success",
        "col_offset": 4,
        "endline": 125,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 128,
        "complexity": 1,
        "classname": "TestApp",
        "name": "test_load_skills_error",
        "col_offset": 4,
        "endline": 131,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 135,
        "complexity": 1,
        "classname": "TestApp",
        "name": "test_initialize_system",
        "col_offset": 4,
        "endline": 138,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 147,
        "complexity": 1,
        "classname": "TestApp",
        "name": "test_invalid_json_request",
        "col_offset": 4,
        "endline": 150,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 153,
        "complexity": 1,
        "classname": "TestApp",
        "name": "test_missing_required_fields",
        "col_offset": 4,
        "endline": 156,
        "closures": []
      }
    ],
    "tests\\test_routes.py": [
      {
        "type": "method",
        "rank": "A",
        "lineno": 61,
        "complexity": 5,
        "classname": "TestAgentRoutes",
        "name": "test_agent_status_endpoint",
        "col_offset": 4,
        "endline": 61,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 160,
        "complexity": 5,
        "classname": "TestRouteIntegration",
        "name": "test_api_prefix_consistency",
        "col_offset": 4,
        "endline": 160,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 37,
        "complexity": 4,
        "classname": "TestAnalysisRoutes",
        "name": "test_list_reports_endpoint",
        "col_offset": 4,
        "endline": 37,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 45,
        "complexity": 4,
        "classname": "TestAnalysisRoutes",
        "name": "test_list_artifacts_endpoint",
        "col_offset": 4,
        "endline": 45,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 147,
        "complexity": 4,
        "name": "TestRouteIntegration",
        "col_offset": 0,
        "endline": 193,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 150,
            "complexity": 1,
            "classname": "TestRouteIntegration",
            "name": "setup_method",
            "col_offset": 4,
            "endline": 152,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 154,
            "complexity": 2,
            "classname": "TestRouteIntegration",
            "name": "test_cors_configuration",
            "col_offset": 4,
            "endline": 154,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 160,
            "complexity": 5,
            "classname": "TestRouteIntegration",
            "name": "test_api_prefix_consistency",
            "col_offset": 4,
            "endline": 160,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 178,
            "complexity": 4,
            "classname": "TestRouteIntegration",
            "name": "test_error_response_format",
            "col_offset": 4,
            "endline": 190,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 193,
            "complexity": 3,
            "classname": "TestRouteIntegration",
            "name": "test_route_async_handling",
            "col_offset": 4,
            "endline": 193,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 178,
        "complexity": 4,
        "classname": "TestRouteIntegration",
        "name": "test_error_response_format",
        "col_offset": 4,
        "endline": 190,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 18,
        "complexity": 3,
        "name": "TestAnalysisRoutes",
        "col_offset": 0,
        "endline": 45,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 21,
            "complexity": 1,
            "classname": "TestAnalysisRoutes",
            "name": "setup_method",
            "col_offset": 4,
            "endline": 23,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 25,
            "complexity": 2,
            "classname": "TestAnalysisRoutes",
            "name": "test_analyze_project_endpoint_exists",
            "col_offset": 4,
            "endline": 25,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 31,
            "complexity": 2,
            "classname": "TestAnalysisRoutes",
            "name": "test_analysis_results_endpoint",
            "col_offset": 4,
            "endline": 31,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 37,
            "complexity": 4,
            "classname": "TestAnalysisRoutes",
            "name": "test_list_reports_endpoint",
            "col_offset": 4,
            "endline": 37,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 45,
            "complexity": 4,
            "classname": "TestAnalysisRoutes",
            "name": "test_list_artifacts_endpoint",
            "col_offset": 4,
            "endline": 45,
            "closures": []
          }
        ]
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 54,
        "complexity": 3,
        "name": "TestAgentRoutes",
        "col_offset": 0,
        "endline": 82,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 57,
            "complexity": 1,
            "classname": "TestAgentRoutes",
            "name": "setup_method",
            "col_offset": 4,
            "endline": 59,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 61,
            "complexity": 5,
            "classname": "TestAgentRoutes",
            "name": "test_agent_status_endpoint",
            "col_offset": 4,
            "endline": 61,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 70,
            "complexity": 2,
            "classname": "TestAgentRoutes",
            "name": "test_chat_endpoint_exists",
            "col_offset": 4,
            "endline": 70,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 76,
            "complexity": 2,
            "classname": "TestAgentRoutes",
            "name": "test_generate_agents_endpoint",
            "col_offset": 4,
            "endline": 76,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 82,
            "complexity": 2,
            "classname": "TestAgentRoutes",
            "name": "test_optimizations_endpoint",
            "col_offset": 4,
            "endline": 82,
            "closures": []
          }
        ]
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 89,
        "complexity": 3,
        "name": "TestWorkflowRoutes",
        "col_offset": 0,
        "endline": 112,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 92,
            "complexity": 1,
            "classname": "TestWorkflowRoutes",
            "name": "setup_method",
            "col_offset": 4,
            "endline": 94,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 96,
            "complexity": 3,
            "classname": "TestWorkflowRoutes",
            "name": "test_workflow_status_endpoint",
            "col_offset": 4,
            "endline": 96,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 103,
            "complexity": 2,
            "classname": "TestWorkflowRoutes",
            "name": "test_execute_workflow_endpoint_exists",
            "col_offset": 4,
            "endline": 103,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 112,
            "complexity": 2,
            "classname": "TestWorkflowRoutes",
            "name": "test_workflow_progress_endpoint",
            "col_offset": 4,
            "endline": 112,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 96,
        "complexity": 3,
        "classname": "TestWorkflowRoutes",
        "name": "test_workflow_status_endpoint",
        "col_offset": 4,
        "endline": 96,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 119,
        "complexity": 3,
        "name": "TestModelRoutes",
        "col_offset": 0,
        "endline": 139,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 122,
            "complexity": 1,
            "classname": "TestModelRoutes",
            "name": "setup_method",
            "col_offset": 4,
            "endline": 124,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 126,
            "complexity": 3,
            "classname": "TestModelRoutes",
            "name": "test_list_models_endpoint",
            "col_offset": 4,
            "endline": 126,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 133,
            "complexity": 2,
            "classname": "TestModelRoutes",
            "name": "test_set_model_endpoint_exists",
            "col_offset": 4,
            "endline": 133,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 139,
            "complexity": 3,
            "classname": "TestModelRoutes",
            "name": "test_current_model_endpoint",
            "col_offset": 4,
            "endline": 139,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 126,
        "complexity": 3,
        "classname": "TestModelRoutes",
        "name": "test_list_models_endpoint",
        "col_offset": 4,
        "endline": 126,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 139,
        "complexity": 3,
        "classname": "TestModelRoutes",
        "name": "test_current_model_endpoint",
        "col_offset": 4,
        "endline": 139,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 193,
        "complexity": 3,
        "classname": "TestRouteIntegration",
        "name": "test_route_async_handling",
        "col_offset": 4,
        "endline": 193,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 202,
        "complexity": 3,
        "name": "TestRouteValidation",
        "col_offset": 0,
        "endline": 221,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 205,
            "complexity": 1,
            "classname": "TestRouteValidation",
            "name": "setup_method",
            "col_offset": 4,
            "endline": 207,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 209,
            "complexity": 3,
            "classname": "TestRouteValidation",
            "name": "test_analyze_missing_project_path",
            "col_offset": 4,
            "endline": 209,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 216,
            "complexity": 2,
            "classname": "TestRouteValidation",
            "name": "test_chat_missing_message",
            "col_offset": 4,
            "endline": 216,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 221,
            "complexity": 2,
            "classname": "TestRouteValidation",
            "name": "test_set_model_missing_parameters",
            "col_offset": 4,
            "endline": 221,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 209,
        "complexity": 3,
        "classname": "TestRouteValidation",
        "name": "test_analyze_missing_project_path",
        "col_offset": 4,
        "endline": 209,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 25,
        "complexity": 2,
        "classname": "TestAnalysisRoutes",
        "name": "test_analyze_project_endpoint_exists",
        "col_offset": 4,
        "endline": 25,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 31,
        "complexity": 2,
        "classname": "TestAnalysisRoutes",
        "name": "test_analysis_results_endpoint",
        "col_offset": 4,
        "endline": 31,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 70,
        "complexity": 2,
        "classname": "TestAgentRoutes",
        "name": "test_chat_endpoint_exists",
        "col_offset": 4,
        "endline": 70,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 76,
        "complexity": 2,
        "classname": "TestAgentRoutes",
        "name": "test_generate_agents_endpoint",
        "col_offset": 4,
        "endline": 76,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 82,
        "complexity": 2,
        "classname": "TestAgentRoutes",
        "name": "test_optimizations_endpoint",
        "col_offset": 4,
        "endline": 82,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 103,
        "complexity": 2,
        "classname": "TestWorkflowRoutes",
        "name": "test_execute_workflow_endpoint_exists",
        "col_offset": 4,
        "endline": 103,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 112,
        "complexity": 2,
        "classname": "TestWorkflowRoutes",
        "name": "test_workflow_progress_endpoint",
        "col_offset": 4,
        "endline": 112,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 133,
        "complexity": 2,
        "classname": "TestModelRoutes",
        "name": "test_set_model_endpoint_exists",
        "col_offset": 4,
        "endline": 133,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 154,
        "complexity": 2,
        "classname": "TestRouteIntegration",
        "name": "test_cors_configuration",
        "col_offset": 4,
        "endline": 154,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 216,
        "complexity": 2,
        "classname": "TestRouteValidation",
        "name": "test_chat_missing_message",
        "col_offset": 4,
        "endline": 216,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 221,
        "complexity": 2,
        "classname": "TestRouteValidation",
        "name": "test_set_model_missing_parameters",
        "col_offset": 4,
        "endline": 221,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 21,
        "complexity": 1,
        "classname": "TestAnalysisRoutes",
        "name": "setup_method",
        "col_offset": 4,
        "endline": 23,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 57,
        "complexity": 1,
        "classname": "TestAgentRoutes",
        "name": "setup_method",
        "col_offset": 4,
        "endline": 59,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 92,
        "complexity": 1,
        "classname": "TestWorkflowRoutes",
        "name": "setup_method",
        "col_offset": 4,
        "endline": 94,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 122,
        "complexity": 1,
        "classname": "TestModelRoutes",
        "name": "setup_method",
        "col_offset": 4,
        "endline": 124,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 150,
        "complexity": 1,
        "classname": "TestRouteIntegration",
        "name": "setup_method",
        "col_offset": 4,
        "endline": 152,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 205,
        "complexity": 1,
        "classname": "TestRouteValidation",
        "name": "setup_method",
        "col_offset": 4,
        "endline": 207,
        "closures": []
      }
    ],
    "tests\\test_settings.py": [
      {
        "type": "method",
        "rank": "B",
        "lineno": 137,
        "complexity": 10,
        "classname": "TestSettingsManager",
        "name": "test_get_all_settings",
        "col_offset": 4,
        "endline": 137,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 208,
        "complexity": 7,
        "classname": "TestSettingsManager",
        "name": "test_get_provider_config",
        "col_offset": 4,
        "endline": 208,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 179,
        "complexity": 6,
        "classname": "TestSettingsManager",
        "name": "test_get_api_keys",
        "col_offset": 4,
        "endline": 179,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 196,
        "complexity": 6,
        "classname": "TestSettingsManager",
        "name": "test_is_provider_enabled",
        "col_offset": 4,
        "endline": 196,
        "closures": []
      },
      {
        "type": "class",
        "rank": "B",
        "lineno": 343,
        "complexity": 6,
        "name": "TestEnvironmentConfig",
        "col_offset": 0,
        "endline": 425,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 346,
            "complexity": 5,
            "classname": "TestEnvironmentConfig",
            "name": "test_development_environment_config",
            "col_offset": 4,
            "endline": 346,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 356,
            "complexity": 6,
            "classname": "TestEnvironmentConfig",
            "name": "test_testing_environment_config",
            "col_offset": 4,
            "endline": 356,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 367,
            "complexity": 6,
            "classname": "TestEnvironmentConfig",
            "name": "test_production_environment_config",
            "col_offset": 4,
            "endline": 367,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 378,
            "complexity": 3,
            "classname": "TestEnvironmentConfig",
            "name": "test_unknown_environment_config",
            "col_offset": 4,
            "endline": 378,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 387,
            "complexity": 5,
            "classname": "TestEnvironmentConfig",
            "name": "test_apply_environment_config",
            "col_offset": 4,
            "endline": 407,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 409,
            "complexity": 4,
            "classname": "TestEnvironmentConfig",
            "name": "test_environment_from_env_var",
            "col_offset": 4,
            "endline": 425,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 356,
        "complexity": 6,
        "classname": "TestEnvironmentConfig",
        "name": "test_testing_environment_config",
        "col_offset": 4,
        "endline": 356,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 367,
        "complexity": 6,
        "classname": "TestEnvironmentConfig",
        "name": "test_production_environment_config",
        "col_offset": 4,
        "endline": 367,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 35,
        "complexity": 5,
        "classname": "TestSettingsManager",
        "name": "test_initialization",
        "col_offset": 4,
        "endline": 35,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 74,
        "complexity": 5,
        "classname": "TestSettingsManager",
        "name": "test_get_section",
        "col_offset": 4,
        "endline": 74,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 82,
        "complexity": 5,
        "classname": "TestSettingsManager",
        "name": "test_update_section",
        "col_offset": 4,
        "endline": 82,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 238,
        "complexity": 5,
        "classname": "TestConfigValidator",
        "name": "test_validate_app_config_missing_required_fields",
        "col_offset": 4,
        "endline": 238,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 346,
        "complexity": 5,
        "classname": "TestEnvironmentConfig",
        "name": "test_development_environment_config",
        "col_offset": 4,
        "endline": 346,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 387,
        "complexity": 5,
        "classname": "TestEnvironmentConfig",
        "name": "test_apply_environment_config",
        "col_offset": 4,
        "endline": 407,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 21,
        "complexity": 4,
        "name": "TestSettingsManager",
        "col_offset": 0,
        "endline": 208,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 24,
            "complexity": 1,
            "classname": "TestSettingsManager",
            "name": "setup_method",
            "col_offset": 4,
            "endline": 28,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 30,
            "complexity": 1,
            "classname": "TestSettingsManager",
            "name": "teardown_method",
            "col_offset": 4,
            "endline": 33,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 35,
            "complexity": 5,
            "classname": "TestSettingsManager",
            "name": "test_initialization",
            "col_offset": 4,
            "endline": 35,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 42,
            "complexity": 2,
            "classname": "TestSettingsManager",
            "name": "test_get_simple_value",
            "col_offset": 4,
            "endline": 42,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 47,
            "complexity": 2,
            "classname": "TestSettingsManager",
            "name": "test_get_nested_value",
            "col_offset": 4,
            "endline": 47,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 52,
            "complexity": 2,
            "classname": "TestSettingsManager",
            "name": "test_get_nonexistent_value",
            "col_offset": 4,
            "endline": 52,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 57,
            "complexity": 2,
            "classname": "TestSettingsManager",
            "name": "test_get_nonexistent_value_with_default",
            "col_offset": 4,
            "endline": 57,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 62,
            "complexity": 2,
            "classname": "TestSettingsManager",
            "name": "test_set_simple_value",
            "col_offset": 4,
            "endline": 62,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 68,
            "complexity": 2,
            "classname": "TestSettingsManager",
            "name": "test_set_nested_value",
            "col_offset": 4,
            "endline": 68,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 74,
            "complexity": 5,
            "classname": "TestSettingsManager",
            "name": "test_get_section",
            "col_offset": 4,
            "endline": 74,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 82,
            "complexity": 5,
            "classname": "TestSettingsManager",
            "name": "test_update_section",
            "col_offset": 4,
            "endline": 82,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 99,
            "complexity": 4,
            "classname": "TestSettingsManager",
            "name": "test_save_config",
            "col_offset": 4,
            "endline": 99,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 119,
            "complexity": 4,
            "classname": "TestSettingsManager",
            "name": "test_reload_config",
            "col_offset": 4,
            "endline": 119,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 137,
            "complexity": 10,
            "classname": "TestSettingsManager",
            "name": "test_get_all_settings",
            "col_offset": 4,
            "endline": 137,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 150,
            "complexity": 4,
            "classname": "TestSettingsManager",
            "name": "test_validate_settings_success",
            "col_offset": 4,
            "endline": 156,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 159,
            "complexity": 3,
            "classname": "TestSettingsManager",
            "name": "test_validate_settings_missing_app_name",
            "col_offset": 4,
            "endline": 159,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 166,
            "complexity": 3,
            "classname": "TestSettingsManager",
            "name": "test_validate_settings_invalid_port",
            "col_offset": 4,
            "endline": 166,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 173,
            "complexity": 3,
            "classname": "TestSettingsManager",
            "name": "test_validate_settings_default_encryption_key",
            "col_offset": 4,
            "endline": 173,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 179,
            "complexity": 6,
            "classname": "TestSettingsManager",
            "name": "test_get_api_keys",
            "col_offset": 4,
            "endline": 179,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 196,
            "complexity": 6,
            "classname": "TestSettingsManager",
            "name": "test_is_provider_enabled",
            "col_offset": 4,
            "endline": 196,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 208,
            "complexity": 7,
            "classname": "TestSettingsManager",
            "name": "test_get_provider_config",
            "col_offset": 4,
            "endline": 208,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 99,
        "complexity": 4,
        "classname": "TestSettingsManager",
        "name": "test_save_config",
        "col_offset": 4,
        "endline": 99,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 119,
        "complexity": 4,
        "classname": "TestSettingsManager",
        "name": "test_reload_config",
        "col_offset": 4,
        "endline": 119,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 150,
        "complexity": 4,
        "classname": "TestSettingsManager",
        "name": "test_validate_settings_success",
        "col_offset": 4,
        "endline": 156,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 222,
        "complexity": 4,
        "name": "TestConfigValidator",
        "col_offset": 0,
        "endline": 331,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 225,
            "complexity": 2,
            "classname": "TestConfigValidator",
            "name": "test_validate_app_config_success",
            "col_offset": 4,
            "endline": 225,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 238,
            "complexity": 5,
            "classname": "TestConfigValidator",
            "name": "test_validate_app_config_missing_required_fields",
            "col_offset": 4,
            "endline": 238,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 251,
            "complexity": 3,
            "classname": "TestConfigValidator",
            "name": "test_validate_app_config_invalid_port",
            "col_offset": 4,
            "endline": 251,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 265,
            "complexity": 3,
            "classname": "TestConfigValidator",
            "name": "test_validate_app_config_invalid_debug",
            "col_offset": 4,
            "endline": 265,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 279,
            "complexity": 2,
            "classname": "TestConfigValidator",
            "name": "test_validate_database_config_success",
            "col_offset": 4,
            "endline": 279,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 289,
            "complexity": 3,
            "classname": "TestConfigValidator",
            "name": "test_validate_database_config_missing_url",
            "col_offset": 4,
            "endline": 289,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 299,
            "complexity": 3,
            "classname": "TestConfigValidator",
            "name": "test_validate_database_config_invalid_pool_size",
            "col_offset": 4,
            "endline": 299,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 310,
            "complexity": 2,
            "classname": "TestConfigValidator",
            "name": "test_validate_security_config_success",
            "col_offset": 4,
            "endline": 310,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 320,
            "complexity": 3,
            "classname": "TestConfigValidator",
            "name": "test_validate_security_config_invalid_timeout",
            "col_offset": 4,
            "endline": 320,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 331,
            "complexity": 3,
            "classname": "TestConfigValidator",
            "name": "test_validate_security_config_invalid_password_length",
            "col_offset": 4,
            "endline": 331,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 409,
        "complexity": 4,
        "classname": "TestEnvironmentConfig",
        "name": "test_environment_from_env_var",
        "col_offset": 4,
        "endline": 425,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 159,
        "complexity": 3,
        "classname": "TestSettingsManager",
        "name": "test_validate_settings_missing_app_name",
        "col_offset": 4,
        "endline": 159,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 166,
        "complexity": 3,
        "classname": "TestSettingsManager",
        "name": "test_validate_settings_invalid_port",
        "col_offset": 4,
        "endline": 166,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 173,
        "complexity": 3,
        "classname": "TestSettingsManager",
        "name": "test_validate_settings_default_encryption_key",
        "col_offset": 4,
        "endline": 173,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 251,
        "complexity": 3,
        "classname": "TestConfigValidator",
        "name": "test_validate_app_config_invalid_port",
        "col_offset": 4,
        "endline": 251,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 265,
        "complexity": 3,
        "classname": "TestConfigValidator",
        "name": "test_validate_app_config_invalid_debug",
        "col_offset": 4,
        "endline": 265,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 289,
        "complexity": 3,
        "classname": "TestConfigValidator",
        "name": "test_validate_database_config_missing_url",
        "col_offset": 4,
        "endline": 289,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 299,
        "complexity": 3,
        "classname": "TestConfigValidator",
        "name": "test_validate_database_config_invalid_pool_size",
        "col_offset": 4,
        "endline": 299,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 320,
        "complexity": 3,
        "classname": "TestConfigValidator",
        "name": "test_validate_security_config_invalid_timeout",
        "col_offset": 4,
        "endline": 320,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 331,
        "complexity": 3,
        "classname": "TestConfigValidator",
        "name": "test_validate_security_config_invalid_password_length",
        "col_offset": 4,
        "endline": 331,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 378,
        "complexity": 3,
        "classname": "TestEnvironmentConfig",
        "name": "test_unknown_environment_config",
        "col_offset": 4,
        "endline": 378,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 42,
        "complexity": 2,
        "classname": "TestSettingsManager",
        "name": "test_get_simple_value",
        "col_offset": 4,
        "endline": 42,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 47,
        "complexity": 2,
        "classname": "TestSettingsManager",
        "name": "test_get_nested_value",
        "col_offset": 4,
        "endline": 47,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 52,
        "complexity": 2,
        "classname": "TestSettingsManager",
        "name": "test_get_nonexistent_value",
        "col_offset": 4,
        "endline": 52,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 57,
        "complexity": 2,
        "classname": "TestSettingsManager",
        "name": "test_get_nonexistent_value_with_default",
        "col_offset": 4,
        "endline": 57,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 62,
        "complexity": 2,
        "classname": "TestSettingsManager",
        "name": "test_set_simple_value",
        "col_offset": 4,
        "endline": 62,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 68,
        "complexity": 2,
        "classname": "TestSettingsManager",
        "name": "test_set_nested_value",
        "col_offset": 4,
        "endline": 68,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 225,
        "complexity": 2,
        "classname": "TestConfigValidator",
        "name": "test_validate_app_config_success",
        "col_offset": 4,
        "endline": 225,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 279,
        "complexity": 2,
        "classname": "TestConfigValidator",
        "name": "test_validate_database_config_success",
        "col_offset": 4,
        "endline": 279,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 310,
        "complexity": 2,
        "classname": "TestConfigValidator",
        "name": "test_validate_security_config_success",
        "col_offset": 4,
        "endline": 310,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 24,
        "complexity": 1,
        "classname": "TestSettingsManager",
        "name": "setup_method",
        "col_offset": 4,
        "endline": 28,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 30,
        "complexity": 1,
        "classname": "TestSettingsManager",
        "name": "teardown_method",
        "col_offset": 4,
        "endline": 33,
        "closures": []
      }
    ],
    "tests\\test_skills.py": [
      {
        "type": "method",
        "rank": "C",
        "lineno": 225,
        "complexity": 12,
        "classname": "TestDataAnalysisSkill",
        "name": "test_execute_json_statistics",
        "col_offset": 4,
        "endline": 225,
        "closures": []
      },
      {
        "type": "method",
        "rank": "C",
        "lineno": 200,
        "complexity": 11,
        "classname": "TestDataAnalysisSkill",
        "name": "test_execute_numbers_statistics",
        "col_offset": 4,
        "endline": 200,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 75,
        "complexity": 10,
        "classname": "TestTextProcessingSkill",
        "name": "test_execute_analyze_operation",
        "col_offset": 4,
        "endline": 75,
        "closures": []
      },
      {
        "type": "class",
        "rank": "B",
        "lineno": 339,
        "complexity": 9,
        "name": "TestAPIIntegrationSkill",
        "col_offset": 0,
        "endline": 415,
        "methods": [
          {
            "type": "method",
            "rank": "B",
            "lineno": 342,
            "complexity": 8,
            "classname": "TestAPIIntegrationSkill",
            "name": "test_api_integration_skill_initialization",
            "col_offset": 4,
            "endline": 342,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 355,
            "complexity": 9,
            "classname": "TestAPIIntegrationSkill",
            "name": "test_execute_openai_api",
            "col_offset": 4,
            "endline": 355,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 375,
            "complexity": 9,
            "classname": "TestAPIIntegrationSkill",
            "name": "test_execute_google_api",
            "col_offset": 4,
            "endline": 375,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 395,
            "complexity": 9,
            "classname": "TestAPIIntegrationSkill",
            "name": "test_execute_claude_api",
            "col_offset": 4,
            "endline": 395,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 415,
            "complexity": 8,
            "classname": "TestAPIIntegrationSkill",
            "name": "test_execute_unknown_api_type",
            "col_offset": 4,
            "endline": 415,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 355,
        "complexity": 9,
        "classname": "TestAPIIntegrationSkill",
        "name": "test_execute_openai_api",
        "col_offset": 4,
        "endline": 355,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 375,
        "complexity": 9,
        "classname": "TestAPIIntegrationSkill",
        "name": "test_execute_google_api",
        "col_offset": 4,
        "endline": 375,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 395,
        "complexity": 9,
        "classname": "TestAPIIntegrationSkill",
        "name": "test_execute_claude_api",
        "col_offset": 4,
        "endline": 395,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 342,
        "complexity": 8,
        "classname": "TestAPIIntegrationSkill",
        "name": "test_api_integration_skill_initialization",
        "col_offset": 4,
        "endline": 342,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 415,
        "complexity": 8,
        "classname": "TestAPIIntegrationSkill",
        "name": "test_execute_unknown_api_type",
        "col_offset": 4,
        "endline": 415,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 118,
        "complexity": 7,
        "classname": "TestTextProcessingSkill",
        "name": "test_execute_sentiment_operation_positive",
        "col_offset": 4,
        "endline": 118,
        "closures": []
      },
      {
        "type": "function",
        "rank": "B",
        "lineno": 435,
        "complexity": 6,
        "name": "test_skills_initialization",
        "col_offset": 0,
        "endline": 446,
        "closures": []
      },
      {
        "type": "class",
        "rank": "B",
        "lineno": 61,
        "complexity": 6,
        "name": "TestTextProcessingSkill",
        "col_offset": 0,
        "endline": 183,
        "methods": [
          {
            "type": "method",
            "rank": "B",
            "lineno": 64,
            "complexity": 6,
            "classname": "TestTextProcessingSkill",
            "name": "test_text_processing_skill_initialization",
            "col_offset": 4,
            "endline": 64,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 75,
            "complexity": 10,
            "classname": "TestTextProcessingSkill",
            "name": "test_execute_analyze_operation",
            "col_offset": 4,
            "endline": 75,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 97,
            "complexity": 6,
            "classname": "TestTextProcessingSkill",
            "name": "test_execute_summarize_operation",
            "col_offset": 4,
            "endline": 97,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 118,
            "complexity": 7,
            "classname": "TestTextProcessingSkill",
            "name": "test_execute_sentiment_operation_positive",
            "col_offset": 4,
            "endline": 118,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 136,
            "complexity": 4,
            "classname": "TestTextProcessingSkill",
            "name": "test_execute_sentiment_operation_negative",
            "col_offset": 4,
            "endline": 136,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 150,
            "complexity": 4,
            "classname": "TestTextProcessingSkill",
            "name": "test_execute_sentiment_operation_neutral",
            "col_offset": 4,
            "endline": 150,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 164,
            "complexity": 5,
            "classname": "TestTextProcessingSkill",
            "name": "test_execute_unknown_operation",
            "col_offset": 4,
            "endline": 164,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 178,
            "complexity": 1,
            "classname": "TestTextProcessingSkill",
            "name": "test_execute_invalid_input",
            "col_offset": 4,
            "endline": 183,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 64,
        "complexity": 6,
        "classname": "TestTextProcessingSkill",
        "name": "test_text_processing_skill_initialization",
        "col_offset": 4,
        "endline": 64,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 97,
        "complexity": 6,
        "classname": "TestTextProcessingSkill",
        "name": "test_execute_summarize_operation",
        "col_offset": 4,
        "endline": 97,
        "closures": []
      },
      {
        "type": "class",
        "rank": "B",
        "lineno": 186,
        "complexity": 6,
        "name": "TestDataAnalysisSkill",
        "col_offset": 0,
        "endline": 327,
        "methods": [
          {
            "type": "method",
            "rank": "B",
            "lineno": 189,
            "complexity": 6,
            "classname": "TestDataAnalysisSkill",
            "name": "test_data_analysis_skill_initialization",
            "col_offset": 4,
            "endline": 189,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 200,
            "complexity": 11,
            "classname": "TestDataAnalysisSkill",
            "name": "test_execute_numbers_statistics",
            "col_offset": 4,
            "endline": 200,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 225,
            "complexity": 12,
            "classname": "TestDataAnalysisSkill",
            "name": "test_execute_json_statistics",
            "col_offset": 4,
            "endline": 225,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 256,
            "complexity": 4,
            "classname": "TestDataAnalysisSkill",
            "name": "test_execute_auto_type_detection_numbers",
            "col_offset": 4,
            "endline": 256,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 272,
            "complexity": 3,
            "classname": "TestDataAnalysisSkill",
            "name": "test_execute_auto_type_detection_json",
            "col_offset": 4,
            "endline": 272,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 287,
            "complexity": 2,
            "classname": "TestDataAnalysisSkill",
            "name": "test_execute_auto_type_detection_text",
            "col_offset": 4,
            "endline": 287,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 301,
            "complexity": 2,
            "classname": "TestDataAnalysisSkill",
            "name": "test_execute_auto_type_detection_list",
            "col_offset": 4,
            "endline": 301,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 315,
            "complexity": 2,
            "classname": "TestDataAnalysisSkill",
            "name": "test_execute_unsupported_operation",
            "col_offset": 4,
            "endline": 315,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 327,
            "complexity": 2,
            "classname": "TestDataAnalysisSkill",
            "name": "test_execute_unsupported_data_type",
            "col_offset": 4,
            "endline": 327,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 189,
        "complexity": 6,
        "classname": "TestDataAnalysisSkill",
        "name": "test_data_analysis_skill_initialization",
        "col_offset": 4,
        "endline": 189,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 27,
        "complexity": 5,
        "name": "TestBaseSkill",
        "col_offset": 0,
        "endline": 52,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 30,
            "complexity": 5,
            "classname": "TestBaseSkill",
            "name": "test_base_skill_initialization",
            "col_offset": 4,
            "endline": 30,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 39,
            "complexity": 5,
            "classname": "TestBaseSkill",
            "name": "test_get_info",
            "col_offset": 4,
            "endline": 39,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 52,
            "complexity": 2,
            "classname": "TestBaseSkill",
            "name": "test_initialize",
            "col_offset": 4,
            "endline": 52,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 30,
        "complexity": 5,
        "classname": "TestBaseSkill",
        "name": "test_base_skill_initialization",
        "col_offset": 4,
        "endline": 30,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 39,
        "complexity": 5,
        "classname": "TestBaseSkill",
        "name": "test_get_info",
        "col_offset": 4,
        "endline": 39,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 164,
        "complexity": 5,
        "classname": "TestTextProcessingSkill",
        "name": "test_execute_unknown_operation",
        "col_offset": 4,
        "endline": 164,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 136,
        "complexity": 4,
        "classname": "TestTextProcessingSkill",
        "name": "test_execute_sentiment_operation_negative",
        "col_offset": 4,
        "endline": 136,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 150,
        "complexity": 4,
        "classname": "TestTextProcessingSkill",
        "name": "test_execute_sentiment_operation_neutral",
        "col_offset": 4,
        "endline": 150,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 256,
        "complexity": 4,
        "classname": "TestDataAnalysisSkill",
        "name": "test_execute_auto_type_detection_numbers",
        "col_offset": 4,
        "endline": 256,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 272,
        "complexity": 3,
        "classname": "TestDataAnalysisSkill",
        "name": "test_execute_auto_type_detection_json",
        "col_offset": 4,
        "endline": 272,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 21,
        "complexity": 2,
        "name": "TestSkill",
        "col_offset": 0,
        "endline": 24,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 23,
            "complexity": 1,
            "classname": "TestSkill",
            "name": "execute",
            "col_offset": 4,
            "endline": 24,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 52,
        "complexity": 2,
        "classname": "TestBaseSkill",
        "name": "test_initialize",
        "col_offset": 4,
        "endline": 52,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 287,
        "complexity": 2,
        "classname": "TestDataAnalysisSkill",
        "name": "test_execute_auto_type_detection_text",
        "col_offset": 4,
        "endline": 287,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 301,
        "complexity": 2,
        "classname": "TestDataAnalysisSkill",
        "name": "test_execute_auto_type_detection_list",
        "col_offset": 4,
        "endline": 301,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 315,
        "complexity": 2,
        "classname": "TestDataAnalysisSkill",
        "name": "test_execute_unsupported_operation",
        "col_offset": 4,
        "endline": 315,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 327,
        "complexity": 2,
        "classname": "TestDataAnalysisSkill",
        "name": "test_execute_unsupported_data_type",
        "col_offset": 4,
        "endline": 327,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 23,
        "complexity": 1,
        "classname": "TestSkill",
        "name": "execute",
        "col_offset": 4,
        "endline": 24,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 178,
        "complexity": 1,
        "classname": "TestTextProcessingSkill",
        "name": "test_execute_invalid_input",
        "col_offset": 4,
        "endline": 183,
        "closures": []
      }
    ],
    "tests\\test_workflows.py": [
      {
        "type": "class",
        "rank": "A",
        "lineno": 38,
        "complexity": 5,
        "name": "TestBaseWorkflow",
        "col_offset": 0,
        "endline": 48,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 41,
            "complexity": 3,
            "classname": "TestBaseWorkflow",
            "name": "test_base_workflow_instantiation",
            "col_offset": 4,
            "endline": 41,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 48,
            "complexity": 5,
            "classname": "TestBaseWorkflow",
            "name": "test_workflow_execution",
            "col_offset": 4,
            "endline": 48,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 48,
        "complexity": 5,
        "classname": "TestBaseWorkflow",
        "name": "test_workflow_execution",
        "col_offset": 4,
        "endline": 48,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 93,
        "complexity": 5,
        "classname": "TestProjectAnalysisWorkflow",
        "name": "test_execute_with_missing_context",
        "col_offset": 4,
        "endline": 102,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 141,
        "complexity": 5,
        "classname": "TestWorkflowOrchestrator",
        "name": "test_orchestrator_initialization",
        "col_offset": 4,
        "endline": 141,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 175,
        "complexity": 5,
        "classname": "TestWorkflowOrchestrator",
        "name": "test_workflow_state_management",
        "col_offset": 4,
        "endline": 175,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 231,
        "complexity": 5,
        "name": "TestWorkflowIntegration",
        "col_offset": 0,
        "endline": 260,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 235,
            "complexity": 3,
            "classname": "TestWorkflowIntegration",
            "name": "test_full_workflow_chain",
            "col_offset": 4,
            "endline": 258,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 260,
            "complexity": 4,
            "classname": "TestWorkflowIntegration",
            "name": "test_workflow_progress_tracking",
            "col_offset": 4,
            "endline": 260,
            "closures": []
          }
        ]
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 61,
        "complexity": 4,
        "name": "TestProjectAnalysisWorkflow",
        "col_offset": 0,
        "endline": 102,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 64,
            "complexity": 1,
            "classname": "TestProjectAnalysisWorkflow",
            "name": "setup_method",
            "col_offset": 4,
            "endline": 66,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 68,
            "complexity": 3,
            "classname": "TestProjectAnalysisWorkflow",
            "name": "test_workflow_initialization",
            "col_offset": 4,
            "endline": 68,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 74,
            "complexity": 4,
            "classname": "TestProjectAnalysisWorkflow",
            "name": "test_execute_with_valid_project",
            "col_offset": 4,
            "endline": 90,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 93,
            "complexity": 5,
            "classname": "TestProjectAnalysisWorkflow",
            "name": "test_execute_with_missing_context",
            "col_offset": 4,
            "endline": 102,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 74,
        "complexity": 4,
        "classname": "TestProjectAnalysisWorkflow",
        "name": "test_execute_with_valid_project",
        "col_offset": 4,
        "endline": 90,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 107,
        "complexity": 4,
        "name": "TestSimpleAnalysisWorkflow",
        "col_offset": 0,
        "endline": 131,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 110,
            "complexity": 1,
            "classname": "TestSimpleAnalysisWorkflow",
            "name": "setup_method",
            "col_offset": 4,
            "endline": 112,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 114,
            "complexity": 3,
            "classname": "TestSimpleAnalysisWorkflow",
            "name": "test_workflow_initialization",
            "col_offset": 4,
            "endline": 114,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 120,
            "complexity": 4,
            "classname": "TestSimpleAnalysisWorkflow",
            "name": "test_execute_lightweight_analysis",
            "col_offset": 4,
            "endline": 131,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 120,
        "complexity": 4,
        "classname": "TestSimpleAnalysisWorkflow",
        "name": "test_execute_lightweight_analysis",
        "col_offset": 4,
        "endline": 131,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 134,
        "complexity": 4,
        "name": "TestWorkflowOrchestrator",
        "col_offset": 0,
        "endline": 198,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 137,
            "complexity": 1,
            "classname": "TestWorkflowOrchestrator",
            "name": "setup_method",
            "col_offset": 4,
            "endline": 139,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 141,
            "complexity": 5,
            "classname": "TestWorkflowOrchestrator",
            "name": "test_orchestrator_initialization",
            "col_offset": 4,
            "endline": 141,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 148,
            "complexity": 2,
            "classname": "TestWorkflowOrchestrator",
            "name": "test_register_workflow",
            "col_offset": 4,
            "endline": 148,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 159,
            "complexity": 4,
            "classname": "TestWorkflowOrchestrator",
            "name": "test_execute_workflow",
            "col_offset": 4,
            "endline": 173,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 175,
            "complexity": 5,
            "classname": "TestWorkflowOrchestrator",
            "name": "test_workflow_state_management",
            "col_offset": 4,
            "endline": 175,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 186,
            "complexity": 4,
            "classname": "TestWorkflowOrchestrator",
            "name": "test_execute_nonexistent_workflow",
            "col_offset": 4,
            "endline": 198,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 159,
        "complexity": 4,
        "classname": "TestWorkflowOrchestrator",
        "name": "test_execute_workflow",
        "col_offset": 4,
        "endline": 173,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 186,
        "complexity": 4,
        "classname": "TestWorkflowOrchestrator",
        "name": "test_execute_nonexistent_workflow",
        "col_offset": 4,
        "endline": 198,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 201,
        "complexity": 4,
        "name": "TestAgentOrchestrator",
        "col_offset": 0,
        "endline": 222,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 204,
            "complexity": 2,
            "classname": "TestAgentOrchestrator",
            "name": "setup_method",
            "col_offset": 4,
            "endline": 213,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 215,
            "complexity": 4,
            "classname": "TestAgentOrchestrator",
            "name": "test_orchestrator_initialization",
            "col_offset": 4,
            "endline": 217,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 222,
            "complexity": 3,
            "classname": "TestAgentOrchestrator",
            "name": "test_agent_coordination",
            "col_offset": 4,
            "endline": 222,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 215,
        "complexity": 4,
        "classname": "TestAgentOrchestrator",
        "name": "test_orchestrator_initialization",
        "col_offset": 4,
        "endline": 217,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 260,
        "complexity": 4,
        "classname": "TestWorkflowIntegration",
        "name": "test_workflow_progress_tracking",
        "col_offset": 4,
        "endline": 260,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 41,
        "complexity": 3,
        "classname": "TestBaseWorkflow",
        "name": "test_base_workflow_instantiation",
        "col_offset": 4,
        "endline": 41,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 68,
        "complexity": 3,
        "classname": "TestProjectAnalysisWorkflow",
        "name": "test_workflow_initialization",
        "col_offset": 4,
        "endline": 68,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 114,
        "complexity": 3,
        "classname": "TestSimpleAnalysisWorkflow",
        "name": "test_workflow_initialization",
        "col_offset": 4,
        "endline": 114,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 222,
        "complexity": 3,
        "classname": "TestAgentOrchestrator",
        "name": "test_agent_coordination",
        "col_offset": 4,
        "endline": 222,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 235,
        "complexity": 3,
        "classname": "TestWorkflowIntegration",
        "name": "test_full_workflow_chain",
        "col_offset": 4,
        "endline": 258,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 23,
        "complexity": 2,
        "name": "TestWorkflow",
        "col_offset": 0,
        "endline": 34,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 26,
            "complexity": 1,
            "classname": "TestWorkflow",
            "name": "__init__",
            "col_offset": 4,
            "endline": 27,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 29,
            "complexity": 1,
            "classname": "TestWorkflow",
            "name": "execute",
            "col_offset": 4,
            "endline": 34,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 148,
        "complexity": 2,
        "classname": "TestWorkflowOrchestrator",
        "name": "test_register_workflow",
        "col_offset": 4,
        "endline": 148,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 204,
        "complexity": 2,
        "classname": "TestAgentOrchestrator",
        "name": "setup_method",
        "col_offset": 4,
        "endline": 213,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 26,
        "complexity": 1,
        "classname": "TestWorkflow",
        "name": "__init__",
        "col_offset": 4,
        "endline": 27,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 29,
        "complexity": 1,
        "classname": "TestWorkflow",
        "name": "execute",
        "col_offset": 4,
        "endline": 34,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 64,
        "complexity": 1,
        "classname": "TestProjectAnalysisWorkflow",
        "name": "setup_method",
        "col_offset": 4,
        "endline": 66,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 110,
        "complexity": 1,
        "classname": "TestSimpleAnalysisWorkflow",
        "name": "setup_method",
        "col_offset": 4,
        "endline": 112,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 137,
        "complexity": 1,
        "classname": "TestWorkflowOrchestrator",
        "name": "setup_method",
        "col_offset": 4,
        "endline": 139,
        "closures": []
      }
    ],
    "tests\\__init__.py": [
      {
        "type": "function",
        "rank": "A",
        "lineno": 32,
        "complexity": 1,
        "name": "event_loop",
        "col_offset": 0,
        "endline": 36,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 39,
        "complexity": 1,
        "name": "test_config",
        "col_offset": 0,
        "endline": 41,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 44,
        "complexity": 1,
        "name": "mock_api_keys",
        "col_offset": 0,
        "endline": 49,
        "closures": []
      }
    ],
    "ui\\modern_styles.py": [
      {
        "type": "function",
        "rank": "A",
        "lineno": 96,
        "complexity": 1,
        "name": "get_modern_css",
        "col_offset": 0,
        "endline": 423,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 459,
        "complexity": 1,
        "name": "get_icon",
        "col_offset": 0,
        "endline": 494,
        "closures": []
      }
    ],
    "ui\\modern_ui_manager.py": [
      {
        "type": "method",
        "rank": "A",
        "lineno": 100,
        "complexity": 4,
        "classname": "ModernUIManager",
        "name": "render_card",
        "col_offset": 4,
        "endline": 123,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 127,
        "complexity": 4,
        "classname": "ModernUIManager",
        "name": "render_progress_card",
        "col_offset": 4,
        "endline": 158,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 50,
        "complexity": 3,
        "classname": "ModernUIManager",
        "name": "render_metric_card",
        "col_offset": 4,
        "endline": 81,
        "closures": []
      },
      {
        "type": "function",
        "rank": "A",
        "lineno": 252,
        "complexity": 2,
        "name": "get_ui_manager",
        "col_offset": 0,
        "endline": 257,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 9,
        "complexity": 2,
        "name": "ModernUIManager",
        "col_offset": 0,
        "endline": 246,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 12,
            "complexity": 1,
            "classname": "ModernUIManager",
            "name": "__init__",
            "col_offset": 4,
            "endline": 13,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 15,
            "complexity": 2,
            "classname": "ModernUIManager",
            "name": "setup_page",
            "col_offset": 4,
            "endline": 32,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 34,
            "complexity": 2,
            "classname": "ModernUIManager",
            "name": "render_header",
            "col_offset": 4,
            "endline": 48,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 50,
            "complexity": 3,
            "classname": "ModernUIManager",
            "name": "render_metric_card",
            "col_offset": 4,
            "endline": 81,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 87,
            "complexity": 1,
            "classname": "ModernUIManager",
            "name": "render_status_badge",
            "col_offset": 4,
            "endline": 98,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 100,
            "complexity": 4,
            "classname": "ModernUIManager",
            "name": "render_card",
            "col_offset": 4,
            "endline": 123,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 127,
            "complexity": 4,
            "classname": "ModernUIManager",
            "name": "render_progress_card",
            "col_offset": 4,
            "endline": 158,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 163,
            "complexity": 1,
            "classname": "ModernUIManager",
            "name": "create_columns_layout",
            "col_offset": 4,
            "endline": 173,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 175,
            "complexity": 1,
            "classname": "ModernUIManager",
            "name": "render_sidebar_header",
            "col_offset": 4,
            "endline": 186,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 188,
            "complexity": 2,
            "classname": "ModernUIManager",
            "name": "render_feature_grid",
            "col_offset": 4,
            "endline": 208,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 210,
            "complexity": 2,
            "classname": "ModernUIManager",
            "name": "render_timeline_item",
            "col_offset": 4,
            "endline": 230,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 232,
            "complexity": 1,
            "classname": "ModernUIManager",
            "name": "show_success",
            "col_offset": 4,
            "endline": 234,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 236,
            "complexity": 1,
            "classname": "ModernUIManager",
            "name": "show_error",
            "col_offset": 4,
            "endline": 238,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 240,
            "complexity": 1,
            "classname": "ModernUIManager",
            "name": "show_warning",
            "col_offset": 4,
            "endline": 242,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 244,
            "complexity": 1,
            "classname": "ModernUIManager",
            "name": "show_info",
            "col_offset": 4,
            "endline": 246,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 15,
        "complexity": 2,
        "classname": "ModernUIManager",
        "name": "setup_page",
        "col_offset": 4,
        "endline": 32,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 34,
        "complexity": 2,
        "classname": "ModernUIManager",
        "name": "render_header",
        "col_offset": 4,
        "endline": 48,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 188,
        "complexity": 2,
        "classname": "ModernUIManager",
        "name": "render_feature_grid",
        "col_offset": 4,
        "endline": 208,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 210,
        "complexity": 2,
        "classname": "ModernUIManager",
        "name": "render_timeline_item",
        "col_offset": 4,
        "endline": 230,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 12,
        "complexity": 1,
        "classname": "ModernUIManager",
        "name": "__init__",
        "col_offset": 4,
        "endline": 13,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 87,
        "complexity": 1,
        "classname": "ModernUIManager",
        "name": "render_status_badge",
        "col_offset": 4,
        "endline": 98,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 163,
        "complexity": 1,
        "classname": "ModernUIManager",
        "name": "create_columns_layout",
        "col_offset": 4,
        "endline": 173,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 175,
        "complexity": 1,
        "classname": "ModernUIManager",
        "name": "render_sidebar_header",
        "col_offset": 4,
        "endline": 186,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 232,
        "complexity": 1,
        "classname": "ModernUIManager",
        "name": "show_success",
        "col_offset": 4,
        "endline": 234,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 236,
        "complexity": 1,
        "classname": "ModernUIManager",
        "name": "show_error",
        "col_offset": 4,
        "endline": 238,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 240,
        "complexity": 1,
        "classname": "ModernUIManager",
        "name": "show_warning",
        "col_offset": 4,
        "endline": 242,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 244,
        "complexity": 1,
        "classname": "ModernUIManager",
        "name": "show_info",
        "col_offset": 4,
        "endline": 246,
        "closures": []
      }
    ],
    "ui\\components\\agent_monitor.py": [
      {
        "type": "method",
        "rank": "C",
        "lineno": 144,
        "complexity": 15,
        "classname": "AgentMonitor",
        "name": "render_overview",
        "col_offset": 4,
        "endline": 227,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 329,
        "complexity": 7,
        "classname": "AgentMonitor",
        "name": "render_task_card",
        "col_offset": 4,
        "endline": 383,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 484,
        "complexity": 7,
        "classname": "AgentMonitor",
        "name": "filter_tasks",
        "col_offset": 4,
        "endline": 501,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 12,
        "complexity": 5,
        "name": "AgentMonitor",
        "col_offset": 0,
        "endline": 501,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 15,
            "complexity": 1,
            "classname": "AgentMonitor",
            "name": "__init__",
            "col_offset": 4,
            "endline": 18,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 20,
            "complexity": 1,
            "classname": "AgentMonitor",
            "name": "initialize_demo_data",
            "col_offset": 4,
            "endline": 115,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 119,
            "complexity": 2,
            "classname": "AgentMonitor",
            "name": "render",
            "col_offset": 4,
            "endline": 142,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 144,
            "complexity": 15,
            "classname": "AgentMonitor",
            "name": "render_overview",
            "col_offset": 4,
            "endline": 227,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 230,
            "complexity": 2,
            "classname": "AgentMonitor",
            "name": "render_agent_status",
            "col_offset": 4,
            "endline": 236,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 238,
            "complexity": 4,
            "classname": "AgentMonitor",
            "name": "render_agent_card",
            "col_offset": 4,
            "endline": 301,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 303,
            "complexity": 3,
            "classname": "AgentMonitor",
            "name": "render_task_queue",
            "col_offset": 4,
            "endline": 327,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 329,
            "complexity": 7,
            "classname": "AgentMonitor",
            "name": "render_task_card",
            "col_offset": 4,
            "endline": 383,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 385,
            "complexity": 4,
            "classname": "AgentMonitor",
            "name": "render_performance_metrics",
            "col_offset": 4,
            "endline": 443,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 445,
            "complexity": 5,
            "classname": "AgentMonitor",
            "name": "render_agent_details",
            "col_offset": 4,
            "endline": 459,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 461,
            "complexity": 2,
            "classname": "AgentMonitor",
            "name": "show_agent_details",
            "col_offset": 4,
            "endline": 482,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 484,
            "complexity": 7,
            "classname": "AgentMonitor",
            "name": "filter_tasks",
            "col_offset": 4,
            "endline": 501,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 445,
        "complexity": 5,
        "classname": "AgentMonitor",
        "name": "render_agent_details",
        "col_offset": 4,
        "endline": 459,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 238,
        "complexity": 4,
        "classname": "AgentMonitor",
        "name": "render_agent_card",
        "col_offset": 4,
        "endline": 301,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 385,
        "complexity": 4,
        "classname": "AgentMonitor",
        "name": "render_performance_metrics",
        "col_offset": 4,
        "endline": 443,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 303,
        "complexity": 3,
        "classname": "AgentMonitor",
        "name": "render_task_queue",
        "col_offset": 4,
        "endline": 327,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 119,
        "complexity": 2,
        "classname": "AgentMonitor",
        "name": "render",
        "col_offset": 4,
        "endline": 142,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 230,
        "complexity": 2,
        "classname": "AgentMonitor",
        "name": "render_agent_status",
        "col_offset": 4,
        "endline": 236,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 461,
        "complexity": 2,
        "classname": "AgentMonitor",
        "name": "show_agent_details",
        "col_offset": 4,
        "endline": 482,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 15,
        "complexity": 1,
        "classname": "AgentMonitor",
        "name": "__init__",
        "col_offset": 4,
        "endline": 18,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 20,
        "complexity": 1,
        "classname": "AgentMonitor",
        "name": "initialize_demo_data",
        "col_offset": 4,
        "endline": 115,
        "closures": []
      }
    ],
    "ui\\components\\analysis_dashboard.py": [
      {
        "type": "method",
        "rank": "B",
        "lineno": 329,
        "complexity": 7,
        "classname": "AnalysisDashboard",
        "name": "_get_project_type",
        "col_offset": 4,
        "endline": 343,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 127,
        "complexity": 5,
        "classname": "AnalysisDashboard",
        "name": "render_technology_overview",
        "col_offset": 4,
        "endline": 164,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 204,
        "complexity": 5,
        "classname": "AnalysisDashboard",
        "name": "render_technologies_tab",
        "col_offset": 4,
        "endline": 225,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 227,
        "complexity": 4,
        "classname": "AnalysisDashboard",
        "name": "render_dependencies_tab",
        "col_offset": 4,
        "endline": 248,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 275,
        "complexity": 4,
        "classname": "AnalysisDashboard",
        "name": "render_security_tab",
        "col_offset": 4,
        "endline": 311,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 11,
        "complexity": 3,
        "name": "AnalysisDashboard",
        "col_offset": 0,
        "endline": 343,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 14,
            "complexity": 1,
            "classname": "AnalysisDashboard",
            "name": "__init__",
            "col_offset": 4,
            "endline": 15,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 17,
            "complexity": 2,
            "classname": "AnalysisDashboard",
            "name": "render",
            "col_offset": 4,
            "endline": 35,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 37,
            "complexity": 1,
            "classname": "AnalysisDashboard",
            "name": "render_project_header",
            "col_offset": 4,
            "endline": 48,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 50,
            "complexity": 1,
            "classname": "AnalysisDashboard",
            "name": "render_metrics_cards",
            "col_offset": 4,
            "endline": 124,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 127,
            "complexity": 5,
            "classname": "AnalysisDashboard",
            "name": "render_technology_overview",
            "col_offset": 4,
            "endline": 164,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 166,
            "complexity": 1,
            "classname": "AnalysisDashboard",
            "name": "render_detailed_analysis",
            "col_offset": 4,
            "endline": 192,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 194,
            "complexity": 1,
            "classname": "AnalysisDashboard",
            "name": "render_overview_tab",
            "col_offset": 4,
            "endline": 202,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 204,
            "complexity": 5,
            "classname": "AnalysisDashboard",
            "name": "render_technologies_tab",
            "col_offset": 4,
            "endline": 225,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 227,
            "complexity": 4,
            "classname": "AnalysisDashboard",
            "name": "render_dependencies_tab",
            "col_offset": 4,
            "endline": 248,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 250,
            "complexity": 2,
            "classname": "AnalysisDashboard",
            "name": "render_files_tab",
            "col_offset": 4,
            "endline": 273,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 275,
            "complexity": 4,
            "classname": "AnalysisDashboard",
            "name": "render_security_tab",
            "col_offset": 4,
            "endline": 311,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 313,
            "complexity": 1,
            "classname": "AnalysisDashboard",
            "name": "generate_project_summary",
            "col_offset": 4,
            "endline": 327,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 329,
            "complexity": 7,
            "classname": "AnalysisDashboard",
            "name": "_get_project_type",
            "col_offset": 4,
            "endline": 343,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 17,
        "complexity": 2,
        "classname": "AnalysisDashboard",
        "name": "render",
        "col_offset": 4,
        "endline": 35,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 250,
        "complexity": 2,
        "classname": "AnalysisDashboard",
        "name": "render_files_tab",
        "col_offset": 4,
        "endline": 273,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 14,
        "complexity": 1,
        "classname": "AnalysisDashboard",
        "name": "__init__",
        "col_offset": 4,
        "endline": 15,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 37,
        "complexity": 1,
        "classname": "AnalysisDashboard",
        "name": "render_project_header",
        "col_offset": 4,
        "endline": 48,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 50,
        "complexity": 1,
        "classname": "AnalysisDashboard",
        "name": "render_metrics_cards",
        "col_offset": 4,
        "endline": 124,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 166,
        "complexity": 1,
        "classname": "AnalysisDashboard",
        "name": "render_detailed_analysis",
        "col_offset": 4,
        "endline": 192,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 194,
        "complexity": 1,
        "classname": "AnalysisDashboard",
        "name": "render_overview_tab",
        "col_offset": 4,
        "endline": 202,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 313,
        "complexity": 1,
        "classname": "AnalysisDashboard",
        "name": "generate_project_summary",
        "col_offset": 4,
        "endline": 327,
        "closures": []
      }
    ],
    "ui\\components\\chat_interface.py": [
      {
        "type": "method",
        "rank": "A",
        "lineno": 116,
        "complexity": 5,
        "classname": "ChatInterface",
        "name": "render_quick_actions",
        "col_offset": 4,
        "endline": 136,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 90,
        "complexity": 4,
        "classname": "ChatInterface",
        "name": "render_chat_input",
        "col_offset": 4,
        "endline": 114,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 53,
        "complexity": 3,
        "classname": "ChatInterface",
        "name": "render_chat_history",
        "col_offset": 4,
        "endline": 65,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 159,
        "complexity": 3,
        "classname": "ChatInterface",
        "name": "generate_real_ai_response",
        "col_offset": 4,
        "endline": 178,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 184,
        "complexity": 3,
        "classname": "ChatInterface",
        "name": "generate_analysis_response",
        "col_offset": 4,
        "endline": 217,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 11,
        "complexity": 2,
        "name": "ChatInterface",
        "col_offset": 0,
        "endline": 348,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 14,
            "complexity": 1,
            "classname": "ChatInterface",
            "name": "__init__",
            "col_offset": 4,
            "endline": 16,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 18,
            "complexity": 1,
            "classname": "ChatInterface",
            "name": "render",
            "col_offset": 4,
            "endline": 34,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 36,
            "complexity": 2,
            "classname": "ChatInterface",
            "name": "render_chat_status",
            "col_offset": 4,
            "endline": 51,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 53,
            "complexity": 3,
            "classname": "ChatInterface",
            "name": "render_chat_history",
            "col_offset": 4,
            "endline": 65,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 67,
            "complexity": 2,
            "classname": "ChatInterface",
            "name": "render_message",
            "col_offset": 4,
            "endline": 88,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 90,
            "complexity": 4,
            "classname": "ChatInterface",
            "name": "render_chat_input",
            "col_offset": 4,
            "endline": 114,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 116,
            "complexity": 5,
            "classname": "ChatInterface",
            "name": "render_quick_actions",
            "col_offset": 4,
            "endline": 136,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 138,
            "complexity": 1,
            "classname": "ChatInterface",
            "name": "send_message",
            "col_offset": 4,
            "endline": 157,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 159,
            "complexity": 3,
            "classname": "ChatInterface",
            "name": "generate_real_ai_response",
            "col_offset": 4,
            "endline": 178,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 180,
            "complexity": 1,
            "classname": "ChatInterface",
            "name": "generate_ai_response",
            "col_offset": 4,
            "endline": 182,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 184,
            "complexity": 3,
            "classname": "ChatInterface",
            "name": "generate_analysis_response",
            "col_offset": 4,
            "endline": 217,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 219,
            "complexity": 1,
            "classname": "ChatInterface",
            "name": "generate_optimization_response",
            "col_offset": 4,
            "endline": 221,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 244,
            "complexity": 1,
            "classname": "ChatInterface",
            "name": "generate_testing_response",
            "col_offset": 4,
            "endline": 246,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 267,
            "complexity": 1,
            "classname": "ChatInterface",
            "name": "generate_security_response",
            "col_offset": 4,
            "endline": 269,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 290,
            "complexity": 1,
            "classname": "ChatInterface",
            "name": "generate_deployment_response",
            "col_offset": 4,
            "endline": 292,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 318,
            "complexity": 1,
            "classname": "ChatInterface",
            "name": "generate_documentation_response",
            "col_offset": 4,
            "endline": 320,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 346,
            "complexity": 1,
            "classname": "ChatInterface",
            "name": "generate_general_response",
            "col_offset": 4,
            "endline": 348,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 36,
        "complexity": 2,
        "classname": "ChatInterface",
        "name": "render_chat_status",
        "col_offset": 4,
        "endline": 51,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 67,
        "complexity": 2,
        "classname": "ChatInterface",
        "name": "render_message",
        "col_offset": 4,
        "endline": 88,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 14,
        "complexity": 1,
        "classname": "ChatInterface",
        "name": "__init__",
        "col_offset": 4,
        "endline": 16,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 18,
        "complexity": 1,
        "classname": "ChatInterface",
        "name": "render",
        "col_offset": 4,
        "endline": 34,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 138,
        "complexity": 1,
        "classname": "ChatInterface",
        "name": "send_message",
        "col_offset": 4,
        "endline": 157,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 180,
        "complexity": 1,
        "classname": "ChatInterface",
        "name": "generate_ai_response",
        "col_offset": 4,
        "endline": 182,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 219,
        "complexity": 1,
        "classname": "ChatInterface",
        "name": "generate_optimization_response",
        "col_offset": 4,
        "endline": 221,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 244,
        "complexity": 1,
        "classname": "ChatInterface",
        "name": "generate_testing_response",
        "col_offset": 4,
        "endline": 246,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 267,
        "complexity": 1,
        "classname": "ChatInterface",
        "name": "generate_security_response",
        "col_offset": 4,
        "endline": 269,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 290,
        "complexity": 1,
        "classname": "ChatInterface",
        "name": "generate_deployment_response",
        "col_offset": 4,
        "endline": 292,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 318,
        "complexity": 1,
        "classname": "ChatInterface",
        "name": "generate_documentation_response",
        "col_offset": 4,
        "endline": 320,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 346,
        "complexity": 1,
        "classname": "ChatInterface",
        "name": "generate_general_response",
        "col_offset": 4,
        "endline": 348,
        "closures": []
      }
    ],
    "ui\\components\\modern_project_selector.py": [
      {
        "type": "method",
        "rank": "B",
        "lineno": 147,
        "complexity": 7,
        "classname": "ModernProjectSelector",
        "name": "show_project_preview",
        "col_offset": 4,
        "endline": 178,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 98,
        "complexity": 5,
        "classname": "ModernProjectSelector",
        "name": "render_path_input",
        "col_offset": 4,
        "endline": 126,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 128,
        "complexity": 5,
        "classname": "ModernProjectSelector",
        "name": "render_quick_select",
        "col_offset": 4,
        "endline": 145,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 11,
        "complexity": 4,
        "name": "ModernProjectSelector",
        "col_offset": 0,
        "endline": 217,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 14,
            "complexity": 1,
            "classname": "ModernProjectSelector",
            "name": "__init__",
            "col_offset": 4,
            "endline": 15,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 17,
            "complexity": 1,
            "classname": "ModernProjectSelector",
            "name": "render",
            "col_offset": 4,
            "endline": 30,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 32,
            "complexity": 2,
            "classname": "ModernProjectSelector",
            "name": "render_drag_drop_zone",
            "col_offset": 4,
            "endline": 96,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 98,
            "complexity": 5,
            "classname": "ModernProjectSelector",
            "name": "render_path_input",
            "col_offset": 4,
            "endline": 126,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 128,
            "complexity": 5,
            "classname": "ModernProjectSelector",
            "name": "render_quick_select",
            "col_offset": 4,
            "endline": 145,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 147,
            "complexity": 7,
            "classname": "ModernProjectSelector",
            "name": "show_project_preview",
            "col_offset": 4,
            "endline": 178,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 180,
            "complexity": 4,
            "classname": "ModernProjectSelector",
            "name": "detect_project_files",
            "col_offset": 4,
            "endline": 217,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 180,
        "complexity": 4,
        "classname": "ModernProjectSelector",
        "name": "detect_project_files",
        "col_offset": 4,
        "endline": 217,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 32,
        "complexity": 2,
        "classname": "ModernProjectSelector",
        "name": "render_drag_drop_zone",
        "col_offset": 4,
        "endline": 96,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 14,
        "complexity": 1,
        "classname": "ModernProjectSelector",
        "name": "__init__",
        "col_offset": 4,
        "endline": 15,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 17,
        "complexity": 1,
        "classname": "ModernProjectSelector",
        "name": "render",
        "col_offset": 4,
        "endline": 30,
        "closures": []
      }
    ],
    "ui\\components\\optimization_view.py": [
      {
        "type": "method",
        "rank": "C",
        "lineno": 194,
        "complexity": 13,
        "classname": "OptimizationView",
        "name": "render_application_interface",
        "col_offset": 4,
        "endline": 244,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 36,
        "complexity": 8,
        "classname": "OptimizationView",
        "name": "render_optimization_overview",
        "col_offset": 4,
        "endline": 78,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 113,
        "complexity": 8,
        "classname": "OptimizationView",
        "name": "render_optimization_card",
        "col_offset": 4,
        "endline": 192,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 362,
        "complexity": 7,
        "classname": "OptimizationView",
        "name": "filter_optimizations",
        "col_offset": 4,
        "endline": 374,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 10,
        "complexity": 5,
        "name": "OptimizationView",
        "col_offset": 0,
        "endline": 421,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 13,
            "complexity": 1,
            "classname": "OptimizationView",
            "name": "__init__",
            "col_offset": 4,
            "endline": 14,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 16,
            "complexity": 2,
            "classname": "OptimizationView",
            "name": "render",
            "col_offset": 4,
            "endline": 34,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 36,
            "complexity": 8,
            "classname": "OptimizationView",
            "name": "render_optimization_overview",
            "col_offset": 4,
            "endline": 78,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 80,
            "complexity": 2,
            "classname": "OptimizationView",
            "name": "render_detailed_optimizations",
            "col_offset": 4,
            "endline": 111,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 113,
            "complexity": 8,
            "classname": "OptimizationView",
            "name": "render_optimization_card",
            "col_offset": 4,
            "endline": 192,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 194,
            "complexity": 13,
            "classname": "OptimizationView",
            "name": "render_application_interface",
            "col_offset": 4,
            "endline": 244,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 246,
            "complexity": 1,
            "classname": "OptimizationView",
            "name": "generate_optimizations",
            "col_offset": 4,
            "endline": 360,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 362,
            "complexity": 7,
            "classname": "OptimizationView",
            "name": "filter_optimizations",
            "col_offset": 4,
            "endline": 374,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 376,
            "complexity": 5,
            "classname": "OptimizationView",
            "name": "sort_optimizations",
            "col_offset": 4,
            "endline": 388,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 390,
            "complexity": 1,
            "classname": "OptimizationView",
            "name": "apply_optimization",
            "col_offset": 4,
            "endline": 394,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 396,
            "complexity": 2,
            "classname": "OptimizationView",
            "name": "apply_multiple_optimizations",
            "col_offset": 4,
            "endline": 402,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 404,
            "complexity": 5,
            "classname": "OptimizationView",
            "name": "show_optimization_details",
            "col_offset": 4,
            "endline": 421,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 376,
        "complexity": 5,
        "classname": "OptimizationView",
        "name": "sort_optimizations",
        "col_offset": 4,
        "endline": 388,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 404,
        "complexity": 5,
        "classname": "OptimizationView",
        "name": "show_optimization_details",
        "col_offset": 4,
        "endline": 421,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 16,
        "complexity": 2,
        "classname": "OptimizationView",
        "name": "render",
        "col_offset": 4,
        "endline": 34,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 80,
        "complexity": 2,
        "classname": "OptimizationView",
        "name": "render_detailed_optimizations",
        "col_offset": 4,
        "endline": 111,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 396,
        "complexity": 2,
        "classname": "OptimizationView",
        "name": "apply_multiple_optimizations",
        "col_offset": 4,
        "endline": 402,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 13,
        "complexity": 1,
        "classname": "OptimizationView",
        "name": "__init__",
        "col_offset": 4,
        "endline": 14,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 246,
        "complexity": 1,
        "classname": "OptimizationView",
        "name": "generate_optimizations",
        "col_offset": 4,
        "endline": 360,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 390,
        "complexity": 1,
        "classname": "OptimizationView",
        "name": "apply_optimization",
        "col_offset": 4,
        "endline": 394,
        "closures": []
      }
    ],
    "ui\\components\\progress_monitor.py": [
      {
        "type": "method",
        "rank": "C",
        "lineno": 224,
        "complexity": 15,
        "classname": "ProgressMonitor",
        "name": "render_eta_and_details",
        "col_offset": 4,
        "endline": 261,
        "closures": []
      },
      {
        "type": "method",
        "rank": "C",
        "lineno": 263,
        "complexity": 12,
        "classname": "ProgressMonitor",
        "name": "get_phase_icon",
        "col_offset": 4,
        "endline": 289,
        "closures": []
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 155,
        "complexity": 9,
        "classname": "ProgressMonitor",
        "name": "render_live_details",
        "col_offset": 4,
        "endline": 187,
        "closures": []
      },
      {
        "type": "class",
        "rank": "B",
        "lineno": 10,
        "complexity": 6,
        "name": "ProgressMonitor",
        "col_offset": 0,
        "endline": 289,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 13,
            "complexity": 1,
            "classname": "ProgressMonitor",
            "name": "__init__",
            "col_offset": 4,
            "endline": 22,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 25,
            "complexity": 3,
            "classname": "ProgressMonitor",
            "name": "render",
            "col_offset": 4,
            "endline": 39,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 41,
            "complexity": 1,
            "classname": "ProgressMonitor",
            "name": "render_idle_state",
            "col_offset": 4,
            "endline": 53,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 55,
            "complexity": 5,
            "classname": "ProgressMonitor",
            "name": "render_progress_header",
            "col_offset": 4,
            "endline": 85,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 87,
            "complexity": 3,
            "classname": "ProgressMonitor",
            "name": "render_phases_list",
            "col_offset": 4,
            "endline": 97,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 99,
            "complexity": 4,
            "classname": "ProgressMonitor",
            "name": "render_phase_item",
            "col_offset": 4,
            "endline": 153,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 155,
            "complexity": 9,
            "classname": "ProgressMonitor",
            "name": "render_live_details",
            "col_offset": 4,
            "endline": 187,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 189,
            "complexity": 4,
            "classname": "ProgressMonitor",
            "name": "render_phase_progress_bar",
            "col_offset": 4,
            "endline": 199,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 204,
            "complexity": 5,
            "classname": "ProgressMonitor",
            "name": "render_phase_timing",
            "col_offset": 4,
            "endline": 222,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 224,
            "complexity": 15,
            "classname": "ProgressMonitor",
            "name": "render_eta_and_details",
            "col_offset": 4,
            "endline": 261,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 263,
            "complexity": 12,
            "classname": "ProgressMonitor",
            "name": "get_phase_icon",
            "col_offset": 4,
            "endline": 289,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 55,
        "complexity": 5,
        "classname": "ProgressMonitor",
        "name": "render_progress_header",
        "col_offset": 4,
        "endline": 85,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 204,
        "complexity": 5,
        "classname": "ProgressMonitor",
        "name": "render_phase_timing",
        "col_offset": 4,
        "endline": 222,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 99,
        "complexity": 4,
        "classname": "ProgressMonitor",
        "name": "render_phase_item",
        "col_offset": 4,
        "endline": 153,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 189,
        "complexity": 4,
        "classname": "ProgressMonitor",
        "name": "render_phase_progress_bar",
        "col_offset": 4,
        "endline": 199,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 25,
        "complexity": 3,
        "classname": "ProgressMonitor",
        "name": "render",
        "col_offset": 4,
        "endline": 39,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 87,
        "complexity": 3,
        "classname": "ProgressMonitor",
        "name": "render_phases_list",
        "col_offset": 4,
        "endline": 97,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 13,
        "complexity": 1,
        "classname": "ProgressMonitor",
        "name": "__init__",
        "col_offset": 4,
        "endline": 22,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 41,
        "complexity": 1,
        "classname": "ProgressMonitor",
        "name": "render_idle_state",
        "col_offset": 4,
        "endline": 53,
        "closures": []
      }
    ],
    "ui\\components\\settings_panel.py": [
      {
        "type": "method",
        "rank": "B",
        "lineno": 165,
        "complexity": 10,
        "classname": "SettingsPanel",
        "name": "render_cloud_model_settings",
        "col_offset": 4,
        "endline": 221,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 59,
        "complexity": 5,
        "classname": "SettingsPanel",
        "name": "render_local_model_settings",
        "col_offset": 4,
        "endline": 155,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 380,
        "complexity": 5,
        "classname": "SettingsPanel",
        "name": "render_advanced_settings",
        "col_offset": 4,
        "endline": 447,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 10,
        "complexity": 4,
        "name": "SettingsPanel",
        "col_offset": 0,
        "endline": 447,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 13,
            "complexity": 1,
            "classname": "SettingsPanel",
            "name": "__init__",
            "col_offset": 4,
            "endline": 14,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 16,
            "complexity": 1,
            "classname": "SettingsPanel",
            "name": "render",
            "col_offset": 4,
            "endline": 38,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 40,
            "complexity": 2,
            "classname": "SettingsPanel",
            "name": "render_model_settings",
            "col_offset": 4,
            "endline": 57,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 59,
            "complexity": 5,
            "classname": "SettingsPanel",
            "name": "render_local_model_settings",
            "col_offset": 4,
            "endline": 155,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 165,
            "complexity": 10,
            "classname": "SettingsPanel",
            "name": "render_cloud_model_settings",
            "col_offset": 4,
            "endline": 221,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 223,
            "complexity": 2,
            "classname": "SettingsPanel",
            "name": "render_model_status",
            "col_offset": 4,
            "endline": 256,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 258,
            "complexity": 2,
            "classname": "SettingsPanel",
            "name": "render_api_settings",
            "col_offset": 4,
            "endline": 316,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 318,
            "complexity": 1,
            "classname": "SettingsPanel",
            "name": "render_system_settings",
            "col_offset": 4,
            "endline": 377,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 380,
            "complexity": 5,
            "classname": "SettingsPanel",
            "name": "render_advanced_settings",
            "col_offset": 4,
            "endline": 447,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 40,
        "complexity": 2,
        "classname": "SettingsPanel",
        "name": "render_model_settings",
        "col_offset": 4,
        "endline": 57,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 223,
        "complexity": 2,
        "classname": "SettingsPanel",
        "name": "render_model_status",
        "col_offset": 4,
        "endline": 256,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 258,
        "complexity": 2,
        "classname": "SettingsPanel",
        "name": "render_api_settings",
        "col_offset": 4,
        "endline": 316,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 13,
        "complexity": 1,
        "classname": "SettingsPanel",
        "name": "__init__",
        "col_offset": 4,
        "endline": 14,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 16,
        "complexity": 1,
        "classname": "SettingsPanel",
        "name": "render",
        "col_offset": 4,
        "endline": 38,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 318,
        "complexity": 1,
        "classname": "SettingsPanel",
        "name": "render_system_settings",
        "col_offset": 4,
        "endline": 377,
        "closures": []
      }
    ],
    "ui\\components\\status_widget.py": [
      {
        "type": "method",
        "rank": "C",
        "lineno": 15,
        "complexity": 14,
        "classname": "StatusWidget",
        "name": "render",
        "col_offset": 4,
        "endline": 58,
        "closures": []
      },
      {
        "type": "class",
        "rank": "B",
        "lineno": 9,
        "complexity": 9,
        "name": "StatusWidget",
        "col_offset": 0,
        "endline": 58,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 12,
            "complexity": 1,
            "classname": "StatusWidget",
            "name": "__init__",
            "col_offset": 4,
            "endline": 13,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 15,
            "complexity": 14,
            "classname": "StatusWidget",
            "name": "render",
            "col_offset": 4,
            "endline": 58,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 12,
        "complexity": 1,
        "classname": "StatusWidget",
        "name": "__init__",
        "col_offset": 4,
        "endline": 13,
        "closures": []
      }
    ],
    "ui\\pages\\dashboard_page.py": [
      {
        "type": "method",
        "rank": "B",
        "lineno": 82,
        "complexity": 7,
        "classname": "DashboardPage",
        "name": "_render_with_results",
        "col_offset": 4,
        "endline": 202,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 235,
        "complexity": 5,
        "classname": "DashboardPage",
        "name": "_render_quality_section",
        "col_offset": 4,
        "endline": 263,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 10,
        "complexity": 4,
        "name": "DashboardPage",
        "col_offset": 0,
        "endline": 263,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 13,
            "complexity": 1,
            "classname": "DashboardPage",
            "name": "__init__",
            "col_offset": 4,
            "endline": 14,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 16,
            "complexity": 2,
            "classname": "DashboardPage",
            "name": "render",
            "col_offset": 4,
            "endline": 34,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 36,
            "complexity": 1,
            "classname": "DashboardPage",
            "name": "_render_empty_state",
            "col_offset": 4,
            "endline": 80,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 82,
            "complexity": 7,
            "classname": "DashboardPage",
            "name": "_render_with_results",
            "col_offset": 4,
            "endline": 202,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 204,
            "complexity": 3,
            "classname": "DashboardPage",
            "name": "_render_languages_section",
            "col_offset": 4,
            "endline": 218,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 220,
            "complexity": 3,
            "classname": "DashboardPage",
            "name": "_render_frameworks_section",
            "col_offset": 4,
            "endline": 233,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 235,
            "complexity": 5,
            "classname": "DashboardPage",
            "name": "_render_quality_section",
            "col_offset": 4,
            "endline": 263,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 204,
        "complexity": 3,
        "classname": "DashboardPage",
        "name": "_render_languages_section",
        "col_offset": 4,
        "endline": 218,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 220,
        "complexity": 3,
        "classname": "DashboardPage",
        "name": "_render_frameworks_section",
        "col_offset": 4,
        "endline": 233,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 16,
        "complexity": 2,
        "classname": "DashboardPage",
        "name": "render",
        "col_offset": 4,
        "endline": 34,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 13,
        "complexity": 1,
        "classname": "DashboardPage",
        "name": "__init__",
        "col_offset": 4,
        "endline": 14,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 36,
        "complexity": 1,
        "classname": "DashboardPage",
        "name": "_render_empty_state",
        "col_offset": 4,
        "endline": 80,
        "closures": []
      }
    ],
    "workflows\\base_workflow.py": [
      {
        "type": "method",
        "rank": "C",
        "lineno": 60,
        "complexity": 18,
        "classname": "BaseWorkflow",
        "name": "_update_phase_status",
        "col_offset": 4,
        "endline": 104,
        "closures": []
      },
      {
        "type": "class",
        "rank": "B",
        "lineno": 10,
        "complexity": 6,
        "name": "BaseWorkflow",
        "col_offset": 0,
        "endline": 113,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 13,
            "complexity": 1,
            "classname": "BaseWorkflow",
            "name": "__init__",
            "col_offset": 4,
            "endline": 18,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 21,
            "complexity": 1,
            "classname": "BaseWorkflow",
            "name": "execute",
            "col_offset": 4,
            "endline": 23,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 25,
            "complexity": 2,
            "classname": "BaseWorkflow",
            "name": "add_step",
            "col_offset": 4,
            "endline": 31,
            "closures": []
          },
          {
            "type": "method",
            "rank": "B",
            "lineno": 34,
            "complexity": 6,
            "classname": "BaseWorkflow",
            "name": "run_step",
            "col_offset": 4,
            "endline": 58,
            "closures": []
          },
          {
            "type": "method",
            "rank": "C",
            "lineno": 60,
            "complexity": 18,
            "classname": "BaseWorkflow",
            "name": "_update_phase_status",
            "col_offset": 4,
            "endline": 104,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 106,
            "complexity": 2,
            "classname": "BaseWorkflow",
            "name": "get_status",
            "col_offset": 4,
            "endline": 113,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "B",
        "lineno": 34,
        "complexity": 6,
        "classname": "BaseWorkflow",
        "name": "run_step",
        "col_offset": 4,
        "endline": 58,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 25,
        "complexity": 2,
        "classname": "BaseWorkflow",
        "name": "add_step",
        "col_offset": 4,
        "endline": 31,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 106,
        "complexity": 2,
        "classname": "BaseWorkflow",
        "name": "get_status",
        "col_offset": 4,
        "endline": 113,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 13,
        "complexity": 1,
        "classname": "BaseWorkflow",
        "name": "__init__",
        "col_offset": 4,
        "endline": 18,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 21,
        "complexity": 1,
        "classname": "BaseWorkflow",
        "name": "execute",
        "col_offset": 4,
        "endline": 23,
        "closures": []
      }
    ],
    "workflows\\project_analysis_workflow.py": [
      {
        "type": "method",
        "rank": "A",
        "lineno": 35,
        "complexity": 4,
        "classname": "ProjectAnalysisWorkflow",
        "name": "execute",
        "col_offset": 4,
        "endline": 84,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 13,
        "complexity": 2,
        "name": "ProjectAnalysisWorkflow",
        "col_offset": 0,
        "endline": 168,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 16,
            "complexity": 1,
            "classname": "ProjectAnalysisWorkflow",
            "name": "__init__",
            "col_offset": 4,
            "endline": 33,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 35,
            "complexity": 4,
            "classname": "ProjectAnalysisWorkflow",
            "name": "execute",
            "col_offset": 4,
            "endline": 84,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 86,
            "complexity": 1,
            "classname": "ProjectAnalysisWorkflow",
            "name": "_analyze_project",
            "col_offset": 4,
            "endline": 94,
            "closures": [
              {
                "type": "function",
                "rank": "A",
                "lineno": 91,
                "complexity": 1,
                "name": "progress_callback",
                "col_offset": 8,
                "endline": 92,
                "closures": []
              }
            ]
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 96,
            "complexity": 1,
            "classname": "ProjectAnalysisWorkflow",
            "name": "_generate_agents",
            "col_offset": 4,
            "endline": 99,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 101,
            "complexity": 1,
            "classname": "ProjectAnalysisWorkflow",
            "name": "_generate_skills",
            "col_offset": 4,
            "endline": 104,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 106,
            "complexity": 1,
            "classname": "ProjectAnalysisWorkflow",
            "name": "_generate_workflows",
            "col_offset": 4,
            "endline": 109,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 111,
            "complexity": 1,
            "classname": "ProjectAnalysisWorkflow",
            "name": "_create_optimization_plan",
            "col_offset": 4,
            "endline": 139,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 141,
            "complexity": 1,
            "classname": "ProjectAnalysisWorkflow",
            "name": "_generate_tests",
            "col_offset": 4,
            "endline": 168,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 16,
        "complexity": 1,
        "classname": "ProjectAnalysisWorkflow",
        "name": "__init__",
        "col_offset": 4,
        "endline": 33,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 86,
        "complexity": 1,
        "classname": "ProjectAnalysisWorkflow",
        "name": "_analyze_project",
        "col_offset": 4,
        "endline": 94,
        "closures": [
          {
            "type": "function",
            "rank": "A",
            "lineno": 91,
            "complexity": 1,
            "name": "progress_callback",
            "col_offset": 8,
            "endline": 92,
            "closures": []
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 96,
        "complexity": 1,
        "classname": "ProjectAnalysisWorkflow",
        "name": "_generate_agents",
        "col_offset": 4,
        "endline": 99,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 101,
        "complexity": 1,
        "classname": "ProjectAnalysisWorkflow",
        "name": "_generate_skills",
        "col_offset": 4,
        "endline": 104,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 106,
        "complexity": 1,
        "classname": "ProjectAnalysisWorkflow",
        "name": "_generate_workflows",
        "col_offset": 4,
        "endline": 109,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 111,
        "complexity": 1,
        "classname": "ProjectAnalysisWorkflow",
        "name": "_create_optimization_plan",
        "col_offset": 4,
        "endline": 139,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 141,
        "complexity": 1,
        "classname": "ProjectAnalysisWorkflow",
        "name": "_generate_tests",
        "col_offset": 4,
        "endline": 168,
        "closures": []
      }
    ],
    "workflows\\simple_analysis_workflow.py": [
      {
        "type": "method",
        "rank": "A",
        "lineno": 25,
        "complexity": 4,
        "classname": "SimpleAnalysisWorkflow",
        "name": "execute",
        "col_offset": 4,
        "endline": 51,
        "closures": []
      },
      {
        "type": "class",
        "rank": "A",
        "lineno": 12,
        "complexity": 3,
        "name": "SimpleAnalysisWorkflow",
        "col_offset": 0,
        "endline": 61,
        "methods": [
          {
            "type": "method",
            "rank": "A",
            "lineno": 15,
            "complexity": 1,
            "classname": "SimpleAnalysisWorkflow",
            "name": "__init__",
            "col_offset": 4,
            "endline": 23,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 25,
            "complexity": 4,
            "classname": "SimpleAnalysisWorkflow",
            "name": "execute",
            "col_offset": 4,
            "endline": 51,
            "closures": []
          },
          {
            "type": "method",
            "rank": "A",
            "lineno": 53,
            "complexity": 1,
            "classname": "SimpleAnalysisWorkflow",
            "name": "_analyze_project",
            "col_offset": 4,
            "endline": 61,
            "closures": [
              {
                "type": "function",
                "rank": "A",
                "lineno": 58,
                "complexity": 1,
                "name": "progress_callback",
                "col_offset": 8,
                "endline": 59,
                "closures": []
              }
            ]
          }
        ]
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 15,
        "complexity": 1,
        "classname": "SimpleAnalysisWorkflow",
        "name": "__init__",
        "col_offset": 4,
        "endline": 23,
        "closures": []
      },
      {
        "type": "method",
        "rank": "A",
        "lineno": 53,
        "complexity": 1,
        "classname": "SimpleAnalysisWorkflow",
        "name": "_analyze_project",
        "col_offset": 4,
        "endline": 61,
        "closures": [
          {
            "type": "function",
            "rank": "A",
            "lineno": 58,
            "complexity": 1,
            "name": "progress_callback",
            "col_offset": 8,
            "endline": 59,
            "closures": []
          }
        ]
      }
    ]
  },
  "maintainability_index": {},
  "technical_debt": {
    "high_complexity_functions": 0,
    "long_functions": 0,
    "total_debt_score": 0
  },
  "code_quality_score": 100,
  "lizard_analysis": {
    "raw_output": "================================================\n  NLOC    CCN   token  PARAM  length  location  \n------------------------------------------------\n0 file analyzed.\n==============================================================\nNLOC    Avg.NLOC  AvgCCN  Avg.token  function_cnt    file\n--------------------------------------------------------------\n\n===============================================================================================================\nNo thresholds exceeded (cyclomatic_complexity > 15 or length > 1000 or nloc > 1000000 or parameter_count > 100)\n==========================================================================================\nTotal nloc   Avg.NLOC  AvgCCN  Avg.token   Fun Cnt  Warning cnt   Fun Rt   nloc Rt\n------------------------------------------------------------------------------------------\n         0       0.0     0.0        0.0        1            0      0.00    0.00\n",
    "parsed_metrics": {
      "total_functions": 0,
      "avg_complexity": 0,
      "avg_lines": 0,
      "high_complexity": 0,
      "long_functions": 0,
      "total_debt": 0,
      "complex_functions": []
    }
  },
  "total_functions": 0,
  "avg_cyclomatic_complexity": 0,
  "avg_lines_per_function": 0,
  "complex_functions": [],
  "security_issues": [
    {
      "type": "dependency_vulnerability",
      "severity": "high",
      "package": "vulnerabilities",
      "version": "0.104.1",
      "message": "FastAPI 0.109.1 addresses a critical security issue by upgrading its dependency python-multipart to version >=0.0.7. The upgrade mitigates a Regular Expression Denial of Service (ReDoS) vulnerability, which occurs when parsing form data. \r\nhttps://github.com/tiangolo/fastapi/security/advisories/GHSA-qf9m-vfgh-m389",
      "cve": "N/A",
      "source": "safety"
    },
    {
      "type": "dependency_vulnerability",
      "severity": "high",
      "package": "vulnerabilities",
      "version": "0.104.1",
      "message": "Fastapi 0.109.1 updates its minimum version of 'python-multipart' to >=0.0.7 to include a security fix.",
      "cve": "N/A",
      "source": "safety"
    },
    {
      "type": "dependency_vulnerability",
      "severity": "high",
      "package": "vulnerabilities",
      "version": "0.0.6",
      "message": "Affected versions of python-multipart are vulnerable to Allocation of Resources Without Limits or Throttling (CWE-770). An attacker can send specially crafted multipart/form-data requests containing excessive CR (\\r) or LF (\\n) characters before the first boundary or after the last boundary. This can lead to uncontrolled CPU usage and high memory consumption, causing the processing thread or event loop in ASGI applications to stall, resulting in a denial of service (DoS). The vulnerability exists in the MultipartParser's handling of line breaks around boundaries, where it processes each CRLF byte individually and logs warnings for each occurrence. To exploit this, an attacker simply needs to send large amounts of malformed multipart data with numerous CRLF characters. Upgrading to version 0.0.19 resolves this issue by preventing excessive resource allocation and logging when CRLF bytes are present.",
      "cve": "N/A",
      "source": "safety"
    },
    {
      "type": "dependency_vulnerability",
      "severity": "high",
      "package": "vulnerabilities",
      "version": "0.0.6",
      "message": "A vulnerability in versions of python-multipart before 0.0.7 involves a Regular Expression Denial of Service (ReDoS) triggered by custom Content-Type headers. This issue allows an attacker to cause a significant consumption of system resources while processing such headers, effectively preventing the processing of other requests. This ReDoS vulnerability stems from the way regular expressions evaluate certain input patterns, which can lead to extensive backtracking, thereby causing the application to slow down significantly, consuming a disproportionate amount of CPU time and facilitating a denial of service condition.",
      "cve": "N/A",
      "source": "safety"
    },
    {
      "type": "dependency_vulnerability",
      "severity": "high",
      "package": "vulnerabilities",
      "version": "3.1.2",
      "message": "A vulnerability in the Jinja compiler allows an attacker who can control both the content and filename of a template to execute arbitrary Python code, bypassing Jinja's sandbox protections. To exploit this vulnerability, an attacker must have the ability to manipulate both the template's filename and its contents. The risk depends on the application's specific use case. This issue affects applications that render untrusted templates where the attacker can determine the template filename, potentially leading to severe security breaches.",
      "cve": "N/A",
      "source": "safety"
    },
    {
      "type": "dependency_vulnerability",
      "severity": "high",
      "package": "vulnerabilities",
      "version": "3.1.2",
      "message": "An oversight in how the Jinja sandboxed environment detects calls to str.format allows an attacker who controls the content of a template to execute arbitrary Python code. To exploit the vulnerability, an attacker needs to control the content of a template. Whether that is the case depends on the type of application using Jinja. This vulnerability impacts users of applications which execute untrusted templates. Jinja's sandbox does catch calls to str.format and ensures they don't escape the sandbox. However, it's possible to store a reference to a malicious string's format method, then pass that to a filter that calls it. No such filters are built-in to Jinja, but could be present through custom filters in an application. After the fix, such indirect calls are also handled by the sandbox.",
      "cve": "N/A",
      "source": "safety"
    },
    {
      "type": "dependency_vulnerability",
      "severity": "high",
      "package": "vulnerabilities",
      "version": "3.1.2",
      "message": "Jinja is an extensible templating engine. Special placeholders in the template allow writing code similar to Python syntax. It is possible to inject arbitrary HTML attributes into the rendered HTML template, potentially leading to Cross-Site Scripting (XSS). The Jinja `xmlattr` filter can be abused to inject arbitrary HTML attribute keys and values, bypassing the auto escaping mechanism and potentially leading to XSS. It may also be possible to bypass attribute validation checks if they are blacklist-based.",
      "cve": "N/A",
      "source": "safety"
    },
    {
      "type": "dependency_vulnerability",
      "severity": "high",
      "package": "vulnerabilities",
      "version": "3.1.2",
      "message": "Jinja is an extensible templating engine. The `xmlattr` filter in affected versions of Jinja accepts keys containing non-attribute characters. XML/HTML attributes cannot contain spaces, `/`, `>`, or `=`, as each would then be interpreted as starting a separate attribute. If an application accepts keys (as opposed to only values) as user input, and renders these in pages that other users see as well, an attacker could use this to inject other attributes and perform XSS. The fix for CVE-2024-22195 only addressed spaces but not other characters. Accepting keys as user input is now explicitly considered an unintended use case of the `xmlattr` filter, and code that does so without otherwise validating the input should be flagged as insecure, regardless of Jinja version. Accepting _values_ as user input continues to be safe.",
      "cve": "N/A",
      "source": "safety"
    },
    {
      "type": "dependency_vulnerability",
      "severity": "high",
      "package": "vulnerabilities",
      "version": "3.1.2",
      "message": "Prior to 3.1.6, an oversight in how the Jinja sandboxed environment interacts with the |attr filter allows an attacker that controls the content of a template to execute arbitrary Python code. To exploit the vulnerability, an attacker needs to control the content of a template. Whether that is the case depends on the type of application using Jinja. This vulnerability impacts users of applications which execute untrusted templates. Jinja's sandbox does catch calls to str.format and ensures they don't escape the sandbox. However, it's possible to use the |attr filter to get a reference to a string's plain format method, bypassing the sandbox. After the fix, the |attr filter no longer bypasses the environment's attribute lookup. This vulnerability is fixed in 3.1.6.",
      "cve": "N/A",
      "source": "safety"
    },
    {
      "type": "dependency_vulnerability",
      "severity": "high",
      "package": "vulnerabilities",
      "version": "1.29.0",
      "message": "In Streamlit affected versions, users hosting Streamlit app(s) that use custom components are vulnerable to a directory traversal attack that could leak data from their web server file-system such as: server logs, world-readable files, and potentially other sensitive information. An attacker can craft a malicious URL with file paths and the streamlit server would process that URL and return the contents of that file. This issue has been resolved in version 1.11.1. Users are advised to upgrade. There are no known workarounds for this issue.",
      "cve": "N/A",
      "source": "safety"
    },
    {
      "type": "dependency_vulnerability",
      "severity": "high",
      "package": "vulnerabilities",
      "version": "1.29.0",
      "message": "Affected versions of the `Streamlit` package are vulnerable to Path Traversal due to improper handling of file paths in the static file sharing feature. The static file sharing feature fails to sanitize user input, allowing crafted file paths to access arbitrary files on the server. An attacker can exploit this vulnerability on Windows systems to leak sensitive information, such as the password hash of the Windows user running `Streamlit`, by accessing unauthorized files.",
      "cve": "N/A",
      "source": "safety"
    },
    {
      "type": "dependency_vulnerability",
      "severity": "high",
      "package": "vulnerabilities",
      "version": "4.6.0",
      "message": "Versions of the package pymongo before 4.6.3 are vulnerable to Out-of-bounds Read in the bson module. Using the crafted payload the attacker could force the parser to deserialize unmanaged memory. The parser tries to interpret bytes next to buffer and throws an exception with string. If the following bytes are not printable UTF-8 the parser throws an exception with a single byte.",
      "cve": "N/A",
      "source": "safety"
    },
    {
      "type": "hardcoded_secret",
      "severity": "high",
      "file": "docker-compose.dev.yml",
      "line": 19,
      "message": "Potentieller hardcoded api_key gefunden",
      "pattern": "api_key",
      "source": "regex_scan"
    },
    {
      "type": "hardcoded_secret",
      "severity": "high",
      "file": "docker-compose.dev.yml",
      "line": 20,
      "message": "Potentieller hardcoded api_key gefunden",
      "pattern": "api_key",
      "source": "regex_scan"
    },
    {
      "type": "hardcoded_secret",
      "severity": "high",
      "file": "docker-compose.dev.yml",
      "line": 21,
      "message": "Potentieller hardcoded api_key gefunden",
      "pattern": "api_key",
      "source": "regex_scan"
    },
    {
      "type": "hardcoded_secret",
      "severity": "high",
      "file": "docker-compose.dev.yml",
      "line": 24,
      "message": "Potentieller hardcoded database_url gefunden",
      "pattern": "database_url",
      "source": "regex_scan"
    },
    {
      "type": "hardcoded_secret",
      "severity": "high",
      "file": "docker-compose.dev.yml",
      "line": 46,
      "message": "Potentieller hardcoded password gefunden",
      "pattern": "password",
      "source": "regex_scan"
    },
    {
      "type": "hardcoded_secret",
      "severity": "high",
      "file": "docker-compose.yml",
      "line": 27,
      "message": "Potentieller hardcoded api_key gefunden",
      "pattern": "api_key",
      "source": "regex_scan"
    },
    {
      "type": "hardcoded_secret",
      "severity": "high",
      "file": "docker-compose.yml",
      "line": 28,
      "message": "Potentieller hardcoded api_key gefunden",
      "pattern": "api_key",
      "source": "regex_scan"
    },
    {
      "type": "hardcoded_secret",
      "severity": "high",
      "file": "docker-compose.yml",
      "line": 29,
      "message": "Potentieller hardcoded api_key gefunden",
      "pattern": "api_key",
      "source": "regex_scan"
    },
    {
      "type": "hardcoded_secret",
      "severity": "high",
      "file": "docker-compose.yml",
      "line": 31,
      "message": "Potentieller hardcoded database_url gefunden",
      "pattern": "database_url",
      "source": "regex_scan"
    },
    {
      "type": "hardcoded_secret",
      "severity": "high",
      "file": "docker-compose.yml",
      "line": 138,
      "message": "Potentieller hardcoded password gefunden",
      "pattern": "password",
      "source": "regex_scan"
    },
    {
      "type": "hardcoded_secret",
      "severity": "high",
      "file": "mcps\\__init__.py",
      "line": 158,
      "message": "Potentieller hardcoded password gefunden",
      "pattern": "password",
      "source": "regex_scan"
    },
    {
      "type": "hardcoded_secret",
      "severity": "high",
      "file": "mcps\\__init__.py",
      "line": 167,
      "message": "Potentieller hardcoded password gefunden",
      "pattern": "password",
      "source": "regex_scan"
    },
    {
      "type": "hardcoded_secret",
      "severity": "high",
      "file": "mcps\\__init__.py",
      "line": 168,
      "message": "Potentieller hardcoded token gefunden",
      "pattern": "token",
      "source": "regex_scan"
    },
    {
      "type": "hardcoded_secret",
      "severity": "high",
      "file": "mcps\\__init__.py",
      "line": 199,
      "message": "Potentieller hardcoded token gefunden",
      "pattern": "token",
      "source": "regex_scan"
    },
    {
      "type": "hardcoded_secret",
      "severity": "high",
      "file": "mcps\\__init__.py",
      "line": 216,
      "message": "Potentieller hardcoded token gefunden",
      "pattern": "token",
      "source": "regex_scan"
    },
    {
      "type": "hardcoded_secret",
      "severity": "high",
      "file": "mcps\\__init__.py",
      "line": 238,
      "message": "Potentieller hardcoded token gefunden",
      "pattern": "token",
      "source": "regex_scan"
    },
    {
      "type": "hardcoded_secret",
      "severity": "high",
      "file": "mcps\\__init__.py",
      "line": 245,
      "message": "Potentieller hardcoded token gefunden",
      "pattern": "token",
      "source": "regex_scan"
    },
    {
      "type": "hardcoded_secret",
      "severity": "high",
      "file": "mcps\\__init__.py",
      "line": 265,
      "message": "Potentieller hardcoded token gefunden",
      "pattern": "token",
      "source": "regex_scan"
    },
    {
      "type": "hardcoded_secret",
      "severity": "high",
      "file": "share\\jupyter\\nbextensions\\pydeck\\index.js",
      "line": 9,
      "message": "Potentieller hardcoded token gefunden",
      "pattern": "token",
      "source": "regex_scan"
    },
    {
      "type": "hardcoded_secret",
      "severity": "high",
      "file": "share\\jupyter\\nbextensions\\pydeck\\index.js",
      "line": 505,
      "message": "Potentieller hardcoded token gefunden",
      "pattern": "token",
      "source": "regex_scan"
    },
    {
      "type": "hardcoded_secret",
      "severity": "high",
      "file": "share\\jupyter\\nbextensions\\pydeck\\index.js",
      "line": 514,
      "message": "Potentieller hardcoded token gefunden",
      "pattern": "token",
      "source": "regex_scan"
    },
    {
      "type": "hardcoded_secret",
      "severity": "high",
      "file": "share\\jupyter\\nbextensions\\pydeck\\index.js",
      "line": 526,
      "message": "Potentieller hardcoded password gefunden",
      "pattern": "password",
      "source": "regex_scan"
    },
    {
      "type": "hardcoded_secret",
      "severity": "high",
      "file": "share\\jupyter\\nbextensions\\pydeck\\index.js",
      "line": 630,
      "message": "Potentieller hardcoded token gefunden",
      "pattern": "token",
      "source": "regex_scan"
    },
    {
      "type": "hardcoded_secret",
      "severity": "high",
      "file": "share\\jupyter\\nbextensions\\pydeck\\index.js",
      "line": 633,
      "message": "Potentieller hardcoded token gefunden",
      "pattern": "token",
      "source": "regex_scan"
    },
    {
      "type": "hardcoded_secret",
      "severity": "high",
      "file": "share\\jupyter\\nbextensions\\pydeck\\index.js",
      "line": 3333,
      "message": "Potentieller hardcoded token gefunden",
      "pattern": "token",
      "source": "regex_scan"
    },
    {
      "type": "hardcoded_secret",
      "severity": "high",
      "file": "share\\jupyter\\nbextensions\\pydeck\\index.js",
      "line": 3676,
      "message": "Potentieller hardcoded token gefunden",
      "pattern": "token",
      "source": "regex_scan"
    },
    {
      "type": "hardcoded_secret",
      "severity": "high",
      "file": "share\\jupyter\\nbextensions\\pydeck\\index.js",
      "line": 3697,
      "message": "Potentieller hardcoded api_key gefunden",
      "pattern": "api_key",
      "source": "regex_scan"
    },
    {
      "type": "hardcoded_secret",
      "severity": "high",
      "file": "share\\jupyter\\nbextensions\\pydeck\\index.js",
      "line": 3697,
      "message": "Potentieller hardcoded token gefunden",
      "pattern": "token",
      "source": "regex_scan"
    },
    {
      "type": "hardcoded_secret",
      "severity": "high",
      "file": "ui\\components\\settings_panel.py",
      "line": 180,
      "message": "Potentieller hardcoded api_key gefunden",
      "pattern": "api_key",
      "source": "regex_scan"
    },
    {
      "type": "hardcoded_secret",
      "severity": "high",
      "file": "ui\\components\\settings_panel.py",
      "line": 198,
      "message": "Potentieller hardcoded api_key gefunden",
      "pattern": "api_key",
      "source": "regex_scan"
    },
    {
      "type": "hardcoded_secret",
      "severity": "high",
      "file": "ui\\components\\settings_panel.py",
      "line": 216,
      "message": "Potentieller hardcoded api_key gefunden",
      "pattern": "api_key",
      "source": "regex_scan"
    },
    {
      "type": "hardcoded_secret",
      "severity": "high",
      "file": "ui\\components\\settings_panel.py",
      "line": 265,
      "message": "Potentieller hardcoded api_key gefunden",
      "pattern": "api_key",
      "source": "regex_scan"
    },
    {
      "type": "hardcoded_secret",
      "severity": "high",
      "file": "ui\\components\\settings_panel.py",
      "line": 274,
      "message": "Potentieller hardcoded api_key gefunden",
      "pattern": "api_key",
      "source": "regex_scan"
    },
    {
      "type": "hardcoded_secret",
      "severity": "high",
      "file": "ui\\components\\settings_panel.py",
      "line": 283,
      "message": "Potentieller hardcoded api_key gefunden",
      "pattern": "api_key",
      "source": "regex_scan"
    },
    {
      "type": "hardcoded_secret",
      "severity": "high",
      "file": "ui\\components\\settings_panel.py",
      "line": 402,
      "message": "Potentieller hardcoded database_url gefunden",
      "pattern": "database_url",
      "source": "regex_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "high",
      "file": ".claude\\skills\\algorithmic-art\\templates\\generator_template.js",
      "line": 133,
      "message": "Potentielles Security-Risiko: exec",
      "issue_type": "exec",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": ".claude\\skills\\docx\\ooxml\\scripts\\pack.py",
      "line": 103,
      "message": "Potentielles Security-Risiko: subprocess",
      "issue_type": "subprocess",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": ".claude\\skills\\docx\\ooxml\\scripts\\validation\\redlining.py",
      "line": 153,
      "message": "Potentielles Security-Risiko: subprocess",
      "issue_type": "subprocess",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": ".claude\\skills\\docx\\ooxml\\scripts\\validation\\redlining.py",
      "line": 185,
      "message": "Potentielles Security-Risiko: subprocess",
      "issue_type": "subprocess",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": ".claude\\skills\\docx\\ooxml\\scripts\\validation\\redlining.py",
      "line": 211,
      "message": "Potentielles Security-Risiko: subprocess",
      "issue_type": "subprocess",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": ".claude\\skills\\webapp-testing\\scripts\\with_server.py",
      "line": 68,
      "message": "Potentielles Security-Risiko: shell",
      "issue_type": "shell",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": ".claude\\skills\\webapp-testing\\scripts\\with_server.py",
      "line": 69,
      "message": "Potentielles Security-Risiko: subprocess",
      "issue_type": "subprocess",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": ".claude\\skills\\webapp-testing\\scripts\\with_server.py",
      "line": 71,
      "message": "Potentielles Security-Risiko: shell",
      "issue_type": "shell",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": ".claude\\skills\\webapp-testing\\scripts\\with_server.py",
      "line": 88,
      "message": "Potentielles Security-Risiko: subprocess",
      "issue_type": "subprocess",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": "analyzers\\project_analyzer.py",
      "line": 446,
      "message": "Potentielles Security-Risiko: subprocess",
      "issue_type": "subprocess",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": "analyzers\\project_analyzer.py",
      "line": 470,
      "message": "Potentielles Security-Risiko: subprocess",
      "issue_type": "subprocess",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": "analyzers\\project_analyzer.py",
      "line": 502,
      "message": "Potentielles Security-Risiko: subprocess",
      "issue_type": "subprocess",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": "analyzers\\project_analyzer.py",
      "line": 666,
      "message": "Potentielles Security-Risiko: subprocess",
      "issue_type": "subprocess",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": "analyzers\\project_analyzer.py",
      "line": 785,
      "message": "Potentielles Security-Risiko: crypto_weak",
      "issue_type": "crypto_weak",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "high",
      "file": "generators\\skill_templates.py",
      "line": 138,
      "message": "Potentielles Security-Risiko: eval",
      "issue_type": "eval",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "high",
      "file": "generators\\skill_templates.py",
      "line": 141,
      "message": "Potentielles Security-Risiko: eval",
      "issue_type": "eval",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": "generators\\workflow_generator.py",
      "line": 290,
      "message": "Potentielles Security-Risiko: subprocess",
      "issue_type": "subprocess",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": "generators\\workflow_generator.py",
      "line": 301,
      "message": "Potentielles Security-Risiko: subprocess",
      "issue_type": "subprocess",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": "generators\\workflow_generator.py",
      "line": 312,
      "message": "Potentielles Security-Risiko: subprocess",
      "issue_type": "subprocess",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": "generators\\workflow_generator.py",
      "line": 373,
      "message": "Potentielles Security-Risiko: subprocess",
      "issue_type": "subprocess",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": "generators\\workflow_generator.py",
      "line": 491,
      "message": "Potentielles Security-Risiko: subprocess",
      "issue_type": "subprocess",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": "generators\\workflow_generator.py",
      "line": 502,
      "message": "Potentielles Security-Risiko: subprocess",
      "issue_type": "subprocess",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": "generators\\workflow_generator.py",
      "line": 513,
      "message": "Potentielles Security-Risiko: subprocess",
      "issue_type": "subprocess",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": "generators\\workflow_generator.py",
      "line": 648,
      "message": "Potentielles Security-Risiko: subprocess",
      "issue_type": "subprocess",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": "generators\\workflow_generator.py",
      "line": 660,
      "message": "Potentielles Security-Risiko: subprocess",
      "issue_type": "subprocess",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": "generators\\workflow_generator.py",
      "line": 921,
      "message": "Potentielles Security-Risiko: subprocess",
      "issue_type": "subprocess",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": "generators\\workflow_generator.py",
      "line": 933,
      "message": "Potentielles Security-Risiko: subprocess",
      "issue_type": "subprocess",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": "generators\\workflow_generator.py",
      "line": 1035,
      "message": "Potentielles Security-Risiko: subprocess",
      "issue_type": "subprocess",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": "generators\\workflow_generator.py",
      "line": 1048,
      "message": "Potentielles Security-Risiko: subprocess",
      "issue_type": "subprocess",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": "llm\\claude_flow_integration.py",
      "line": 39,
      "message": "Potentielles Security-Risiko: subprocess",
      "issue_type": "subprocess",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": "llm\\claude_flow_integration.py",
      "line": 52,
      "message": "Potentielles Security-Risiko: subprocess",
      "issue_type": "subprocess",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": "llm\\claude_flow_integration.py",
      "line": 64,
      "message": "Potentielles Security-Risiko: subprocess",
      "issue_type": "subprocess",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": "llm\\claude_flow_integration.py",
      "line": 112,
      "message": "Potentielles Security-Risiko: subprocess",
      "issue_type": "subprocess",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": "llm\\claude_flow_integration.py",
      "line": 156,
      "message": "Potentielles Security-Risiko: subprocess",
      "issue_type": "subprocess",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": "llm\\claude_flow_integration.py",
      "line": 201,
      "message": "Potentielles Security-Risiko: subprocess",
      "issue_type": "subprocess",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": "llm\\claude_flow_integration.py",
      "line": 255,
      "message": "Potentielles Security-Risiko: subprocess",
      "issue_type": "subprocess",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": "llm\\claude_flow_integration.py",
      "line": 301,
      "message": "Potentielles Security-Risiko: subprocess",
      "issue_type": "subprocess",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": "llm\\claude_flow_integration.py",
      "line": 328,
      "message": "Potentielles Security-Risiko: subprocess",
      "issue_type": "subprocess",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": "llm\\claude_flow_integration.py",
      "line": 377,
      "message": "Potentielles Security-Risiko: subprocess",
      "issue_type": "subprocess",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": "llm\\claude_flow_integration.py",
      "line": 414,
      "message": "Potentielles Security-Risiko: subprocess",
      "issue_type": "subprocess",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": "llm\\claude_flow_integration.py",
      "line": 427,
      "message": "Potentielles Security-Risiko: subprocess",
      "issue_type": "subprocess",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": "llm\\claude_flow_integration.py",
      "line": 439,
      "message": "Potentielles Security-Risiko: subprocess",
      "issue_type": "subprocess",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": "llm\\claude_flow_integration.py",
      "line": 464,
      "message": "Potentielles Security-Risiko: subprocess",
      "issue_type": "subprocess",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "high",
      "file": "share\\jupyter\\nbextensions\\pydeck\\index.js",
      "line": 9,
      "message": "Potentielles Security-Risiko: exec",
      "issue_type": "exec",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": "share\\jupyter\\nbextensions\\pydeck\\index.js",
      "line": 505,
      "message": "Potentielles Security-Risiko: xss",
      "issue_type": "xss",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "high",
      "file": "share\\jupyter\\nbextensions\\pydeck\\index.js",
      "line": 507,
      "message": "Potentielles Security-Risiko: exec",
      "issue_type": "exec",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "high",
      "file": "share\\jupyter\\nbextensions\\pydeck\\index.js",
      "line": 509,
      "message": "Potentielles Security-Risiko: exec",
      "issue_type": "exec",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "high",
      "file": "share\\jupyter\\nbextensions\\pydeck\\index.js",
      "line": 514,
      "message": "Potentielles Security-Risiko: exec",
      "issue_type": "exec",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "high",
      "file": "share\\jupyter\\nbextensions\\pydeck\\index.js",
      "line": 526,
      "message": "Potentielles Security-Risiko: exec",
      "issue_type": "exec",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": "share\\jupyter\\nbextensions\\pydeck\\index.js",
      "line": 526,
      "message": "Potentielles Security-Risiko: xss",
      "issue_type": "xss",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "high",
      "file": "share\\jupyter\\nbextensions\\pydeck\\index.js",
      "line": 529,
      "message": "Potentielles Security-Risiko: eval",
      "issue_type": "eval",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "high",
      "file": "share\\jupyter\\nbextensions\\pydeck\\index.js",
      "line": 529,
      "message": "Potentielles Security-Risiko: exec",
      "issue_type": "exec",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": "share\\jupyter\\nbextensions\\pydeck\\index.js",
      "line": 529,
      "message": "Potentielles Security-Risiko: xss",
      "issue_type": "xss",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "high",
      "file": "share\\jupyter\\nbextensions\\pydeck\\index.js",
      "line": 538,
      "message": "Potentielles Security-Risiko: exec",
      "issue_type": "exec",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "high",
      "file": "share\\jupyter\\nbextensions\\pydeck\\index.js",
      "line": 543,
      "message": "Potentielles Security-Risiko: exec",
      "issue_type": "exec",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "high",
      "file": "share\\jupyter\\nbextensions\\pydeck\\index.js",
      "line": 548,
      "message": "Potentielles Security-Risiko: exec",
      "issue_type": "exec",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": "share\\jupyter\\nbextensions\\pydeck\\index.js",
      "line": 548,
      "message": "Potentielles Security-Risiko: xss",
      "issue_type": "xss",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "high",
      "file": "share\\jupyter\\nbextensions\\pydeck\\index.js",
      "line": 552,
      "message": "Potentielles Security-Risiko: exec",
      "issue_type": "exec",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "high",
      "file": "share\\jupyter\\nbextensions\\pydeck\\index.js",
      "line": 553,
      "message": "Potentielles Security-Risiko: exec",
      "issue_type": "exec",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "high",
      "file": "share\\jupyter\\nbextensions\\pydeck\\index.js",
      "line": 598,
      "message": "Potentielles Security-Risiko: exec",
      "issue_type": "exec",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "high",
      "file": "share\\jupyter\\nbextensions\\pydeck\\index.js",
      "line": 602,
      "message": "Potentielles Security-Risiko: exec",
      "issue_type": "exec",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "high",
      "file": "share\\jupyter\\nbextensions\\pydeck\\index.js",
      "line": 617,
      "message": "Potentielles Security-Risiko: exec",
      "issue_type": "exec",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "high",
      "file": "share\\jupyter\\nbextensions\\pydeck\\index.js",
      "line": 633,
      "message": "Potentielles Security-Risiko: exec",
      "issue_type": "exec",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": "share\\jupyter\\nbextensions\\pydeck\\index.js",
      "line": 1689,
      "message": "Potentielles Security-Risiko: xss",
      "issue_type": "xss",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "high",
      "file": "share\\jupyter\\nbextensions\\pydeck\\index.js",
      "line": 1720,
      "message": "Potentielles Security-Risiko: exec",
      "issue_type": "exec",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": "share\\jupyter\\nbextensions\\pydeck\\index.js",
      "line": 1720,
      "message": "Potentielles Security-Risiko: xss",
      "issue_type": "xss",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": "share\\jupyter\\nbextensions\\pydeck\\index.js",
      "line": 1797,
      "message": "Potentielles Security-Risiko: xss",
      "issue_type": "xss",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "high",
      "file": "share\\jupyter\\nbextensions\\pydeck\\index.js",
      "line": 3699,
      "message": "Potentielles Security-Risiko: exec",
      "issue_type": "exec",
      "source": "code_scan"
    },
    {
      "type": "code_security_issue",
      "severity": "medium",
      "file": "share\\jupyter\\nbextensions\\pydeck\\index.js",
      "line": 3699,
      "message": "Potentielles Security-Risiko: xss",
      "issue_type": "xss",
      "source": "code_scan"
    }
  ],
  "test_coverage": {
    "coverage_percentage": 6.504065040650407,
    "test_files": [
      ".claude\\skills\\pdf-anthropic\\scripts\\check_bounding_boxes_test.py",
      "tests\\test_agents.py",
      "tests\\test_analyzers.py",
      "tests\\test_app.py",
      "tests\\test_routes.py",
      "tests\\test_settings.py",
      "tests\\test_skills.py",
      "tests\\test_workflows.py"
    ],
    "test_frameworks": [
      "unittest",
      "pytest"
    ],
    "missing_tests": []
  }
}